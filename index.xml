<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>El Baúl del programador</title>
        <link>https://elbauldelprogramador.com/index.xml</link>
        <description>Recent content on El Baúl del programador</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>es-ES</language>
        <lastBuildDate>Mon, 08 May 2017 12:12:39 +0100</lastBuildDate>
        <image>
            <url>https://elbauldelprogramador.com/img/bio-photo-rss.png</url>
            <link>https://elbauldelprogramador.com/index.xml</link>
            <title>El Baúl del programador</title>
            <width>144</width>
            <height>144</height>
        </image>
        <atom:link href="https://elbauldelprogramador.com/index.xml" rel="self" type="application/rss+xml" />
        
        <item>
            <title>Cómo iterar sobre varias colecciones en Scala</title>
            <link>https://elbauldelprogramador.com/iterate-multiple-collections-scala/</link>
            <pubDate>Mon, 08 May 2017 12:12:39 +0100</pubDate>
            
            <guid>https://elbauldelprogramador.com/iterate-multiple-collections-scala/</guid>
            <description>&lt;p&gt;Cuando empecé a trabajar con &lt;a href=&#34;https://elbauldelprogramador.com/tags/scala&#34; title=&#34;artículos sobre scala&#34;&gt;scala&lt;/a&gt; me encontré con que me resultaba difícil resolver problemas triviales, fáciles de resolver en lenguajes que ya conocía. Supongo que esa es la parte más frustrante de aprender un lenguaje nuevo, al menos en mi opinión.&lt;/p&gt;

&lt;h1 id=&#34;iterar-sobre-varias-colecciones-a-la-vez-en-python&#34;&gt;Iterar sobre varias colecciones a la vez en python&lt;/h1&gt;

&lt;p&gt;Uno de esos problemas triviales es iterar sobre dos colecciones al mismo tiempo. La forma más “&lt;a href=&#34;https://elbauldelprogramador.com/tags/python&#34; title=&#34;Artículos sobre python&#34;&gt;&lt;em&gt;pythonic&lt;/em&gt;&lt;/a&gt;” es simple:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;collection1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;collection2&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;a&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;b&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;c&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;d&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;e&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;j&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;zip&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;collection1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;collection2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
     &lt;span class=&#34;k&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;j&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;que resulta en:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;
&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;b&lt;/span&gt;
&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;c&lt;/span&gt;
&lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;d&lt;/span&gt;
&lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;e&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h1 id=&#34;iterar-sobre-varias-colecciones-a-la-vez-en-scala&#34;&gt;Iterar sobre varias colecciones a la vez en scala&lt;/h1&gt;

&lt;p&gt;&lt;!--ad--&gt;&lt;/p&gt;

&lt;p&gt;Ahora bien, ¿cual es la forma &lt;em&gt;idiomática&lt;/em&gt; de hacerlo en &lt;em&gt;scala&lt;/em&gt;?. En mi caso concreto necesitaba iterar sobre la colección y además disponer del índice del elemento actual, esto se puede conseguir con el método &lt;code&gt;zipWithIndex&lt;/code&gt;, y luego llamar a &lt;code&gt;zipped&lt;/code&gt; para convertirlos en tuplas junto a las demás colecciones sobre las que queramos iterar:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-scala&#34; data-lang=&#34;scala&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;val&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;tree&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;Vector&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;Node&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;val&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;indexedWords&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;words&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;zipWithIndex&lt;/span&gt;

  &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;indexedWords&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;tags&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;dep&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;zipped&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;map&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;w&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;t&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;d&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;=&amp;gt;&lt;/span&gt;
      &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Node&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;w&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;_1&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;w&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;_2&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;t&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;d&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;En el ejemplo de arriba estoy juntando tres colecciones a la vez &lt;code&gt;(indexedWords, tags, dep)&lt;/code&gt;, que son del tipo &lt;code&gt;((String, Int), String, Int)&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Antes de conocer la forma &lt;em&gt;idiomática&lt;/em&gt; estaba iterando de este modo bastante feo:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-scala&#34; data-lang=&#34;scala&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;/** Constituent tree of this sentence; includes head words */&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;val&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;tree&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;Vector&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;Node&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;words&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;map&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;w&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
   &lt;span class=&#34;k&#34;&gt;val&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;words&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;indexOf&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;w&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
   &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Node&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;w&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;tags&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;head&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;blockquote&gt;
&lt;p&gt;Estas porciones de código son parte de mi trabajo de fin de Grado, el proyecto consistía en crear un &lt;a href=&#34;https://en.wikipedia.org/wiki/Dependency_grammar&#34; target=&#34;_blank&#34; title=&#34;Dependency Parsing&#34;&gt;Parseo de Dependencias&lt;/a&gt; para el Castellano, puedes ver el proyecto completo en &lt;a href=&#34;https://elbauldelprogramador.com/tags/github&#34; title=&#34;Artículos sobre Github&#34;&gt;GitHub&lt;/a&gt;: &lt;a href=&#34;https://github.com/elbaulp/NLP_Dependency_Parsing&#34; target=&#34;_blank&#34; title=&#34;NLP_Dependency_Parsing&#34;&gt;NLP_Dependency_Parsing&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&#34;referencias&#34;&gt;Referencias&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://stackoverflow.com/questions/17199534/scala-for-loop-over-two-lists-simultaneously&#34; target=&#34;_blank&#34; title=&#34;Scala for loop over two lists simultaneously&#34;&gt;Scala for loop over two lists simultaneously&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
        </item>
        
        <item>
            <title>Minería en tu comunidad de github con R - Analizando la popularidad de los lenguajes</title>
            <link>https://elbauldelprogramador.com/githubmininglanguages/</link>
            <pubDate>Tue, 25 Apr 2017 18:34:49 +0200</pubDate>
            
            <guid>https://elbauldelprogramador.com/githubmininglanguages/</guid>
            <description>&lt;p&gt;En este post vamos a explorar nuestra comunidad de &lt;a href=&#34;https://elbauldelprogramador.com/tags/git/&#34; title=&#34;Github&#34;&gt;Github&lt;/a&gt;, considerando nuestros amigos (nuestros seguidores) en esta red social. En primer lugar daremos algunas indicaciones para crear una aplicación y empezar a usar la &lt;a href=&#34;https://elbauldelprogramador.com/tags/api/&#34; title=&#34;API&#34;&gt;API&lt;/a&gt;  de github. Después extraeremos la información que necesitamos para realizar nuestro análisis, y así obtener que lenguajes de programación son más usados por nuestros amigos, y cuales los menos usados. ¡Exploremos la popularidad de los lenguajes en nuestra comunidad!&lt;/p&gt;

&lt;h1 id=&#34;1-crear-la-app-instalar-paquetes-autenticarse&#34;&gt;1. Crear la app, instalar paquetes, autenticarse&lt;/h1&gt;

&lt;h2 id=&#34;1-1-registrar-la-app&#34;&gt;1.1 Registrar la app&lt;/h2&gt;

&lt;p&gt;Antes de nada, ya que queremos acceder a datos públicos de github, ncesitaremos registrar una app con autenticación para ello. Esto nos permitirá no tener límite de llamadas a la API.
Así que dirígete a &lt;a href=&#34;https://developer.github.com/program/&#34; title=&#34;la página del programa de desarrolladores de github&#34;&gt;github developer program page&lt;/a&gt; y clica en &lt;strong&gt;Register now&lt;/strong&gt;. Luego, selecciona una cuenta (debe aparecer un listado de tus cuentas de github) y en la pestaña de &lt;strong&gt;Personal settings&lt;/strong&gt; selecciona  &lt;strong&gt;Authorized applications&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Si ya tienes una aplicación autorizada para acceder a la API de github, deberás visualizarla aquí.  Sino tienes ninguna app registrada aún, vete a &lt;strong&gt;OAuth applications&lt;/strong&gt; (bajo &lt;em&gt;Personal settings&lt;/em&gt;) y selecciona &lt;strong&gt;Register a new application&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Ahora tienes que registrar tu nueva app, darle un nombre, una descripción&amp;hellip; completa los campos y en &lt;strong&gt;Callback URL&lt;/strong&gt; introduce: &lt;a href=&#34;http://localhost:1410/&#34; title=&#34;localhost:1410&#34;&gt;localhost:1410&lt;/a&gt;, que es la url a la que github devolverá cuando se autentique la app.&lt;/p&gt;

&lt;p&gt;Ahora que tienes registrada tu app, se generarán su &lt;strong&gt;Client ID&lt;/strong&gt; y &lt;strong&gt;Client Secret&lt;/strong&gt;. Puedes verlos en &lt;strong&gt;OAuth applications -&amp;gt; Your App&lt;/strong&gt;. Recuerda mantenerlos siempre en secreto y a salvo.&lt;/p&gt;

&lt;p&gt;¡Bien! pues ya eres miembro del programa de &lt;em&gt;developers&lt;/em&gt;. Lo siguiente que haremos es instalar los paquetes de &lt;a href=&#34;https://elbauldelprogramador.com/tags/r/&#34; title=&#34;R&#34;&gt;R&lt;/a&gt; que vamos a usar para trabajar.&lt;/p&gt;

&lt;p&gt;&lt;!--ad--&gt;&lt;/p&gt;

&lt;h2 id=&#34;1-2-instalación-de-paquetes&#34;&gt;1.2 Instalación de paquetes&lt;/h2&gt;

&lt;p&gt;Usaremos la versión 3 de la API de GitHub para obtener los datos &lt;a href=&#34;https://developer.github.com/v3/&#34; title=&#34;github v3 API&#34;&gt;github v3 API&lt;/a&gt;. Ya que la API devuelve los datos en formato &lt;a href=&#34;https://elbauldelprogramador.com/tags/json/&#34; title=&#34;JSON&#34;&gt;JSON&lt;/a&gt;, vamos a usar la función &lt;code&gt;fromJSON&lt;/code&gt;, que nos permitirá usar la url de la API directamente y nos parsea los datos JSON devueltos en formato &lt;em&gt;dataframe&lt;/em&gt;. Ésta función se encuentra en el paquete &lt;code&gt;jsonlite&lt;/code&gt;, así que tenemos que instalar ese paquete si no lo tenemos ya instalado:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span&gt;&lt;/span&gt;install.packages&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#39;jsonlite&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Si no tienes instalado el paquete &lt;code&gt;stringr&lt;/code&gt;, instálalo tal como acabamos de hacer con &lt;code&gt;jsonlite&lt;/code&gt;. Lo usaremos para hacer operaciones comunes con &lt;em&gt;strings&lt;/em&gt;. Instala también &lt;code&gt;ggplot2&lt;/code&gt; si no lo tienes instalado. Lo usaremos para las gráficas y &lt;code&gt;httpuv&lt;/code&gt;, un paquete para poder trabajar con HTTP.&lt;/p&gt;

&lt;p&gt;Para conectarse a la app the github, necesitaremos instalar el paquete &lt;code&gt;rgithub&lt;/code&gt;. Puedes hacerlo directamente desde el código fuente en github. Date cuenta que depende del paquete &lt;code&gt;devtools&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;kn&#34;&gt;require&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;devtools&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
install_github&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;cscheid/rgithub&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Tras la instalación, carga las librerías:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# load libraries&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;library&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;github&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;library&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;jsonlite&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;library&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;stringr&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;library&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;ggplot2&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&#34;1-3-autentica-el-acceso&#34;&gt;1.3 Autentica el acceso&lt;/h2&gt;

&lt;p&gt;Necesitaremos &lt;a href=&#34;https://elbauldelprogramador.com/tags/seguridad/&#34; title=&#34;Post sobre seguridad&#34;&gt;autenticar&lt;/a&gt; el acceso, y lo haremos a través de la función &lt;code&gt;interactive.login&lt;/code&gt; del paquete &lt;code&gt;rgithub&lt;/code&gt;, pasándole nuestro &lt;strong&gt;ID&lt;/strong&gt; y &lt;strong&gt;secreto&lt;/strong&gt;. Mi recomendación es que pongas estas líneas en un fichero separado y no las compartas con nadie. Sólo haz un &lt;em&gt;source&lt;/em&gt; del fichero cuando necesites autenticarte o ejecuta las líneas de nuevo.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# github app autentication&lt;/span&gt;
clientID&lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;your_client_id_goes_here&amp;quot;&lt;/span&gt;
clientSecret&lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;your_secret_goes_here&amp;quot;&lt;/span&gt;
context&lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt;interactive.login&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;clientID&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;clientSecret&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h1 id=&#34;2-obtener-la-información-de-tus-amigos&#34;&gt;2. Obtener la información de tus amigos&lt;/h1&gt;

&lt;p&gt;Ya estás autenticado. Lo que sigue es obtener tus seguidores de GitHub. Para obtener los usuarios que nos siguen e información sobre ellos, usaremos la función &lt;code&gt;get.my.followers&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# get your followers&lt;/span&gt;
myFollowers&lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt;get.my.followers&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;context&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Podemos comprobar fácilmente cuantos seguidores tenemos usando la función &lt;code&gt;length&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# get number of my followers&lt;/span&gt;
numFollowing&lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&#34;kp&#34;&gt;length&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;myFollowers&lt;span class=&#34;o&#34;&gt;$&lt;/span&gt;content&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Ahora que tenemos nuestros seguidores, vamos a crear un &lt;em&gt;dataframe&lt;/em&gt; para guardar toda la información obtenida. Primero, extraemos cada línea de contenido de la lista de &lt;em&gt;myFollowers&lt;/em&gt;, y la vamos añadiendo a una variable &lt;em&gt;dataset&lt;/em&gt; usando la función &lt;code&gt;rbind&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# create a dataset with your followers&lt;/span&gt;
dataset&lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&#34;kp&#34;&gt;unlist&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;myFollowers&lt;span class=&#34;o&#34;&gt;$&lt;/span&gt;content&lt;span class=&#34;p&#34;&gt;[[&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]])&lt;/span&gt;

&lt;span class=&#34;kr&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;i &lt;span class=&#34;kr&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;kp&#34;&gt;length&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;myFollowers&lt;span class=&#34;o&#34;&gt;$&lt;/span&gt;content&lt;span class=&#34;p&#34;&gt;)){&lt;/span&gt;
  dataset&lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&#34;kp&#34;&gt;rbind&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;dataset&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;kp&#34;&gt;unlist&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;myFollowers&lt;span class=&#34;o&#34;&gt;$&lt;/span&gt;content&lt;span class=&#34;p&#34;&gt;[[&lt;/span&gt;i&lt;span class=&#34;p&#34;&gt;]]))&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Ahora que tenemos el &lt;em&gt;dataframe&lt;/em&gt;, nombra a las columnas como se llamaban originalmente en &lt;em&gt;myFollowers$content&lt;/em&gt; y guárdalo en un &lt;em&gt;csv&lt;/em&gt; para poder reutilizarlo:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# create a data frame and save it for later use&lt;/span&gt;
dataset&lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&#34;kp&#34;&gt;unname&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;dataset&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
dataset&lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&#34;kp&#34;&gt;as.data.frame&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;dataset&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;kp&#34;&gt;colnames&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;dataset&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kp&#34;&gt;names&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;myFollowers&lt;span class=&#34;o&#34;&gt;$&lt;/span&gt;content&lt;span class=&#34;p&#34;&gt;[[&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]]))&lt;/span&gt;
write.csv&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;dataset&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;file&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;CrisFollowers.csv&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Obviamente lo puedes guardar con el nombre que quieras. Pero no olvides la extensión.&lt;/p&gt;

&lt;h1 id=&#34;3-obtener-la-información-de-los-repositorios-de-tus-amigos-y-crear-un-nuevo-conjunto-de-datos&#34;&gt;3. Obtener la información de los repositorios de tus amigos y crear un nuevo conjunto de datos&lt;/h1&gt;

&lt;p&gt;Como ya te habrás percatado, en los últimos datos que extraímos había información acerca del nombre de nuestros seguidores, su id, avatar, tipo&amp;hellip; y algunas url de interés. Sin embargo, en esa información no aparecía la información de los repositorios que necesitamos para nuestro análisis, como nombres de los repositorios, lenguaje de los repositorios, número de líneas de código&amp;hellip;&lt;/p&gt;

&lt;p&gt;Debemos obtener esa información. Si has explorado un poco el dataset, te habrás dado cuenta de que existe una columna, llamada  &lt;strong&gt;repos_url&lt;/strong&gt; que nos dice que la url para obtener los repositorios dado un usuario cualquiera, es: &lt;strong&gt;&lt;a href=&#34;https://api.github.com/users/user/repos&#34;&gt;https://api.github.com/users/user/repos&lt;/a&gt;&lt;/strong&gt;. Por ejemplo, para obtener la información de cuales son mis repositorios, etc, deberemos llamar a la API  &lt;strong&gt;&lt;a href=&#34;https://api.github.com/users/CritinaHG/repos&#34;&gt;https://api.github.com/users/CritinaHG/repos&lt;/a&gt;&lt;/strong&gt; , y obtendremos los datos que queremos en formato JSON.&lt;/p&gt;

&lt;p&gt;Así que obtendremos esos datos para cada usuario leyendo el dataset que creamos anteriormente, obteniendo de él los nombres de nuestros seguidores, componiendo la correspondiente url de sus repos y parseando los datos obtenidos de la API usando la función &lt;code&gt;fromJSON&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# read latest created csv&lt;/span&gt;
myFriends&lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt;read.csv&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;CrisFollowers.csv&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# extract the names&lt;/span&gt;
&lt;span class=&#34;kp&#34;&gt;unname&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&#34;kp&#34;&gt;as.character&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;myFriends&lt;span class=&#34;o&#34;&gt;$&lt;/span&gt;login&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# extract data from friends&amp;#39; public repositories&lt;/span&gt;
compdata&lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;NULL&lt;/span&gt;

&lt;span class=&#34;kr&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;i &lt;span class=&#34;kr&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;kp&#34;&gt;nrow&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;myFriends&lt;span class=&#34;p&#34;&gt;)){&lt;/span&gt;
  data&lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt;fromJSON&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kp&#34;&gt;paste0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;https://api.github.com/users/&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;str_trim&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kp&#34;&gt;unname&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;i&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;side &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;quot;both&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;/repos?clientID&amp;amp;clientSecret&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
  &lt;span class=&#34;kr&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kp&#34;&gt;length&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;data&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;){&lt;/span&gt;
    data&lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt;data&lt;span class=&#34;p&#34;&gt;[,&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;-4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
    compdata&lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&#34;kp&#34;&gt;rbind&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;compdata&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;data&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# write data for reuse&lt;/span&gt;
write.csv&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;compdata&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;UsersWithRepoInfo.csv&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Debes sustituir &lt;strong&gt;clientID&lt;/strong&gt; y &lt;strong&gt;clientSecret&lt;/strong&gt; por el id y secreto de tu app, generados al principio del post. No es necesario especificarle estos parámetros, pero hacerlo nos permite evitar limitaciones en las peticiones. Se elimina la 4º columna porque contiene información redundante, y se usa &lt;code&gt;rbind&lt;/code&gt; para ir agregando los datos que se van obteniendo al nuevo &lt;em&gt;dataset&lt;/em&gt;.&lt;/p&gt;

&lt;h1 id=&#34;4-haciendo-un-poco-de-procesamiento&#34;&gt;4. Haciendo un poco de procesamiento&lt;/h1&gt;

&lt;p&gt;Lee (si no tienes leído) el &lt;em&gt;dataset&lt;/em&gt; &lt;code&gt;activeFriends&amp;lt;-read.csv(&amp;quot;UsersWithRepoInfo.csv&amp;quot;)&lt;/code&gt;. Vamos a hacerle algunas transformaciones a los datos para hacerlos más manejables con R.&lt;/p&gt;

&lt;p&gt;En primer lugar, como la zona horaria es UTC+2 (o la de Madrid), necesitamos establecer el parámetro timezone. Construimos una función para realizar el formateo y lo aplicamos a cada columna con fechas del &lt;em&gt;dataset&lt;/em&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# make date format supported by R&lt;/span&gt;
date.format&lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&#34;kr&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;datestring&lt;span class=&#34;p&#34;&gt;){&lt;/span&gt;
  &lt;span class=&#34;kp&#34;&gt;date&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&#34;kp&#34;&gt;as.POSIXct&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;datestring&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;format&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;%Y-%m-%d %H:%M:%S&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;tz&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;Europe/Madrid&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; usetz&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;TRUE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# update dates with new format&lt;/span&gt;
activeFriends&lt;span class=&#34;o&#34;&gt;$&lt;/span&gt;created_at&lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt;date.format&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;activeFriends&lt;span class=&#34;o&#34;&gt;$&lt;/span&gt;created_at&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
activeFriends&lt;span class=&#34;o&#34;&gt;$&lt;/span&gt;updated_at&lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt;date.format&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;activeFriends&lt;span class=&#34;o&#34;&gt;$&lt;/span&gt;updated_at&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
activeFriends&lt;span class=&#34;o&#34;&gt;$&lt;/span&gt;pushed_at&lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt;date.format&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;activeFriends&lt;span class=&#34;o&#34;&gt;$&lt;/span&gt;pushed_at&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Siéntete libre de explorar el conjunto de datos. Seguro que estás pensando que en él hay columnas que nos interesan para nuestro análisis, y otras que no tanto. Lo siguiente que haremos será seleccionar las que más nos interesan para nuestro análisis:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# selecting just the interesting cols&lt;/span&gt;
activeFriends&lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt;activeFriends&lt;span class=&#34;p&#34;&gt;[,&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;id&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;name&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;full_name&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;private&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;description&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;fork&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;created_at&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;updated_at&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;pushed_at&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;homepage&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;size&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;stargazers_count&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;watchers_count&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;language&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;                             &lt;span class=&#34;s&#34;&gt;&amp;quot;has_issues&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;has_downloads&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;forks_count&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;open_issues_count&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;forks&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;open_issues&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;watchers&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Podemos binarizar las columnas que tienen solo valores True o False:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span&gt;&lt;/span&gt;activeFriends&lt;span class=&#34;o&#34;&gt;$&lt;/span&gt;private&lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&#34;kp&#34;&gt;as.integer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;activeFriends&lt;span class=&#34;o&#34;&gt;$&lt;/span&gt;private&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
activeFriends&lt;span class=&#34;o&#34;&gt;$&lt;/span&gt;has_issues&lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&#34;kp&#34;&gt;as.integer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;activeFriends&lt;span class=&#34;o&#34;&gt;$&lt;/span&gt;has_issues&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
activeFriends&lt;span class=&#34;o&#34;&gt;$&lt;/span&gt;fork&lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&#34;kp&#34;&gt;as.integer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;activeFriends&lt;span class=&#34;o&#34;&gt;$&lt;/span&gt;fork&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
activeFriends&lt;span class=&#34;o&#34;&gt;$&lt;/span&gt;has_downloads&lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&#34;kp&#34;&gt;as.integer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;activeFriends&lt;span class=&#34;o&#34;&gt;$&lt;/span&gt;has_downloads&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Por último, la columna &lt;code&gt;full_name&lt;/code&gt; contiene el nombre de usuario junto con el nombre del repositorio. Extraemos de aquí sólo el nombre de usuario, pues el nombre del repositorio ya se incluye en la columna &lt;code&gt;name&lt;/code&gt;. Lo hacemos separando cada item por la barra que separa los nombres, y tomando el primer elemento:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# Getting the username&lt;/span&gt;
activeFriends&lt;span class=&#34;o&#34;&gt;$&lt;/span&gt;full_name&lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&#34;kp&#34;&gt;unlist&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kp&#34;&gt;lapply&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kp&#34;&gt;strsplit&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kp&#34;&gt;as.character&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;activeFriends&lt;span class=&#34;o&#34;&gt;$&lt;/span&gt;full_name&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;split &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#39;/&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;fixed &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;TRUE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;&lt;span class=&#34;kr&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;x&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;x&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Guárdalo si quieres, para reutilizarlo más tarde.&lt;/p&gt;

&lt;h1 id=&#34;5-analizando-la-popularidad-de-los-lenguages-de-programación&#34;&gt;5. Analizando la popularidad de los lenguages de programación&lt;/h1&gt;

&lt;p&gt;Podemos hacernos una primera idea de cómo están distribuidos los datos, cual es la media, mediana, máximo, mínimo&amp;hellip; para cada columna, usando la función &lt;code&gt;summary&lt;/code&gt; en el &lt;em&gt;dataset&lt;/em&gt;.
Éste es sólo un ejemplo parte de la salida de esta función que se obtiene para mi comunidad de amigos, mostrando las métricas mencionadas para las primeras columnas:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;kp&#34;&gt;summary&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;activeFriends&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
       id                 name      full_name            private                                                                      description
Min.   &lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;2054512&lt;/span&gt;   IV      &lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;  &lt;span class=&#34;m&#34;&gt;4&lt;/span&gt;   Length&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;524&lt;/span&gt;         Min.   &lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;   Asignatura de infraestructuras virtuales para el Grado de Informática     &lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;  &lt;span class=&#34;m&#34;&gt;4&lt;/span&gt;
&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;st Qu.&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;32878832&lt;/span&gt;   blog    &lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;  &lt;span class=&#34;m&#34;&gt;3&lt;/span&gt;   Class &lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;character&lt;/span&gt;   &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;st Qu.&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;   Repositorio para la asignatura Infraestructura Virtual de &lt;span class=&#34;m&#34;&gt;2016-2017&lt;/span&gt;       &lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;  &lt;span class=&#34;m&#34;&gt;3&lt;/span&gt;
Median &lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;51252063&lt;/span&gt;   DAI     &lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;  &lt;span class=&#34;m&#34;&gt;3&lt;/span&gt;   Mode  &lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;character&lt;/span&gt;   Median &lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;   An example repo &lt;span class=&#34;kr&#34;&gt;in&lt;/span&gt; Ruby &lt;span class=&#34;kr&#34;&gt;for&lt;/span&gt; continuous integration with Travis CI         &lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;  &lt;span class=&#34;m&#34;&gt;2&lt;/span&gt;
Mean   &lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;51191269&lt;/span&gt;   IV16&lt;span class=&#34;m&#34;&gt;-17&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;  &lt;span class=&#34;m&#34;&gt;3&lt;/span&gt;                      Mean   &lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;   Curso de LaTeX organizado por AMAT para alumnos de Trabajo de Fin de Grado&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;  &lt;span class=&#34;m&#34;&gt;2&lt;/span&gt;
&lt;span class=&#34;m&#34;&gt;3&lt;/span&gt;rd Qu.&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;70082791&lt;/span&gt;   swap1415&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;  &lt;span class=&#34;m&#34;&gt;3&lt;/span&gt;                      &lt;span class=&#34;m&#34;&gt;3&lt;/span&gt;rd Qu.&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;   Diferentes scripts para representación de carreras en cifras              &lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;  &lt;span class=&#34;m&#34;&gt;2&lt;/span&gt;
Max.   &lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;88848228&lt;/span&gt;   TFG     &lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;  &lt;span class=&#34;m&#34;&gt;3&lt;/span&gt;                      Max.   &lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;   &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;Other&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;                                                                   &lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;404&lt;/span&gt;
                   &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;Other&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;505&lt;/span&gt;                                  &lt;span class=&#34;kc&#34;&gt;NA&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;s                                                                      :107&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Ahora vamos al tema que nos concierne: ver que lenguajes de programación se están usando en nuestra comunidad de amigos, y cuánto se usan. Para este cometido, podemos comenzar por crear una tabla de contingencia, para dar un primer vistazo a nuestra respuesta:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span&gt;&lt;/span&gt;languagesAndUse&lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&#34;kp&#34;&gt;table&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;activeFriends&lt;span class=&#34;o&#34;&gt;$&lt;/span&gt;language&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
languagesAndUse

         Arduino                C               C&lt;span class=&#34;c1&#34;&gt;#              C++            CLIPS              CSS             Dart&lt;/span&gt;
               &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;               &lt;span class=&#34;m&#34;&gt;13&lt;/span&gt;                &lt;span class=&#34;m&#34;&gt;7&lt;/span&gt;               &lt;span class=&#34;m&#34;&gt;55&lt;/span&gt;                &lt;span class=&#34;m&#34;&gt;5&lt;/span&gt;               &lt;span class=&#34;m&#34;&gt;19&lt;/span&gt;                &lt;span class=&#34;m&#34;&gt;2&lt;/span&gt;
      Emacs Lisp              GAP         GDScript               Go           Groovy          Haskell             HTML
               &lt;span class=&#34;m&#34;&gt;2&lt;/span&gt;                &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;                &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;                &lt;span class=&#34;m&#34;&gt;3&lt;/span&gt;                &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;                &lt;span class=&#34;m&#34;&gt;2&lt;/span&gt;               &lt;span class=&#34;m&#34;&gt;48&lt;/span&gt;
            Java       JavaScript Jupyter Notebook              Lex              Lua         Makefile      Mathematica
              &lt;span class=&#34;m&#34;&gt;60&lt;/span&gt;               &lt;span class=&#34;m&#34;&gt;67&lt;/span&gt;                &lt;span class=&#34;m&#34;&gt;3&lt;/span&gt;                &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;                &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;                &lt;span class=&#34;m&#34;&gt;6&lt;/span&gt;                &lt;span class=&#34;m&#34;&gt;2&lt;/span&gt;
             PHP       PostScript           Prolog           Python                R             Ruby            Scala
               &lt;span class=&#34;m&#34;&gt;8&lt;/span&gt;                &lt;span class=&#34;m&#34;&gt;2&lt;/span&gt;                &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;               &lt;span class=&#34;m&#34;&gt;56&lt;/span&gt;               &lt;span class=&#34;m&#34;&gt;12&lt;/span&gt;               &lt;span class=&#34;m&#34;&gt;24&lt;/span&gt;                &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;
           Shell              TeX       TypeScript
               &lt;span class=&#34;m&#34;&gt;7&lt;/span&gt;               &lt;span class=&#34;m&#34;&gt;38&lt;/span&gt;                &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Con &lt;code&gt;nrow(languagesAndUse)&lt;/code&gt; podemos ver el número de lenguages diferentes que se están usando en nuestra comunidad de amigos. En la mía son 31.
También podemos apreciar que hay muchos repos con código &lt;em&gt;JavaScript&lt;/em&gt;  entre mis 30 amigos, sin embargo, parece que &lt;em&gt;Scala&lt;/em&gt;, &lt;em&gt;Lua&lt;/em&gt;, &lt;em&gt;Arduino&lt;/em&gt;, &lt;em&gt;TypeScript&lt;/em&gt;, &lt;em&gt;Groovy&lt;/em&gt;, &lt;em&gt;Lex&lt;/em&gt;, &lt;em&gt;Prolog&lt;/em&gt;, &lt;em&gt;GDScript&lt;/em&gt;&amp;hellip; sólo son usados por una persona.&lt;/p&gt;

&lt;p&gt;Finalmente, usamos &lt;code&gt;qplot&lt;/code&gt; del paquete &lt;code&gt;ggplot2&lt;/code&gt; para crear un hibstograma que represente el uso de los lenguajes de programación en nuestra comunidad de github:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span&gt;&lt;/span&gt;languages&lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt;na.omit&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;activeFriends&lt;span class=&#34;o&#34;&gt;$&lt;/span&gt;language&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
langUssage&lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt;qplot&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;languages&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;geom &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;quot;bar&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;xlab &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;quot;Language&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; ylab&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;Usage&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;fill&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;kp&#34;&gt;I&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;cornflowerblue&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
langUssage&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;theme&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;axis.text.x &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; element_text&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;angle &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;90&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;hjust &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;ggtitle&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;Programming languages used by my friends&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;theme&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;plot.title &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; element_text&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;hjust &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0.5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Donde usamos &lt;code&gt;na.omit&lt;/code&gt; para omitir de la representación de los datos los valores NA (lenguajes que no se hayan podido extraer). El hibstograma resultante es el siguiente:&lt;/p&gt;

&lt;figure&gt;
    &lt;img sizes=&#34;(min-width: 603px) 603px, 100vw&#34; on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/FriendsLanguagesUsage.png&#34; title=&#34;Programming languages used in my github community&#34; alt=&#34;Lenguajes de programación usados en mi comunidad de github&#34; width=&#34;603&#34; height=&#34;380&#34;&gt;&lt;/img&gt;
    &lt;figcaption&gt;Lenguajes usados en mi comunidad de github &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;Así que, como podemos ver en la representación, &lt;em&gt;JavaScript&lt;/em&gt; es el lenguage más usado, habiendo 67 repos en total en mi comunidad de amigos que contienen código &lt;em&gt;JavaScript&lt;/em&gt;. También &lt;a href=&#34;https://elbauldelprogramador.com/tags/java&#34;&gt;&lt;em&gt;Java&lt;/em&gt;&lt;/a&gt;, &lt;em&gt;C++&lt;/em&gt; y &lt;a href=&#34;https://elbauldelprogramador.com/tags/python&#34;&gt;&lt;em&gt;Python&lt;/em&gt;&lt;/a&gt; son muy populares en mi comunidad.&lt;/p&gt;

&lt;p&gt;Encontramos código &lt;em&gt;Tex&lt;/em&gt; en 38 repositorios, por lo que &lt;a href=&#34;https://elbauldelprogramador.com/tags/latex/&#34;&gt;&lt;em&gt;LaTeX&lt;/em&gt;&lt;/a&gt; está bastante presente en mi comunidad de amigos. También hay muchos repos con código &lt;em&gt;HTML&lt;/em&gt;, y muchos menos con código &lt;em&gt;CSS&lt;/em&gt;, &lt;em&gt;Ruby&lt;/em&gt;, &lt;em&gt;R&lt;/em&gt; and &lt;em&gt;C&lt;/em&gt;. Tras ellos, lenguages conocidos pero no amados por muchos, como &lt;a href=&#34;https://elbauldelprogramador.com/tags/php&#34;&gt;&lt;em&gt;PHP&lt;/em&gt;&lt;/a&gt;, &lt;em&gt;C#&lt;/em&gt; o &lt;em&gt;CLIPS&lt;/em&gt;, que están presentes en menos de 10 repositorios.&lt;/p&gt;

&lt;p&gt;Por último, se puede aprecidar que hay menos de 5 repositorios en total con código &lt;em&gt;Dart&lt;/em&gt;, &lt;em&gt;Go&lt;/em&gt;,&lt;em&gt;Haskell&lt;/em&gt;, &lt;em&gt;Jupyter&lt;/em&gt;, &lt;em&gt;PostScript&lt;/em&gt; y &lt;em&gt;Mathematica&lt;/em&gt;, y que sólo hay un usuario de mi comunidad usando &lt;a href=&#34;https://elbauldelprogramador.com/tags/scala&#34;&gt;&lt;em&gt;Scala&lt;/em&gt;&lt;/a&gt;, &lt;em&gt;Groovy&lt;/em&gt;, &lt;em&gt;Lua&lt;/em&gt; o &lt;em&gt;TypeScript&lt;/em&gt;. Ésto responde a mi pregunta, ya que, como mi lengugaje favorito es Scala, quería saber cuántos de mis seguidores lo usaban.&lt;/p&gt;

&lt;p&gt;Y bueno, ¿Qué sucede en tu comunidad de amigos?
¿Se usan los mismos lenguajes que en la mía? ¿Sigue Siendo JavaScript el más usado?&lt;/p&gt;

&lt;h1 id=&#34;referencias&#34;&gt;Referencias:&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://amzn.to/2q94XbW&#34; target=&#34;_blank&#34;&gt;Mastering Social Media Mining with R&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
        </item>
        
        <item>
            <title>Mi experiencia en la GameJam 2017 </title>
            <link>https://elbauldelprogramador.com/gamejam-2017-unlimitosis</link>
            <pubDate>Tue, 11 Apr 2017 09:53:42 +0200</pubDate>
            
            <guid>https://elbauldelprogramador.com/gamejam-2017-unlimitosis</guid>
            <description>

&lt;p&gt;Hace unas semanas participé en mi primera &lt;strong&gt;GameJam&lt;/strong&gt;. Nunca había programado un juego así que tenía curiosidad y fue todo un reto para mi. Teníamos 48 horas para presentar un prototipo mínimo. Nuestro equipo decidió usar el motor &lt;strong&gt;Godot&lt;/strong&gt;. En total estábamos cuatro personas: &lt;a href=&#34;https://elbauldelprogramador.com/author/cristina/&#34;&gt;@Cristina&lt;/a&gt;, &lt;a href=&#34;http://elenoideart.deviantart.com/&#34; target=&#34;_blank&#34; title=&#34;@ElenoideArt&#34;&gt;@ElenoideArt&lt;/a&gt;, @JJ Ramos y yo.&lt;/p&gt;

&lt;h1 id=&#34;descripción-del-juego&#34;&gt;Descripción del juego&lt;/h1&gt;

&lt;figure&gt;
        &lt;a href=&#34;https://elbauldelprogramador.com/img/gamejam17-unlimitosis.jpg&#34;&gt;
          &lt;img
            on=&#34;tap:lightbox1&#34;
            role=&#34;button&#34;
            tabindex=&#34;0&#34;
            layout=&#34;responsive&#34;
            src=&#34;https://elbauldelprogramador.com/img/gamejam17-unlimitosis.jpg&#34;
            alt=&#34;Unlimitosis&#34;
            title=&#34;Unlimitosis&#34;
            sizes=&#34;(min-width: 640px) 640px, 100vw&#34;
            width=&#34;640&#34;
            height=&#34;640&#34;&gt;
          &lt;/img&gt;
        &lt;/a&gt;
        &lt;figcaption&gt;Unlimitosis&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;@ElenoideArt fue nuestra diseñadora y también es &lt;strong&gt;bióloga&lt;/strong&gt;, así que pensamos en un juego en el cual aparecen células en la pantalla y eventualmente se vuelve &lt;em&gt;cancerígenas&lt;/em&gt;, el jugador debe eliminarlas antes de que se reproduzcan. A continuaión muestro una grabación del juego en acción:&lt;/p&gt;

&lt;p&gt;&lt;amp-youtube
    data-videoid=&#34;LeyDyRMDmQ4&#34;
    layout=&#34;responsive&#34;
    sizes=&#34;(min-width: 800px) 800px, 100vw&#34;
    width=&#34;800&#34; height=&#34;600&#34;&gt;
&lt;/amp-youtube&gt;&lt;/p&gt;

&lt;p&gt;Como puedes ver, el juego es bastante sencillo, pero bueno, ninguno sabíamos hacer juegos el día de antes de la &lt;strong&gt;GameJam&lt;/strong&gt;. Si quieres mejorar, probar o jugar, el código está en &lt;a href=&#34;https://github.com/elbaulp/GranadaGameJam17&#34; target=&#34;_blank&#34; title=&#34;Repo Unlimitosis&#34;&gt;Repo Unlimitosis&lt;/a&gt;.&lt;/p&gt;

&lt;h1 id=&#34;documentación&#34;&gt;Documentación&lt;/h1&gt;

&lt;p&gt;Para desarrollar el juego nos bastó con la documentación de &lt;em&gt;Godot&lt;/em&gt;, extensa y bien explicada. También existe &lt;a href=&#34;https://github.com/TutorialDoctor/TD-Godot-Games&#34; target=&#34;_blank&#34; title=&#34;TutorialDoctor&#34;&gt;un repositorio GitHub con montones de ejemplos.&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&#34;prueba-el-juego&#34;&gt;Prueba el juego&lt;/h1&gt;

&lt;p&gt;Gracias a &lt;strong&gt;JJ Ramos&lt;/strong&gt; tenemos una versión web del juego, puedes probarla en &lt;a href=&#34;http://juanjoseramos.com/unlimitosis/&#34; target=&#34;_blank&#34; title=&#34;http://juanjoseramos.com/unlimitosis/&#34;&gt;juanjoseramos.com/unlimitosis/&lt;/a&gt;.&lt;/p&gt;
</description>
        </item>
        
        <item>
            <title>Libros recomendados</title>
            <link>https://elbauldelprogramador.com/libros-recomendados/</link>
            <pubDate>Tue, 04 Apr 2017 09:24:53 +0100</pubDate>
            
            <guid>https://elbauldelprogramador.com/libros-recomendados/</guid>
            <description>&lt;p&gt;A continuación enumero una lista de libros que he leido y que recomiendo. Iré añadiendo más conforme vaya terminando libros.&lt;/p&gt;

&lt;p&gt;Si estás buscando más libros que leer, puede que te interesen las siguientes dos listas. Los libros allí mencionados no los he leido, pero los tengo pendientes.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://elbauldelprogramador.com/5-libros-de-no-ficcion-que-todo-geek-deberia-leer/&#34; title=&#34;21 Libros de No-Ficción que todo Geek debería leer&#34;&gt;21 Libros de No-Ficción que todo Geek debería leer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://elbauldelprogramador.com/9-libros-que-debes-leer-para-ser-un-data-scientist-o-data-engineer/&#34; title=&#34;18 Libros Que Debes Leer Para Ser Un Data Scientist O Data Engineer&#34;&gt;18 Libros Que Debes Leer Para Ser Un Data Scientist O Data Engineer&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;/br&gt;&lt;/br&gt;&lt;/p&gt;

&lt;div class=&#34;row-post flex-grid&#34;&gt;
  &lt;article class=&#34;box-item animate&#34;&gt;
    &lt;h2&gt;Programming Scala, 2nd Edition&lt;/h2&gt;
    &lt;figure&gt;
      &lt;a href=&#34;https://elbauldelprogramador.com/img/programmingscala.jpg&#34;&gt;
        &lt;img
          on=&#34;tap:lightbox1&#34;
          role=&#34;button&#34;
          tabindex=&#34;0&#34;
          layout=&#34;responsive&#34;
          src=&#34;https://elbauldelprogramador.com/img/programmingscala.jpg&#34;
          alt=&#34;Programming Scala, 2nd Edition&#34;
          title=&#34;Programming Scala, 2nd Edition&#34;
          sizes=&#34;(min-width: 260px) 260px, 100vw&#34;
          width=&#34;260&#34;
          height=&#34;341&#34;&gt;
        &lt;/img&gt;
      &lt;/a&gt;
    &lt;/figure&gt;
    &lt;p&gt;Este es el primer libro que leí cuando decidí aprender &lt;strong&gt;scala&lt;/strong&gt;. Es un libro bastante bueno, cubre desde los aspéctos más básicos hasta conceptos avanzados. Si nunca has programado en &lt;em&gt;scala&lt;/em&gt;, este es tu libro.&lt;/p&gt;
    &lt;div class=&#34;tags&#34;&gt;
      &lt;a href=&#34;http://amzn.to/2njQomO&#34; target=&#34;_blank&#34;&gt;Ver en Amazon&lt;/a&gt;
    &lt;/div&gt;
  &lt;/article&gt;

  &lt;article class=&#34;box-item animate&#34;&gt;
    &lt;h2&gt;Test-Driven Machine Learning&lt;/h2&gt;
    &lt;figure&gt;
      &lt;a href=&#34;https://elbauldelprogramador.com/img/tdd.jpg&#34;&gt;
        &lt;img
          on=&#34;tap:lightbox1&#34;
          role=&#34;button&#34;
          tabindex=&#34;0&#34;
          layout=&#34;responsive&#34;
          src=&#34;https://elbauldelprogramador.com/img/tdd.jpg&#34;
          alt=&#34;Test-Driven Machine Learning&#34;
          title=&#34;Test-Driven Machine Learning&#34;
          sizes=&#34;(min-width: 260px) 260px, 100vw&#34;
          width=&#34;260&#34;
          height=&#34;320&#34;&gt;
        &lt;/img&gt;
      &lt;/a&gt;
    &lt;/figure&gt;
    &lt;p&gt;Este libro trata el &lt;strong&gt;testeo de software&lt;/strong&gt; desde otra perspectiva, además de enseñarte qué es el &lt;strong&gt;TDD&lt;/strong&gt; (&lt;em&gt;Test-Driven Development&lt;/em&gt;), te enseña a aplicarlo enfocándolo a problemas de &lt;em&gt;Machine Learning&lt;/em&gt;. Enfocar los problemas de &lt;em&gt;Machine Learning&lt;/em&gt; desde este punto de vista te ayudará a crear modelos más robustos y comparar distinas técnicas de una forma sencilla y modular.&lt;/p&gt;
    &lt;div class=&#34;tags&#34;&gt;
      &lt;a href=&#34;http://amzn.to/2mIW0rR&#34; target=&#34;_blank&#34;&gt;Ver en Amazon&lt;/a&gt;
    &lt;/div&gt;
  &lt;/article&gt;

  &lt;article class=&#34;box-item animate&#34;&gt;
    &lt;h2&gt;256 blog Hacks&lt;/h2&gt;
    &lt;figure&gt;
      &lt;a href=&#34;https://elbauldelprogramador.com/img/256bloghacks.jpg&#34;&gt;
        &lt;img
          on=&#34;tap:lightbox1&#34;
          role=&#34;button&#34;
          tabindex=&#34;0&#34;
          layout=&#34;responsive&#34;
          src=&#34;https://elbauldelprogramador.com/img/256bloghacks.jpg&#34;
          alt=&#34;256 blog hacks&#34;
          title=&#34;256 blog hacks&#34;
          sizes=&#34;(min-width: 260px) 260px, 100vw&#34;
          width=&#34;260&#34;
          height=&#34;390&#34;&gt;
        &lt;/img&gt;
      &lt;/a&gt;
    &lt;/figure&gt;
    &lt;p&gt;Yegor es un &lt;strong&gt;blogger ruso&lt;/strong&gt; e ingeniero de Software con un blog muy popular. En su libro da consejos de cómo cualquier blogger principiante puede empezar a hacer las cosas bien para atraer a potenciales lectores y crear una comunidad sólida. Si ya tienes un blog con bastantes visitas, no te lo recomiendo, ya que posiblemente hayas aplicado la gran mayoría de consejos mencionados en el libro.&lt;/p&gt;
    &lt;div class=&#34;tags&#34;&gt;
      &lt;a href=&#34;http://amzn.to/2nF1YcP&#34; target=&#34;_blank&#34;&gt;Ver en Amazon&lt;/a&gt;
    &lt;/div&gt;
  &lt;/article&gt;

  &lt;article class=&#34;box-item animate&#34;&gt;
    &lt;h2&gt;Hacking, The art of Exploitation&lt;/h2&gt;
    &lt;figure&gt;
      &lt;a href=&#34;https://elbauldelprogramador.com/img/artofexploitation.jpg&#34;&gt;
        &lt;img
          on=&#34;tap:lightbox1&#34;
          role=&#34;button&#34;
          tabindex=&#34;0&#34;
          layout=&#34;responsive&#34;
          src=&#34;https://elbauldelprogramador.com/img/artofexploitation.jpg&#34;
          alt=&#34;The art of exploitation&#34;
          title=&#34;The art of exploitation&#34;
          sizes=&#34;(min-width: 260px) 260px, 100vw&#34;
          width=&#34;260&#34;
          height=&#34;342&#34;&gt;
        &lt;/img&gt;
      &lt;/a&gt;
    &lt;/figure&gt;
    &lt;p&gt;Este es uno de mis primeros libros sobre &lt;a href=&#34;https://elbauldelprogramador.com/categories/seguridad/&#34;&gt;seguridad&lt;/a&gt;, y de todos los libros que he leido de informática, uno de mis favoritos. En él se explica de forma detallada cómo funcionan los programas a nivel interno, qué hace el compilador para generar el código ensamblador, qué hace en realidad el código ensamblador... y cómo es posible explotar los programas con vulnerabilidades. Si estás interesado en cómo conseguir esto, hace tiempo escribí un artículo basándome en este libro: &lt;a href=&#34;https://elbauldelprogramador.com/explotacion-buffers-overflows-y-exploits-parte-i/&#34;&gt;Explotación - Buffers OverFlows y exploits (Parte I)&lt;/a&gt;.&lt;/p&gt;
    &lt;div class=&#34;tags&#34;&gt;
      &lt;a href=&#34;http://amzn.to/2oqfPk6&#34; target=&#34;_blank&#34;&gt;Ver en Amazon&lt;/a&gt;
    &lt;/div&gt;
  &lt;/article&gt;

  &lt;article class=&#34;box-item animate&#34;&gt;
    &lt;h2&gt;Learning From Data&lt;/h2&gt;
    &lt;figure&gt;
      &lt;a href=&#34;https://elbauldelprogramador.com/img/ml/Learning From-Data-by-Yaser.jpg&#34;&gt;
        &lt;img
          on=&#34;tap:lightbox1&#34;
          role=&#34;button&#34;
          tabindex=&#34;0&#34;
          layout=&#34;responsive&#34;
          src=&#34;https://elbauldelprogramador.com/img/ml/Learning From-Data-by-Yaser.jpg&#34;
          alt=&#34;Learning from data&#34;
          title=&#34;Learning from data&#34;
          sizes=&#34;(min-width: 260px) 260px, 100vw&#34;
          width=&#34;260&#34;
          height=&#34;340&#34;&gt;
        &lt;/img&gt;
      &lt;/a&gt;
    &lt;/figure&gt;
    &lt;p&gt;Este es uno de los libros principales que hemos usado en mi facultad en la asignatura “Aprendizaje Automático”, está bastante bien, muy teórico pero bien explicado y con ejemplos sencillos de entender.&lt;/p&gt;
    &lt;div class=&#34;tags&#34;&gt;
      &lt;a href=&#34;http://amzn.to/2mIVWZ8&#34; target=&#34;_blank&#34;&gt;Ver en Amazon&lt;/a&gt;
    &lt;/div&gt;
  &lt;/article&gt;

  &lt;article class=&#34;box-item animate&#34;&gt;
    &lt;h2&gt;Pro Git&lt;/h2&gt;
    &lt;figure&gt;
      &lt;a href=&#34;https://elbauldelprogramador.com/img/progit.jpg&#34;&gt;
        &lt;img
          on=&#34;tap:lightbox1&#34;
          role=&#34;button&#34;
          tabindex=&#34;0&#34;
          layout=&#34;responsive&#34;
          src=&#34;https://elbauldelprogramador.com/img/progit.jpg&#34;
          alt=&#34;Pro Git&#34;
          title=&#34;Pro Git&#34;
          sizes=&#34;(min-width: 260px) 260px, 100vw&#34;
          width=&#34;260&#34;
          height=&#34;321&#34;&gt;
        &lt;/img&gt;
      &lt;/a&gt;
    &lt;/figure&gt;
    &lt;p&gt;Si eres desarrollador, es casi una obligación que sepas usar &lt;a href=&#34;https://elbauldelprogramador.com/categories/git/&#34;&gt;git&lt;/a&gt;, este libro cubre todos los aspectos desde nivel principiante hasta niveles avanzados, cuando leí este libro, creé una &lt;a href=&#34;https://elbauldelprogramador.com/mini-tutorial-y-chuleta-de-comandos-git/&#34;&gt;chuleta de comandos Git&lt;/a&gt;.&lt;/p&gt;
    &lt;div class=&#34;tags&#34;&gt;
      &lt;a href=&#34;http://amzn.to/2nEXEKe&#34; target=&#34;_blank&#34;&gt;Ver en Amazon&lt;/a&gt; | &lt;a href=&#34;https://git-scm.com/book/en/v2&#34; target=&#34;_blank&#34; title=&#34;Ver en gitscm.com&#34;&gt;Ver en gitscm.com&lt;/a&gt;
    &lt;/div&gt;
  &lt;/article&gt;
&lt;/div&gt;
</description>
        </item>
        
        <item>
            <title>54 Blogs / Canales / Podcast sobre informática, Data Science y Seguridad</title>
            <link>https://elbauldelprogramador.com/blogs-canales-podcast-aprender-informatica/</link>
            <pubDate>Wed, 29 Mar 2017 11:38:13 +0100</pubDate>
            
            <guid>https://elbauldelprogramador.com/blogs-canales-podcast-aprender-informatica/</guid>
            <description>&lt;h1 id=&#34;qué-es-esta-lista&#34;&gt;¿Qué es esta lista?&lt;/h1&gt;

&lt;p&gt;A continuación se listan una serie de Podcast, Canales de Youtube y Blogs que sigo que hablan sobre informática, &lt;a href=&#34;https://elbauldelprogramador.com/9-libros-que-debes-leer-para-ser-un-data-scientist-o-data-engineer/&#34; title=&#34;18 Libros Que Debes Leer Para Ser Un Data Scientist O Data Engineer&#34;&gt;Data Science&lt;/a&gt; y &lt;a href=&#34;https://elbauldelprogramador.com/categories/security-now/&#34;&gt;seguridad&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Si conoces de algún recurso digital que hable y enseñe informática, data science o seguridad no listado abajo, contribuye dejándonos un comentario y lo añadiremos a la lista, o mejor aún, añádelo tú mismo haciendo un &lt;a href=&#34;https://github.com/elbaulp/algui91-hugo/edit/master/content/post/resources-channels-blogs-podcast-about-computer-science-security-data-science.md&#34; target=&#34;_blank&#34; title=&#34;Pull Request!&#34;&gt;Pull Request!&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Gracias a &lt;a href=&#34;https://twitter.com/sinclair_88&#34; target=&#34;_blank&#34; title=&#34;@sinclair_88&#34;&gt;@sinclair_88&lt;/a&gt; por proponer la idea de crear la lista.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&#34;otras-listas&#34;&gt;Otras listas&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://elbauldelprogramador.com/recursos-canales-podcast-sobre-matematicas/&#34; title=&#34;11 recursos/canales/podcasts sobre matemáticas&#34;&gt;13 recursos/canales/podcasts sobre matemáticas&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://elbauldelprogramador.com/blogs-podcasts-canales-youtube-sobre-ciencia/&#34; title=&#34;21 Podcasts / Canales de Youtube / Blogs sobre Ciencia&#34;&gt;21 Podcasts / Canales de Youtube / Blogs sobre Ciencia&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;computer-science-programming-data-science-security&#34;&gt;Computer Science (Programming, Data Science &amp;amp; Security)&lt;/h1&gt;

&lt;h2 id=&#34;youtube&#34;&gt;Youtube&lt;/h2&gt;

&lt;div class=&#34;row-post flex-grid&#34;&gt;

  &lt;article class=&#34;box-item animate&#34;&gt;
    &lt;h3&gt;ComputerPhile&lt;/h3&gt;
    &lt;figure&gt;
      &lt;img sizes=&#34;(min-width: 100px) 100px, 100vw&#34; on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/computerPhile.jpg&#34; width=&#34;100&#34; height=&#34;100&#34;&gt;&lt;/img&gt;
    &lt;/figure&gt;

    &lt;p&gt;Videos all about computers and computer stuff. Sister channel of Numberphile.&lt;/p&gt;

    &lt;div class=&#34;tags&#34;&gt;
      &lt;a href=&#34;https://www.youtube.com/channel/UC9-y-6csu5WGm29I7JiwpnA&#34; target=&#34;_blank&#34; title=&#34;ComputerPhile&#34;&gt;ComputerPhile&lt;/a&gt;
    &lt;/div&gt;
  &lt;/article&gt;

  &lt;article class=&#34;box-item animate&#34;&gt;
    &lt;h3&gt;Security Now!&lt;/h3&gt;
    &lt;figure&gt;
      &lt;img sizes=&#34;(min-width: 100px) 100px, 100vw&#34; on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/securitynow.jpg&#34; width=&#34;100&#34; height=&#34;100&#34;&gt;&lt;/img&gt;
    &lt;/figure&gt;

    &lt;p&gt;Steve Gibson, the man who coined the term spyware and created the first anti-spyware program, creator of Spinrite and ShieldsUP, discusses the hot topics in security today with Leo Laporte.&lt;/p&gt;

    &lt;div class=&#34;tags&#34;&gt;
      &lt;a href=&#34;https://www.youtube.com/channel/UCNbqa_9xihC8yaV2o6dlsUg&#34; target=&#34;_blank&#34; title=&#34;Security Now!&#34;&gt;Security Now!&lt;/a&gt;
    &lt;/div&gt;
  &lt;/article&gt;

&lt;/div&gt;

&lt;h2 id=&#34;podcasts&#34;&gt;Podcasts&lt;/h2&gt;

&lt;h3 id=&#34;data-science&#34;&gt;Data Science&lt;/h3&gt;

&lt;div class=&#34;row-post flex-grid&#34;&gt;

  &lt;article class=&#34;box-item animate&#34;&gt;
    &lt;h2&gt;Not So Standard Deviations&lt;/h2&gt;
    &lt;figure&gt;
      &lt;a href=&#34;https://elbauldelprogramador.com/img/notsostandard.jpg&#34;&gt;
        &lt;img
          on=&#34;tap:lightbox1&#34;
          role=&#34;button&#34;
          tabindex=&#34;0&#34;
          layout=&#34;responsive&#34;
          src=&#34;https://elbauldelprogramador.com/img/notsostandard.jpg&#34;
          alt=&#34;NOt so standard Deviations podcasts&#34;
          title=&#34;NOt so standard Deviations podcasts&#34;
          sizes=&#34;(min-width: 200px) 200px, 100vw&#34;
          width=&#34;200&#34;
          height=&#34;200&#34;&gt;
        &lt;/img&gt;
      &lt;/a&gt;
    &lt;/figure&gt;
    &lt;p&gt;Roger Peng and Hilary Parker talk about the latest in data science and  data analysis in academia and industry. &lt;/p&gt;
    &lt;div class=&#34;tags&#34;&gt;
      &lt;a href=&#34;https://soundcloud.com/nssd-podcast&#34; target=&#34;_blank&#34; title=&#34;Not So Standard Deviations&#34;&gt;Not So Standard Deviations&lt;/a&gt;
    &lt;/div&gt;
  &lt;/article&gt;

  &lt;article class=&#34;box-item animate&#34;&gt;
    &lt;h2&gt;Linear Digressions&lt;/h2&gt;
    &lt;figure&gt;
      &lt;a href=&#34;https://elbauldelprogramador.com/img/lineardigressions.jpg&#34;&gt;
        &lt;img
          on=&#34;tap:lightbox1&#34;
          role=&#34;button&#34;
          tabindex=&#34;0&#34;
          layout=&#34;responsive&#34;
          src=&#34;https://elbauldelprogramador.com/img/lineardigressions.jpg&#34;
          alt=&#34;Linear Digressions Podcass&#34;
          title=&#34;Linear Digressions Podcass&#34;
          sizes=&#34;(min-width: 200px) 200px, 100vw&#34;
          width=&#34;200&#34;
          height=&#34;200&#34;&gt;
        &lt;/img&gt;
      &lt;/a&gt;
    &lt;/figure&gt;
    &lt;p&gt;Linear Digressions is a podcast about machine learning and data science.  Machine learning is being used to solve a ton of interesting problems, and to accomplish goals that were out of reach even a few short years ago.&lt;/p&gt;
    &lt;div class=&#34;tags&#34;&gt;
      &lt;a href=&#34;http://lineardigressions.com/&#34; target=&#34;_blank&#34; title=&#34;Linear Digressions&#34;&gt;Linear Digressions&lt;/a&gt;
    &lt;/div&gt;
  &lt;/article&gt;

  &lt;article class=&#34;box-item animate&#34;&gt;
    &lt;h3&gt;Becoming a Data Scientist&lt;/h3&gt;
    &lt;figure&gt;
      &lt;img sizes=&#34;(min-width: 100px) 100px, 100vw&#34; on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/becomingads.jpg&#34; width=&#34;100&#34; height=&#34;100&#34;&gt;&lt;/img&gt;
    &lt;/figure&gt;

    &lt;p&gt;Documenting my path from &#34;SQL Data Analyst pursuing an Engineering Master&#39;s Degree&#34; to &#34;Data Scientist&#34; &lt;/p&gt;

    &lt;div class=&#34;tags&#34;&gt;
      &lt;a href=&#34;http://www.becomingadatascientist.com/feed/podcast&#34; target=&#34;_blank&#34; title=&#34;Becoming A Data Scientist Podcast&#34;&gt;Becoming A Data Scientist Podcast&lt;/a&gt; | &lt;a href=&#34;http://www.becomingadatascientist.com/&#34; target=&#34;_blank&#34; title=&#34;Website&#34;&gt;Website&lt;/a&gt;
    &lt;/div&gt;
  &lt;/article&gt;

  &lt;article class=&#34;box-item animate&#34;&gt;
    &lt;h3&gt;Data Skeptic&lt;/h3&gt;
    &lt;figure&gt;
      &lt;img sizes=&#34;(min-width: 100px) 100px, 100vw&#34; on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/dataskeptic.jpg&#34; width=&#34;100&#34; height=&#34;100&#34;&gt;&lt;/img&gt;
    &lt;/figure&gt;

    &lt;p&gt;Data Skeptic is your source for a perseptive of scientific skepticism on topics in statistics, machine learning, big data, artificial intelligence, and data science. Our weekly podcast and blog bring you stories and tutorials to help understand our data-driven world.&lt;/p&gt;

    &lt;div class=&#34;tags&#34;&gt;
      &lt;a href=&#34;http://dataskeptic.libsyn.com/rss&#34; target=&#34;_blank&#34; title=&#34;Data Skeptic&#34;&gt;Data Skeptic&lt;/a&gt; | &lt;a href=&#34;http://dataskeptic.com&#34; target=&#34;_blank&#34; title=&#34;Website&#34;&gt;Website&lt;/a&gt;
    &lt;/div&gt;
  &lt;/article&gt;

  &lt;article class=&#34;box-item animate&#34;&gt;
    &lt;h3&gt;Data Stories&lt;/h3&gt;
    &lt;figure&gt;
      &lt;img sizes=&#34;(min-width: 100px) 100px, 100vw&#34; on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/datastories.png&#34; width=&#34;100&#34; height=&#34;100&#34;&gt;&lt;/img&gt;
    &lt;/figure&gt;

    &lt;p&gt;A podcast on data visualization with Enrico Bertini and Moritz Stefaner&lt;/p&gt;

    &lt;div class=&#34;tags&#34;&gt;
      &lt;a href=&#34;http://datastori.es/feed/podcast/&#34; target=&#34;_blank&#34; title=&#34;Data Stories&#34;&gt;Data Stories&lt;/a&gt; | &lt;a href=&#34;http://datastori.es&#34; target=&#34;_blank&#34; title=&#34;Website&#34;&gt;Website&lt;/a&gt;
    &lt;/div&gt;
  &lt;/article&gt;

  &lt;article class=&#34;box-item animate&#34;&gt;
    &lt;h3&gt;Partially Derivative&lt;/h3&gt;
    &lt;figure&gt;
      &lt;img sizes=&#34;(min-width: 100px) 100px, 100vw&#34; on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/partiallyd.png&#34; width=&#34;100&#34; height=&#34;72&#34;&gt;&lt;/img&gt;
    &lt;/figure&gt;

    &lt;p&gt;Partially Derivative is a podcast about data science in the world around us. Episodes are a mix of explorations into the techniques used in data science and discussions with the field&#39;s leading experts. The podcast is a personal project hosted by Jonathon, Vidya, and Chris -- three experts in data science.&lt;/p&gt;

    &lt;div class=&#34;tags&#34;&gt;
      &lt;a href=&#34;http://feeds.feedburner.com/PartiallyDerivative&#34; target=&#34;_blank&#34; title=&#34;Partially Derivative&#34;&gt;Partially Derivative&lt;/a&gt; | &lt;a href=&#34;http://partiallyderivative.com&#34; target=&#34;_blank&#34; title=&#34;Website&#34;&gt;Website&lt;/a&gt;
    &lt;/div&gt;
  &lt;/article&gt;

  &lt;article class=&#34;box-item animate&#34;&gt;
    &lt;h3&gt;Talking Machines&lt;/h3&gt;
    &lt;figure&gt;
      &lt;img sizes=&#34;(min-width: 100px) 100px, 100vw&#34; on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/talkingmachines.png&#34; width=&#34;100&#34; height=&#34;100&#34;&gt;&lt;/img&gt;
    &lt;/figure&gt;

    &lt;p&gt;Talking Machines is your window into the world of machine learning. Your hosts, Katherine Gorman and Ryan Adams, bring you clear conversations with experts in the field, insightful discussions of industry news, and useful answers to your questions.&lt;/p&gt;

    &lt;div class=&#34;tags&#34;&gt;
      &lt;a href=&#34;http://www.thetalkingmachines.com/blog/?format=RSS&#34; target=&#34;_blank&#34; title=&#34;Talking Machines&#34;&gt;Talking Machines&lt;/a&gt; | &lt;a href=&#34;http://www.thetalkingmachines.com/blog/&#34; target=&#34;_blank&#34; title=&#34;Website&#34;&gt;Website&lt;/a&gt;
    &lt;/div&gt;
  &lt;/article&gt;
&lt;/div&gt;

&lt;h3 id=&#34;computer-science&#34;&gt;Computer Science&lt;/h3&gt;

&lt;div class=&#34;row-post flex-grid&#34;&gt;
  &lt;article class=&#34;box-item animate&#34;&gt;
    &lt;h3&gt;Chips with everything&lt;/h3&gt;
    &lt;figure&gt;
      &lt;img sizes=&#34;(min-width: 100px) 100px, 100vw&#34; on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/chips-with-everything.png&#34; width=&#34;100&#34; height=&#34;100&#34;&gt;&lt;/img&gt;
    &lt;/figure&gt;

    &lt;p&gt;Why are teens shoplifting makeup and posting their hauls to Tumblr? How can a blind man run a marathon through the desert with just an iPhone? And what happens to your social media profiles after you die? Week on week, Leigh Alexander answers questions just like these on our digital culture podcast, Chips with Everything.&lt;/p&gt;

    &lt;div class=&#34;tags&#34;&gt;
      &lt;a href=&#34;https://www.theguardian.com/technology/series/chips-with-everything/podcast.xml&#34; target=&#34;_blank&#34; title=&#34;Chips with everything&#34;&gt;Chips with everything&lt;/a&gt; | &lt;a href=&#34;https://www.theguardian.com/technology/series/chips-with-everything&#34; target=&#34;_blank&#34; title=&#34;Website&#34;&gt;Website&lt;/a&gt;
    &lt;/div&gt;
  &lt;/article&gt;

&lt;/div&gt;

&lt;h3 id=&#34;security&#34;&gt;Security&lt;/h3&gt;

&lt;div class=&#34;row-post flex-grid&#34;&gt;

  &lt;article class=&#34;box-item animate&#34;&gt;
    &lt;h3&gt;Security Now!&lt;/h3&gt;
    &lt;figure&gt;
      &lt;img sizes=&#34;(min-width: 100px) 100px, 100vw&#34; on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/securitynow.jpg&#34; width=&#34;100&#34; height=&#34;100&#34;&gt;&lt;/img&gt;
    &lt;/figure&gt;

    &lt;p&gt;Steve Gibson, the man who coined the term spyware and created the first anti-spyware program, creator of Spinrite and ShieldsUP, discusses the hot topics in security today with Leo Laporte.&lt;/p&gt;

    &lt;div class=&#34;tags&#34;&gt;
      &lt;a href=&#34;http://leo.am/podcasts/sn&#34; target=&#34;_blank&#34; title=&#34;Security Now&#34;&gt;Security Now&lt;/a&gt; | &lt;a href=&#34;https://twit.tv/shows/security-now&#34; target=&#34;_blank&#34; title=&#34;Website&#34;&gt;Website&lt;/a&gt;
    &lt;/div&gt;
  &lt;/article&gt;
&lt;/div&gt;

&lt;h3 id=&#34;programming&#34;&gt;Programming&lt;/h3&gt;

&lt;div class=&#34;row-post flex-grid&#34;&gt;
  &lt;article class=&#34;box-item animate&#34;&gt;
    &lt;h3&gt;Talk Python To Me&lt;/h3&gt;
    &lt;figure&gt;
      &lt;img sizes=&#34;(min-width: 100px) 100px, 100vw&#34; on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/talkpython.png&#34; width=&#34;100&#34; height=&#34;100&#34;&gt;&lt;/img&gt;
    &lt;/figure&gt;

    &lt;p&gt;Talk Python to Me is a weekly podcast hosted by Michael Kennedy. The show covers a wide array of Python topics as well as many related topics (e.g. MongoDB, AngularJS, DevOps).&lt;/p&gt;

    &lt;div class=&#34;tags&#34;&gt;
      &lt;a href=&#34;https://talkpython.fm/episodes/rss&#34; target=&#34;_blank&#34; title=&#34;Talk Python To Me&#34;&gt;Talk Python To Me&lt;/a&gt; | &lt;a href=&#34;https://talkpython.fm/&#34; target=&#34;_blank&#34; title=&#34;Website&#34;&gt;Website&lt;/a&gt;
    &lt;/div&gt;
  &lt;/article&gt;

&lt;/div&gt;

&lt;h2 id=&#34;blogs&#34;&gt;Blogs&lt;/h2&gt;

&lt;p&gt;&lt;!--ad--&gt;&lt;/p&gt;

&lt;h3 id=&#34;data-science-1&#34;&gt;Data Science&lt;/h3&gt;

&lt;div class=&#34;row-post flex-grid&#34;&gt;

  &lt;article class=&#34;box-item animate&#34;&gt;
    &lt;h3&gt;Stories by IBM Cognitive Business on Medium&lt;/h3&gt;

    &lt;figure id=&#34;medium&#34;&gt;
      &lt;svg id=&#34;icon-medium&#34; version=&#34;1.1&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34; xmlns:xlink=&#34;http://www.w3.org/1999/xlink&#34; x=&#34;0px&#34; y=&#34;0px&#34; viewBox=&#34;0 0 48 48&#34; xml:space=&#34;preserve&#34; width=&#34;128&#34; height=&#34;128&#34;&gt;
        &lt;path class=&#34;icon-medium1&#34; d=&#34;M32.163,6.369C31.523,6.049,31,6.372,31,7.088v28.45l11.674,5.837&amp;#10;&amp;#9;C43.959,42.017,45,41.567,45,40.37V12.974c0-0.115-0.065-0.22-0.167-0.271L32.163,6.369z&#34;/&gt;
        &lt;path class=&#34;icon-medium2&#34; d=&#34;M17,28.537L30.319,6.895c0.375-0.609,1.205-0.846,1.844-0.526l12.684,6.342&amp;#10;&amp;#9;c0.082,0.041,0.111,0.144,0.063,0.222L31,35.537L17,28.537z&#34;/&gt;
        &lt;path class=&#34;icon-medium3&#34; d=&#34;M4.938,6.756C3.872,6.223,3.511,6.618,4.136,7.633L17,28.537l14,7L17.03,12.836&amp;#10;&amp;#9;c-0.02-0.032-0.048-0.058-0.082-0.075L4.938,6.756z&#34;/&gt;
        &lt;path class=&#34;icon-medium4&#34; d=&#34;M17,40.37c0,1.192-0.872,1.731-1.938,1.198L4.163,36.119&amp;#10;&amp;#9;C3.523,35.799,3,34.952,3,34.237V7.521c0-0.954,0.698-1.385,1.551-0.958l12.374,6.187C16.971,12.773,17,12.82,17,12.871V40.37z&#34;/&gt;
      &lt;/svg&gt;
    &lt;/figure&gt;

    &lt;p&gt;This is the age of breakthrough. An age in which digital business meets digital intelligence — human expertise enhanced, scaled and accelerated.&lt;/p&gt;

    &lt;div class=&#34;tags&#34;&gt;
      &lt;a title=&#34;Stories by IBM Cognitive Business on Medium&#34; target=&#34;_blank&#34; href=&#34;https://medium.com/@ibmcognitivebusiness&#34;&gt;Website&lt;/a&gt;
    &lt;/div&gt;
  &lt;/article&gt;

  &lt;article class=&#34;box-item animate&#34;&gt;
    &lt;h3&gt;Stories by Oliver Cameron on Medium&lt;/h3&gt;

    &lt;figure id=&#34;medium&#34;&gt;
      &lt;svg&gt;
        &lt;use xmlns:xlink=&#34;http://www.w3.org/1999/xlink&#34; xlink:href=&#34;#icon-medium&#34;&gt;&lt;/use&gt;
      &lt;/svg&gt;
    &lt;/figure&gt;

    &lt;p&gt;I lead the self-driving car team at @udacity. Previously founder of a @ycombinator startup.&lt;/p&gt;

    &lt;div class=&#34;tags&#34;&gt;
      &lt;a title=&#34;Stories by Oliver Cameron on Medium&#34; target=&#34;_blank&#34; href=&#34;https://medium.com/@olivercameron&#34;&gt;Website&lt;/a&gt;
    &lt;/div&gt;
  &lt;/article&gt;

  &lt;article class=&#34;box-item animate&#34;&gt;
    &lt;h3&gt;Udacity Inc — Medium&lt;/h3&gt;
    &lt;figure id=&#34;medium&#34;&gt;
      &lt;svg&gt;
        &lt;use xmlns:xlink=&#34;http://www.w3.org/1999/xlink&#34; xlink:href=&#34;#icon-medium&#34;&gt;&lt;/use&gt;
      &lt;/svg&gt;
    &lt;/figure&gt;

    &lt;p&gt;Learning for the Jobs of Today, Tomorrow, and Beyond&lt;/p&gt;

    &lt;div class=&#34;tags&#34;&gt;
      &lt;a title=&#34;Udacity Inc — Medium&#34; target=&#34;_blank&#34; href=&#34;https://medium.com/udacity&#34;&gt;Website&lt;/a&gt;
    &lt;/div&gt;
  &lt;/article&gt;

  &lt;article class=&#34;box-item animate&#34;&gt;
    &lt;h3&gt;Cloudera - Medium&lt;/h3&gt;
    &lt;figure id=&#34;medium&#34;&gt;
      &lt;svg&gt;
        &lt;use xmlns:xlink=&#34;http://www.w3.org/1999/xlink&#34; xlink:href=&#34;#icon-medium&#34;&gt;&lt;/use&gt;
      &lt;/svg&gt;
    &lt;/figure&gt;

    &lt;div class=&#34;tags&#34;&gt;
      &lt;a title=&#34;Cloudera - Medium&#34; target=&#34;_blank&#34; href=&#34;https://medium.com/cloudera-inc&#34;&gt;Website&lt;/a&gt;
    &lt;/div&gt;
  &lt;/article&gt;

  &lt;article class=&#34;box-item animate&#34;&gt;
    &lt;h3&gt;Nathan Benaich on Medium&lt;/h3&gt;
    &lt;figure id=&#34;medium&#34;&gt;
      &lt;svg&gt;
        &lt;use xmlns:xlink=&#34;http://www.w3.org/1999/xlink&#34; xlink:href=&#34;#icon-medium&#34;&gt;&lt;/use&gt;
      &lt;/svg&gt;
    &lt;/figure&gt;

    &lt;p&gt;Investor and technologist. All things #AI and emerging tech. Former research scientist, photographer, perpetual foodie.&lt;/p&gt;

    &lt;div class=&#34;tags&#34;&gt;
      &lt;a title=&#34;Nathan Benaich on Medium&#34; target=&#34;_blank&#34; href=&#34;https://medium.com/@NathanBenaich&#34;&gt;Website&lt;/a&gt;
    &lt;/div&gt;
  &lt;/article&gt;

  &lt;article class=&#34;box-item animate&#34;&gt;
    &lt;h3&gt;Adam Geitgey on Medium&lt;/h3&gt;
    &lt;figure id=&#34;medium&#34;&gt;
      &lt;svg&gt;
        &lt;use xmlns:xlink=&#34;http://www.w3.org/1999/xlink&#34; xlink:href=&#34;#icon-medium&#34;&gt;&lt;/use&gt;
      &lt;/svg&gt;
    &lt;/figure&gt;

    &lt;p&gt;Interested in computers and machine learning. Likes to write about it.&lt;/p&gt;

    &lt;div class=&#34;tags&#34;&gt;
      &lt;a title=&#34;Adam Geitgey on Medium&#34; target=&#34;_blank&#34; href=&#34;https://medium.com/@ageitgey&#34;&gt;Website&lt;/a&gt;
    &lt;/div&gt;
  &lt;/article&gt;

  &lt;article class=&#34;box-item animate&#34;&gt;
    &lt;h3&gt;Airbnb Engineering &amp;amp; Data Science — Medium&lt;/h3&gt;
    &lt;figure id=&#34;medium&#34;&gt;
      &lt;svg&gt;
        &lt;use xmlns:xlink=&#34;http://www.w3.org/1999/xlink&#34; xlink:href=&#34;#icon-medium&#34;&gt;&lt;/use&gt;
      &lt;/svg&gt;
    &lt;/figure&gt;

    &lt;p&gt;Creative engineers and data scientists building a world where you can belong anywhere.&lt;/p&gt;

    &lt;div class=&#34;tags&#34;&gt;
      &lt;a title=&#34;Airbnb Engineering &amp;amp; Data Science — Medium&#34; target=&#34;_blank&#34; href=&#34;https://medium.com/airbnb-engineering&#34;&gt;Website&lt;/a&gt;
    &lt;/div&gt;
  &lt;/article&gt;

  &lt;article class=&#34;box-item animate&#34;&gt;
    &lt;h3&gt;Stories by Camron Godbout on Medium&lt;/h3&gt;
    &lt;figure id=&#34;medium&#34;&gt;
      &lt;svg&gt;
        &lt;use xmlns:xlink=&#34;http://www.w3.org/1999/xlink&#34; xlink:href=&#34;#icon-medium&#34;&gt;&lt;/use&gt;
      &lt;/svg&gt;
    &lt;/figure&gt;

    &lt;p&gt;Deep Learning and NLP enthusiast&lt;/p&gt;

    &lt;div class=&#34;tags&#34;&gt;
      &lt;a title=&#34;Stories by Camron Godbout on Medium&#34; target=&#34;_blank&#34; href=&#34;https://medium.com/@camrongodbout&#34;&gt;Website&lt;/a&gt;
    &lt;/div&gt;
  &lt;/article&gt;

  &lt;article class=&#34;box-item animate&#34;&gt;
    &lt;h3&gt;Stories by Monica Rogati on Medium&lt;/h3&gt;
    &lt;figure id=&#34;medium&#34;&gt;
      &lt;svg&gt;
        &lt;use xmlns:xlink=&#34;http://www.w3.org/1999/xlink&#34; xlink:href=&#34;#icon-medium&#34;&gt;&lt;/use&gt;
      &lt;/svg&gt;
    &lt;/figure&gt;

    &lt;p&gt;Data Science advisor. Turning data into products and stories.&lt;/p&gt;

    &lt;div class=&#34;tags&#34;&gt;
      &lt;a title=&#34;Stories by Monica Rogati on Medium&#34; target=&#34;_blank&#34; href=&#34;https://medium.com/@mrogati&#34;&gt;Website&lt;/a&gt;
    &lt;/div&gt;
  &lt;/article&gt;

  &lt;article class=&#34;box-item animate&#34;&gt;
    &lt;h3&gt;Actionable Data - Medium&lt;/h3&gt;
    &lt;figure id=&#34;medium&#34;&gt;
      &lt;svg&gt;
        &lt;use xmlns:xlink=&#34;http://www.w3.org/1999/xlink&#34; xlink:href=&#34;#icon-medium&#34;&gt;&lt;/use&gt;
      &lt;/svg&gt;
    &lt;/figure&gt;

    &lt;p&gt;Big Data, data science and analytics advice from the folks at Pivotal Data.&lt;/p&gt;

    &lt;div class=&#34;tags&#34;&gt;
      &lt;a title=&#34;Actionable Data - Medium&#34; target=&#34;_blank&#34; href=&#34;https://medium.com/actionable-data&#34;&gt;Website&lt;/a&gt;
    &lt;/div&gt;
  &lt;/article&gt;

  &lt;article class=&#34;box-item animate&#34;&gt;
    &lt;h3&gt;Stories by Carlos E. Perez on Medium&lt;/h3&gt;
    &lt;figure id=&#34;medium&#34;&gt;
      &lt;svg&gt;
        &lt;use xmlns:xlink=&#34;http://www.w3.org/1999/xlink&#34; xlink:href=&#34;#icon-medium&#34;&gt;&lt;/use&gt;
      &lt;/svg&gt;
    &lt;/figure&gt;

    &lt;p&gt;Deep Learning Patterns, Methodology and Strategy @IntuitionMachine.com&lt;/p&gt;

    &lt;div class=&#34;tags&#34;&gt;
      &lt;a title=&#34;Stories by Carlos E. Perez on Medium&#34; target=&#34;_blank&#34; href=&#34;https://medium.com/@IntuitMachine&#34;&gt;Website&lt;/a&gt;
    &lt;/div&gt;
  &lt;/article&gt;

  &lt;article class=&#34;box-item animate&#34;&gt;
    &lt;h3&gt;Stories by Sam DeBrule on Medium&lt;/h3&gt;
    &lt;figure id=&#34;medium&#34;&gt;
      &lt;svg&gt;
        &lt;use xmlns:xlink=&#34;http://www.w3.org/1999/xlink&#34; xlink:href=&#34;#icon-medium&#34;&gt;&lt;/use&gt;
      &lt;/svg&gt;
    &lt;/figure&gt;

    &lt;p&gt;Weekly AI/ML Newsletter: machinelearnings.co. Formerly @mattermark @chartbeat. I’d love to meet you for coffee and chat about AI!&lt;/p&gt;

    &lt;div class=&#34;tags&#34;&gt;
      &lt;a title=&#34;Stories by Sam DeBrule on Medium&#34; target=&#34;_blank&#34; href=&#34;https://medium.com/@samdebrule&#34;&gt;Website&lt;/a&gt;
    &lt;/div&gt;
  &lt;/article&gt;

  &lt;article class=&#34;box-item animate&#34;&gt;
    &lt;h3&gt;Stories by NYU Center for Data Science on Medium&lt;/h3&gt;
    &lt;figure id=&#34;medium&#34;&gt;
      &lt;svg&gt;
        &lt;use xmlns:xlink=&#34;http://www.w3.org/1999/xlink&#34; xlink:href=&#34;#icon-medium&#34;&gt;&lt;/use&gt;
      &lt;/svg&gt;
    &lt;/figure&gt;

    &lt;p&gt;Official account of the Center for Data Science at NYU, home of the Masters in Data Science.&lt;/p&gt;

    &lt;div class=&#34;tags&#34;&gt;
      &lt;a title=&#34;Stories by NYU Center for Data Science on Medium&#34; target=&#34;_blank&#34; href=&#34;https://medium.com/@NYUDataScience&#34;&gt;Website&lt;/a&gt;
    &lt;/div&gt;
  &lt;/article&gt;

  &lt;article class=&#34;box-item animate&#34;&gt;
    &lt;h3&gt;sebastianraschka.com&lt;/h3&gt;
    &lt;figure&gt;
      &lt;img sizes=&#34;(min-width: 100px) 100px, 100vw&#34; on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/sebastian.jpg&#34; width=&#34;100&#34; height=&#34;106&#34;&gt;&lt;/img&gt;
    &lt;/figure&gt;

    &lt;p&gt;Sebastian Raschka is the author of the bestselling book “Python Machine Learning.” As a Ph.D. candidate at Michigan State University, he is developing new computational methods in the field of computational biology.&lt;/p&gt;

    &lt;div class=&#34;tags&#34;&gt;
      &lt;a title=&#34;sebastianraschka.com&#34; target=&#34;_blank&#34; href=&#34;http://sebastianraschka.com/&#34;&gt;Website&lt;/a&gt;
    &lt;/div&gt;
  &lt;/article&gt;

  &lt;article class=&#34;box-item animate&#34;&gt;
    &lt;h3&gt;Data Elixir&lt;/h3&gt;
    &lt;figure&gt;
      &lt;img sizes=&#34;(min-width: 100px) 100px, 100vw&#34; on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/dataelixir.png&#34; width=&#34;285&#34; height=&#34;53&#34;&gt;&lt;/img&gt;
    &lt;/figure&gt;

    &lt;p&gt;Data Elixir is a weekly newsletter of curated data science news and resources from around the web.&lt;/p&gt;
    &lt;p&gt;Free for data lovers.&lt;/p&gt;

    &lt;div class=&#34;tags&#34;&gt;
      &lt;a title=&#34;Data Elixir&#34; target=&#34;_blank&#34; href=&#34;http://dataelixir.com/issues&#34;&gt;Website&lt;/a&gt;
    &lt;/div&gt;
  &lt;/article&gt;

  &lt;article class=&#34;box-item animate&#34;&gt;
    &lt;h3&gt;Becoming A Data Scientist&lt;/h3&gt;
    &lt;figure&gt;
      &lt;img sizes=&#34;(min-width: 100px) 100px, 100vw&#34; on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/becomingads.jpg&#34; width=&#34;100&#34; height=&#34;100&#34;&gt;&lt;/img&gt;
    &lt;/figure&gt;

    &lt;p&gt;Documenting my path from &#34;SQL Data Analyst pursuing an Engineering Master&#39;s Degree&#34; to &#34;Data Scientist&#34; &lt;/p&gt;

    &lt;div class=&#34;tags&#34;&gt;
      &lt;a title=&#34;Becoming A Data Scientist&#34; target=&#34;_blank&#34; href=&#34;http://www.becomingadatascientist.com/&#34;&gt;Website&lt;/a&gt;
    &lt;/div&gt;
  &lt;/article&gt;

  &lt;article class=&#34;box-item animate&#34;&gt;
    &lt;h3&gt;FlowingData&lt;/h3&gt;
    &lt;figure&gt;
      &lt;img sizes=&#34;(min-width: 100px) 100px, 100vw&#34; on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/flowingdata.png&#34; width=&#34;100&#34; height=&#34;100&#34;&gt;&lt;/img&gt;
    &lt;/figure&gt;

    &lt;p&gt;FlowingData explores how statisticians, designers, data scientists, and others use analysis, visualization, and exploration to understand data and ourselves.&lt;/p&gt;

    &lt;div class=&#34;tags&#34;&gt;
      &lt;a title=&#34;FlowingData&#34; target=&#34;_blank&#34; href=&#34;http://flowingdata.com/&#34;&gt;Website&lt;/a&gt;
    &lt;/div&gt;
  &lt;/article&gt;

  &lt;article class=&#34;box-item animate&#34;&gt;
    &lt;h3&gt;FastML&lt;/h3&gt;

    &lt;p&gt;This site is brought to you by the letters “M” and “L”. It is meant to tackle interesting topics in machine learning while being entertaining and easy to read and understand.&lt;/p&gt;

    &lt;div class=&#34;tags&#34;&gt;
      &lt;a title=&#34;FastML&#34; target=&#34;_blank&#34; href=&#34;http://fastml.com/&#34;&gt;Website&lt;/a&gt;
    &lt;/div&gt;
  &lt;/article&gt;

  &lt;article class=&#34;box-item animate&#34;&gt;
    &lt;h3&gt;Natural Language Processing Blog&lt;/h3&gt;
    &lt;figure&gt;
      &lt;img sizes=&#34;(min-width: 100px) 100px, 100vw&#34; on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/nlpblog.jpg&#34; width=&#34;100&#34; height=&#34;116&#34;&gt;&lt;/img&gt;
    &lt;/figure&gt;

    &lt;p&gt;My biased thoughts on the fields of natural language processing (NLP), computational linguistics (CL) and related topics (machine learning, math, funding, etc.)&lt;/p&gt;

    &lt;div class=&#34;tags&#34;&gt;
      &lt;a title=&#34;natural language processing blog&#34; target=&#34;_blank&#34; href=&#34;http://nlpers.blogspot.com/&#34;&gt;Website&lt;/a&gt;
    &lt;/div&gt;
  &lt;/article&gt;

  &lt;article class=&#34;box-item animate&#34;&gt;
    &lt;h3&gt;Andrej Karpathy blog&lt;/h3&gt;
    &lt;p&gt;I am Andrej Karpathy, a PhD student at Stanford working on Deep Learning. My academic website has much more information.&lt;/p&gt;

    &lt;div class=&#34;tags&#34;&gt;
      &lt;a title=&#34;Andrej Karpathy blog&#34; target=&#34;_blank&#34; href=&#34;http://karpathy.github.io/&#34;&gt;Website&lt;/a&gt;
    &lt;/div&gt;
  &lt;/article&gt;

  &lt;article class=&#34;box-item animate&#34;&gt;
    &lt;h3&gt;Machine Learning at Berkeley Blog - Articles&lt;/h3&gt;
    &lt;figure&gt;
      &lt;img sizes=&#34;(min-width: 100px) 100px, 100vw&#34; on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/mlberkeley.png&#34; width=&#34;100&#34; height=&#34;100&#34;&gt;&lt;/img&gt;
    &lt;/figure&gt;

    &lt;p&gt;Machine Learning at Berkeley (ML@B) is student-run organization based at the University of California, Berkeley, and is dedicated to building and fostering a vibrant machine learning community on the University of California, Berkeley campus as well as contributing to the greater machine learning community beyond the campus.&lt;/p&gt;

    &lt;div class=&#34;tags&#34;&gt;
      &lt;a title=&#34;Machine Learning at Berkeley Blog - Articles&#34; target=&#34;_blank&#34; href=&#34;http://ml.berkeley.edu/&#34;&gt;Website&lt;/a&gt;
    &lt;/div&gt;
  &lt;/article&gt;

  &lt;article class=&#34;box-item animate&#34;&gt;
    &lt;h3&gt;DataScience Blog&lt;/h3&gt;
    &lt;figure id=&#34;medium&#34;&gt;

      &lt;svg id=&#34;Layer_1&#34; data-name=&#34;Layer 1&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34; viewBox=&#34;0 0 40 40&#34; width=&#34;100&#34; height=&#34;100&#34;&gt;
        &lt;path  d=&#34;M11.53,7.42L9.17,6.06,1.47,10.5l2.36,1.36Z&#34; transform=&#34;translate(-1.47 -0.26)&#34;&gt;&lt;/path&gt;
        &lt;path  d=&#34;M19.2,0.26L10.93,5,13.29,6.4l8.28-4.78Z&#34; transform=&#34;translate(-1.47 -0.26)&#34;&gt;&lt;/path&gt;
        &lt;path  d=&#34;M23.19,9.39L20.88,8.05,9.06,14.88l2.31,1.34Z&#34; transform=&#34;translate(-1.47 -0.26)&#34;&gt;&lt;/path&gt;
        &lt;path  d=&#34;M26.79,4.64L22.65,7,25,8.36,29.1,6Z&#34; transform=&#34;translate(-1.47 -0.26)&#34;&gt;&lt;/path&gt;
        &lt;path  d=&#34;M19.93,15.7l-2.32-1.34-4.73,2.73,2.32,1.34Z&#34; transform=&#34;translate(-1.47 -0.26)&#34;&gt;&lt;/path&gt;
        &lt;path  d=&#34;M30.62,6.85L19.39,13.34l2.32,1.34L32.94,8.19Z&#34; transform=&#34;translate(-1.47 -0.26)&#34;&gt;&lt;/path&gt;
        &lt;path  d=&#34;M11.16,12L8.85,10.69l-3.52,2,2.32,1.34Z&#34; transform=&#34;translate(-1.47 -0.26)&#34;&gt;&lt;/path&gt;
        &lt;path  d=&#34;M23.06,2.49L10.63,9.67,12.95,11,25.38,3.82Z&#34; transform=&#34;translate(-1.47 -0.26)&#34;&gt;&lt;/path&gt;
        &lt;path  d=&#34;M29.31,12.22l2.32,1.34,5.3-3.06L34.62,9.16Z&#34; transform=&#34;translate(-1.47 -0.26)&#34;&gt;&lt;/path&gt;
        &lt;path  d=&#34;M19.2,20.73l10.64-6.15-2.32-1.34L16.89,19.4Z&#34; transform=&#34;translate(-1.47 -0.26)&#34;&gt;&lt;/path&gt;
        &lt;path  d=&#34;M28.07,31.89L19.2,37l-8.87-5.12v2.73l8.87,5.12,8.87-5.12V31.89Z&#34; transform=&#34;translate(-1.47 -0.26)&#34;&gt;&lt;/path&gt;
        &lt;path  d=&#34;M36.94,26.77l-7.09,4.1V33.6l7.09-4.1V26.77Z&#34; transform=&#34;translate(-1.47 -0.26)&#34;&gt;&lt;/path&gt;
        &lt;path  d=&#34;M1.47,26.77v2.75L8.56,33.6V30.87Z&#34; transform=&#34;translate(-1.47 -0.26)&#34;&gt;&lt;/path&gt;
        &lt;path  d=&#34;M24.53,29.19L19.2,32.25l-5.32-3.05v2.73L19.21,35l5.32-3.07V29.19Z&#34; transform=&#34;translate(-1.47 -0.26)&#34;&gt;&lt;/path&gt;
        &lt;path  d=&#34;M36.94,22L26.3,28.17V30.9l10.64-6.14V22h0Z&#34; transform=&#34;translate(-1.47 -0.26)&#34;&gt;&lt;/path&gt;
        &lt;path  d=&#34;M1.47,22v2.75L12.11,30.9V28.17Z&#34; transform=&#34;translate(-1.47 -0.26)&#34;&gt;&lt;/path&gt;
        &lt;path  d=&#34;M28.07,22.38L19.2,27.5l-8.87-5.12v2.73l8.87,5.12,8.87-5.12V22.38Z&#34; transform=&#34;translate(-1.47 -0.26)&#34;&gt;&lt;/path&gt;
        &lt;path  d=&#34;M36.94,17.26l-7.09,4.1v2.73L36.94,20V17.26Z&#34; transform=&#34;translate(-1.47 -0.26)&#34;&gt;&lt;/path&gt;
        &lt;path  d=&#34;M1.47,17.26V20l7.09,4.09V21.36Z&#34; transform=&#34;translate(-1.47 -0.26)&#34;&gt;&lt;/path&gt;
        &lt;path  d=&#34;M29.85,16.61L19.21,22.76,8,16.26V19l11.25,6.5,10.64-6.15V16.61Z&#34; transform=&#34;translate(-1.47 -0.26)&#34;&gt;&lt;/path&gt;
        &lt;path  d=&#34;M36.94,12.52l-5.32,3.07v2.73l5.32-3.07V12.52Z&#34; transform=&#34;translate(-1.47 -0.26)&#34;&gt;&lt;/path&gt;
        &lt;path  d=&#34;M6.2,15.25L1.47,12.52v2.73L6.2,18V15.25Z&#34; transform=&#34;translate(-1.47 -0.26)&#34;&gt;&lt;/path&gt;

      &lt;/svg&gt;
    &lt;/figure&gt;

    &lt;p&gt;DataScience pairs data expertise with powerful tools to help businesses unlock the value in their data.&lt;/p&gt;

    &lt;div class=&#34;tags&#34;&gt;
      &lt;a title=&#34;DataScience Blog&#34; target=&#34;_blank&#34; href=&#34;https://www.datascience.com/blog&#34;&gt;Website&lt;/a&gt;
    &lt;/div&gt;
  &lt;/article&gt;
&lt;/div&gt;

&lt;h3 id=&#34;programming-1&#34;&gt;Programming&lt;/h3&gt;

&lt;div class=&#34;row-post flex-grid&#34;&gt;
  &lt;article class=&#34;box-item animate&#34;&gt;
    &lt;h3&gt;You&#39;ve Been Haacked&lt;/h3&gt;
    &lt;figure&gt;
      &lt;img sizes=&#34;(min-width: 100px) 100px, 100vw&#34; on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/youhavebeenhacked.png&#34; width=&#34;100&#34; height=&#34;100&#34;&gt;&lt;/img&gt;
    &lt;/figure&gt;

    &lt;p&gt;I work at GitHub doing whatever I can to make it even more awesome.&lt;/p&gt;

    &lt;div class=&#34;tags&#34;&gt;
      &lt;a title=&#34;You&#39;ve Been Haacked&#34; target=&#34;_blank&#34; href=&#34;http://haacked.com/&#34;&gt;Website&lt;/a&gt;
    &lt;/div&gt;
  &lt;/article&gt;

  &lt;article class=&#34;box-item animate&#34;&gt;
    &lt;h3&gt;Genbeta Dev&lt;/h3&gt;
    &lt;figure&gt;
      &lt;svg width=&#34;300&#34; height=&#34;100&#34; viewBox=&#34;0 0 2012 187&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34; preserveAspectRatio=&#34;none meet&#34;&gt;
        &lt;path d=&#34;M174 181.838c23.6-53.014 35.403-79.643 35.403-79.892 0-1.112-.866-1.668-2.595-1.668h-66.545c-2.224 0-3.707.805-4.45 2.41l-26.506 59.687h-20.76c-8.526 0-12.79-3.583-12.79-10.75 0-4.94 2.41-12.727 7.23-23.356l8.896-20.206c4.324-9.76 8.402-16.558 12.234-20.39 5.56-5.808 12.727-8.712 21.502-8.712h77.666c2.224 0 3.707-.742 4.45-2.224l7.6-17.24c.12-.246.185-.49.185-.74 0-1.113-.865-1.67-2.594-1.67H94.293c-18.415 0-35.775 6.428-52.087 19.28-14.83 11.74-26.322 26.505-34.477 44.3C2.91 131.174.5 141.06.5 150.33c0 11 3.458 19.526 10.38 25.58 6.55 5.56 15.446 8.34 26.692 8.34H169.55c2.225 0 3.708-.802 4.45-2.41zM398.658 123.634c5.312-11.738 7.97-17.67 7.97-17.794 0-1.234-.804-1.854-2.41-1.854H296.69c-10.046 0-20.46 22.058-6.89 22.058h104.597c2.224 0 3.644-.802 4.263-2.41z&#34; id=&#34;Shape&#34; /&gt;
        &lt;path d=&#34;M372.893 181.838l7.6-17.053c0-.247.06-.493.185-.742 0-1.112-.866-1.668-2.595-1.668h-84.34c-8.526 0-12.79-3.583-12.79-10.75 0-4.94 2.41-12.727 7.23-23.356l8.896-20.206c4.323-9.76 8.4-16.558 12.233-20.39 5.56-5.808 12.726-8.712 21.502-8.712h84.34c2.346 0 3.83-.742 4.45-2.224l7.6-17.24c.12-.246.184-.49.184-.74 0-1.113-.806-1.67-2.41-1.67H299.49c-18.416 0-35.776 6.428-52.088 19.28-14.954 11.74-26.446 26.505-34.478 44.3-4.82 10.505-7.23 20.39-7.23 29.66 0 11 3.46 19.526 10.38 25.58 6.55 5.56 15.447 8.34 26.693 8.34h125.49c2.348 0 3.894-.802 4.636-2.41zM613.307 181.838l54.497-122.34c.122-.246.186-.49.186-.74 0-1.113-.805-1.67-2.41-1.67H640c-2.35 0-3.832.807-4.45 2.41l-23.355 52.273L482.812 59.5c-3.957-1.605-7.108-2.41-9.454-2.41h-28.545c-2.225 0-3.708.805-4.45 2.41l-54.496 122.338c-.124.25-.185.495-.185.74 0 1.113.863 1.67 2.595 1.67h25.58c2.224 0 3.707-.803 4.448-2.41l22.8-51.347 126.973 50.976c4.57 1.854 8.278 2.78 11.122 2.78h29.658c2.346.002 3.83-.8 4.45-2.408zM821.8 173.126c11.243-7.415 19.278-16.497 24.097-27.248 2.224-4.82 3.336-9.39 3.336-13.717 0-6.672-2.41-12.108-7.23-16.31 8.28-3.83 15.262-8.713 20.947-14.645 6.795-7.29 10.195-14.83 10.195-22.614 0-7.414-3.15-13.035-9.454-16.867-5.313-3.087-11.925-4.634-19.832-4.634H684.632c-2.35 0-3.832.805-4.448 2.41-36.456 81.808-54.682 122.833-54.682 123.08 0 1.112.802 1.668 2.41 1.668h159.41c11.74 0 23.232-3.707 34.478-11.122zm-36.146-72.29c-4.45 2.102-9.083 3.15-13.902 3.15h-38.04l-9.715 22.058h37.93c7.416 0 11.123 3.337 11.123 10.01 0 6.55-2.905 12.576-8.712 18.073-5.81 5.5-11.988 8.25-18.537 8.25h-37.998l37.073-83.414h38c9.268 0 13.9 2.78 13.9 8.34 0 1.237-.31 2.595-.926 4.078-1.855 3.958-5.255 7.108-10.196 9.455zM1051.132 123.634c5.312-11.738 7.97-17.67 7.97-17.794 0-1.234-.804-1.854-2.41-1.854H946.23c-10.045 0-25.154 22.058-11.584 22.058h112.225c2.223 0 3.642-.802 4.262-2.41z&#34; id=&#34;Shape&#34; /&gt;
        &lt;path d=&#34;M1027.367 181.838l7.6-17.053c0-.247.06-.493.186-.742 0-1.112-.866-1.668-2.595-1.668h-84.34c-8.527 0-12.79-3.583-12.79-10.75 0-4.94 2.41-12.727 7.228-23.356l8.897-20.206c4.324-9.76 8.402-16.558 12.234-20.39 5.56-5.808 12.726-8.712 21.502-8.712h84.34c2.345 0 3.828-.742 4.447-2.224l7.6-17.24c.122-.246.186-.49.186-.74 0-1.113-.805-1.67-2.41-1.67h-125.49c-18.415 0-35.775 6.428-52.087 19.28-14.953 11.74-26.446 26.505-34.478 44.3-4.82 10.505-7.23 20.39-7.23 29.66 0 11 3.46 19.526 10.382 25.58 6.548 5.56 15.446 8.34 26.692 8.34h125.49c2.347 0 3.893-.802 4.635-2.41zM1265.556 78.962c2.225 0 3.707-.742 4.45-2.224 5.19-11.74 7.784-17.73 7.784-17.98 0-1.112-.805-1.668-2.41-1.668h-178.875c-2.224 0-3.707.806-4.448 2.41-5.19 11.742-7.786 17.673-7.786 17.795 0 1.112.864 1.668 2.596 1.668h51.716c-30.648 68.833-45.97 103.372-45.97 103.618 0 1.113.742 1.67 2.225 1.67h67.1c2.1 0 3.523-.803 4.264-2.41l45.786-102.877h53.57zM1391.417 58.016c-.495-.617-1.297-.927-2.41-.927h-19.648c-1.238 0-2.29.31-3.152.926l-187.216 122.34c-1.36.865-2.04 1.667-2.04 2.41 0 .99.99 1.482 2.967 1.482h198.15l-14.014-21.874h-130.382l91.57-60.613 52.827 82.488c.372.62 85.268 0 85.268 0 2.965 0 4.448-.927 4.448-2.78 0-.37-25.458-41.52-76.37-123.452zM1546.2 181.423c3.59-3.59 5.385-7.888 5.385-12.9 0-5.008-1.795-9.31-5.384-12.898-3.588-3.59-7.89-5.384-12.898-5.384-5.01 0-9.31 1.796-12.9 5.385-3.588 3.59-5.383 7.89-5.383 12.9 0 5.01 1.794 9.31 5.383 12.898 3.59 3.59 7.89 5.384 12.9 5.384 5.008 0 9.31-1.794 12.898-5.384zM1548.2 83.95c3.59-3.588 5.385-7.887 5.385-12.898 0-5.01-1.795-9.31-5.384-12.9-3.588-3.588-7.89-5.383-12.898-5.383-5.01 0-9.31 1.794-12.9 5.383-3.588 3.59-5.383 7.89-5.383 12.9 0 5.01 1.794 9.31 5.383 12.898 3.59 3.59 7.89 5.385 12.9 5.385 5.008 0 9.31-1.794 12.898-5.384zM1691.2 181.536h20.976V.5H1691.2v55.746c-2.617-.298-4.412-.485-5.383-.56-7.778-.823-13.76-1.235-17.946-1.235-13.684 0-25.163 3.293-34.435 9.872-20.34 14.582-30.51 36.566-30.51 65.954 0 14.357 3.103 26.583 9.31 36.678 7.404 12.04 17.872 18.06 31.407 18.06 9.198 0 18.357-3.293 27.48-9.872 8.077-5.833 14.768-13.085 20.08-21.76v28.154zm-17.497-29.612c-8.9 8.75-17.273 13.124-25.125 13.124-8.076 0-14.17-4.523-18.283-13.572-3.14-6.954-4.71-14.955-4.71-24.003 0-15.104 3.625-27.817 10.88-38.136 8.224-11.59 19.59-17.386 34.097-17.386 6.355 0 13.236.974 20.64 2.917v53.728c-5.012 8.972-10.845 16.75-17.5 23.33zM1855.21 154.167c-16.303 8.974-31.183 13.46-44.643 13.46-7.554 0-14.284-1.794-20.19-5.384-6.432-3.887-11.404-9.683-14.918-17.386-3.217-6.955-4.824-14.47-4.824-22.545h86.368v-4.487c0-18.693-3.477-33.61-10.432-44.754-8.45-13.533-21.424-20.3-38.92-20.3-11.217 0-21.407 2.954-30.566 8.86-9.16 5.908-16.32 14.245-21.48 25.013-4.935 10.246-7.403 21.087-7.403 32.528 0 11.89 2.692 23.034 8.076 33.426 11.065 21.687 28.265 32.528 51.595 32.528 14.88 0 30.658-3.962 47.334-11.89v-19.067zm-48.456-83.9c9.047 0 16.04 3.43 20.975 10.288 4.41 6.04 6.617 13.754 6.617 23.146v3.02h-62.477c5.01-24.3 16.638-36.453 34.884-36.453z&#34; id=&#34;Shape&#34; /&gt;
        &lt;path d=&#34;M1956.628 181.536l54.85-125.29h-20.937l-43.8 99.21-42.956-99.21h-22.864l54.4 125.29h21.308z&#34; /&gt;
      &lt;/svg&gt;
    &lt;/figure&gt;

    &lt;p&gt;Blog sobre programación.&lt;/p&gt;

    &lt;div class=&#34;tags&#34;&gt;
      &lt;a title=&#34;Genbeta Dev&#34; target=&#34;_blank&#34; href=&#34;http://www.genbetadev.com/&#34;&gt;Website&lt;/a&gt;
    &lt;/div&gt;
  &lt;/article&gt;

  &lt;article class=&#34;box-item animate&#34;&gt;
    &lt;h3&gt;The Geek Stuff&lt;/h3&gt;
    &lt;figure&gt;
      &lt;img sizes=&#34;(min-width: 100px) 100px, 100vw&#34; on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/thegeekstuff.gif&#34; width=&#34;100&#34; height=&#34;100&#34;&gt;&lt;/img&gt;
    &lt;/figure&gt;

    &lt;p&gt;I will be posting instruction guides, How-Tos, troubleshooting tips and tricks Linux and open source technologies. My focus is to write articles that will either teach you or help you resolve a problem.&lt;/p&gt;

    &lt;div class=&#34;tags&#34;&gt;
      &lt;a title=&#34;The Geek Stuff&#34; target=&#34;_blank&#34; href=&#34;http://www.thegeekstuff.com/&#34;&gt;Website&lt;/a&gt;
    &lt;/div&gt;
  &lt;/article&gt;

  &lt;article class=&#34;box-item animate&#34;&gt;
    &lt;h3&gt;Texblog - &lt;em&gt;because LaTeX matters&lt;/em&gt;&lt;/h3&gt;

    &lt;p&gt;My intention is to provide valuable tips and tricks for your daily LaTeX editing. In addition, I’ll try to give answers to questions which are not easily found on the web.&lt;/p&gt;

    &lt;div class=&#34;tags&#34;&gt;
      &lt;a title=&#34;texblog&#34; target=&#34;_blank&#34; href=&#34;http://texblog.org/&#34;&gt;Website&lt;/a&gt;
    &lt;/div&gt;
  &lt;/article&gt;

  &lt;article class=&#34;box-item animate&#34;&gt;
    &lt;h3&gt;Asyncified!&lt;/h3&gt;
    &lt;figure&gt;
      &lt;img sizes=&#34;(min-width: 100px) 100px, 100vw&#34; on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/asyncified.jpg&#34; width=&#34;100&#34; height=&#34;100&#34;&gt;&lt;/img&gt;
    &lt;/figure&gt;

    &lt;p&gt;Hi, my name is Yuval Itzchakov, I&#39;m 27 years old from Israel. I&#39;ve been programming for about the last 4 years, started out in the .NET stack and slowly broadening horizions to Python and some C++. I love learning internals of systems and exploring what happens under the covers.&lt;/p&gt;

    &lt;div class=&#34;tags&#34;&gt;
      &lt;a title=&#34;Asyncified!&#34; target=&#34;_blank&#34; href=&#34;http://yuvalitzchakov.github.io/&#34;&gt;Website&lt;/a&gt;
    &lt;/div&gt;
  &lt;/article&gt;

  &lt;article class=&#34;box-item animate&#34;&gt;
    &lt;h3&gt;Yegor Bugayenko&lt;/h3&gt;
    &lt;figure&gt;
      &lt;img sizes=&#34;(min-width: 100px) 100px, 100vw&#34; on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/yegor.png&#34; width=&#34;100&#34; height=&#34;100&#34;&gt;&lt;/img&gt;
    &lt;/figure&gt;

    &lt;p&gt;I&#39;m Yegor Bugayenko (Russian: Его́р Бугае́нко), a programmer, a founder, an investor, and a philanthropist.&lt;/p&gt;

    &lt;div class=&#34;tags&#34;&gt;
      &lt;a title=&#34;Yegor Bugayenko&#34; target=&#34;_blank&#34; href=&#34;http://www.yegor256.com/&#34;&gt;Website&lt;/a&gt;
    &lt;/div&gt;
  &lt;/article&gt;
&lt;/div&gt;

&lt;h3 id=&#34;security-1&#34;&gt;Security&lt;/h3&gt;

&lt;div class=&#34;row-post flex-grid&#34;&gt;
  &lt;article class=&#34;box-item animate&#34;&gt;
    &lt;h3&gt;JerryGamblin.com&lt;/h3&gt;
    &lt;figure&gt;
      &lt;img sizes=&#34;(min-width: 100px) 100px, 100vw&#34; on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/jerrygamblin.jpg&#34; width=&#34;100&#34; height=&#34;100&#34;&gt;&lt;/img&gt;
    &lt;/figure&gt;

    &lt;p&gt;Security Advocate. Problem Solver. Hacker. Ebullient Communicator.&lt;/p&gt;

    &lt;div class=&#34;tags&#34;&gt;
      &lt;a title=&#34;JerryGamblin.com&#34; target=&#34;_blank&#34; href=&#34;http://jerrygamblin.com/&#34;&gt;Website&lt;/a&gt;
    &lt;/div&gt;
  &lt;/article&gt;

  &lt;article class=&#34;box-item animate&#34;&gt;
    &lt;h3&gt;Open Whisper Systems Blog&lt;/h3&gt;

    &lt;p&gt;Open Whisper Systems is both a large community of volunteer Open Source contributors, as well as a small team of dedicated grant-funded developers. Together, we&#39;re working to advance the state of the art for secure communication, while simultaneously making it easy for everyone to use.&lt;/p&gt;

    &lt;div class=&#34;tags&#34;&gt;
      &lt;a title=&#34;Open Whisper Systems Blog&#34; target=&#34;_blank&#34; href=&#34;http://www.whispersystems.org/blog/&#34;&gt;Website&lt;/a&gt;
    &lt;/div&gt;
  &lt;/article&gt;

  &lt;article class=&#34;box-item animate&#34;&gt;
    &lt;h3&gt;Schneier on Security&lt;/h3&gt;
    &lt;figure&gt;
      &lt;img sizes=&#34;(min-width: 100px) 100px, 100vw&#34; on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/bruce.jpg&#34; width=&#34;100&#34; height=&#34;129&#34;&gt;&lt;/img&gt;
    &lt;/figure&gt;

    &lt;p&gt;Bruce Schneier is an internationally renowned security technologist, called a &#34;security guru&#34; by The Economist. He is the author of 13 books--including Data and Goliath: The Hidden Battles to Collect Your Data and Control Your World-- as well as hundreds of articles, essays, and academic papers.&lt;/p&gt;

    &lt;div class=&#34;tags&#34;&gt;
      &lt;a title=&#34;Schneier on Security&#34; target=&#34;_blank&#34; href=&#34;https://www.schneier.com/blog/&#34;&gt;Website&lt;/a&gt;
    &lt;/div&gt;
  &lt;/article&gt;

  &lt;article class=&#34;box-item animate&#34;&gt;
    &lt;h3&gt;Krebs on Security&lt;/h3&gt;
    &lt;figure&gt;
      &lt;img sizes=&#34;(min-width: 100px) 100px, 100vw&#34; on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/krebs.png&#34; width=&#34;100&#34; height=&#34;120&#34;&gt;&lt;/img&gt;
    &lt;/figure&gt;

    &lt;p&gt;Brian Krebs worked as a reporter for The Washington Post from 1995 to 2009, authoring more than 1,300 blog posts for the Security Fix blog, as well as hundreds of stories for washingtonpost.com and The Washington Post newspaper, including eight front-page stories in the dead-tree edition and a Post Magazine cover piece on botnet operators. In 2014, he was profiled in The New York Times, Business Week and by Poynter.org. More recently, he was invited to an “Ask Me Anything” discussion on Reddit about investigative reporting.&lt;/p&gt;

    &lt;div class=&#34;tags&#34;&gt;
      &lt;a title=&#34;Krebs on Security&#34; target=&#34;_blank&#34; href=&#34;http://krebsonsecurity.com/&#34;&gt;Website&lt;/a&gt;
    &lt;/div&gt;
  &lt;/article&gt;

  &lt;article class=&#34;box-item animate&#34;&gt;
    &lt;h3&gt;ImperialViolet&lt;/h3&gt;

    &lt;p&gt;Adam Langley&#39;s Weblog&lt;/p&gt;

    &lt;div class=&#34;tags&#34;&gt;
      &lt;a title=&#34;ImperialViolet&#34; target=&#34;_blank&#34; href=&#34;http://www.imperialviolet.org/&#34;&gt;Website&lt;/a&gt;
    &lt;/div&gt;
  &lt;/article&gt;

  &lt;article class=&#34;box-item animate&#34;&gt;
    &lt;h3&gt;Trend Micro Simply Security&lt;/h3&gt;
    &lt;figure&gt;
      &lt;img sizes=&#34;(min-width: 100px) 100px, 100vw&#34; on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/trendmicro.png&#34; width=&#34;100&#34; height=&#34;100&#34;&gt;&lt;/img&gt;
    &lt;/figure&gt;

    &lt;p&gt;For nearly 30 years, Trend Micro’s unwavering vision has been to make the world safe for exchanging digital information. Security is our entire focus, and it shows. This single-minded passion has inspired our innovations that keep up with the bad guys despite a changing IT landscape, riskier user behavior, and constantly evolving threats.&lt;/p&gt;

    &lt;div class=&#34;tags&#34;&gt;
      &lt;a title=&#34;Trend Micro Simply Security&#34; target=&#34;_blank&#34; href=&#34;http://blog.trendmicro.com/&#34;&gt;Website&lt;/a&gt;
    &lt;/div&gt;
  &lt;/article&gt;

  &lt;article class=&#34;box-item animate&#34;&gt;
    &lt;h3&gt;Pentester.es&lt;/h3&gt;
    &lt;figure&gt;
      &lt;img sizes=&#34;(min-width: 100px) 100px, 100vw&#34; on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/pentester.png&#34; width=&#34;100&#34; height=&#34;100&#34;&gt;&lt;/img&gt;
    &lt;/figure&gt;

    &lt;p&gt;Jose is one of the individuals who have earned the GIAC Security Expert (GSE) designation. He is a SANS Institute community instructor for penetration testing courses and a regular speaker at security conferences.&lt;/p&gt;

    &lt;div class=&#34;tags&#34;&gt;
      &lt;a title=&#34;Pentester.es&#34; target=&#34;_blank&#34; href=&#34;http://www.pentester.es/&#34;&gt;Website&lt;/a&gt;
    &lt;/div&gt;
  &lt;/article&gt;

  &lt;article class=&#34;box-item animate&#34;&gt;
    &lt;h3&gt;Un informático en el lado del mal&lt;/h3&gt;
    &lt;figure&gt;
      &lt;img sizes=&#34;(min-width: 100px) 100px, 100vw&#34; on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/chema.jpg&#34; width=&#34;100&#34; height=&#34;100&#34;&gt;&lt;/img&gt;
    &lt;/figure&gt;

    &lt;p&gt;Seguridad informática, hacking, pentesting, ldap injection, blind ldap injection, sql injection, blind sql injection, heavy queries, connection string parameter pollution, foca, evil foca, latch, dust rss, metashield protector, faast, metadatos, libros de seguridad informática, informática 64, recover messages, 0xword, cálico electrónico, eleven paths, telefónica y chema alonso. las opiniones son de los autores de los artículos y las mías son mías personales.&lt;/p&gt;

    &lt;div class=&#34;tags&#34;&gt;
      &lt;a title=&#34;Un informático en el lado del mal&#34; target=&#34;_blank&#34; href=&#34;http://www.elladodelmal.com/&#34;&gt;Website&lt;/a&gt;
    &lt;/div&gt;
  &lt;/article&gt;

  &lt;article class=&#34;box-item animate&#34;&gt;
    &lt;h3&gt;MuySeguridad&lt;/h3&gt;
    &lt;figure&gt;
      &lt;img sizes=&#34;(min-width: 100px) 100px, 100vw&#34; on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/muyseguridad.jpg&#34; width=&#34;100&#34; height=&#34;17&#34;&gt;&lt;/img&gt;
    &lt;/figure&gt;

    &lt;p&gt;Noticias sobre seguridad, virus, antivirus, hacking, phising, spam, ataques, timos, estafas, malware y otras amenazas de seguridad informática.&lt;/p&gt;

    &lt;div class=&#34;tags&#34;&gt;
      &lt;a title=&#34;MuySeguridad&#34; target=&#34;_blank&#34; href=&#34;http://muyseguridad.net/&#34;&gt;Website&lt;/a&gt;
    &lt;/div&gt;
  &lt;/article&gt;

  &lt;article class=&#34;box-item animate&#34;&gt;
    &lt;h3&gt;Security By Default&lt;/h3&gt;
    &lt;figure&gt;
      &lt;img sizes=&#34;(min-width: 100px) 100px, 100vw&#34; on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/securitybydefault.png&#34; width=&#34;100&#34; height=&#34;37&#34;&gt;&lt;/img&gt;
    &lt;/figure&gt;

    &lt;p&gt;Después de mucho tiempo hablando sobre la posibilidad de crear un blog íntegramente sobre seguridad informática, nos hemos decidido a ponernos en marcha y crear un espacio donde poder compartir experiencias y hablar de los aspectos técnicos relacionados con la seguridad informática. &lt;/p&gt;

    &lt;div class=&#34;tags&#34;&gt;
      &lt;a title=&#34;Security By Default&#34; target=&#34;_blank&#34; href=&#34;http://www.securitybydefault.com/&#34;&gt;Website&lt;/a&gt;
    &lt;/div&gt;
  &lt;/article&gt;

  &lt;article class=&#34;box-item animate&#34;&gt;
    &lt;h3&gt;Lifehacker&lt;/h3&gt;
    &lt;figure&gt;
      &lt;img sizes=&#34;(min-width: 100px) 100px, 100vw&#34; on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/lifehacker.png&#34; width=&#34;100&#34; height=&#34;100&#34;&gt;&lt;/img&gt;
    &lt;/figure&gt;

    &lt;p&gt;Tips, tricks, and downloads for getting things done.&lt;/p&gt;

    &lt;div class=&#34;tags&#34;&gt;
      &lt;a title=&#34;Lifehacker&#34; target=&#34;_blank&#34; href=&#34;http://lifehacker.com/tag/security&#34;&gt;Website&lt;/a&gt;
    &lt;/div&gt;
  &lt;/article&gt;

  &lt;article class=&#34;box-item animate&#34;&gt;
    &lt;h3&gt;Hispasec @unaaldia&lt;/h3&gt;

    &lt;p&gt;Servicio gratuito de noticias y análisis sobre seguridad en español.&lt;/p&gt;

    &lt;div class=&#34;tags&#34;&gt;
      &lt;a title=&#34;Hispasec @unaaldia&#34; target=&#34;_blank&#34; href=&#34;http://unaaldia.hispasec.com/&#34;&gt;Website&lt;/a&gt;
    &lt;/div&gt;
  &lt;/article&gt;

  &lt;article class=&#34;box-item animate&#34;&gt;
    &lt;h3&gt;Ars Technica » Risk Assessment&lt;/h3&gt;
    &lt;figure id=&#34;medium&#34;&gt;
      &lt;svg data-name=&#34;Layer 2&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34; width=&#34;6.1in&#34; height=&#34;2in&#34; viewBox=&#34;0 0 436.8 144.3&#34;&gt;
        &lt;circle cx=&#34;72.2&#34; cy=&#34;72.2&#34; r=&#34;72.2&#34; fill=&#34;#ff4e00&#34; /&gt;
        &lt;g fill=&#34;#fff&#34;&gt;
          &lt;path d=&#34;M46.6 94.2l-.9-5.9a20.8 20.8 0 0 1-15.6 6.8c-8 0-13-4.8-13-12.3 0-11 9.4-15.4 27.9-17.3v-1.9c0-5.6-3.3-7.5-8.4-7.5s-10.5 1.7-15.3 3.8l-1.1-7.1c5.3-2.1 10.3-3.7 17.1-3.7 10.7 0 15.9 4.3 15.9 14.2v30.9h-6.7zM45 71.8c-16.3 1.6-19.7 6-19.7 10.6s2.4 5.9 6.6 5.9 9.4-2.4 13.1-6.2V71.8zM72.4 68.1v26.1h-8.2V50.1h6.6l1.4 9c3.1-5 8.2-9.5 15.5-9.9l1.3 7.9c-7.4.3-13.6 5.2-16.6 11zM109.7 95.1a36.2 36.2 0 0 1-16.1-4.2l1.2-7.8a27.6 27.6 0 0 0 15.6 5.1c5.6 0 9-2.1 9-5.8s-2.5-5.6-10.5-7.5c-10.4-2.6-14.5-5.7-14.5-13.6s5.9-12.2 15.6-12.2a35.7 35.7 0 0 1 14.5 3l-1.3 7.8a28.2 28.2 0 0 0-13.4-3.8c-5 0-7.6 1.9-7.6 5.1s2.2 4.6 9.2 6.4c10.9 2.8 15.8 5.9 15.8 14.3s-6.1 13.2-17.5 13.2z&#34; /&gt;
        &lt;/g&gt;
        &lt;g fill=&#34;#fff&#34;&gt;
          &lt;path d=&#34;M219.3 83.9c-4.4 3.7-8.4 5-12.8 5-7.7 0-12.7-5.3-13.5-14h24.9l.9-5.5H193c.8-8.7 5.7-14.1 12.9-14.1 4.9 0 8.8 1.7 12.9 5.1l1-5.9a23 23 0 0 0-13.7-4.3c-10.7 0-19.2 7.8-19.2 21.9S195.2 94 205.8 94a22.1 22.1 0 0 0 14.3-4.8zM170.5 56.3v37h-5.8v-37h-13.4V51h32.2l.9 5.3h-13.9zM245.2 94c-11.9 0-19.5-8.8-19.5-21.8s7.8-22 19.6-22a20.3 20.3 0 0 1 12 3.5l-.9 5.9a18.1 18.1 0 0 0-11.2-4.1c-8.6 0-13.6 6.5-13.6 16.6s5.1 16.6 13.6 16.6a20.1 20.1 0 0 0 11.9-4.2l.9 5.4a22.3 22.3 0 0 1-12.8 4.1zM292.7 93.2V73.7h-21.4v19.5h-5.8V51h5.8v17.5h21.4V51h5.8v42.2h-5.8zM335.7 93.2l-23.2-32.9v32.9h-5.3V51h5.1l22.4 31.6V51h5.3v42.2h-4.3zM349.1 93.2V51h5.8v42.2h-5.8zM381.8 94c-11.9 0-19.5-8.8-19.5-21.8s7.8-22 19.6-22a20.3 20.3 0 0 1 12 3.5l-.9 5.9a18.1 18.1 0 0 0-11.2-4.1c-8.6 0-13.6 6.5-13.6 16.6s5.1 16.6 13.6 16.6a20.1 20.1 0 0 0 11.9-4.2l.9 5.4a22.3 22.3 0 0 1-12.8 4.1zM414.8 50.8h5.8l16.3 41.6-5.6 1.2-5-13.1h-17.4l-4.8 12.7h-5.8zm-4 24.7h13.5l-6.8-17.9z&#34; /&gt;
        &lt;/g&gt;
      &lt;/svg&gt;
    &lt;/figure&gt;

    &lt;p&gt;Serving the Technologist for more than a decade. IT news, reviews, and analysis.&lt;/p&gt;

    &lt;div class=&#34;tags&#34;&gt;
      &lt;a title=&#34;Ars Technica » Risk Assessment&#34; target=&#34;_blank&#34; href=&#34;http://arstechnica.com/security&#34;&gt;Website&lt;/a&gt;
    &lt;/div&gt;
  &lt;/article&gt;
&lt;/div&gt;</description>
        </item>
        
        <item>
            <title>10 de las Mejores Herramientas en la Línea de Comandos II</title>
            <link>https://elbauldelprogramador.com/top-10-de-herramientas-que-son-mejores-en-la-linea-de-comandos-ii/</link>
            <pubDate>Tue, 28 Mar 2017 20:25:48 +0100</pubDate>
            
            <guid>https://elbauldelprogramador.com/top-10-de-herramientas-que-son-mejores-en-la-linea-de-comandos-ii/</guid>
            <description>&lt;figure&gt;
    &lt;img on=&#34;tap:lightbox1&#34; sizes=&#34;(min-width: 640px) 640px, 100vw&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; title=&#34;Top 10 de las Mejores Herramientas en la Línea de Comandos&#34; src=&#34;https://elbauldelprogramador.com/img/2012/08/original1.jpg&#34; alt=&#34;Comandos&#34; width=&#34;640px&#34; height=&#34;360px&#34; /&gt;
&lt;/figure&gt;

&lt;p&gt;En esta segunda entrega revisaremos otras &lt;a href=&#34;https://elbauldelprogramador.com/top-10-de-herramientas-que-son-mejores-en-la-linea-de-comandos/&#34;&gt;diez herramientas&lt;/a&gt; que podemos usar en nuestra &lt;strong&gt;terminal de Linux&lt;/strong&gt; y que nos ahorrarán tiempo y esfuerzo en muchas tareas cotidianas ampliando así nuestra lista de imprescindibles.&lt;/p&gt;

&lt;h1 id=&#34;11-lshw-http-www-ezix-org-project-wiki-hardwarelister&#34;&gt;11. &lt;a href=&#34;http://www.ezix.org/project/wiki/HardwareLiSter&#34;&gt;lshw&lt;/a&gt;&lt;/h1&gt;

&lt;p&gt;Se trata, como se puede deducir de su nombre, de un &lt;strong&gt;Hardware Lister&lt;/strong&gt;, que nos permitirá conocer cualquier detalle sobre el hardware de nuestra máquina.
Si tu distribución es basada en Debian (como Ubuntu) posiblemente lo tengas ya instalado, de no ser así en su página oficial ofrecen todos los detalles.&lt;/p&gt;

&lt;p&gt;Aunque la mayoría de la información se puede consular en  ficheros del sistema como &lt;code&gt;/proc/meminfo&lt;/code&gt; que es de dondel el propio programa extrae la información, a veces no está lo más legible posible y no en el mismo lugar, por eso esta es tan interesante.&lt;/p&gt;

&lt;p&gt;Veamos por ejemplo un extracto del informe de memoria que hace:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;$ lshw -C memory
...
*-cache:0
       descripción: L1 caché
       id físico: 5
       ranura: L1-Cache
       tamaño: 64KiB
       capacidad: 64KiB
       capacidades: internal write-back data
       configuración: &lt;span class=&#34;nv&#34;&gt;level&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;1
  *-cache:1
       descripción: L2 caché
       id físico: 6
       ranura: L2-Cache
       tamaño: 4MiB
       capacidad: 4MiB
       capacidades: internal write-back instruction
       configuración: &lt;span class=&#34;nv&#34;&gt;level&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;2
...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;!--ad--&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Una sencilla forma de conocer la caché de nuestro procesador (entre otras muchas cosas relacionadas con memoria).&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Para su ejecución solo necesitamos especificarle el tipo de información con la opcion `&lt;code&gt;-C&lt;/code&gt;, en este caso &lt;code&gt;memory&lt;/code&gt;. Se pueden consultar todas las opciones en la ayuda.&lt;/p&gt;

&lt;p&gt;Además podemos hacer cosas como extraer la información en formato HTML (también XML), que aunque no tiene un diseño muy trabajado, nos puede ser útil.&lt;/p&gt;

&lt;p&gt;Además también dispone de una interfaz para escritorio, llamada &lt;code&gt;lshw-gtk&lt;/code&gt; (aunque eso nos interesa menos).&lt;/p&gt;

&lt;h1 id=&#34;12-htop-https-linux-die-net-man-1-htop&#34;&gt;12 &lt;a href=&#34;https://linux.die.net/man/1/htop&#34;&gt;htop&lt;/a&gt;&lt;/h1&gt;

&lt;p&gt;Como un alternativa a &lt;code&gt;top&lt;/code&gt; de la anterior entrega (que se nos puede quedar corto en algunas ocasiones) tenemos &lt;a href=&#34;https://linux.die.net/man/1/htop&#34;&gt;htop&lt;/a&gt;, que no es más que otro visor de procesos, pero &lt;strong&gt;interactivo&lt;/strong&gt;. Este tendremos que instalarlo, ya que no suele venir por defecto, pero merece la pena.&lt;/p&gt;

&lt;p&gt;No solo ofrece una visión de la memoria de nuestros sistema en tiempo real sino también el número de tareas, hebras y carga del sistema, incluso el tiempo que lleva encendido el equipo.&lt;/p&gt;

&lt;figure&gt;
        &lt;a href=&#34;https://elbauldelprogramador.com/img/htop.png&#34;&gt;
          &lt;img
            on=&#34;tap:lightbox1&#34;
            role=&#34;button&#34;
            tabindex=&#34;0&#34;
            layout=&#34;responsive&#34;
            src=&#34;https://elbauldelprogramador.com/img/htop.png&#34;
            alt=&#34;HTOP&#34;
            title=&#34;HTOP&#34;
            sizes=&#34;(min-width: 645px) 645px, 100vw&#34;
            width=&#34;645&#34;
            height=&#34;194&#34;&gt;
          &lt;/img&gt;
        &lt;/a&gt;
&lt;/figure&gt;

&lt;p&gt;Y lo mejor de todo es que podemos navegar por los procesos y realizar ciertas acciones sobre ellos, como matarlos con &lt;code&gt;kill&lt;/code&gt;, aquí &lt;code&gt;F9&lt;/code&gt;, directamente desde el propio programa.&lt;/p&gt;

&lt;p&gt;Pero si quieres algo más rápido como para por ejemplo, ver la memoria que tienes libre y usada para &lt;em&gt;swap&lt;/em&gt; siempre puedes usar &lt;a href=&#34;https://linux.die.net/man/1/free&#34;&gt;free&lt;/a&gt;, instalada por defecto en la mayoría de las distros.&lt;/p&gt;

&lt;p&gt;Por ejemplo:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;$ free
              total        used        free      shared  buff/cache   available
Memoria:     &lt;span class=&#34;m&#34;&gt;4036232&lt;/span&gt;     &lt;span class=&#34;m&#34;&gt;3014980&lt;/span&gt;      &lt;span class=&#34;m&#34;&gt;177508&lt;/span&gt;      &lt;span class=&#34;m&#34;&gt;243164&lt;/span&gt;      &lt;span class=&#34;m&#34;&gt;843744&lt;/span&gt;      470464
Swap:       &lt;span class=&#34;m&#34;&gt;7999484&lt;/span&gt;     &lt;span class=&#34;m&#34;&gt;2502164&lt;/span&gt;     5497320
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h1 id=&#34;13-fdisk-http-man-cx-fdisk&#34;&gt;13 &lt;a href=&#34;http://man.cx/fdisk&#34;&gt;fdisk&lt;/a&gt;&lt;/h1&gt;

&lt;p&gt;Aunque es una herramienta completa (merecería un post aparte) para realizar particiones en nuestro disco también nos puede servir sólo para consultar información relacionada, muy útil a si tenemos varios discos, por ejemplo, para ver nomenclatura, tamaños, etc, y no podemos dejar de mencionarla.&lt;/p&gt;

&lt;p&gt;Ejemplo:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;fdisk -l
Disposit.  Inicio     Start     Final  Sectores   Size Id Tipo
/dev/sdb1  *           &lt;span class=&#34;m&#34;&gt;2048&lt;/span&gt;    &lt;span class=&#34;m&#34;&gt;206847&lt;/span&gt;    &lt;span class=&#34;m&#34;&gt;204800&lt;/span&gt;   100M  &lt;span class=&#34;m&#34;&gt;7&lt;/span&gt; HPFS/NTFS/exFAT
/dev/sdb2            &lt;span class=&#34;m&#34;&gt;206848&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;239460410&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;239253563&lt;/span&gt; 114,1G  &lt;span class=&#34;m&#34;&gt;7&lt;/span&gt; HPFS/NTFS/exFAT
/dev/sdb3         &lt;span class=&#34;m&#34;&gt;239462398&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;488396799&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;248934402&lt;/span&gt; 118,7G  &lt;span class=&#34;m&#34;&gt;5&lt;/span&gt; Extendida
/dev/sdb5         &lt;span class=&#34;m&#34;&gt;484225024&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;488396799&lt;/span&gt;   &lt;span class=&#34;m&#34;&gt;4171776&lt;/span&gt;     2G &lt;span class=&#34;m&#34;&gt;82&lt;/span&gt; Linux swap / Solaris
/dev/sdb6         &lt;span class=&#34;m&#34;&gt;239462400&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;484225023&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;244762624&lt;/span&gt; 116,7G &lt;span class=&#34;m&#34;&gt;83&lt;/span&gt; Linux
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h1 id=&#34;14-df-https-linux-die-net-man-1-df-du-https-linux-die-net-man-1-du-y-ncdu-https-dev-yorhel-nl-ncdu-man&#34;&gt;14 &lt;a href=&#34;https://linux.die.net/man/1/df&#34;&gt;df&lt;/a&gt;, &lt;a href=&#34;https://linux.die.net/man/1/du&#34;&gt;du&lt;/a&gt; y &lt;a href=&#34;https://dev.yorhel.nl/ncdu/man&#34;&gt;ncdu&lt;/a&gt;&lt;/h1&gt;

&lt;p&gt;El espacio libre que tenemos en nuestro sistema siempre es algo a tener en cuenta y para comprobarlo no necesitamos ninguna herramienta gráfica, mucho más rápido y eficiente desde terminal, veamos algunas utilidades.&lt;/p&gt;

&lt;p&gt;Con &lt;a href=&#34;https://linux.die.net/man/1/df&#34;&gt;df&lt;/a&gt; podemos ver información relevante sobre nuestro sistema de ficheros, como el porcentaje de ocupación, entre otros. Así podremos comprobar de un vistazo el estado de las particiones, por si tuviéramos que realizar una reasignación de espacio.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;$ df
S.ficheros     bloques de 1K   Usados Disponibles Uso% Montado en
udev                 &lt;span class=&#34;m&#34;&gt;1997292&lt;/span&gt;        &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;     &lt;span class=&#34;m&#34;&gt;1997292&lt;/span&gt;   0% /dev
tmpfs                 &lt;span class=&#34;m&#34;&gt;403624&lt;/span&gt;     &lt;span class=&#34;m&#34;&gt;6384&lt;/span&gt;      &lt;span class=&#34;m&#34;&gt;397240&lt;/span&gt;   2% /run
/dev/sda6           &lt;span class=&#34;m&#34;&gt;98298500&lt;/span&gt;  &lt;span class=&#34;m&#34;&gt;8421160&lt;/span&gt;    &lt;span class=&#34;m&#34;&gt;84861020&lt;/span&gt;  10% /
/dev/sda7          &lt;span class=&#34;m&#34;&gt;123329532&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;15084216&lt;/span&gt;   &lt;span class=&#34;m&#34;&gt;101957496&lt;/span&gt;  13% /home
...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Pero si queremos algo más sencillo como saber el tamaño de una carpeta o fichero podemos usar &lt;a href=&#34;https://linux.die.net/man/1/du&#34;&gt;du&lt;/a&gt; con las opciones que hace su salida más legible, como &lt;code&gt;-hs&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Por ejemplo:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;$ du -h
3,3G	./Tasks
5,8M	./Books
3,3G	.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Que nos dice el tamaño del directorio y de todo
lo contenido en su interior.&lt;/p&gt;

&lt;p&gt;Pero existen otras herramientas con más características, como &lt;a href=&#34;https://dev.yorhel.nl/ncdu/man&#34;&gt;ncdu&lt;/a&gt;. Si &lt;code&gt;du&lt;/code&gt; era el acrónimo de &lt;em&gt;&amp;ldquo;disk usage&amp;rdquo;&lt;/em&gt;, este podría significar &lt;em&gt;&amp;ldquo;nice disk usage&amp;rdquo;&lt;/em&gt; (aunque en realidad es NCurses Disk Usage).&lt;/p&gt;

&lt;p&gt;Y lo bueno que tiene es que entramos en una interfaz (directamente en terminal) donde no solo vemos el tamaño de los ficheros o directorios sino también el tamaño relativo al fichero de mayor peso, para de forma muy rápida ver los que más espacio están ocupando en disco en relación al resto.&lt;/p&gt;

&lt;p&gt;Por ejemplo:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;/Microservices
3,3 GiB &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;##########] /Talks&lt;/span&gt;
5,8 MiB &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;          &lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; /Books
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Y no solo eso, además (y es lo mejor) podemos navegar por las carpetas seleccionándolas y haciendo intro, recalculándose el peso relativo para los fichero de esta.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;/Talks
539,4 MiB &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;##########]  Testing Microservices.mp4&lt;/span&gt;
343,5 MiB &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;######    ]  Building Fault Tolerant Microservices.mp4&lt;/span&gt;
342,6 MiB &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;######    ]  GOTO 2015 • Microservi...ify • Kevin Goldsmith.mp4&lt;/span&gt;
314,2 MiB &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;#####     ]  Principles Of Microservices by Sam Newman.mp4&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h1 id=&#34;15-dd-https-linux-die-net-man-1-dd&#34;&gt;15 &lt;a href=&#34;https://linux.die.net/man/1/dd&#34;&gt;dd&lt;/a&gt;&lt;/h1&gt;

&lt;p&gt;Potente y simple herramienta que entre otras cosas nos sirve para grabar imágenes &lt;code&gt;.iso&lt;/code&gt; en memorias externas, algo que seguramente hayamos necesitado hacer en más de una ocación. Mucho más sencillo desde &lt;em&gt;terminal&lt;/em&gt;, así de simple, por ejemplo:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;dd if=input.iso of=/dev/sdb&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Donde especificamos la iso que queremos quemar (estando en el mismo directorio) y el punto de montaje (para conocerlo podemos usar &lt;code&gt;df&lt;/code&gt;como hemos visto antes).&lt;/p&gt;

&lt;h1 id=&#34;16-history-https-linux-die-net-man-3-history&#34;&gt;16 &lt;a href=&#34;https://linux.die.net/man/3/history&#34;&gt;history&lt;/a&gt;&lt;/h1&gt;

&lt;p&gt;Herramienta muy simple para ver los últimos comandos usados (en realidad todos).&lt;/p&gt;

&lt;p&gt;Un ejemplo:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;$&lt;span class=&#34;nb&#34;&gt;history&lt;/span&gt;
&lt;span class=&#34;m&#34;&gt;1080&lt;/span&gt;  locate linux
&lt;span class=&#34;m&#34;&gt;1081&lt;/span&gt;  clear
&lt;span class=&#34;m&#34;&gt;1082&lt;/span&gt;  apropos ls
&lt;span class=&#34;m&#34;&gt;1083&lt;/span&gt;  apropos &lt;span class=&#34;s2&#34;&gt;&amp;quot;create dir&amp;quot;&lt;/span&gt;
&lt;span class=&#34;m&#34;&gt;1084&lt;/span&gt;  clear
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Como vimos en otra entrada puede usarse para, por ejemplo, conocer que comandos usamos con más frecuencia.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;history | awk &#39;{print $2}&#39; | sort | uniq -c | sort -rn | head -10&lt;/code&gt;&lt;/p&gt;

&lt;h1 id=&#34;17-rsync-https-linux-die-net-man-1-rsync&#34;&gt;17 &lt;a href=&#34;https://linux.die.net/man/1/rsync&#34;&gt;rsync&lt;/a&gt;&lt;/h1&gt;

&lt;p&gt;Útil para hacer cópias de forma eficiente, pero &lt;strong&gt;incrementales&lt;/strong&gt;, es decir, no se realizan copias completas
sino una inicial y las posteriores sobre las modificaciones
que el directorio en cuestión haya sufrido. Muy útil para copias de seguridad, entre otras muchas cosas.&lt;/p&gt;

&lt;p&gt;Además el origen y el destino pueden ser tanto el mismo equipo como equipos en la misma o diferentes redes.&lt;/p&gt;

&lt;p&gt;Por ejemplo:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;rsync -rtv origen/ destino/&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Esta es otra herramienta que daría para otra entrada completa.&lt;/p&gt;

&lt;h1 id=&#34;18-locate-https-linux-die-net-man-1-locate&#34;&gt;18. &lt;a href=&#34;https://linux.die.net/man/1/locate&#34;&gt;locate&lt;/a&gt;&lt;/h1&gt;

&lt;p&gt;Ideal para buscar ficheros en todo nuestro sistema. Es algo bruto, ya que por defecto busca en todo el sistema pero usando alguna de las opciones podemos refinar un poco su comportamiento. Eso sí, necesitarás usar algún paginador como &lt;code&gt;less&lt;/code&gt;o &lt;code&gt;more&lt;/code&gt; para ver la salida poco a poco.&lt;/p&gt;

&lt;p&gt;Un ejemplo:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;$ locate password &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; less
/bin/systemd-ask-password
/bin/systemd-tty-ask-password-agent
/boot/grub/i386-pc/legacy_password_test.mod
/boot/grub/i386-pc/password.mod
...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h1 id=&#34;19-apropos-http-man7-org-linux-man-pages-man1-apropos-1-html&#34;&gt;19. &lt;a href=&#34;http://man7.org/linux/man-pages/man1/apropos.1.html&#34;&gt;apropos&lt;/a&gt;&lt;/h1&gt;

&lt;p&gt;Algo así como &lt;em&gt;&amp;ldquo;A propósito de&amp;hellip;&amp;rdquo;&lt;/em&gt; (traducción libre) nos servirá de ayuda si no recordamos un comando pero si que es lo que hacía o con qué trabajaba o simplemente buscamos entre el software instalado en nuestra máquina.
Esta herramienta busca en las cabeceras y descripciones de las páginas de &lt;a href=&#34;https://linux.die.net/man/&#34;&gt;man&lt;/a&gt; de los programas instalados en el sistema para ayudaros a encontrarlo.&lt;/p&gt;

&lt;p&gt;Si por ejemplo buscamos un programa que hacía algo con Python, podemos usarla así:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;apropos python | less&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;(Usamos &lt;code&gt;less&lt;/code&gt; para ver progresivamente la salida del comando)&lt;/p&gt;

&lt;p&gt;Y vemos que entre otras cosas tenemos instalados conversores entre versiones de Python, quizás ni lo sabías :) .&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;2to3 &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;1&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;             - Python2 to Python3 converter
2to3-2.7 &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;1&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;         - Python2 to Python3 converter
2to3-3.5 &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;1&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;         - Python2 to Python3 converter
dh_python2 &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;1&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;       - calculates Python dependencies, adds maintainer script...
dh_python3 &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;1&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;       - calculates Python dependencies, adds maintainer script...
fab &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;1&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;              - Simple Pythonic remote deployment tool
jwt3 &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;1&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;             - Python implementation of JSON Web Token
:
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h1 id=&#34;20-tree-https-linux-die-net-man-1-tree&#34;&gt;20. &lt;a href=&#34;https://linux.die.net/man/1/tree&#34;&gt;tree&lt;/a&gt;&lt;/h1&gt;

&lt;p&gt;Si algún momento has necesitado conocer las subcarpetas y ficheros de un subdirectorio estando en terminal probablemente hayas acabando entrando y saliendo de ellas, bajando y subiendo de nivel, todo esto es mucho más sencillo si podemos ver el árbol de directorios y ficheros desde terminal, grácias a la orden &lt;code&gt;tree&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt; $ tree .
.
├── css
│   └── kit.css
├── index.html
└── js
    ├── lib1.js
    ├── lib2.js
    └── lib3.js

&lt;span class=&#34;m&#34;&gt;2&lt;/span&gt; directories, &lt;span class=&#34;m&#34;&gt;5&lt;/span&gt; files
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Si no la tienes ya instalada es tan fácil como hacer:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;sudo apt-get install tree&lt;/code&gt;&lt;/p&gt;

&lt;h1 id=&#34;bonus-reverse-i-search-https-www-gnu-org-software-bash-manual-html-node-commands-for-history-html&#34;&gt;Bonus: &lt;a href=&#34;https://www.gnu.org/software/bash/manual/html_node/Commands-For-History.html&#34;&gt;reverse-i-search&lt;/a&gt;&lt;/h1&gt;

&lt;p&gt;Y para acabar, ya que hemos hablado de &lt;code&gt;history&lt;/code&gt; y de &lt;code&gt;locate&lt;/code&gt; no podíamos dejar de lado reverse-i-search, por si lo que queremos es buscar comandos que previamente hemos usado. Es un poco especial porque no se ejecuta de forma común al resto, sino pulsando &lt;code&gt;Crtl + R&lt;/code&gt; en nuestra terminal, ya que en realidad es un comando para la manipulación del historial que consultamos con &lt;code&gt;history&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Un ejemplo, con solo poner &lt;code&gt;pyth&lt;/code&gt; nos sale una de las órdenes con python que hemos ejecutado.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;reverse-i-search&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;pyth&lt;span class=&#34;err&#34;&gt;&amp;#39;&lt;/span&gt;: apropos python &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; less
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Para ver más puedes pulsar &lt;code&gt;Crtl+Shift+R&lt;/code&gt; cuando el buscador está abierto y &lt;code&gt;Crtl+C&lt;/code&gt; para salir.&lt;/p&gt;

&lt;p&gt;Estas son solo algunas de las herramientas que he considerado más útiles para el día a día de cualquier usuario, pero quizás nos hemos dejado en el tintero alguna.&lt;/p&gt;

&lt;p&gt;¿Añadirías alguna a la lista? ¡Cuéntanos!&lt;/p&gt;</description>
        </item>
        
        <item>
            <title>Cómo salir del mundo de Google</title>
            <link>https://elbauldelprogramador.com/como-salir-mundo-google/</link>
            <pubDate>Tue, 21 Mar 2017 13:00:18 +0100</pubDate>
            
            <guid>https://elbauldelprogramador.com/como-salir-mundo-google/</guid>
            <description>&lt;h1 id=&#34;como-está-la-privacidad-actualmente&#34;&gt;Como está la privacidad actualmente&lt;/h1&gt;

&lt;p&gt;Actualmente nos han acostumbrado a que todos los servicios que tenemos en Internet sean &lt;strong&gt;gratuitos&lt;/strong&gt;. Sí claro, no tenemos que pagar ni tan solo un céntimo para poder disfrutar de todas las comodidades que nos ofrecen. Por ejemplo, ¿quién paga por una cuenta de correo electrónico?  ¿Quién paga por utilizar el servicio de almacenamiento en la nube donde uno puede &lt;a href=&#34;https://elbauldelprogramador.com/sincronizar-google-drive-en-linux-en-4-pasos/&#34; title=&#34;Sincronizar Google Drive en Linux en 4 pasos&#34;&gt;sincronizar todos los dispositivos que quiera?&lt;/a&gt; ¿Quién paga por utilizar un servicio de &lt;a href=&#34;https://elbauldelprogramador.com/aplicacion-mensajeria-movil-segura-whatsapp-signal-allo/&#34; title=&#34;¿Qué Aplicación De Mensajería Móvil Es Más Segura?&#34;&gt;mensajería instantánea&lt;/a&gt; para poder comunicarse con sus amigos y familiares?&lt;/p&gt;

&lt;p&gt;Y todos sabemos que detrás de estas aplicaciones y servicios hay grandes empresas que tienen beneficios millonarios año tras año. Entonces, si no cobran por sus servicios, &lt;em&gt;de dónde obtienen el dinero&lt;/em&gt; para poder conseguir estos beneficios?&lt;/p&gt;

&lt;p&gt;Pues bien, la información siempre ha sido importante, y ahora más que nunca. Los datos son dinero y de nuestra información es de lo que realmente viven estas empresas. Por este motivo, últimamente se habla tanto del &lt;em&gt;Big Data&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Nosotros somos el producto&lt;/strong&gt;, nosotros somos quien les damos, sin ningún reparo esta información la cual, ellos venden y de este modo obtienen beneficios. Por lo tanto, su materia prima, les sale gratis. Simplemente tienen que montar una infraestructura para poder lanzar su servicio a los usuarios y estos ya se encargan de ofrecerles su materia prima: &lt;strong&gt;Datos&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Ya hemos visto con el &lt;em&gt;caso de Snowden&lt;/em&gt; y el caso reciente de la filtración de información de la &lt;strong&gt;CIA&lt;/strong&gt; en &lt;em&gt;Wikileaks&lt;/em&gt; o con el caso del atentado de San Bernardino, donde la FBI pirateó un iPhone para obtener toda la información que contenía, después que Apple se hubiese negado a ofrecerle el acceso al dispositivo. Estos casos nos demuestran que nuestra información está expuesta a pesar de tomar medidas para tener a salvo nuestra información. Qué diversas organizaciones tienen acceso a lo que en teoría es &lt;strong&gt;privada&lt;/strong&gt;. Y tienen acceso de forma indebida.&lt;/p&gt;

&lt;h1 id=&#34;como-escapar-de-la-vigilancia-en-internet&#34;&gt;Como escapar de la vigilancia en Internet&lt;/h1&gt;

&lt;p&gt;Entonces, qué podemos hacer? Por suerte, hay servicios que pueden sustituir los que nos ponen en bandeja todas las funcionalidades que queramos a un precio muy caro. Nuestros datos. Por supuesto, estos programas sustitutos puede que no sean tan buenos ni tan funcionales que los privativos. Sin embargo, debido a la &lt;em&gt;gran comunidad de programadores&lt;/em&gt; que hay detrás, esta brecha se está haciendo cada vez más estrecha, y actualmente ya podemos disfrutar de una gran funcionalidad y con nuestros datos a salvo.&lt;/p&gt;

&lt;p&gt;&lt;!--ad--&gt;&lt;/p&gt;

&lt;p&gt;Por ejemplo en cuanto a navegadores encontramos a dos grandes vencedores, &lt;strong&gt;Google Chrome&lt;/strong&gt; y &lt;strong&gt;Mozilla Firefox&lt;/strong&gt;. El primero, como ya es de esperar es de código privativo y el segundo es de código abierto. Pero como Google siempre quiere abarcar al máximo y mirar de contentar a todos los usuarios, tiene una versión de código abierto de su navegador, denominado Chromium. Sin embargo, nos centraremos en Mozilla Firefox que ya desde sus orígenes ha sido de código abierto.&lt;/p&gt;

&lt;h1 id=&#34;pluggins-para-nuestro-navegador&#34;&gt;Pluggins para nuestro navegador&lt;/h1&gt;

&lt;p&gt;En este navegador nos encontramos con una serie de &lt;em&gt;pluggins&lt;/em&gt; muy interesantes para salvar nuestra intimidad y maximizar nuestra seguridad. A continuación se muestran sus nombres y se especifica sus funcionalidades:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/gorhill/uBlock&#34; target=&#34;_blank&#34; title=&#34;UBlock Origin&#34;&gt;&lt;strong&gt;UBlock Origin&lt;/strong&gt;&lt;/a&gt;: Es el bloqueador más completo que hay actualmente entre los &lt;em&gt;pluggins&lt;/em&gt; disponibles de Firefox. Nos ahorrará tener que ver publicidad indeseada y molesta.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://addons.mozilla.org/en-US/firefox/addon/privacy-badger17/&#34; target=&#34;_blank&#34; title=&#34;Privacy Badger&#34;&gt;&lt;strong&gt;Privacy Badger&lt;/strong&gt;&lt;/a&gt;: Es un &lt;em&gt;pluggin&lt;/em&gt; que elimina &lt;em&gt;trackers&lt;/em&gt;, publicidad, etc. A medida que lo utilizamos va aprendiendo y va eliminando más publicidad. En caso de que haya algo que no oculte automáticamente y deseemos ocultarlo, podemos seleccionarlo y ya no nos lo volverá a mostrar más.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://addons.mozilla.org/en-US/firefox/addon/https-everywhere/&#34; target=&#34;_blank&#34; title=&#34;HTTP Everywhere&#34;&gt;&lt;strong&gt;HTTPS Everywhere&lt;/strong&gt;&lt;/a&gt;: Es un &lt;em&gt;pluggin&lt;/em&gt; muy útil ya que fuerza que todas las webs que abrimos sean con protocolo HTTPS. Muchas webs tienen las dos versiones, y a veces se nos puede abrir la web sin https, con lo cual, nos redirige automáticamente a la web que utiliza el protocolo más seguro.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://addons.mozilla.org/en-US/firefox/addon/self-destructing-cookies/&#34; target=&#34;_blank&#34; title=&#34;Self-destruction&#34;&gt;&lt;strong&gt;Self-destruction&lt;/strong&gt;&lt;/a&gt;: Desgraciadamente cuando navegamos por la red, las diferentes webs nos minan con &lt;em&gt;cookies&lt;/em&gt; y &lt;em&gt;trackers&lt;/em&gt;. Por esto, nos salen anuncios relacionados de los artículos que terminamos de buscar hace un momento. Para que no nos rastreen, podemos instalar este &lt;em&gt;pluggin&lt;/em&gt; para que vaya eliminando de forma periódica todas las &lt;em&gt;cookies&lt;/em&gt;. Tenemos 3 niveles: al instante, cuando cerremos la pestaña o el navegador.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://addons.mozilla.org/en-US/firefox/addon/sslpersonas/&#34; target=&#34;_blank&#34; title=&#34;SSL Personas&#34;&gt;&lt;strong&gt;SSL Personas&lt;/strong&gt;&lt;/a&gt;: Es un &lt;em&gt;pluggin&lt;/em&gt; que nos muestra mediante colores la seguridad de la web en la que estamos navegando. Pinta el fondo del navegador de un color u otro en función del nivel de seguridad.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://noscript.net/&#34; target=&#34;_blank&#34; title=&#34;NoScript&#34;&gt;&lt;strong&gt;NoScript&lt;/strong&gt;&lt;/a&gt;: Inhabilita que se ejecuten &lt;em&gt;scripts&lt;/em&gt; con javascript. Esto puede ser útil por ejemplo si utilizamos un &lt;em&gt;adBlocker&lt;/em&gt; y nos salta el aviso de que no podemos acceder al contenido de la web hasta que no hayamos desactivado el &lt;em&gt;adBlocker&lt;/em&gt;. Aunque la verdad, hace bastante inviable la navegación, por lo tanto lo dejaremos en un segundo plano.&lt;/li&gt;
&lt;/ul&gt;

&lt;figure&gt;
    &lt;img
        on=&#34;tap:lightbox1&#34;
        role=&#34;button&#34;
        tabindex=&#34;0&#34;
        layout=&#34;responsive&#34;
        src=&#34;https://elbauldelprogramador.com/img/Como-salir-del-mundo-de-Google.jpg&#34;
        sizes=&#34;(min-width: 800px) 800px, 100vw&#34;
        width=&#34;800&#34;
        height=&#34;608&#34;&gt;
    &lt;/img&gt;
    &lt;figcaption&gt;Imagen de Pixabay (cc)&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;h1 id=&#34;buscadores-que-protegen-nuestra-privacidad&#34;&gt;Buscadores que protegen nuestra privacidad&lt;/h1&gt;

&lt;p&gt;En cuanto a buscadores que vigilan por nuestra &lt;a href=&#34;https://elbauldelprogramador.com/tails-linux-importancia-privacidad/&#34; title=&#34;TAILS LINUX y la importancia de la privacidad&#34;&gt;privacidad&lt;/a&gt; e intimidad son los siguientes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://duckduckgo.com/&#34;&gt;DuckDuckGo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.startpage.com/&#34;&gt;StartPage&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://disconnect.me/&#34;&gt;Disconnect&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Seguramente, algunos no conoceréis ninguno de estos buscadores ya que me diréis que sois fanáticos del buscador de Google y que no podéis vivir sin él. Pues podemos continuar utilizando los servicios de Google de forma que no violen nuestra privacidad ni intimidad. Para ello, vamos a utilizar el buscador más recomendable de los 3 que es StartPage. Este buscador hace de &lt;em&gt;proxy&lt;/em&gt; entre nosotros y Google de modo que terminaremos obteniendo los resultados de Google pero él será quien haga la búsqueda por nosotros y así Google no podrá obtener nuestros datos.&lt;/p&gt;

&lt;p&gt;Si bien es cierto que hacer la misma búsqueda en StartPage o hacerla en Google seguramente no obtendremos los mismos resultados a pesar que StartPage intenta hacer la búsqueda con el mismo idioma, desde el mismo país, etc&amp;hellip;&lt;/p&gt;

&lt;h1 id=&#34;gestores-de-contraseñas&#34;&gt;Gestores de contraseñas&lt;/h1&gt;

&lt;p&gt;Bueno&amp;hellip; y que decir de las &lt;a href=&#34;https://elbauldelprogramador.com/como-se-almacenan-tus-contrasenas-en-internet-y-cuando-la-longitud-de-la-misma-no-importa/&#34; title=&#34;Cómo se almacenan tus contraseñas en internet y cuando la longitud de la misma no importa&#34;&gt;contraseñas&lt;/a&gt;. Va muy bien el &lt;strong&gt;gestor de contraseñas de Google Chrome&lt;/strong&gt;, verdad? Allí, todas bien ordenadas y ocultas, pero que con un solo click podemos convertirlas en texto plano y ver la contraseña que habíamos olvidado, no?&lt;/p&gt;

&lt;p&gt;Si bien es cierto que en teoría, aunque Google viva de nuestros datos, parece ser que el tema de las contraseñas aún lo respeta. No debemos olvidar que estas contraseñas están en los servidores de Google. Por este motivo debemos utilizar un gestor de contraseñas abierto y que lo tengamos en local, bajo nuestro control. Nada de subir las contraseñas a Internet. Porque ya hemos visto que de seguro tiene bien poco.&lt;/p&gt;

&lt;p&gt;Para ello utilizaremos el programa &lt;strong&gt;KeypassX&lt;/strong&gt;. Es el mismo que Keypass sin embargo, este es multiplataforma. Es un gestor de contraseñas con una base de datos local donde almacenaremos todas nuestras contraseñas. Para acceder a esta base de datos tendremos una contraseña maestra, que será la única que deberemos recordar ya que una vez dentro, tendremos acceso al gestor de contraseñas. De este modo, el resto de contraseñas, podran ser realmente seguras e indescifrables ya que no tendremos que recordarlas. Debemos de tener en cuenta que la contraseña maestra debe ser segura ya que si no, pierde toda utilidad el Keypass.&lt;/p&gt;

&lt;p&gt;Veremos que el programa, nos crea un archivo que es la Base de Datos. Es recomendable ir haciendo copias de seguridad en varios dispositivos por si algún día pasa algún desastre y perdemos el archivo o se corrompe. Ya que entonces, habremos perdido todas nuestras credenciales.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://elbauldelprogramador.com/author/alex&#34; title=&#34;Alejandro&#34;&gt;Alejandro&lt;/a&gt; sin embargo, recomienda usar &lt;a href=&#34;https://www.lastpass.com/&#34; target=&#34;_blank&#34; title=&#34;LastPass&#34;&gt;LastPass&lt;/a&gt;, ya que es el gestor de contraseñas usado por &lt;strong&gt;Steve Gibson&lt;/strong&gt;, un experto en seguridad y comentarista en el pódcast &lt;a href=&#34;https://elbauldelprogramador.com/categories/security-now/&#34; title=&#34;Security Now!&#34;&gt;Security Now!&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Muchos se preguntarán. Si alguien tiene acceso a este archivo, también tiene acceso a todas mis contraseñas, no? No. Porque está &lt;a href=&#34;https://elbauldelprogramador.com/como-cifrar-archivos-con-openssl/&#34; title=&#34;Cómo cifrar archivos con openssl&#34;&gt;cifrado&lt;/a&gt; y sin tu contraseña maestra no va a poder ver nada.&lt;/p&gt;

&lt;p&gt;Y como deben ser nuestras contraseñas? Bueno pues básicamente hay que seguir 3 reglas:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;No reutilices tus contraseñas. Porque si por lo que sea, consiguen obtener una y esta se utiliza en varios servicios. Podrán acceder a todos ellos con solo una contraseña.&lt;/li&gt;
&lt;li&gt;No compartas la contraseña. A pesar de tener mucha confianza con tu pareja, hermanos, familia. Una contraseña es algo personal e intransferible. No compartas con nadie tus contraseñas.&lt;/li&gt;
&lt;li&gt;Es aconsejable ir cambiando las contraseñas periódicamente.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Y como sé si es fuerte o no mi contraseña? Pues hay varios servicios en la red donde podemos validar la fortaleza de estas. Por ejemplo, aquí encontramos una muy buena web donde nos dice el tiempo que tardarían en conseguir nuestra contraseña y con qué tipo de ordenador &lt;a href=&#34;http://passwd.criptica.org&#34;&gt;web para validar nuestras contraseñas&lt;/a&gt;.&lt;/p&gt;

&lt;h1 id=&#34;tor-el-rey-de-la-privacidad&#34;&gt;Tor, el rey de la privacidad&lt;/h1&gt;

&lt;p&gt;Llegados a este punto ya hemos conseguido que nuestras contraseñas sean seguras. Que nuestras &lt;strong&gt;consultas en los buscadores sean anónimas y que nuestro navegador sea lo más seguro&lt;/strong&gt; y privado posible. Sin embargo, aún podemos ir un paso más allá y usar la red Tor.&lt;/p&gt;

&lt;p&gt;Es una red que nos provee de una IP diferente a la nuestra y que se ubica en otro punto geográfico al nuestro. A parte, nos ofrece una privacidad al máximo nivel ya que aunque nuestro mensaje sea interceptado nunca se podrá obtener el 100% de la información o metadatos vinculados a este.&lt;/p&gt;

&lt;p&gt;Por supuesto, la gran ventaja de estos programas comentados anteriormente, es que son libres, y el código fuente es público. Por lo tanto, podemos verificar si realmente funcionan como deben, tienen &lt;em&gt;bugs&lt;/em&gt; o tienen funcionalidades ocultas. Y aunque no todo el mundo se pare a revisar su código, el hecho de que esté disponible y sea posible que cualquier persona lo pueda revisar, da más confianza que uno que se encuentra oculto&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Si quieres aprender a configurar Tor, visita la guía &lt;a href=&#34;https://elbauldelprogramador.com/logrando-el-anonimato-con-tor-parte-1/&#34; title=&#34;Logrando el Anonimáto con Tor&#34;&gt;Logrando el Anonimáto con Tor&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Bien, espero que les haya gustado mi primer tutorial en esta página y espero poder ir aportando mi granito de arena periódicamente a la comunidad.&lt;/p&gt;</description>
        </item>
        
        <item>
            <title>21 Podcasts / Canales de Youtube / Blogs sobre Ciencia</title>
            <link>https://elbauldelprogramador.com/blogs-podcasts-canales-youtube-sobre-ciencia</link>
            <pubDate>Tue, 14 Mar 2017 20:13:47 +0100</pubDate>
            
            <guid>https://elbauldelprogramador.com/blogs-podcasts-canales-youtube-sobre-ciencia</guid>
            <description>&lt;h1 id=&#34;qué-es-esta-lista&#34;&gt;¿Qué es esta lista?&lt;/h1&gt;

&lt;p&gt;Para terminar esta serie de &lt;a href=&#34;https://elbauldelprogramador.com/tags/listas&#34;&gt;artículos que he ido publicando&lt;/a&gt; sobre recursos que suelo seguir sobre &lt;a href=&#34;https://elbauldelprogramador.com/blogs-canales-podcast-aprender-informatica/&#34; title=&#34;Informática&#34;&gt;Informática&lt;/a&gt; y &lt;a href=&#34;https://elbauldelprogramador.com/recursos-canales-podcast-sobre-matematicas/&#34; title=&#34;matemáticas&#34;&gt;matemáticas&lt;/a&gt;, voy a publicar la última lista, sobre &lt;em&gt;Ciencia&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Si sigues algún recurso no listado abajo y quieres contribuir, no dudes en hacer un &lt;a href=&#34;https://github.com/elbaulp/algui91-hugo/edit/master/content/post/resources-blogs-podcast-youtube-channels-about-science.md&#34; target=&#34;_blank&#34; title=&#34;Pull Request!&#34;&gt;Pull Request!&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Gracias a &lt;a href=&#34;https://twitter.com/sinclair_88&#34; target=&#34;_blank&#34; title=&#34;@sinclair_88&#34;&gt;@sinclair_88&lt;/a&gt; por proponer la idea de crear estas listas.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&#34;más-listas&#34;&gt;Más listas&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://elbauldelprogramador.com/recursos-canales-podcast-sobre-matematicas/&#34; title=&#34;11 recursos / canales / podcasts sobre matemáticas&#34;&gt;13 recursos / canales / podcasts sobre matemáticas&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://elbauldelprogramador.com/blogs-canales-podcast-aprender-informatica/&#34; title=&#34;52 Blogs / Canales / Podcast sobre informática, Data Science y Seguridad&#34;&gt;52 Blogs / Canales / Podcast sobre informática, Data Science y Seguridad&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;youtube&#34;&gt;Youtube&lt;/h1&gt;

&lt;div class=&#34;row-post flex-grid&#34;&gt;

  &lt;article class=&#34;box-item animate&#34;&gt;
    &lt;h3&gt;Sixty Simbols&lt;/h3&gt;
    &lt;figure&gt;
      &lt;img sizes=&#34;(min-width: 100px) 100px, 100vw&#34; on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/sixtysimbols.jpg&#34; width=&#34;100&#34; height=&#34;100&#34;&gt;&lt;/img&gt;
    &lt;/figure&gt;

    &lt;p&gt;Cool videos about physics and astronomy.&lt;/p&gt;

    &lt;div class=&#34;tags&#34;&gt;
      &lt;a href=&#34;https://www.youtube.com/channel/UCvBqzzvUBLCs8Y7Axb-jZew&#34; target=&#34;_blank&#34; title=&#34;Sixty Symbols&#34;&gt;Sixty Symbols&lt;/a&gt;
    &lt;/div&gt;
  &lt;/article&gt;


  &lt;article class=&#34;box-item animate&#34;&gt;
    &lt;h3&gt;Veritasium&lt;/h3&gt;
    &lt;figure&gt;
      &lt;img sizes=&#34;(min-width: 100px) 100px, 100vw&#34; on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/veritasium.jpg&#34; width=&#34;100&#34; height=&#34;100&#34;&gt;&lt;/img&gt;
    &lt;/figure&gt;

    &lt;p&gt;An element of truth - videos about science, education, and anything else I find interesting.&lt;/p&gt;

    &lt;div class=&#34;tags&#34;&gt;
      &lt;a href=&#34;https://www.youtube.com/channel/UCHnyfMqiRRG1u-2MsSQLbXA&#34; target=&#34;_blank&#34; title=&#34;Veritasium&#34;&gt;Veritasium&lt;/a&gt;
    &lt;/div&gt;
  &lt;/article&gt;


  &lt;article class=&#34;box-item animate&#34;&gt;
    &lt;h3&gt;Sciencium&lt;/h3&gt;
    &lt;figure&gt;
      &lt;img sizes=&#34;(min-width: 100px) 100px, 100vw&#34; on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/sciencium.jpg&#34; width=&#34;100&#34; height=&#34;100&#34;&gt;&lt;/img&gt;
    &lt;/figure&gt;

    &lt;p&gt;Exciting discoveries in science, recent and historical.&lt;/p&gt;

    &lt;div class=&#34;tags&#34;&gt;
      &lt;a href=&#34;https://www.youtube.com/channel/UCGRB1ZjIqAiaGwt-XLq9CnA&#34; target=&#34;_blank&#34; title=&#34;Sciencium&#34;&gt;Sciencium&lt;/a&gt;
    &lt;/div&gt;
  &lt;/article&gt;


  &lt;article class=&#34;box-item animate&#34;&gt;
    &lt;h3&gt;ASAP Science&lt;/h3&gt;
    &lt;figure&gt;
      &lt;img sizes=&#34;(min-width: 100px) 100px, 100vw&#34; on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/asapscience.jpg&#34; width=&#34;100&#34; height=&#34;100&#34;&gt;&lt;/img&gt;
    &lt;/figure&gt;

    &lt;p&gt;Your weekly dose of fun and interesting science.&lt;/p&gt;

    &lt;div class=&#34;tags&#34;&gt;
      &lt;a href=&#34;https://www.youtube.com/channel/UCC552Sd-3nyi_tk2BudLUzA&#34; target=&#34;_blank&#34; title=&#34;ASAPScience&#34;&gt;ASAPScience&lt;/a&gt;
    &lt;/div&gt;
  &lt;/article&gt;


  &lt;article class=&#34;box-item animate&#34;&gt;
    &lt;h3&gt;Physics Girl&lt;/h3&gt;
    &lt;figure&gt;
      &lt;img sizes=&#34;(min-width: 100px) 100px, 100vw&#34; on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/physicsgirl.jpg&#34; width=&#34;100&#34; height=&#34;100&#34;&gt;&lt;/img&gt;
    &lt;/figure&gt;

    &lt;p&gt;Physics videos for every atom and eve.&lt;/p&gt;

    &lt;div class=&#34;tags&#34;&gt;
      &lt;a href=&#34;https://www.youtube.com/channel/UC7DdEm33SyaTDtWYGO2CwdA&#34; target=&#34;_blank&#34; title=&#34;Physics Girl&#34;&gt;Physics Girl&lt;/a&gt;
    &lt;/div&gt;
  &lt;/article&gt;


  &lt;article class=&#34;box-item animate&#34;&gt;
    &lt;h3&gt;Science Magazine&lt;/h3&gt;
    &lt;figure&gt;
      &lt;img sizes=&#34;(min-width: 100px) 100px, 100vw&#34; on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/sciencemag.jpg&#34; width=&#34;100&#34; height=&#34;100&#34;&gt;&lt;/img&gt;
    &lt;/figure&gt;

    &lt;p&gt;The latest videos from Science magazine, the world&#39;s leading outlet for scientific news, commentary, and cutting-edge research.&lt;/p&gt;

    &lt;div class=&#34;tags&#34;&gt;
      &lt;a href=&#34;https://www.youtube.com/channel/UCv0aU2eKry3kdSTnFa8QAWA&#34; target=&#34;_blank&#34; title=&#34;Science Magazine&#34;&gt;Science Magazine&lt;/a&gt;
    &lt;/div&gt;
  &lt;/article&gt;


  &lt;article class=&#34;box-item animate&#34;&gt;
    &lt;h3&gt;SmarterEveryDay&lt;/h3&gt;
    &lt;figure&gt;
      &lt;img sizes=&#34;(min-width: 100px) 100px, 100vw&#34; on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/smartereveryday.jpg&#34; width=&#34;100&#34; height=&#34;100&#34;&gt;&lt;/img&gt;
    &lt;/figure&gt;

    &lt;p&gt;I explore the world using science. That&#39;s pretty much all there is to it. Watch 2 videos. If you learn something AWESOME, subscribe.&lt;/p&gt;

    &lt;div class=&#34;tags&#34;&gt;
      &lt;a href=&#34;https://www.youtube.com/channel/UC6107grRI4m0o2-emgoDnAA&#34; target=&#34;_blank&#34; title=&#34;SmarterEveryDay&#34;&gt;SmarterEveryDay&lt;/a&gt;
    &lt;/div&gt;
  &lt;/article&gt;


  &lt;article class=&#34;box-item animate&#34;&gt;
    &lt;h3&gt;VSauce&lt;/h3&gt;
    &lt;figure&gt;
      &lt;img sizes=&#34;(min-width: 100px) 100px, 100vw&#34; on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/vsauce.jpg&#34; width=&#34;100&#34; height=&#34;100&#34;&gt;&lt;/img&gt;
    &lt;/figure&gt;

    &lt;p&gt;Our World is Amazing. &lt;/p&gt;

    &lt;div class=&#34;tags&#34;&gt;
      &lt;a href=&#34;https://www.youtube.com/channel/UC6nSFpj9HTCZ5t-N3Rm3-HA&#34; target=&#34;_blank&#34; title=&#34;Vsauce&#34;&gt;Vsauce&lt;/a&gt;
    &lt;/div&gt;
  &lt;/article&gt;

&lt;/div&gt;

&lt;h1 id=&#34;podcasts&#34;&gt;Podcasts&lt;/h1&gt;

&lt;div class=&#34;row-post flex-grid&#34;&gt;

  &lt;article class=&#34;box-item animate&#34;&gt;
    &lt;h3&gt;60 seconds Science&lt;/h3&gt;
    &lt;figure&gt;
      &lt;img sizes=&#34;(min-width: 100px) 100px, 100vw&#34; on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/60secscience.png&#34; width=&#34;100&#34; height=&#34;100&#34;&gt;&lt;/img&gt;
    &lt;/figure&gt;

    &lt;p&gt;Tune in every weekday for quick reports and commentaries on the world of science—it&#39;ll just take a minute&lt;/p&gt;

    &lt;div class=&#34;tags&#34;&gt;
      &lt;a href=&#34;https://www.scientificamerican.com/sciam/xml/iTunes.cfm?id=60-second-science&#34; target=&#34;_blank&#34; title=&#34;60-Second Science&#34;&gt;60-Second Science&lt;/a&gt; | &lt;a href=&#34;https://www.scientificamerican.com/podcast/60-second-science/&#34; target=&#34;_blank&#34; title=&#34;Website&#34;&gt;Website&lt;/a&gt;
    &lt;/div&gt;
  &lt;/article&gt;


  &lt;article class=&#34;box-item animate&#34;&gt;
    &lt;h3&gt;Discovery&lt;/h3&gt;
    &lt;figure&gt;
      &lt;img sizes=&#34;(min-width: 100px) 100px, 100vw&#34; on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/discovery.jpg&#34; width=&#34;100&#34; height=&#34;100&#34;&gt;&lt;/img&gt;
    &lt;/figure&gt;

    &lt;p&gt;Explorations in the world of science.&lt;/p&gt;

    &lt;div class=&#34;tags&#34;&gt;
      &lt;a href=&#34;http://www.bbc.co.uk/programmes/p002w557/episodes/downloads.rss&#34; target=&#34;_blank&#34; title=&#34;Discovery&#34;&gt;Discovery&lt;/a&gt; | &lt;a href=&#34;http://www.bbc.co.uk/programmes/p002w557&#34; target=&#34;_blank&#34; title=&#34;Website&#34;&gt;Website&lt;/a&gt;
    &lt;/div&gt;
  &lt;/article&gt;


  &lt;article class=&#34;box-item animate&#34;&gt;
    &lt;h3&gt;Physics World Science&lt;/h3&gt;
    &lt;figure&gt;
      &lt;img sizes=&#34;(min-width: 100px) 100px, 100vw&#34; on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/physicsworld.jpg&#34; width=&#34;100&#34; height=&#34;100&#34;&gt;&lt;/img&gt;
    &lt;/figure&gt;

    &lt;p&gt;Physics World is the world&#39;s leading physics magazine. Every month it brings you features from the world&#39;s leading physicists and science writers, comprehensive news and analysis, incisive opinion pieces, sound careers advice, reviews of the best new books and multimedia, and the ever-popular Lateral Thoughts page.&lt;/p&gt;

    &lt;div class=&#34;tags&#34;&gt;
      &lt;a href=&#34;http://physicsworld.com/podcast&#34; target=&#34;_blank&#34; title=&#34;Physics World Science&#34;&gt;Physics World Science&lt;/a&gt; | &lt;a href=&#34;http://physicsworld.com/cws/channel/multimedia/podcasts&#34; target=&#34;_blank&#34; title=&#34;Website&#34;&gt;Website&lt;/a&gt;
    &lt;/div&gt;
  &lt;/article&gt;


  &lt;article class=&#34;box-item animate&#34;&gt;
    &lt;h3&gt;Science in Action&lt;/h3&gt;
    &lt;figure&gt;
      &lt;img sizes=&#34;(min-width: 100px) 100px, 100vw&#34; on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/scienceinaction.jpg&#34; width=&#34;100&#34; height=&#34;100&#34;&gt;&lt;/img&gt;
    &lt;/figure&gt;

    &lt;p&gt;The latest science research and news stories from all over the world.&lt;/p&gt;

    &lt;div class=&#34;tags&#34;&gt;
      &lt;a href=&#34;http://www.bbc.co.uk/programmes/p002vsnb/episodes/downloads.rss&#34; target=&#34;_blank&#34; title=&#34;Science in Action&#34;&gt;Science in Action&lt;/a&gt; | &lt;a href=&#34;http://www.bbc.co.uk/programmes/p002vsnb&#34; target=&#34;_blank&#34; title=&#34;Website&#34;&gt;Website&lt;/a&gt;
    &lt;/div&gt;
  &lt;/article&gt;


  &lt;article class=&#34;box-item animate&#34;&gt;
    &lt;h3&gt;Science Magazine Podcast&lt;/h3&gt;
    &lt;figure&gt;
      &lt;img sizes=&#34;(min-width: 100px) 100px, 100vw&#34; on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/sciencemag.jpg&#34; width=&#34;100&#34; height=&#34;100&#34;&gt;&lt;/img&gt;
    &lt;/figure&gt;

    &lt;div class=&#34;tags&#34;&gt;
      &lt;a href=&#34;http://www.sciencemag.org/rss/podcast.xml&#34; target=&#34;_blank&#34; title=&#34;Science Magazine Podcast&#34;&gt;Science Magazine Podcast&lt;/a&gt; | &lt;a href=&#34;http://www.sciencemag.org/&#34; target=&#34;_blank&#34; title=&#34;Website&#34;&gt;Website&lt;/a&gt;
    &lt;/div&gt;
  &lt;/article&gt;


  &lt;article class=&#34;box-item animate&#34;&gt;
    &lt;h3&gt;Science Talk&lt;/h3&gt;
    &lt;figure&gt;
      &lt;img sizes=&#34;(min-width: 100px) 100px, 100vw&#34; on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/sciencetalk.png&#34; width=&#34;100&#34; height=&#34;100&#34;&gt;&lt;/img&gt;
    &lt;/figure&gt;

    &lt;p&gt;Join host Steve Mirsky each week as he explores the latest developments in science and technology through interviews with leading scientists and journalists&lt;/p&gt;

    &lt;div class=&#34;tags&#34;&gt;
      &lt;a href=&#34;https://www.scientificamerican.com/sciam/xml/iTunes.cfm?id=science-talk&#34; target=&#34;_blank&#34; title=&#34;Science Talk&#34;&gt;Science Talk&lt;/a&gt; | &lt;a href=&#34;https://www.scientificamerican.com/podcast/science-talk/&#34; target=&#34;_blank&#34; title=&#34;Website&#34;&gt;Website&lt;/a&gt;
    &lt;/div&gt;
  &lt;/article&gt;


  &lt;article class=&#34;box-item animate&#34;&gt;
    &lt;h3&gt;The Guardian&#39;s Science Weekly&lt;/h3&gt;
    &lt;figure&gt;
      &lt;img sizes=&#34;(min-width: 100px) 100px, 100vw&#34; on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/theguardian.jpg&#34; width=&#34;100&#34; height=&#34;100&#34;&gt;&lt;/img&gt;
    &lt;/figure&gt;

    &lt;p&gt;The best place to learn about the big discoveries and debates in biology, chemisty, physics and sometimes even maths&lt;/p&gt;

    &lt;div class=&#34;tags&#34;&gt;
      &lt;a href=&#34;https://www.theguardian.com/science/series/science/podcast.xml&#34; target=&#34;_blank&#34; title=&#34;The Guardian&#39;s Science Weekly&#34;&gt;The Guardian&#39;s Science Weekly&lt;/a&gt; | &lt;a href=&#34;https://www.theguardian.com/science/series/science&#34; target=&#34;_blank&#34; title=&#34;Website&#34;&gt;Website&lt;/a&gt;
    &lt;/div&gt;
  &lt;/article&gt;


  &lt;article class=&#34;box-item animate&#34;&gt;
    &lt;h3&gt;The Infinite Monkey Cage&lt;/h3&gt;
    &lt;figure&gt;
      &lt;img sizes=&#34;(min-width: 100px) 100px, 100vw&#34; on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/infinitemonkey.jpg&#34; width=&#34;100&#34; height=&#34;100&#34;&gt;&lt;/img&gt;
    &lt;/figure&gt;

    &lt;p&gt;Witty, irreverent look at the world through scientists&#39; eyes. With Brian Cox and Robin Ince&lt;/p&gt;

    &lt;div class=&#34;tags&#34;&gt;
      &lt;a href=&#34;http://www.bbc.co.uk/programmes/b00snr0w/episodes/downloads.rss&#34; target=&#34;_blank&#34; title=&#34;The Infinite Monkey Cage&#34;&gt;The Infinite Monkey Cage&lt;/a&gt; | &lt;a href=&#34;http://www.bbc.co.uk/programmes/b00snr0w&#34; target=&#34;_blank&#34; title=&#34;Website&#34;&gt;Website&lt;/a&gt;
    &lt;/div&gt;
  &lt;/article&gt;


  &lt;article class=&#34;box-item animate&#34;&gt;
    &lt;h3&gt;The Titanium Physicists Podcast&lt;/h3&gt;
    &lt;figure&gt;
      &lt;img sizes=&#34;(min-width: 100px) 100px, 100vw&#34; on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/titanium.jpg&#34; width=&#34;100&#34; height=&#34;100&#34;&gt;&lt;/img&gt;
    &lt;/figure&gt;

    &lt;p&gt;Every episode, I bring together two of my physicists with some of the most fun and interesting people I have ever met, and we have a conversation about a wizard-level physics topic.  It’s fun, and fascinating, and entirely unique.&lt;/p&gt;

    &lt;div class=&#34;tags&#34;&gt;
      &lt;a href=&#34;http://titaniumphysics.libsyn.com/rss&#34; target=&#34;_blank&#34; title=&#34;The Titanium Physicists Podcast&#34;&gt;The Titanium Physicists Podcast&lt;/a&gt; | &lt;a href=&#34;http://titaniumphysics.com&#34; target=&#34;_blank&#34; title=&#34;Website&#34;&gt;Website&lt;/a&gt;
    &lt;/div&gt;
  &lt;/article&gt;

  &lt;article class=&#34;box-item animate&#34;&gt;
    &lt;h3&gt;ScienceVS&lt;/h3&gt;
    &lt;figure&gt;
      &lt;img sizes=&#34;(min-width: 100px) 100px, 100vw&#34;
               on=&#34;tap:lightbox1&#34;
               role=&#34;button&#34;
               tabindex=&#34;0&#34;
               layout=&#34;responsive&#34;
               src=&#34;https://elbauldelprogramador.com/img/sciencevs.png&#34;
               alt=&#34;Science Vs Podcast&#34;
               title=&#34;Science Vs Podcast&#34;
               sizes=&#34;(min-width: 100px) 100px, 100vw&#34;
               width=&#34;100&#34;
               height=&#34;100&#34;&gt;
      &lt;/img&gt;
    &lt;/figure&gt;

    &lt;p&gt;There are a lot of fads, blogs and strong opinions, but then there’s SCIENCE. Science Vs is the show from Gimlet Media that finds out what’s fact, what’s not, and what’s somewhere in between. We do the hard work of sifting through all the science so you don&#39;t have to. This season we tackle immigration, climate change, true love and artificial sweeteners.&lt;/p&gt;

    &lt;div class=&#34;tags&#34;&gt;
      &lt;a href=&#34;https://gimletmedia.com/science-vs/&#34; target=&#34;_blank&#34; title=&#34;Science Vs Podcast&#34;&gt;Science Vs Podcast&lt;/a&gt;
    &lt;/div&gt;
  &lt;/article&gt;

  &lt;article class=&#34;box-item animate&#34;&gt;
    &lt;h3&gt;Radio Skylab&lt;/h3&gt;
    &lt;figure&gt;
      &lt;img sizes=&#34;(min-width: 100px) 100px, 100vw&#34;
               on=&#34;tap:lightbox1&#34;
               role=&#34;button&#34;
               tabindex=&#34;0&#34;
               layout=&#34;responsive&#34;
               src=&#34;https://elbauldelprogramador.com/img/radopsky.jpg&#34;
               alt=&#34;Radio Skylab&#34;
               title=&#34;Radio Skylab&#34;
               sizes=&#34;(min-width: 100px) 100px, 100vw&#34;
               width=&#34;100&#34;
               height=&#34;100&#34;&gt;
      &lt;/img&gt;
    &lt;/figure&gt;

    &lt;p&gt;Radio Skylab is a casual podcast about space, science and other curiosities. Made with enthusiasm from the Canary Islands by four scientific disseminators:&lt;/p&gt;

    &lt;p&gt;Víctor Manchado (@vmanchado) is the editor of Pirulo Cosmico, a blog where astronomy is explained in a simple way. Daniel Marín (@eurekablog) is responsible for the popular blog of astronomy and astronautics Eureka. Premio Bitácoras 2012, Prize 20Blogs 2015 to the best blog in the category of science, and Naukas Award 2013 to the best blog of scientific popularization. Kavy Pazos (@molasaber) is the creator of Mola Saber, the blog that through infographics and articles fuses art and science. Víctor R. Ruiz (@vrruiz) is the creator of Infoastro, a site about astronomical news; And Blogalia, the first blog service in Spanish.&lt;/p&gt;

    &lt;div class=&#34;tags&#34;&gt;
      &lt;a href=&#34;http://radioskylab.es/&#34; target=&#34;_blank&#34; title=&#34;Radio Skylab&#34;&gt;Radio Skylab&lt;/a&gt;
    &lt;/div&gt;
  &lt;/article&gt;

&lt;/div&gt;

&lt;p&gt;&lt;!--ad--&gt;&lt;/p&gt;

&lt;h1 id=&#34;otros&#34;&gt;Otros&lt;/h1&gt;

&lt;div class=&#34;row-post flex-grid&#34;&gt;

  &lt;article class=&#34;box-item animate&#34;&gt;
    &lt;h3&gt;CGP Grey&lt;/h3&gt;
    &lt;figure&gt;
      &lt;img sizes=&#34;(min-width: 100px) 100px, 100vw&#34; on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/cgpgrey.jpg&#34; width=&#34;100&#34; height=&#34;100&#34;&gt;&lt;/img&gt;
    &lt;/figure&gt;

    &lt;div class=&#34;tags&#34;&gt;
      &lt;a href=&#34;https://www.youtube.com/channel/UC2C_jShtL725hvbm1arSV9w&#34; target=&#34;_blank&#34; title=&#34;CGP Grey&#34;&gt;CGP Grey&lt;/a&gt;
    &lt;/div&gt;
  &lt;/article&gt;


  &lt;article class=&#34;box-item animate&#34;&gt;
    &lt;h3&gt;Kurzgesagt – In a Nutshell&lt;/h3&gt;
    &lt;figure&gt;
      &lt;img sizes=&#34;(min-width: 100px) 100px, 100vw&#34; on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/inanutshell.jpg&#34; width=&#34;100&#34; height=&#34;100&#34;&gt;&lt;/img&gt;
    &lt;/figure&gt;

    &lt;p&gt;Videos explaining things with optimistic nihilism. We are a small team who want to make science look beautiful. Because it is beautiful. &lt;/p&gt;

    &lt;div class=&#34;tags&#34;&gt;
      &lt;a href=&#34;https://www.youtube.com/channel/UCsXVk37bltHxD1rDPwtNM8Q&#34; target=&#34;_blank&#34; title=&#34;Kurzgesagt – In a Nutshell&#34;&gt;Kurzgesagt – In a Nutshell&lt;/a&gt;
    &lt;/div&gt;
  &lt;/article&gt;
&lt;/div&gt;</description>
        </item>
        
        <item>
            <title>Compilar la parte no gratuita de OpenCV 3.0&#43; desde fuente</title>
            <link>https://elbauldelprogramador.com/compilar-la-parte-no-gratuita-de-opencv-3.0-desde-fuente/</link>
            <pubDate>Tue, 07 Mar 2017 20:31:38 +0100</pubDate>
            
            <guid>https://elbauldelprogramador.com/compilar-la-parte-no-gratuita-de-opencv-3.0-desde-fuente/</guid>
            <description>&lt;p&gt;En mi último post &lt;a href=&#34;https://elbauldelprogramador.com/compile-opencv-3.2-with-java-intellij-idea/&#34; title=&#34;Compilar OpenCV 3.2 para Java y usarlo en IntelliJ IDEA&#34;&gt;Compilar OpenCV 3.2 para Java y usarlo en IntelliJ IDEA&lt;/a&gt; Expliqué cómo compilar OpenCV desde el código fuente con soporte para JAVA, sin embargo, La parte no gratuita de OpenCV no se incluye por defecto. Si quieres usar parte de la parte privativa de OpenCV, como los descriptores SIFT o SURF, deberás hacer lo siguiente:&lt;/p&gt;

&lt;h1 id=&#34;1-descarga-opencv-3-2-descomprime-y-crea-un-directorio-donde-construirlo&#34;&gt;[1]. Descarga OpenCV 3.2, descomprime y crea un directorio donde construirlo&lt;/h1&gt;

&lt;p&gt;Siguiendo los pasos de &lt;a href=&#34;https://elbauldelprogramador.com/compile-opencv-3.2-with-java-intellij-idea/&#34; title=&#34;Compilar OpenCV 3.2 para Java y usarlo en IntelliJ IDEA&#34;&gt;mi último post&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;!--ad--&gt;&lt;/p&gt;

&lt;h1 id=&#34;2-descarga-y-descomprime-la-parte-no-gratuita&#34;&gt;[2]. Descarga y descomprime la parte no gratuita&lt;/h1&gt;

&lt;p&gt;La parte no gratuita la separaron de la gratuita en OpenCV3+, por lo que necesitas descargarla aparte desde &lt;a href=&#34;https://github.com/opencv/opencv_contrib&#34; title=&#34;github opencv repository&#34;&gt;el repo github de opencv&lt;/a&gt;  o clonar el repositorio. Después extrae &lt;strong&gt;opencv_contrib&lt;/strong&gt; y ponla dentro de tu carpeta opencv :&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;cris@cris ~ $ cp Downloads/opencv-contrib opencv-3.2.0/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h1 id=&#34;3-genera-los-makefiles&#34;&gt;[3]. Genera los makefiles&lt;/h1&gt;

&lt;p&gt;Nos movemos a la carpeta de construcción que creamos antes dentro de la carpeta de opencv (en mi caso se llama build), y escribimos:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;cris@cris~$ cmake -DBUILD_SHARED_LIBS&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;OFF -DCMAKE_BUILD_TYPE&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;Release -DCMAKE_INSTALL_PREFIX&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;../dist -DOPENCV_EXTRA_MODULES_PATH&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;../opencv_contrib/modules ..
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Con &lt;code&gt;DOPENCV_EXTRA_MODULES_PATH=../opencv_contrib/modules&lt;/code&gt; estamos especificando donde encontrar la parte no gratuita.&lt;/p&gt;

&lt;p&gt;Si la generación de los makefiles ha sido correcta, entonces ya puedes compilar. Si estás compilando openCV para JAVA, debes comprobar que la variable &lt;code&gt;$JAVA_HOME&lt;/code&gt; tiene el path de tu JDK y que esta está visible por procesos hijo. Para ello, cuando hagas: &lt;code&gt;echo $JAVA_HOME&lt;/code&gt; te deberá mostrar el path de tu JDK. Si no, en una terminal, establece el valor de la variable a el path de tu JDK y expórtala, por ejemplo:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;cris@cris ~$ &lt;span class=&#34;nb&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;JAVA_HOME&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;/home/jdk1.8.0_111/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Fíjate cuando estés generando el makefile, que la salida para el campo de Java es así:&lt;/p&gt;

&lt;figure&gt;
&lt;img on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/output-build-makefiles-opencv-java.png&#34; title=&#34;Building makefiles for JAVA openCV&#34; alt=&#34;Building makefiles for JAVA openCV output&#34; width=&#34;983&#34; height=&#34;164&#34;&gt;&lt;/img&gt;
&lt;figcaption&gt;building makefiles&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;Es decir, que hay un path para JNI especificado,y Java &lt;em&gt;wrappers&lt;/em&gt; está a YES.&lt;/p&gt;

&lt;h1 id=&#34;4-construye&#34;&gt;[4]. Construye&lt;/h1&gt;

&lt;p&gt;ejecuta &lt;em&gt;make&lt;/em&gt; para compilar openCV con Java y crear un jar:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;cris@cris ~/opencv-3.2.0/build $ make -j8
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;-j8 es por JDK8. Deberás poner aquí tu versión de JAVA.&lt;/p&gt;

&lt;p&gt;Asegúrate de que los ficheros &lt;strong&gt;opencv-320.jar&lt;/strong&gt; y &lt;strong&gt;libopencv_java320.so&lt;/strong&gt; (.so o .dll) han sido creados dentro de &lt;strong&gt;/build&lt;/strong&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;cris@cris ~/opencv-3.2.0/build $ ls -R &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; grep opencv-320.jar
opencv-320.jar
opencv-320.jar.dephelper

cris@cris ~/opencv-3.2.0/build $ ls -R &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; grep libopencv_java320.so
libopencv_java320.so
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h1 id=&#34;5-edita-el-archivo-features2d-manual-hpp&#34;&gt;[5]. Edita el archivo features2d_manual.hpp&lt;/h1&gt;

&lt;p&gt;Ok, si la construcción ha ido bien, vete a &lt;code&gt;/modules/features2d/misc/java/src/cpp&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;cris@cris ~/opencv-3.2.02 $ &lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; modules/features2d/misc/java/src/cpp/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;y edita features2d_manual.hpp con tu editor de texto favorito, como sigue:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;En la línea 8, tras &lt;code&gt;#include &amp;quot;features2d_converters.hpp&amp;quot;&lt;/code&gt;
añade &lt;code&gt;#include &amp;quot;opencv2/xfeatures2d.hpp&amp;quot;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;En la línea 121, en el método &lt;strong&gt;create&lt;/strong&gt;,  dentro de &lt;code&gt;case SITF&lt;/code&gt; y &lt;code&gt;case SURF&lt;/code&gt; reemplaza :&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;//name = name + &amp;quot;SIFT&amp;quot;;&lt;/code&gt; por &lt;code&gt;fd=xfeatures2d::SIFT::create();&lt;/code&gt;
y &lt;code&gt;//name = name + &amp;quot;SURF&amp;quot;;&lt;/code&gt; por &lt;code&gt;fd=xfeatures2d::SURF::create();&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;haz lo mismo en la línea 242 para los extractores SIFT y SURF:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;SIFT&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;de&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;xfeatures2d&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;SIFT&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;create&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;();&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;break&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;SURF&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;de&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;xfeatures2d&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;SURF&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;create&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;();&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;break&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h1 id=&#34;5-reconstruye-para-aplicar-los-cambios&#34;&gt;[5].Reconstruye para aplicar los cambios&lt;/h1&gt;

&lt;p&gt;Vete a tu carpeta &lt;strong&gt;opencv/build&lt;/strong&gt; y ejecuta &lt;code&gt;make install&lt;/code&gt;.
Cuando finalice, sólo necesitarás incluir los ficheros &lt;strong&gt;.so&lt;/strong&gt; y &lt;strong&gt;.jar&lt;/strong&gt; en tu proyecto de openCV y podrás usar los descriptores SIFT y SURF en tu código.&lt;/p&gt;

&lt;h1 id=&#34;referencias&#34;&gt;Referencias:&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://stackoverflow.com/a/35266046/5032130&#34; target=&#34;_blank&#34;&gt;SURF and SIFT algorithms doesn&amp;rsquo;t work in OpenCV 3.0 Java | Stackoverflow&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
        </item>
        
        <item>
            <title>13 recursos / canales / podcasts sobre matemáticas</title>
            <link>https://elbauldelprogramador.com/recursos-canales-podcast-sobre-matematicas/</link>
            <pubDate>Fri, 24 Feb 2017 21:42:53 +0100</pubDate>
            
            <guid>https://elbauldelprogramador.com/recursos-canales-podcast-sobre-matematicas/</guid>
            <description>&lt;h1 id=&#34;qué-es-esta-lista&#34;&gt;¿Qué es esta lista?&lt;/h1&gt;

&lt;p&gt;A continuación se listan una serie de Podcast, Canales de Youtube y Blogs que sigo que hablan sobre matemáticas.&lt;/p&gt;

&lt;p&gt;Si conoces de algún recurso digital que hable y enseñe matemáticas no listado abajo, contribuye dejándonos un comentario y lo añadiremos a la lista, o mejor aún, añádelo tú mismo haciendo un &lt;a href=&#34;https://github.com/elbaulp/algui91-hugo/edit/master/content/post/resources-channels-podcast-to-learn-math.md&#34; target=&#34;_blank&#34; title=&#34;Pull Request!&#34;&gt;Pull Request!&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Gracias a &lt;a href=&#34;https://twitter.com/sinclair_88&#34; target=&#34;_blank&#34; title=&#34;@sinclair_88&#34;&gt;@sinclair_88&lt;/a&gt; por proponer la idea de crear la lista.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&#34;otras-listas&#34;&gt;Otras listas&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://elbauldelprogramador.com/blogs-canales-podcast-aprender-informatica/&#34; title=&#34;54 Blogs / Canales / Podcast sobre informática, Data Science y Seguridad&#34;&gt;54 Blogs / Canales / Podcast sobre informática, Data Science y Seguridad&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://elbauldelprogramador.com/blogs-podcasts-canales-youtube-sobre-ciencia/&#34; title=&#34;21 Podcasts / Canales de Youtube / Blogs sobre Ciencia&#34;&gt;21 Podcasts / Canales de Youtube / Blogs sobre Ciencia&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;podcasts&#34;&gt;Podcasts&lt;/h1&gt;

&lt;div class=&#34;row-post flex-grid&#34;&gt;
   &lt;article class=&#34;box-item animate&#34;&gt;
       &lt;h3&gt;Math Mutation&lt;/h3&gt;
       &lt;figure&gt;
         &lt;img sizes=&#34;(min-width: 100px) 100px, 100vw&#34; on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/mathmutation.jpg&#34; width=&#34;100&#34; height=&#34;100&#34; alt=&#34;&#34; title=&#34;&#34; &gt;&lt;/img&gt;
       &lt;/figure&gt;
       &lt;p&gt;Welcome to Math Mutation, a short podcast for people of all ages, where we explore fun, interesting, or just plain weird corners of mathematics that you probably didn&#39;t hear in school.&lt;/p&gt;
       &lt;div class=&#34;tags&#34;&gt;
         &lt;a href=&#34;http://mathmutation.blogspot.com.es/&#34; target=&#34;_blank&#34; title=&#34;Math Mutation&#34;&gt;MathMutation&lt;/a&gt;
       &lt;/div&gt;
   &lt;/article&gt;

   &lt;article class=&#34;box-item animate&#34;&gt;
       &lt;h3&gt;Rel Prime&lt;/h3&gt;
       &lt;figure&gt;
         &lt;img sizes=&#34;(min-width: 100px) 100px, 100vw&#34; on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/relprime.png&#34; width=&#34;100&#34; height=&#34;100&#34; alt=&#34;&#34; title=&#34;&#34; &gt;&lt;/img&gt;
       &lt;/figure&gt;
       &lt;p&gt;Relatively Prime is a mathematics podcast all about the stories behind the Queen of the Sciences that Samuel Hansen dreamt up in an extreme bout of egotism and delusions of grandeur where he spent too long listening to Radiolab, This American Life, and Snap Judgment and began to think, “Hey, I could do that.”&lt;/p&gt;
       &lt;div class=&#34;tags&#34;&gt;
         &lt;a href=&#34;http://relprime.com/&#34; target=&#34;_blank&#34; title=&#34;Math Mutation&#34;&gt;Rel Prime&lt;/a&gt;
       &lt;/div&gt;
   &lt;/article&gt;
&lt;/div&gt;

&lt;h1 id=&#34;youtube&#34;&gt;Youtube&lt;/h1&gt;

&lt;div class=&#34;row-post flex-grid&#34;&gt;

  &lt;article class=&#34;box-item animate&#34;&gt;
    &lt;h3&gt;3Blue1Brow&lt;/h3&gt;

    &lt;figure&gt;
      &lt;img sizes=&#34;(min-width: 100px) 100px, 100vw&#34; on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/3b1b.jpg&#34; width=&#34;100&#34; height=&#34;100&#34; alt=&#34;&#34; title=&#34;&#34; &gt;&lt;/img&gt;
    &lt;/figure&gt;

    &lt;p&gt;3Blue1Brow-postn is some combination of math and entertainment, depending on your disposition. The goal is for explanations to be driven by animations and for difficult problems to be made simple with changes in perspective.&lt;/p&gt;

    &lt;div class=&#34;tags&#34;&gt;
      &lt;a href=&#34;https://www.youtube.com/channel/UCYO_jab_esuFRV4b17AJtAw&#34; target=&#34;_blank&#34; title=&#34;3Blue1Brow-postn&#34;&gt;3Blue1Brow&lt;/a&gt;
    &lt;/div&gt;
  &lt;/article&gt;

  &lt;article class=&#34;box-item animate&#34;&gt;
    &lt;h3&gt;MathoLoger&lt;/h3&gt;
    &lt;figure&gt;
      &lt;img sizes=&#34;(min-width: 100px) 100px, 100vw&#34; on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/mathologer.jpg&#34; width=&#34;100&#34; height=&#34;100&#34;&gt;&lt;/img&gt;
    &lt;/figure&gt;

    &lt;p&gt;Enter the world of the Mathologer in which beautiful math(s) rules.&lt;/p&gt;

    &lt;div class=&#34;tags&#34;&gt;
      &lt;a href=&#34;https://www.youtube.com/channel/UC1_uAIS3r8Vu6JjXWvastJg&#34; target=&#34;_blank&#34; title=&#34;MathLoger&#34;&gt;MathLoger&lt;/a&gt;
    &lt;/div&gt;
  &lt;/article&gt;

  &lt;article class=&#34;box-item animate&#34;&gt;
    &lt;h3&gt;MinutePhysics&lt;/h3&gt;
    &lt;figure&gt;
      &lt;img sizes=&#34;(min-width: 100px) 100px, 100vw&#34; on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/minutephysics.jpg&#34; width=&#34;100&#34; height=&#34;100&#34;&gt;&lt;/img&gt;
    &lt;/figure&gt;

    &lt;p&gt;Simply put: cool physics and other sweet science.&lt;/p&gt;

    &lt;div class=&#34;tags&#34;&gt;
      &lt;a href=&#34;https://www.youtube.com/channel/UCUHW94eEFW7hkUMVaZz4eDg&#34; target=&#34;_blank&#34; title=&#34;MinutePhysics&#34;&gt;MinutePhysics&lt;/a&gt;
    &lt;/div&gt;
  &lt;/article&gt;

  &lt;article class=&#34;box-item animate&#34;&gt;
    &lt;h3&gt;MinutoDeFísica&lt;/h3&gt;
    &lt;figure&gt;
      &lt;img sizes=&#34;(min-width: 100px) 100px, 100vw&#34; on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/MinutoDeFisica.jpg&#34; width=&#34;100&#34; height=&#34;100&#34;&gt;&lt;/img&gt;
    &lt;/figure&gt;

    &lt;p&gt;En pocas palabras: física genial y ciencia interesante&lt;/p&gt;

    &lt;div class=&#34;tags&#34;&gt;
      &lt;a href=&#34;https://www.youtube.com/channel/UCMnPZh6PyA5PSYoNt0cjuxg&#34; target=&#34;_blank&#34; title=&#34;MinutoDeFísica&#34;&gt;MinutoDeFísica&lt;/a&gt;
    &lt;/div&gt;
  &lt;/article&gt;

  &lt;article class=&#34;box-item animate&#34;&gt;
    &lt;h3&gt;NumberPhile&lt;/h3&gt;
    &lt;figure&gt;
      &lt;img sizes=&#34;(min-width: 100px) 100px, 100vw&#34; on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/numberphile.jpg&#34; width=&#34;100&#34; height=&#34;100&#34;&gt;&lt;/img&gt;
    &lt;/figure&gt;

    &lt;p&gt;Videos about numbers - it&#39;s that simple.&lt;/p&gt;

    &lt;div class=&#34;tags&#34;&gt;
      &lt;a href=&#34;https://www.youtube.com/channel/UCoxcjq-8xIDTYp3uz647V5A&#34; target=&#34;_blank&#34; title=&#34;NumberPhile&#34;&gt;NumberPhile&lt;/a&gt;
    &lt;/div&gt;
  &lt;/article&gt;

  &lt;article class=&#34;box-item animate&#34;&gt;
    &lt;h3&gt;NumberPhile2&lt;/h3&gt;
    &lt;figure&gt;
      &lt;img sizes=&#34;(min-width: 100px) 100px, 100vw&#34; on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/numberphile2.jpg&#34; width=&#34;100&#34; height=&#34;100&#34;&gt;&lt;/img&gt;
    &lt;/figure&gt;

    &lt;p&gt;This is Numberphile&#39;s &#34;second channel&#34; for extra footage or stuff that didn&#39;t quite fit on the main channel&lt;/p&gt;

    &lt;div class=&#34;tags&#34;&gt;
      &lt;a href=&#34;https://www.youtube.com/channel/UCyp1gCHZJU_fGWFf2rtMkCg&#34; target=&#34;_blank&#34; title=&#34;NumberPhile2&#34;&gt;NumberPhile2&lt;/a&gt;
    &lt;/div&gt;
  &lt;/article&gt;

  &lt;article class=&#34;box-item animate&#34;&gt;
    &lt;h3&gt;PBS Infinite Series&lt;/h3&gt;
    &lt;figure&gt;
      &lt;img sizes=&#34;(min-width: 100px) 100px, 100vw&#34; on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/pbsinfiniteseries.jpg&#34; width=&#34;100&#34; height=&#34;100&#34;&gt;&lt;/img&gt;
    &lt;/figure&gt;

    &lt;p&gt;Mathematician Kelsey Houston-Edwards offers ambitious content for viewers that are eager to attain a greater understanding of the world around them. Math is pervasive - a robust yet precise language - and with each episode you’ll begin to see the math that underpins everything in this puzzling, yet fascinating, universe.&lt;/p&gt;

    &lt;div class=&#34;tags&#34;&gt;
      &lt;a href=&#34;https://www.youtube.com/channel/UCs4aHmggTfFrpkPcWSaBN9g&#34; target=&#34;_blank&#34; title=&#34;PBS Infinite Series&#34;&gt;PBS Infinite Series&lt;/a&gt;
    &lt;/div&gt;
  &lt;/article&gt;

  &lt;article class=&#34;box-item animate&#34;&gt;
    &lt;h3&gt;StandUpMaths&lt;/h3&gt;
    &lt;figure&gt;
      &lt;img sizes=&#34;(min-width: 100px) 100px, 100vw&#34; on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/standupmaths.jpg&#34; width=&#34;100&#34; height=&#34;100&#34;&gt;&lt;/img&gt;
    &lt;/figure&gt;

    &lt;p&gt;I do mathematics and stand-up. Sometimes simultaneously. Occasionally while being filmed. (It&#39;s quite the Venn diagram.)&lt;/p&gt;

    &lt;div class=&#34;tags&#34;&gt;
      &lt;a href=&#34;https://www.youtube.com/channel/UCSju5G2aFaWMqn-_0YBtq5A&#34; target=&#34;_blank&#34; title=&#34;StandUpMaths&#34;&gt;StandUpMaths&lt;/a&gt;
    &lt;/div&gt;
  &lt;/article&gt;

&lt;/div&gt;

&lt;p&gt;&lt;!--ad--&gt;&lt;/p&gt;

&lt;h1 id=&#34;blogs&#34;&gt;Blogs&lt;/h1&gt;

&lt;div class=&#34;row-post flex-grid&#34;&gt;

  &lt;article class=&#34;box-item animate&#34;&gt;
    &lt;h3&gt;Physics.org Mathematics section&lt;/h3&gt;
    &lt;figure&gt;
      &lt;img sizes=&#34;(min-width: 100px) 100px, 100vw&#34; on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/physics_math.jpg&#34; width=&#34;100&#34; height=&#34;100&#34;&gt;&lt;/img&gt;
    &lt;/figure&gt;

    &lt;p&gt;Mathematics section on Physics.org&lt;/p&gt;

    &lt;div class=&#34;tags&#34;&gt;
      &lt;a href=&#34;https://phys.org/science-news/mathematics/&#34; target=&#34;_blank&#34; title=&#34;Physics.org Mathematics&#34;&gt;Physics.org Mathematics&lt;/a&gt;
    &lt;/div&gt;
  &lt;/article&gt;

  &lt;article class=&#34;box-item animate&#34;&gt;
    &lt;h3&gt;Physics.org Quantum Physics section&lt;/h3&gt;
    &lt;figure&gt;
      &lt;img sizes=&#34;(min-width: 100px) 100px, 100vw&#34; on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/physics_math.jpg&#34; width=&#34;100&#34; height=&#34;100&#34;&gt;&lt;/img&gt;
    &lt;/figure&gt;

    &lt;p&gt;Physics.org Quantum Physics section&lt;/p&gt;

    &lt;div class=&#34;tags&#34;&gt;
      &lt;a href=&#34;https://phys.org/physics-news/quantum-physics/&#34; target=&#34;_blank&#34; title=&#34;Quantum Physics section on physics.org&#34;&gt;Quantum Physics section on physics.org&lt;/a&gt;
    &lt;/div&gt;
  &lt;/article&gt;

  &lt;article class=&#34;box-item animate&#34;&gt;
    &lt;h3&gt;&lt;/h3&gt;
    &lt;figure&gt;
      &lt;img sizes=&#34;(min-width: 100px) 100px, 100vw&#34; on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/Quanta.jpg&#34; width=&#34;100&#34; height=&#34;100&#34;&gt;&lt;/img&gt;
    &lt;/figure&gt;

    &lt;p&gt;Quanta Magazine is an editorially independent online publication launched by the Simons Foundation to enhance public understanding of science. Why Quanta? Albert Einstein called photons “quanta of light.” Our goal is to “illuminate science.”&lt;/p&gt;

    &lt;div class=&#34;tags&#34;&gt;
      &lt;a href=&#34;https://www.quantamagazine.org/&#34; target=&#34;_blank&#34; title=&#34;Quanta Magazine&#34;&gt;Quanta Magazine&lt;/a&gt;
    &lt;/div&gt;
  &lt;/article&gt;
&lt;/div&gt;

&lt;h1 id=&#34;referencias&#34;&gt;Referencias&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;List of interesting math podcasts? | &lt;a href=&#34;http://math.stackexchange.com/q/3/144541&#34; target=&#34;_blank&#34; title=&#34;List of interesting math podcasts?&#34;&gt;math.stackexchange.com&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
        </item>
        
        <item>
            <title>Dibujar árboles de dependencias y Máquinas de soporte Vectoriales usando LaTeX y Tikz</title>
            <link>https://elbauldelprogramador.com/creating-trees-dependency-graphs-svms-in-tikz/</link>
            <pubDate>Thu, 16 Feb 2017 16:50:27 +0100</pubDate>
            
            <guid>https://elbauldelprogramador.com/creating-trees-dependency-graphs-svms-in-tikz/</guid>
            <description>&lt;p&gt;Como he comentado, para dibujar los árboles y la SVM usé el paquete &lt;code&gt;tikz&lt;/code&gt; de &lt;a href=&#34;https://elbauldelprogramador.com/tags/latex&#34; title=&#34;LaTeX&#34;&gt;LaTeX&lt;/a&gt;, a continuación muestro el código que usé:&lt;/p&gt;

&lt;h1 id=&#34;dibujando-un-árbol-de-dependencias-con-tikz&#34;&gt;Dibujando un árbol de dependencias con Tikz&lt;/h1&gt;

&lt;p&gt;&lt;!--ad--&gt;&lt;/p&gt;

&lt;h2 id=&#34;ejemplo-1&#34;&gt;Ejemplo 1&lt;/h2&gt;

&lt;p&gt;El código es el siguiente:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-latex&#34; data-lang=&#34;latex&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;\documentclass&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;standalone&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;\usepackage&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;tikz&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;\usepackage&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;tikz-dependency&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;\begin&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;document&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;\begin&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;dependency&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;[edge slant=15pt,label theme = simple, edge theme = iron]
  &lt;span class=&#34;k&#34;&gt;\begin&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;deptext&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;[column sep=1em]
    This &lt;span class=&#34;k&#34;&gt;\&amp;amp;&lt;/span&gt; time &lt;span class=&#34;k&#34;&gt;\&amp;amp;&lt;/span&gt; around &lt;span class=&#34;k&#34;&gt;\&amp;amp;&lt;/span&gt; , &lt;span class=&#34;k&#34;&gt;\&amp;amp;&lt;/span&gt; they &lt;span class=&#34;k&#34;&gt;\&amp;amp;&lt;/span&gt; &amp;#39;re &lt;span class=&#34;k&#34;&gt;\&amp;amp;&lt;/span&gt; moving &lt;span class=&#34;k&#34;&gt;\&amp;amp;&lt;/span&gt; even &lt;span class=&#34;k&#34;&gt;\&amp;amp;&lt;/span&gt; faster &lt;span class=&#34;k&#34;&gt;\&amp;amp;&lt;/span&gt;
    . &lt;span class=&#34;k&#34;&gt;\\&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;\end&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;deptext&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;\deproot&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;7&lt;span class=&#34;nb&#34;&gt;}{&lt;/span&gt;ROOT&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;\depedge&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;2&lt;span class=&#34;nb&#34;&gt;}{&lt;/span&gt;1&lt;span class=&#34;nb&#34;&gt;}{&lt;/span&gt;DET&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;\depedge&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;[edge height=1.9cm]&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;7&lt;span class=&#34;nb&#34;&gt;}{&lt;/span&gt;2&lt;span class=&#34;nb&#34;&gt;}{&lt;/span&gt;TMOD&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;\depedge&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;2&lt;span class=&#34;nb&#34;&gt;}{&lt;/span&gt;3&lt;span class=&#34;nb&#34;&gt;}{&lt;/span&gt;ADVMOD&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;\depedge&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;7&lt;span class=&#34;nb&#34;&gt;}{&lt;/span&gt;6&lt;span class=&#34;nb&#34;&gt;}{&lt;/span&gt;AUX&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;\depedge&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;7&lt;span class=&#34;nb&#34;&gt;}{&lt;/span&gt;5&lt;span class=&#34;nb&#34;&gt;}{&lt;/span&gt;NSUBJ&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;\depedge&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;7&lt;span class=&#34;nb&#34;&gt;}{&lt;/span&gt;4&lt;span class=&#34;nb&#34;&gt;}{&lt;/span&gt;PUNCT&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;\depedge&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;7&lt;span class=&#34;nb&#34;&gt;}{&lt;/span&gt;10&lt;span class=&#34;nb&#34;&gt;}{&lt;/span&gt;PUNCT&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;\depedge&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;7&lt;span class=&#34;nb&#34;&gt;}{&lt;/span&gt;9&lt;span class=&#34;nb&#34;&gt;}{&lt;/span&gt;ADVMOD&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;\depedge&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;[edge start x offset=-4pt]&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;9&lt;span class=&#34;nb&#34;&gt;}{&lt;/span&gt;8&lt;span class=&#34;nb&#34;&gt;}{&lt;/span&gt;ADVMOD&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;\end&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;dependency&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;\end&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;document&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;El resultado:&lt;/p&gt;

&lt;figure&gt;
&lt;a href=&#34;https://elbauldelprogramador.com/img/dependency-tree.png&#34;&gt;&lt;img sizes=&#34;(min-width: 799px) 799px, 100vw&#34; on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/dependency-tree.png&#34; alt=&#34;Dependenty tree in tikz&#34; title=&#34;Dependenty tree in tikz&#34; width=&#34;799&#34; height=&#34;194&#34;&gt;&lt;/img&gt;&lt;/a&gt;
&lt;figcaption&gt;Dependenty tree in tikz&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;h2 id=&#34;ejemplo-2&#34;&gt;Ejemplo 2&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-latex&#34; data-lang=&#34;latex&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;\documentclass&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;standalone&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;\usepackage&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;tikz&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;\usepackage&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;tikz-qtree,tikz-qtree-compat&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;\begin&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;document&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;\tiny&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;\begin&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;tikzpicture&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;[every node/.style=&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;align=center&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;,scale=.9]
  &lt;span class=&#34;k&#34;&gt;\tikzset&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;
    edge from parent/.style=&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;
      draw,edge from parent
      path=&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;(&lt;span class=&#34;k&#34;&gt;\tikzparentnode&lt;/span&gt;.south)-- +(0,-8pt)-| (&lt;span class=&#34;k&#34;&gt;\tikzchildnode&lt;/span&gt;)&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;
    &lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;,
    frontier/.style=&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;distance from root=208pt&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;, &lt;span class=&#34;c&#34;&gt;% Align leaf nodes&lt;/span&gt;
    level 1+/.style=&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;level distance=18pt&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;c&#34;&gt;% Distance between levels&lt;/span&gt;
  &lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;

   &lt;span class=&#34;k&#34;&gt;\Tree&lt;/span&gt; [.S
             [.NP Rolls-Royce&lt;span class=&#34;k&#34;&gt;\\&lt;/span&gt;NNP Motor&lt;span class=&#34;k&#34;&gt;\\&lt;/span&gt;NNP Cars&lt;span class=&#34;k&#34;&gt;\\&lt;/span&gt;NNPS Inc&lt;span class=&#34;k&#34;&gt;\\&lt;/span&gt;NNP ]
             [.VP said&lt;span class=&#34;k&#34;&gt;\\&lt;/span&gt;VBD
                [.SBAR [.none ]
                   [.S
                      [.NP it&lt;span class=&#34;k&#34;&gt;\\&lt;/span&gt;PRP ]
                      [. VP expects&lt;span class=&#34;k&#34;&gt;\\&lt;/span&gt;VBZ
                         [.S
                            [.NP its&lt;span class=&#34;k&#34;&gt;\\&lt;/span&gt;PRP&lt;span class=&#34;k&#34;&gt;\$&lt;/span&gt; U.S&lt;span class=&#34;k&#34;&gt;\\&lt;/span&gt;NNP sales&lt;span class=&#34;k&#34;&gt;\\&lt;/span&gt;NNS ]
                            [.VP to&lt;span class=&#34;k&#34;&gt;\\&lt;/span&gt;TO
                               [.VP remain&lt;span class=&#34;k&#34;&gt;\\&lt;/span&gt;VB
                                  [.ADJP steady&lt;span class=&#34;k&#34;&gt;\\&lt;/span&gt;JJ ]
                                  [.PP at&lt;span class=&#34;k&#34;&gt;\\&lt;/span&gt;IN
                                     [.NP
                                        [.QP about&lt;span class=&#34;k&#34;&gt;\\&lt;/span&gt;IN 1200&lt;span class=&#34;k&#34;&gt;\\&lt;/span&gt;CD ]
                                        cars&lt;span class=&#34;k&#34;&gt;\\&lt;/span&gt;NNS
                                     ]
                                  ]
                               ]
                            ]
                         ]
                      ]
                   ]
                ]
             ]
         ]
&lt;span class=&#34;k&#34;&gt;\end&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;tikzpicture&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;\end&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;document&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Resultado:&lt;/p&gt;

&lt;figure&gt;
&lt;a href=&#34;https://elbauldelprogramador.com/img/dependency-tree-2.png&#34;&gt;&lt;img sizes=&#34;(min-width: 926px) 926px, 100vw&#34; on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/dependency-tree-2.png&#34; alt=&#34;Other Dependency Tree in tikz&#34; title=&#34;Other Dependency Tree in tikz&#34; width=&#34;926&#34; height=&#34;485&#34;&gt;&lt;/img&gt;&lt;/a&gt;
&lt;figcaption&gt;Other Dependency Tree in tikz&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;h2 id=&#34;ejemplo-3&#34;&gt;Ejemplo 3&lt;/h2&gt;

&lt;p&gt;El último ejemplo de árbol:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-latex&#34; data-lang=&#34;latex&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;\documentclass&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;standalone&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;\usepackage&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;tikz&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;\usepackage&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;tikz-qtree,tikz-qtree-compat&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;\begin&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;document&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;\begin&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;tikzpicture&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;[every node/.style=&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;align=center&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;,level distance=30pt]
    &lt;span class=&#34;k&#34;&gt;\tikzset&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;edge from parent/.append style=&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;&amp;lt;-, &amp;gt;=latex,thick&lt;span class=&#34;nb&#34;&gt;}}&lt;/span&gt;
   &lt;span class=&#34;k&#34;&gt;\Tree&lt;/span&gt; [.said&lt;span class=&#34;k&#34;&gt;\\&lt;/span&gt;VBD
             [.Inc.&lt;span class=&#34;k&#34;&gt;\\&lt;/span&gt;NNP Rolls-Royce&lt;span class=&#34;k&#34;&gt;\\&lt;/span&gt;NNP Motor&lt;span class=&#34;k&#34;&gt;\\&lt;/span&gt;NNP Cars&lt;span class=&#34;k&#34;&gt;\\&lt;/span&gt;NNPS ]
             [.expects&lt;span class=&#34;k&#34;&gt;\\&lt;/span&gt;VBZ it&lt;span class=&#34;k&#34;&gt;\\&lt;/span&gt;PRP
                [.remain&lt;span class=&#34;k&#34;&gt;\\&lt;/span&gt;VB
                   [.sales&lt;span class=&#34;k&#34;&gt;\\&lt;/span&gt;NNS its&lt;span class=&#34;k&#34;&gt;\\&lt;/span&gt;PRP&lt;span class=&#34;k&#34;&gt;\$&lt;/span&gt; U.S&lt;span class=&#34;k&#34;&gt;\\&lt;/span&gt;NNP ]
                   to&lt;span class=&#34;k&#34;&gt;\\&lt;/span&gt;TO
                   steady&lt;span class=&#34;k&#34;&gt;\\&lt;/span&gt;JJ
                   [.at&lt;span class=&#34;k&#34;&gt;\\&lt;/span&gt;IN [.cars&lt;span class=&#34;k&#34;&gt;\\&lt;/span&gt;NNS [.about&lt;span class=&#34;k&#34;&gt;\\&lt;/span&gt;IN 1200&lt;span class=&#34;k&#34;&gt;\\&lt;/span&gt;CD ] ] ]
                ]
             ]
           ]
   &lt;span class=&#34;k&#34;&gt;\end&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;tikzpicture&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;\end&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;document&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;figure&gt;
&lt;a href=&#34;https://elbauldelprogramador.com/img/dependency-tree-3.png&#34;&gt;&lt;img sizes=&#34;(min-width: 795px) 795px, 100vw&#34; on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/dependency-tree-3.png&#34; alt=&#34;Yet another example of a Dependency tree in tikz&#34; title=&#34;Yet another example of a Dependency tree in tikz&#34; width=&#34;795&#34; height=&#34;513&#34;&gt;&lt;/img&gt;&lt;/a&gt;
&lt;figcaption&gt;Yet another example of a Dependency tree in tikz&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;h1 id=&#34;dibujando-una-máquina-de-soporte-vectorial-svm-en-tikz&#34;&gt;Dibujando una máquina de soporte vectorial (SVM) en Tikz&lt;/h1&gt;

&lt;p&gt;Para la explicación gráfica de lo que es una SVM:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-latex&#34; data-lang=&#34;latex&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;\documentclass&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;standalone&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;\usepackage&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;tikz&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;\usepackage&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;tikz-qtree,tikz-qtree-compat&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;\usetikzlibrary&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;calc&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;\begin&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;document&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;


  &lt;span class=&#34;k&#34;&gt;\tikzset&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;
    leftNode/.style=&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;circle,minimum width=.5ex, fill=none,draw&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;,
    rightNode/.style=&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;circle,minimum width=.5ex, fill=black,thick,draw&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;,
    rightNodeInLine/.style=&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;solid,circle,minimum width=.7ex, fill=black,thick,draw=white&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;,
    leftNodeInLine/.style=&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;solid,circle,minimum width=.7ex, fill=none,thick,draw&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;,
  &lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;\begin&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;tikzpicture&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;[
        scale=2,
        important line/.style=&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;thick&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;, dashed line/.style=&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;dashed, thin&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;,
        every node/.style=&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;color=black&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;,
    ]
    &lt;span class=&#34;k&#34;&gt;\draw&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;[dashed line, yshift=.7cm]&lt;/span&gt;
       (.2,.2) coordinate (sls) -- (2.5,2.5) coordinate (sle)
       node[solid,circle,minimum width=2.8ex,fill=none,thick,draw] (name) at (2,2)&lt;span class=&#34;nb&#34;&gt;{}&lt;/span&gt;
       node[leftNodeInLine] (name) at (2,2)&lt;span class=&#34;nb&#34;&gt;{}&lt;/span&gt;
       node[solid,circle,minimum width=2.8ex,fill=none,thick,draw] (name) at (1.5,1.5)&lt;span class=&#34;nb&#34;&gt;{}&lt;/span&gt;
       node[leftNodeInLine] (name) at (1.5,1.5)&lt;span class=&#34;nb&#34;&gt;{}&lt;/span&gt;
       node [above right] &lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;w&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;\cdot&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt; x &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt; b &amp;gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;;

    &lt;span class=&#34;k&#34;&gt;\draw&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;[important line]&lt;/span&gt;
       (.7,.7) coordinate (lines) -- (3,3) coordinate (linee)
       node [above right] &lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;w&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;\cdot&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt; x &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt; b &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;;

    &lt;span class=&#34;k&#34;&gt;\draw&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;[dashed line, xshift=.7cm]&lt;/span&gt;
       (.2,.2) coordinate (ils) -- (2.5,2.5) coordinate (ile)
       node[solid,circle,minimum width=2.8ex,fill=none,thick,draw] (name) at (1.8,1.8)&lt;span class=&#34;nb&#34;&gt;{}&lt;/span&gt;
       node[rightNodeInLine] (name) at (1.8,1.8)&lt;span class=&#34;nb&#34;&gt;{}&lt;/span&gt;
       node [above right] &lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;w&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;\cdot&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt; x &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt; b &amp;lt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;;

    &lt;span class=&#34;k&#34;&gt;\draw&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;[very thick,&amp;lt;-&amp;gt;]&lt;/span&gt; (&lt;span class=&#34;s&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;sls&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)+(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;,.&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;$&lt;/span&gt;) -- (&lt;span class=&#34;s&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;ils&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)+(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;,.&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;$&lt;/span&gt;)
       node[sloped,above, near end] &lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;Margen&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;;

    &lt;span class=&#34;k&#34;&gt;\foreach&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;\Point&lt;/span&gt; in &lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;(.9,2.4), (1.3,2.5), (1.3,2.1), (2,3), (1,2.9)&lt;span class=&#34;nb&#34;&gt;}{&lt;/span&gt;
      &lt;span class=&#34;k&#34;&gt;\draw&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;\Point&lt;/span&gt; node[leftNode]&lt;span class=&#34;nb&#34;&gt;{}&lt;/span&gt;;
    &lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;

    &lt;span class=&#34;k&#34;&gt;\foreach&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;\Point&lt;/span&gt; in &lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;(2.9,1.4), (2.3,.5), (3.3,.1), (2,0.9), (2.5,1)&lt;span class=&#34;nb&#34;&gt;}{&lt;/span&gt;
      &lt;span class=&#34;k&#34;&gt;\draw&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;\Point&lt;/span&gt; node[rightNode]&lt;span class=&#34;nb&#34;&gt;{}&lt;/span&gt;;
    &lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;\end&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;tikzpicture&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;\end&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;document&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;figure&gt;
&lt;a href=&#34;https://elbauldelprogramador.com/img/support-vector-machine-tikz-latex.png&#34;&gt;&lt;img sizes=&#34;(min-width: 811px) 811px, 100vw&#34; on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/support-vector-machine-tikz-latex.png&#34; alt=&#34;Support Vector Machine in Latex with Tikz&#34; title=&#34;Support Vector Machine in Latex with Tikz&#34; width=&#34;811&#34; height=&#34;652&#34;&gt;&lt;/img&gt;&lt;/a&gt;
&lt;figcaption&gt;Support Vector Machine in Latex with Tikz&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;h1 id=&#34;referencias&#34;&gt;Referencias&lt;/h1&gt;

&lt;p&gt;Cuando empecé a dibujar estas figuras en &lt;code&gt;tikz&lt;/code&gt; se me presentaron algunas dudas que pregunté en tex.stackexchange.com. Estas fueron dichas preguntas:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Align all leaf nodes in tikz-qtree | &lt;a href=&#34;http://tex.stackexchange.com/questions/340929/align-all-leaf-nodes-in-tikz-qtree&#34; target=&#34;_blank&#34; title=&#34;Align all leaf nodes in tikz-qtree&#34;&gt;tex.stackexchange.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Align independent tikzpictures | &lt;a href=&#34;http://tex.stackexchange.com/questions/342978/align-independent-tikzpictures&#34; target=&#34;_blank&#34; title=&#34;Align independent tikzpictures&#34;&gt;tex.stackexchange.com&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
        </item>
        
        <item>
            <title>Cómo convertir una columna a VectorUDT/DenseVector en Spark</title>
            <link>https://elbauldelprogramador.com/how-to-convert-column-to-vectorudt-densevector-spark/</link>
            <pubDate>Mon, 06 Feb 2017 17:04:46 +0100</pubDate>
            
            <guid>https://elbauldelprogramador.com/how-to-convert-column-to-vectorudt-densevector-spark/</guid>
            <description>&lt;p&gt;Estoy iniciándome en el mundo de &lt;code&gt;spark&lt;/code&gt;, ojeando su librería &lt;code&gt;MLlib&lt;/code&gt; decidí implementar una simple &lt;a href=&#34;https://spark.apache.org/docs/latest/ml-classification-regression.html#linear-regression&#34; target=&#34;_blank&#34; title=&#34;Regresión lineal&#34;&gt;Regresión lineal&lt;/a&gt;. Aunque el ejemplo de su documentación parece sencillo, cuando intentaba leer mi propio csv con datos obtenía el siguiente error:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Column features must be of type org.apache.spark.ml.linalg.VectorUDT&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Tras varias horas buscando sin encontrar ninguna solución, al fin conseguí convertir la columna &lt;code&gt;features&lt;/code&gt; a &lt;code&gt;VectorUDT&lt;/code&gt;, así es como lo hice:&lt;/p&gt;

&lt;h1 id=&#34;convertir-una-columna-a-vectorudt-en-spark&#34;&gt;Convertir una columna a VectorUDT en Spark&lt;/h1&gt;

&lt;p&gt;Primero preparamos el entorno:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-scala&#34; data-lang=&#34;scala&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;val&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;spark&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;SparkSession&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;builder&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;master&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;local&amp;quot;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;appName&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;spark session example&amp;quot;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;getOrCreate&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;val&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;df&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;spark&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;read&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;format&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;csv&amp;quot;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;).&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;option&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;header&amp;quot;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;quot;true&amp;quot;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;).&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;load&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;getClass&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;getResource&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;/generated_data.csv&amp;quot;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;getPath&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;printSchema&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;!--ad--&gt;&lt;/p&gt;

&lt;p&gt;El código de arriba simplemente configura una sesión &lt;code&gt;Spark&lt;/code&gt; y lee el fichero &lt;code&gt;generated_data.csv&lt;/code&gt;. Por último muestra el &lt;code&gt;schema&lt;/code&gt; de los datos, el cual es:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-scala&#34; data-lang=&#34;scala&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;root&lt;/span&gt;
 &lt;span class=&#34;o&#34;&gt;|--&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ind_var_a&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;nullable&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
 &lt;span class=&#34;o&#34;&gt;|--&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ind_var_b&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;nullable&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
 &lt;span class=&#34;o&#34;&gt;|--&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ind_var_c&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;nullable&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
 &lt;span class=&#34;o&#34;&gt;|--&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ind_var_d&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;nullable&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
 &lt;span class=&#34;o&#34;&gt;|--&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ind_var_e&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;nullable&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
 &lt;span class=&#34;o&#34;&gt;|--&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ind_var_f&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;nullable&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
 &lt;span class=&#34;o&#34;&gt;|--&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ind_var_g&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;nullable&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
 &lt;span class=&#34;o&#34;&gt;|--&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ind_var_h&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;nullable&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
 &lt;span class=&#34;o&#34;&gt;|--&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;dependent_var&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;nullable&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Como puede verse, &lt;code&gt;dependent_var&lt;/code&gt; es de tipo &lt;code&gt;String&lt;/code&gt;, pero debería ser de tipo &lt;code&gt;VectorUDT&lt;/code&gt;, para convertirla se debe usar &lt;code&gt;VectorAssembler&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-scala&#34; data-lang=&#34;scala&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;val&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;schema&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;StructType&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt;
 &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;add&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;features&amp;quot;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;VectorUDT&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;())&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;val&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;toDouble&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;udf&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;Double&lt;/span&gt;, &lt;span class=&#34;kt&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;](&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;_&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;toDouble&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;val&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;df2&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;withColumn&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;dependent_var&amp;quot;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;toDouble&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;dependent_var&amp;quot;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)))&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;val&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;assembler&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;VectorAssembler&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;().&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;setInputCols&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;Array&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;dependent_var&amp;quot;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)).&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;setOutputCol&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;features&amp;quot;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;val&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;out&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;assembler&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;transform&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;df2&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;df2&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;printSchema&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;out&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;printSchema&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;El código de arriba declara un &lt;code&gt;schema&lt;/code&gt; para la columna que vamos a convertir, luego creamos una &lt;code&gt;udf&lt;/code&gt; (&lt;em&gt;User Defined Function&lt;/em&gt;) para convertir los valores de la columna de &lt;code&gt;String&lt;/code&gt; a &lt;code&gt;Double&lt;/code&gt;. Por último, se crea un &lt;code&gt;VectorAssembler&lt;/code&gt; y se transforma el &lt;em&gt;dataset&lt;/em&gt; al nuevo esquema. Para comprobar que de hecho hemos convertido el tipo, se imprime el esquema del &lt;em&gt;dataset&lt;/em&gt; &lt;code&gt;out&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-scala&#34; data-lang=&#34;scala&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;root&lt;/span&gt;
 &lt;span class=&#34;o&#34;&gt;|--&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ind_var_a&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;nullable&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
 &lt;span class=&#34;o&#34;&gt;|--&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ind_var_b&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;nullable&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
 &lt;span class=&#34;o&#34;&gt;|--&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ind_var_c&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;nullable&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
 &lt;span class=&#34;o&#34;&gt;|--&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ind_var_d&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;nullable&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
 &lt;span class=&#34;o&#34;&gt;|--&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ind_var_e&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;nullable&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
 &lt;span class=&#34;o&#34;&gt;|--&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ind_var_f&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;nullable&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
 &lt;span class=&#34;o&#34;&gt;|--&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ind_var_g&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;nullable&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
 &lt;span class=&#34;o&#34;&gt;|--&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ind_var_h&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;nullable&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
 &lt;span class=&#34;o&#34;&gt;|--&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;dependent_var&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;double&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;nullable&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
 &lt;span class=&#34;o&#34;&gt;|--&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;features&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;vector&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;nullable&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h1 id=&#34;código-completo&#34;&gt;Código completo&lt;/h1&gt;

&lt;p&gt;El código completo es el siguiente:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-scala&#34; data-lang=&#34;scala&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;package&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;elbauldelprogramador&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;org.apache.spark.ml.feature.VectorAssembler&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;org.apache.spark.ml.regression.LinearRegression&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;org.apache.spark.mllib.linalg.VectorUDT&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;org.apache.spark.sql.SparkSession&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;org.apache.spark.sql.functions.udf&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;org.apache.spark.sql.types.StructType&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;object&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;SimpleApp&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;args&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;Array&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;])&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;Unit&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;

    &lt;span class=&#34;k&#34;&gt;val&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;spark&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;SparkSession&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;builder&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;
      &lt;span class=&#34;n&#34;&gt;master&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;local&amp;quot;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
      &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;appName&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;spark session example&amp;quot;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
      &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;getOrCreate&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt;

    &lt;span class=&#34;k&#34;&gt;val&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;df&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;spark&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;read&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;format&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;csv&amp;quot;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;).&lt;/span&gt;
      &lt;span class=&#34;n&#34;&gt;option&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;header&amp;quot;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;quot;true&amp;quot;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;).&lt;/span&gt;
      &lt;span class=&#34;n&#34;&gt;load&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;getClass&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;getResource&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;/generated_data.csv&amp;quot;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;getPath&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;

    &lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;printSchema&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt;

    &lt;span class=&#34;k&#34;&gt;val&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;schema&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;StructType&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt;
     &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;add&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;features&amp;quot;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;VectorUDT&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;())&lt;/span&gt;

    &lt;span class=&#34;k&#34;&gt;val&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;toDouble&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;udf&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;Double&lt;/span&gt;, &lt;span class=&#34;kt&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;](&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;_&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;toDouble&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;val&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;df2&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;withColumn&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;dependent_var&amp;quot;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;toDouble&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;dependent_var&amp;quot;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)))&lt;/span&gt;

    &lt;span class=&#34;k&#34;&gt;val&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;assembler&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;VectorAssembler&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;().&lt;/span&gt;
      &lt;span class=&#34;n&#34;&gt;setInputCols&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;Array&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;dependent_var&amp;quot;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)).&lt;/span&gt;
      &lt;span class=&#34;n&#34;&gt;setOutputCol&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;features&amp;quot;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;

    &lt;span class=&#34;k&#34;&gt;val&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;out&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;assembler&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;transform&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;df2&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;

    &lt;span class=&#34;n&#34;&gt;df2&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;printSchema&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;out&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;printSchema&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt;

    &lt;span class=&#34;k&#34;&gt;val&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;lr&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;LinearRegression&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt;
      &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;setMaxIter&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
      &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;setRegParam&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;0.3&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
      &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;setElasticNetParam&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;0.8&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;

    &lt;span class=&#34;c1&#34;&gt;// Fit the model&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;val&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;lrModel&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;lr&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fit&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;out&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;

    &lt;span class=&#34;n&#34;&gt;spark&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;close&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h1 id=&#34;otro-método&#34;&gt;Otro método&lt;/h1&gt;

&lt;p&gt;Acabo de descubrir otra forma de conseguir el mismo objetivo:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-scala&#34; data-lang=&#34;scala&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;val&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;df&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;spark&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;read&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;format&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;csv&amp;quot;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;).&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;option&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;header&amp;quot;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;quot;true&amp;quot;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;).&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;option&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;inferSchema&amp;quot;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;quot;true&amp;quot;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;).&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;load&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;getClass&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;getResource&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;/generated_data.csv&amp;quot;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;getPath&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;val&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;df1&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;select&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;dependent_var&amp;quot;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;quot;ind_var_d&amp;quot;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;val&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;formula&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;RFormula&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;().&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;setFormula&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;dependent_var ~ ind_var_d&amp;quot;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;).&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;setFeaturesCol&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;features&amp;quot;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;).&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;setLabelCol&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;label&amp;quot;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;val&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;train&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;formula&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fit&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;df1&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;transform&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;df1&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Ahora &lt;code&gt;train&lt;/code&gt; tendrá dos columnas adicionales, &lt;code&gt;features&lt;/code&gt; y &lt;code&gt;label&lt;/code&gt;, siendo &lt;code&gt;features&lt;/code&gt; de tipo &lt;code&gt;Vector&lt;/code&gt;.&lt;/p&gt;

&lt;h1 id=&#34;conclusión&#34;&gt;Conclusión&lt;/h1&gt;

&lt;p&gt;Estoy seguro de que existen formas mejores de lograr esta conversión, pero soy nuevo en &lt;code&gt;spark&lt;/code&gt; y esta fue la única que conseguí hacer funcionar. Si sabes de alguna mejor, escríbela en los comentarios!&lt;/p&gt;

&lt;h1 id=&#34;referencias&#34;&gt;Referencias&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;VectorAssembler | &lt;a href=&#34;http://spark.apache.org/docs/latest/ml-features.html#vectorassembler&#34; target=&#34;_blank&#34; title=&#34;VectorAssembler Documentation&#34;&gt;spark.apache.org&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;El dataset es el sacado del libro &lt;a href=&#34;http://amzn.to/2kFpfde&#34; target=&#34;_blank&#34; title=&#34;Test Driven Machine Learning&#34;&gt;Test Driven Machine Learning&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
        </item>
        
        <item>
            <title>Cómo eliminar un paquete slotted en Gentoo</title>
            <link>https://elbauldelprogramador.com/how-to-remove-slotted-packages-in-gentoo/</link>
            <pubDate>Sat, 04 Feb 2017 12:53:37 +0100</pubDate>
            
            <guid>https://elbauldelprogramador.com/how-to-remove-slotted-packages-in-gentoo/</guid>
            <description>

&lt;p&gt;Hace poco tuve un problema intentando eliminar un paquete de los llamados &lt;em&gt;slotted&lt;/em&gt; en Gentoo, a continuación muestro cómo lo resolví.&lt;/p&gt;

&lt;p&gt;Primero debemos usar &lt;code&gt;equery list &amp;lt;pkg&amp;gt;&lt;/code&gt; para listar los paquetes que coinciden con el nombre del paquete a eliminar:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;$ equery list emacs
 * Searching &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; emacs ...
&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;IP-&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;  &lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; app-editors/emacs-24.5-r3:24
&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;IP-&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;  &lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; app-editors/emacs-25.1:25
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Hay dos paquetes de &lt;a href=&#34;https://elbauldelprogramador.com/tags/emacs&#34; title=&#34;emacs&#34;&gt;emacs&lt;/a&gt; instalados, cada uno en un &lt;em&gt;slot&lt;/em&gt; distinto, &lt;code&gt;:24&lt;/code&gt; y &lt;code&gt;:25&lt;/code&gt;. Para borrar el más antiguo, ejecutamos:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;$ sudo emerge -C emacs-24.5-r3:24
Password:
 * This action can remove important packages! In order to be safer, use
 * &lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;emerge -pv --depclean &amp;lt;atom&amp;gt;&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt; to check &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; reverse dependencies before
 * removing packages.

 app-editors/emacs
    selected: 24.5-r3
   protected: none
     omitted: 25.1

All selected packages: &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;app-editors/emacs-24.5-r3

&amp;gt;&amp;gt;&amp;gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;Selected&amp;#39;&lt;/span&gt; packages are slated &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; removal.
&amp;gt;&amp;gt;&amp;gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;Protected&amp;#39;&lt;/span&gt; and &lt;span class=&#34;s1&#34;&gt;&amp;#39;omitted&amp;#39;&lt;/span&gt; packages will not be removed.

&amp;gt;&amp;gt;&amp;gt; Waiting &lt;span class=&#34;m&#34;&gt;5&lt;/span&gt; seconds before starting...
&amp;gt;&amp;gt;&amp;gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;Control-C to abort&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;...
&amp;gt;&amp;gt;&amp;gt; Unmerging in: &lt;span class=&#34;m&#34;&gt;5&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;4&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;3&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;2&lt;/span&gt; 1
&amp;gt;&amp;gt;&amp;gt; Unmerging &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt; of 1&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; app-editors/emacs-24.5-r3...
 * Regenerating site-gentoo.el &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; GNU Emacs &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;postrm&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; ...
&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt; ok &lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;
 * ... &lt;span class=&#34;m&#34;&gt;4&lt;/span&gt; site initialisation files included.

 * Regenerating GNU info directory index...
 * Processed &lt;span class=&#34;m&#34;&gt;140&lt;/span&gt; info files.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Tras eliminar el paquete, comprobamos qué otros paquetes dependían de él&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt; $ equery depends emacs-24.5-r3:24
 * These packages depend on emacs-24.5-r3:24:
app-emacs/emacs-common-gentoo-1.5 &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;virtual/emacs&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
app-emacs/markdown-mode-2.1 &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&amp;gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;virtual/emacs-23&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
app-emacs/quilt-el-0.48.0 &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&amp;gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;virtual/emacs-23&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
app-emacs/scala-mode-2.10.3 &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&amp;gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;virtual/emacs-23&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
dev-python/cython-0.24.1 &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;emacs ? virtual/emacs&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
dev-scheme/guile-1.8.8-r3 &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;emacs ? virtual/emacs&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
dev-util/cmake-3.6.3 &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;emacs ? virtual/emacs&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
dev-util/desktop-file-utils-0.23 &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;emacs ? virtual/emacs&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
dev-util/ninja-1.6.0 &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;emacs ? virtual/emacs&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
dev-vcs/git-2.10.2 &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;emacs ? virtual/emacs&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
net-dns/libidn-1.33 &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;emacs ? virtual/emacs&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
virtual/editor-0 &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;app-editors/emacs&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
virtual/emacs-24 &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;app-editors/emacs:24&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Por último:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;sudo emerge --update --deep --with-bdeps&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;y --newuse -atv @world
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h1 id=&#34;referencias&#34;&gt;Referencias&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;Gentoo Forums | &lt;a href=&#34;https://forums.gentoo.org/viewtopic-t-845023-view-previous.html?sid=ef04c0fc53b4e635179ee854aaed2fbd&#34; target=&#34;_blank&#34; title=&#34;Remove Slotted Packages&#34;&gt;Remove Slotted Packages&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        
        <item>
            <title>Cómo mantener varios parches - Un tutorial sobre Quilt</title>
            <link>https://elbauldelprogramador.com/how-to-mantain-patchs-quilt-tutorial/</link>
            <pubDate>Mon, 30 Jan 2017 00:00:00 +0000</pubDate>
            
            <guid>https://elbauldelprogramador.com/how-to-mantain-patchs-quilt-tutorial/</guid>
            <description>&lt;p&gt;Llevo unos cuantos años usando &lt;a href=&#34;https://elbauldelprogramador.com/tags/dwm/&#34; title=&#34;DWM&#34;&gt;DWM&lt;/a&gt;, incluso creé un parche que permitía &lt;a href=&#34;https://elbauldelprogramador.com/statuscolor-dwm-6-1/&#34; title=&#34;Colorear la barra de estado con Simple StatusColor en DWM 6.1&#34;&gt;colorear su barra de estado&lt;/a&gt;. Hacía bastante tiempo que DWM se había actualizado, pero no me veía capaz de parchear mi versión modificada de DWM con la original, hasta que encontré el repositorio &lt;a href=&#34;https://github.com/jceb/dwm-patches&#34; target=&#34;_blank&#34; title=&#34;DWM-Patches&#34;&gt;DWM-Patches&lt;/a&gt; y aprendí a usar la herramienta &lt;em&gt;quilt&lt;/em&gt;.&lt;/p&gt;

&lt;h1 id=&#34;qué-es-quilt&#34;&gt;¿Qué es Quilt?&lt;/h1&gt;

&lt;p&gt;Según su &lt;code&gt;man&lt;/code&gt;:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Quilt is a tool to manage large sets of patches by keeping track of the changes each patch makes. Patches can be applied, un-applied, refreshed, etc. The key philosophical concept is that your primary output is patches.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Es decir, una herramienta que permite administrar grandes cantidades de parches a la vez que guardar un historial de los cambios que cada uno hace. Con &lt;em&gt;quilt&lt;/em&gt; es posible aplicar, borrar o modificar cualquier parche.&lt;/p&gt;

&lt;p&gt;&lt;!--ad--&gt;&lt;/p&gt;

&lt;h1 id=&#34;uso-básico&#34;&gt;Uso básico&lt;/h1&gt;

&lt;p&gt;Veamos un ejemplo sencillo, supongamos el siguiente fichero:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span&gt;&lt;/span&gt;# fichero.txt
linea 1
linea 2
linea 3
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;code&gt;fichero.txt&lt;/code&gt; será nuestra base.&lt;/p&gt;

&lt;h1 id=&#34;crear-un-parche&#34;&gt;Crear un parche&lt;/h1&gt;

&lt;p&gt;Para crear un parche basta con ejecutar &lt;code&gt;quilt new parche1.diff&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;$ quilt new parche1.diff
Patch patches/parche1.diff is now on top
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h1 id=&#34;editar-el-fichero&#34;&gt;Editar el fichero&lt;/h1&gt;

&lt;p&gt;Y luego especificamos el fichero sobre el que queremos hacer el parche:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;$ quilt edit fichero.txt
File fichero.txt added to patch patches/parche1.diff
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Ahora podemos empezar a editar &lt;code&gt;fichero.txt&lt;/code&gt;, por ejemplo:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span&gt;&lt;/span&gt;linea 1
modificación 1 (Por parche1.diff)
linea 2
linea 3
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h1 id=&#34;ver-los-cambios&#34;&gt;Ver los cambios&lt;/h1&gt;

&lt;p&gt;Tras terminar de editar, podemos ver el diff:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-diff&#34; data-lang=&#34;diff&#34;&gt;&lt;span&gt;&lt;/span&gt;$ quilt diff
&lt;span class=&#34;gh&#34;&gt;Index: _drafts/fichero.txt&lt;/span&gt;
&lt;span class=&#34;gh&#34;&gt;===================================================================&lt;/span&gt;
&lt;span class=&#34;gd&#34;&gt;--- _drafts.orig/fichero.txt&lt;/span&gt;
&lt;span class=&#34;gi&#34;&gt;+++ _drafts/fichero.txt&lt;/span&gt;
&lt;span class=&#34;gu&#34;&gt;@@ -1,3 +1,4 @@&lt;/span&gt;
 linea 1
&lt;span class=&#34;gi&#34;&gt;+modificaci&amp;lt;C3&amp;gt;&amp;lt;B3&amp;gt;n 1 (Por parche1.diff)&lt;/span&gt;
 linea 2
 linea 3
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h1 id=&#34;generar-el-parche&#34;&gt;Generar el parche&lt;/h1&gt;

&lt;p&gt;Aún no hemos generado el parche, para crearlo ejecutamos:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;$ quilt refresh
Refreshed patch patches/parche1.diff
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h1 id=&#34;administrar-parches&#34;&gt;Administrar parches&lt;/h1&gt;

&lt;p&gt;Listo, ahora en el directorio &lt;code&gt;patches/&lt;/code&gt; deberemos tener un fichero llamado &lt;code&gt;parche1.diff&lt;/code&gt; con nuestros cambios. Actualmente solo tenemos uno, si queremos deshacer los cambios y volver al estado original de &lt;code&gt;fichero.txt&lt;/code&gt; basta con hacer:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;$ quilt pop
Removing patch patches/parche1.diff
Restoring fichero.txt

No patches applied
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Como vemos, &lt;code&gt;fichero.txt&lt;/code&gt; vuelve a su estado original:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span&gt;&lt;/span&gt;$ cat fichero.txt
linea 1
linea 2
linea 3
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Si tuvieramos más de un parche, &lt;code&gt;quilt pop&lt;/code&gt; aceptaría el nombre del parche, o la opción &lt;code&gt;-a&lt;/code&gt; para eliminar todos los parches. Creemos un segundo parche:&lt;/p&gt;

&lt;h1 id=&#34;segundo-parche&#34;&gt;Segundo parche&lt;/h1&gt;

&lt;p&gt;Antes de crear un segundo parche, debemos aplicar el primero, o si tuvieramos varios, todos, para ello:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;$ quilt push -a
Applying patch patches/parche1.diff
patching file fichero.txt

Now at patch patches/parche1.diff
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Ahora estamos en condiciones de crear el nuevo parche:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;$ quilt new parche2.diff
Patch patches/parche2.diff is now on top
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&#34;listar-la-pila-de-parches&#34;&gt;Listar la pila de parches&lt;/h2&gt;

&lt;p&gt;Ahora que tenemos varios parches, podemos ver el orden en el que se aplican con &lt;code&gt;quilt series&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;$ quilt series
patches/parche1.diff
patches/parche2.diff
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;El último en la pila es &lt;code&gt;parche2&lt;/code&gt;, ahora mismo está vacío, ya que lo acabamos de crear. Para ester parche vamos a modificar &lt;code&gt;fichero.txt&lt;/code&gt; y crear uno nuevo, &lt;code&gt;fichero2.txt&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;$ quilt add fichero2.txt
File fichero2.txt added to patch patches/parche2.diff
$ quilt add fichero.txt
File fichero.txt added to patch patches/parche2.diff
$ &lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;Linea creada por parche2.diff&amp;quot;&lt;/span&gt; &amp;gt;&amp;gt; fichero.txt
$ &lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;Nuevo Fichero creado por parche2.diff&amp;quot;&lt;/span&gt; &amp;gt; fichero2.txt
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-diff&#34; data-lang=&#34;diff&#34;&gt;&lt;span&gt;&lt;/span&gt;$ quilt diff
&lt;span class=&#34;gh&#34;&gt;Index: _drafts/fichero.txt&lt;/span&gt;
&lt;span class=&#34;gh&#34;&gt;===================================================================&lt;/span&gt;
&lt;span class=&#34;gd&#34;&gt;--- _drafts.orig/fichero.txt&lt;/span&gt;
&lt;span class=&#34;gi&#34;&gt;+++ _drafts/fichero.txt&lt;/span&gt;
&lt;span class=&#34;gu&#34;&gt;@@ -2,3 +2,4 @@ linea 1&lt;/span&gt;
 modificaci&amp;lt;C3&amp;gt;&amp;lt;B3&amp;gt;n 1 (Por parche1.diff)
 linea 2
 linea 3
&lt;span class=&#34;gi&#34;&gt;+Linea creada por parche2.diff&lt;/span&gt;
&lt;span class=&#34;gh&#34;&gt;Index: _drafts/fichero2.txt&lt;/span&gt;
&lt;span class=&#34;gh&#34;&gt;===================================================================&lt;/span&gt;
&lt;span class=&#34;gd&#34;&gt;--- /dev/null&lt;/span&gt;
&lt;span class=&#34;gi&#34;&gt;+++ _drafts/fichero2.txt&lt;/span&gt;
&lt;span class=&#34;gu&#34;&gt;@@ -0,0 +1 @@&lt;/span&gt;
&lt;span class=&#34;gi&#34;&gt;+Nuevo Fichero creado por parche2.diff&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Ya solo resta aplicar los cambios al parche, con &lt;code&gt;quilt refresh&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;$ quilt refresh
Refreshed patch patches/parche2.diff
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Cuando terminemos de editar los parches, es recomendable volver al estado inicial, deshaciendo las modificaciones de todos los parches:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;$ quilt pop -a
Removing patch patches/parche2.diff
Restoring fichero.txt
Removing fichero2.txt

Removing patch patches/parche1.diff
Restoring fichero.txt

No patches applied

$ ll

-rw-r--r-- &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt; hkr hkr   &lt;span class=&#34;m&#34;&gt;24&lt;/span&gt; Jan &lt;span class=&#34;m&#34;&gt;30&lt;/span&gt; 18:31 fichero.txt
drwxr-xr-x &lt;span class=&#34;m&#34;&gt;2&lt;/span&gt; hkr hkr 4.0K Jan &lt;span class=&#34;m&#34;&gt;30&lt;/span&gt; 18:29 patches/
drwxr-xr-x &lt;span class=&#34;m&#34;&gt;2&lt;/span&gt; hkr hkr 4.0K Jan &lt;span class=&#34;m&#34;&gt;30&lt;/span&gt; 18:31 .pc/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Para volver a aplicarlos:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;$ quilt push -a
Applying patch patches/parche1.diff
patching file fichero.txt

Applying patch patches/parche2.diff
patching file fichero.txt
patching file fichero2.txt

Now at patch patches/parche2.diff

$ ll

-rw-r--r-- &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt; hkr hkr   &lt;span class=&#34;m&#34;&gt;38&lt;/span&gt; Jan &lt;span class=&#34;m&#34;&gt;30&lt;/span&gt; 18:32 fichero2.txt
-rw-r--r-- &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt; hkr hkr   &lt;span class=&#34;m&#34;&gt;89&lt;/span&gt; Jan &lt;span class=&#34;m&#34;&gt;30&lt;/span&gt; 18:32 fichero.txt
drwxr-xr-x &lt;span class=&#34;m&#34;&gt;2&lt;/span&gt; hkr hkr 4.0K Jan &lt;span class=&#34;m&#34;&gt;30&lt;/span&gt; 18:29 patches/
drwxr-xr-x &lt;span class=&#34;m&#34;&gt;4&lt;/span&gt; hkr hkr 4.0K Jan &lt;span class=&#34;m&#34;&gt;30&lt;/span&gt; 18:32 .pc/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Para ver un ejemplo real, y más complejo, puedes visitar mi repositorio &lt;a href=&#34;https://github.com/elbaulp/myDWM&#34; target=&#34;_blank&#34; title=&#34;DWM&#34;&gt;DWM&lt;/a&gt;.&lt;/p&gt;

&lt;h1 id=&#34;bibliografía&#34;&gt;Bibliografía&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;UsingQuilt | &lt;a href=&#34;https://wiki.debian.org/UsingQuilt&#34; target=&#34;_blank&#34; title=&#34;Using Quilt | Debian Wiki&#34;&gt;wiki.debian.org&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;How To Survive With Many Patches | &lt;a href=&#34;https://stuff.mit.edu/afs/athena/system/i386_deb50/os/usr/share/doc/quilt/quilt.html&#34; target=&#34;_blank&#34; title=&#34;How to survive with many patches&#34;&gt;stuff.mit.edu&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
        </item>
        
        <item>
            <title>TAILS LINUX y la importancia de la privacidad</title>
            <link>https://elbauldelprogramador.com/tails-linux-importancia-privacidad/</link>
            <pubDate>Fri, 27 Jan 2017 00:00:00 +0000</pubDate>
            
            <guid>https://elbauldelprogramador.com/tails-linux-importancia-privacidad/</guid>
            <description>&lt;blockquote&gt;
&lt;p&gt;Este artículo es una colaboración de &lt;em&gt;Paula de la Hoz (&lt;a href=&#34;https://twitter.com/Terceranexus6&#34;&gt;@Terceranexus6&lt;/a&gt;&lt;/em&gt;. Su blog: &lt;a href=&#34;https://ohmybits.tumblr.com&#34;&gt;Oh My Bits&lt;/a&gt; &amp;amp; &lt;a href=&#34;https://medium.com/@HamletAgain&#34;&gt;Hamlet Again&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&#34;contexto-actual&#34;&gt;Contexto actual&lt;/h1&gt;

&lt;p&gt;Con el incipiente avance tecnológico, en nuestra sociedad cada vez se valora más la privacidad del usuario. Todo lo que hacemos, quiénes somos, qué nos gusta, es información que nos puede parecer irrelevante según para qué contextos. Sin embargo para las empresas, gobiernos y asociaciones, esa información es muy valiosa y puede incluso llegar a &lt;em&gt;limitarnos&lt;/em&gt;.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;&lt;em&gt;Decir que no te importa el derecho a la privacidad porque no tienes nada que esconder no se diferencia de decir que no te importa la libertad de expresión porque no tienes nada que decir.&lt;/em&gt;&amp;ldquo;
&amp;mdash; &lt;strong&gt;Edward Snowden&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;!--ad--&gt;&lt;/p&gt;

&lt;p&gt;El ex-empleado de la NSA &lt;strong&gt;&lt;em&gt;Edward Snowden&lt;/em&gt;&lt;/strong&gt;, conocido por su implicación en wikileaks con filtraciones de información clasificada, ha abogado por la defensa de la privacidad y los derechos en internet a través de las redes, incluso desde su asilo político en Rusia. Esta controvertida figura, para mantener &amp;ldquo;&lt;em&gt;a salvo&lt;/em&gt;&amp;rdquo; su privacidad utiliza, principalmente, un sistema operativo llamado &lt;strong&gt;TAILS LINUX&lt;/strong&gt;.&lt;/p&gt;

&lt;h1 id=&#34;qué-es-tails&#34;&gt;¿Qué es Tails?&lt;/h1&gt;

&lt;figure&gt;
    &lt;img  sizes=&#34;(min-width: 500px) 500px, 100vw&#34; on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/tchou-improved.png&#34; alt=&#34;{{ .Title }}&#34; title=&#34;{{ .Title}}&#34; width=&#34;500&#34; height=&#34;257&#34;&gt;&lt;/img&gt;
&lt;/figure&gt;

&lt;p&gt;&lt;a href=&#34;https://tails.boum.org/index.en.html&#34;&gt;TAILS&lt;/a&gt; es un sistema operativo &lt;em&gt;live&lt;/em&gt;, ¿ésto qué quiere decir? que podemos utilizarlo desde cualquier ordenador utilizando simplemente un pen drive. Es completamente gratuito, libre y está basado en Debian &lt;a href=&#34;https://elbauldelprogramador.com/categories/linux&#34; title=&#34;Artículos sobre Linux&#34;&gt;GNU/Linux&lt;/a&gt;. Una de las características principales de TAILS, es que basa todas sus conexiones en &lt;strong&gt;TOR&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://elbauldelprogramador.com/tags/tor&#34;&gt;TOR&lt;/a&gt; es un navegador que protege al usuario frente al análisis del tráfico de paquetes y la vigilancia masiva usando un sistema alternativo de nodos voluntarios y túneles virtuales, en lugar de hacer una conexión directa.&lt;/p&gt;

&lt;p&gt;Además de &lt;a href=&#34;https://elbauldelprogramador.com/tags/tor&#34;&gt;TOR&lt;/a&gt;, TAILS permite utilizar I2P, y en la web oficial viene &lt;a href=&#34;https://tails.boum.org/doc/anonymous_internet/i2p/index.en.html&#34;&gt;documentado&lt;/a&gt; cómo utilizarlo. El sistema operativo, que ocupa en su totalidad &lt;em&gt;4 gigas&lt;/em&gt;, viene con una serie de programas predeterminados relacionados con la privacidad, la ofimática y la mensajería. En un principio, el pen drive no guarda la información de una sesión a otra, pero &lt;a href=&#34;https://tails.boum.org/install/clone/index.en.html&#34;&gt;podemos configurarlo&lt;/a&gt; para utilizar la memoria sobrante del pen drive.&lt;/p&gt;

&lt;h1 id=&#34;instalación-y-uso&#34;&gt;Instalación y uso&lt;/h1&gt;

&lt;p&gt;Configurar un pen drive para instalar TAILS es bastante sencillo, especialmente porque &lt;a href=&#34;https://tails.boum.org/install/os/index.en.html&#34;&gt;viene indicado paso a paso&lt;/a&gt; en la página oficial. Además incluye especificaciones de instalación desde cualquier sistema operativo (Linux, Windows, MAC y otro TAILS). El proceso es básicamente bajarse la imagen desde TOR, preparar un pen drive de 4 o más gigas, e instalar la imagen en éste.&lt;/p&gt;

&lt;figure&gt;
    &lt;img  sizes=&#34;(min-width: 800px) 800px, 100vw&#34; on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/pasted-from-clipboard.png&#34; alt=&#34;{{ .Title }}&#34; title=&#34;{{ .Title }}&#34; width=&#34;946&#34; height=&#34;316&#34;&gt;&lt;/img&gt;
&lt;/figure&gt;

&lt;p&gt;Para usar este sistema operativo, simplemente insertamos el pen drive en uno de los puertos de un ordenador apagado y lo encendemos. El ordenador tardará varios segundos en terminar de cargar la imagen, pero cuando lo haga tendremos acceso a nuestro escritorio desde el cual podremos navegar con tranquilidad. Una vez que apagamos el ordenador y retiramos el pen drive, &lt;strong&gt;no queda rastro&lt;/strong&gt; de lo que hayamos hecho en el ordenador, ya que se sobrescribe la memoria.&lt;/p&gt;

&lt;p&gt;Por muy seguro que pueda ser este sistema operativo y las herramientas que ofrece, en la propia página web indica que la mejor forma de protegerse es el &lt;em&gt;sentido común&lt;/em&gt; del usuario, tales como utilizar contraseñas fuertes y saber utilizar apropiadamente las herramientas que ofrece, comprendiendo las limitaciones.&lt;/p&gt;

&lt;h1 id=&#34;programas-y-recursos&#34;&gt;Programas y recursos&lt;/h1&gt;

&lt;p&gt;Algunas de las herramientas más interesantes con las que viene Tails son las siguientes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://guardianproject.info/code/luks/&#34;&gt;LUKS&lt;/a&gt; (Linux Unified Key Setup), que te permite encriptar pen drives y discos externos.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.eff.org/https-everywhere&#34;&gt;HTTPS Everywhere&lt;/a&gt; es una extensión desarrollada por la &lt;a href=&#34;eff.org&#34;&gt;EFF&lt;/a&gt; para encriptar todas las conexiones usando https.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://openpgp.org/&#34;&gt;OpenPGP&lt;/a&gt; &lt;a href=&#34;https://elbauldelprogramador.com/editar-y-crear-archivos-cifrados-con-gpg-en-vim/&#34; title=&#34;Editar y crear archivos cifrados con GPG en Vim&#34;&gt;para encriptar y firmar documentos y correos&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://otr.cypherpunks.ca/&#34;&gt;OTR&lt;/a&gt;, para proteger mensajería instantánea.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://wipetools.tuxfamily.org/nautilus-wipe.html&#34;&gt;Nautilus Wipe&lt;/a&gt; para borrar archivos con seguridad.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;confías-plenamente-en-tails-ellos-esperan-que-no&#34;&gt;¿Confías plenamente en TAILS? ellos esperan que no&lt;/h1&gt;

&lt;p&gt;Una de los problemas fundamentales de la sociedad actual en términos de informática es el desinterés del usuario medio por su privacidad y seguridad. Y esta concienciación empieza precisamente con la duda. Sean cuales sean nuestros motivos para confiar en un sistema operativo, programa o aplicación, deben haber pasado un filtro de duda y escepticismo, y eso mismo &lt;a href=&#34;https://tails.boum.org/doc/about/trust/index.en.html&#34;&gt;nos sugieren&lt;/a&gt; en la página de TAILS.&lt;/p&gt;

&lt;p&gt;Las herramientas que ofrecen no sólo tienen un objetivo técnico si no que se esfuerzan en ofrecerte una nueva visión y un cambio en la forma en que sus usuarios usan la tecnología y su información. El uso de este sistema debe ir acompasando al interés por nuestra privacidad, y a la curiosidad por saber qué se hace con nuestra información.&lt;/p&gt;

&lt;p&gt;Para ello ofrecen una serie de razones por las cuales puede decirse que abogan por estas cualidades. Basa su justificación en el uso de software libre bien documentado, TOR, y el hecho de utilizar Debian GNU/Linux, que aunque ha tenido bugs importantes como &lt;a href=&#34;https://lists.debian.org/debian-security-announce/2008/msg00152.html&#34;&gt;SSH PRNG&lt;/a&gt; no se han encontrado vulnerabilidades de seguridad hasta la fecha, lo que lo convierte en un buen candidato para este sistema.&lt;/p&gt;

&lt;h1 id=&#34;rompiendo-barreras&#34;&gt;Rompiendo barreras&lt;/h1&gt;

&lt;p&gt;Es de saber que las distintas distribuciones de linux tienen cierta fama entre los programadores e informáticos de todo el mundo. Debido a la amplia oferta de sistemas operativos disponibles, hay algunas más o menos amigables para un usuario medio. TAILS pretende ser accesible y manejable para cualquiera, tenga o no una base sólida en el uso de programación, linux y Bash. Para ello ofrece una interfaz gráfica intuitiva y una instalación simple.&lt;/p&gt;

&lt;p&gt;El uso de este sistema puede tener muchas aplicaciones en nuestro día a día, y es completamente legal. No necesitamos ser Edward Snowden para &lt;strong&gt;necesitar o querer&lt;/strong&gt; privacidad, por ejemplo, a la hora de consultar nuestro correo en un ordenador público. La idea de este sistema es liberarnos de la obligación de &amp;ldquo;&lt;em&gt;confiar&lt;/em&gt;&amp;rdquo; en un ordenador público, o de algún amigo.&lt;/p&gt;

&lt;p&gt;Esta idea puede que nos resulte difícil de agregar a nuestra rutina, pero sin duda se debería hacerse una pequeña reflexión sobre ello. El ritmo de nuestra sociedad ha cambiado con rapidez en pocos años, y dependemos en nuestra vida privada y trabajo (con frecuencia) de programas y aplicaciones que manejan gran cantidad de información privada. Esta rapidez ha hecho que el usuario medio se acostumbre a la comodidad de estas herramientas, pero se olvide con frecuencia de proteger sus datos a la hora de utilizarla, muchas veces por la gran cantidad de trabas y dificultades para ello.&lt;/p&gt;</description>
        </item>
        
        <item>
            <title>Cómo parsear el frontmatter con Python</title>
            <link>https://elbauldelprogramador.com/how-to-parse-frontmatter-with-python/</link>
            <pubDate>Thu, 26 Jan 2017 00:00:00 +0000</pubDate>
            
            <guid>https://elbauldelprogramador.com/how-to-parse-frontmatter-with-python/</guid>
            <description>&lt;p&gt;Hace poco he migrado el blog de &lt;em&gt;Jekyll&lt;/em&gt; a &lt;em&gt;Hugo&lt;/em&gt;. El proceso ha sido fácil, pero he tenido que cambiar varias cosas en el &lt;em&gt;frontmatter&lt;/em&gt; de los artículos.&lt;/p&gt;

&lt;p&gt;Tras buscar en Google encontré un &lt;a href=&#34;https://elbauldelprogramador.com/tags/parser/&#34;&gt;parseador&lt;/a&gt; en &lt;a href=&#34;https://elbauldelprogramador.com/tags/python&#34; title=&#34;Artículos sobre python&#34;&gt;python&lt;/a&gt; para &lt;em&gt;frontmatter&lt;/em&gt; escritos en &lt;em&gt;YAML&lt;/em&gt;. A continuación se explica cómo instalarlo y usarlo.&lt;/p&gt;

&lt;h1 id=&#34;instalar-python-frontmatter&#34;&gt;Instalar Python-Frontmatter&lt;/h1&gt;

&lt;p&gt;Basta con ejecutar&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;sudo pip install python-frontmatter
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;!--ad--&gt;&lt;/p&gt;

&lt;h1 id=&#34;usar-python-frontmatter&#34;&gt;Usar Python-Frontmatter&lt;/h1&gt;

&lt;h2 id=&#34;ejemplo-1-añadir-un-nuevo-valor-al-frontmatter&#34;&gt;Ejemplo 1: Añadir un nuevo valor al FrontMatter&lt;/h2&gt;

&lt;p&gt;Una vez instalado, es bastante sencillo de usar. Supongamos que queremos añadir una variable que almacene el autor del artículo, para ello bastaría el siguiente código:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;frontmatter&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;io&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;os.path&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;basename&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;splitext&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;glob&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# Ruta a los ficheros&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;path&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;en/*.markdown&amp;quot;&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# Iterar sobre ellos&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;fname&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;glob&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;glob&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;path&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;with&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;io&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;open&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fname&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;r&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;c1&#34;&gt;# Parsear los ficheros&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;post&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;frontmatter&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;load&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;post&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;get&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;author&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
            &lt;span class=&#34;n&#34;&gt;post&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;author&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;alex&amp;quot;&lt;/span&gt;
            &lt;span class=&#34;c1&#34;&gt;# Guardar el fichero modificado&lt;/span&gt;
            &lt;span class=&#34;n&#34;&gt;newfile&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;io&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;open&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fname&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;w&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;encoding&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;utf8&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
            &lt;span class=&#34;n&#34;&gt;frontmatter&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dump&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;post&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;newfile&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
            &lt;span class=&#34;n&#34;&gt;newfile&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;close&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Eso es todo, así de simple. Veamos un ejemplo algo más complejo.&lt;/p&gt;

&lt;h2 id=&#34;ejemplo-2-modificar-variables-existentes-en-el-frontmatter&#34;&gt;Ejemplo 2: Modificar variables existentes en el FrontMatter&lt;/h2&gt;

&lt;p&gt;En este caso, supongamos dos variables, &lt;code&gt;mainclass&lt;/code&gt; y &lt;code&gt;categories&lt;/code&gt;. Queremos incluir el valor de &lt;code&gt;mainclass&lt;/code&gt; a los valores existentes en &lt;code&gt;categories&lt;/code&gt;, y a la vez mantener los valores actuales en &lt;code&gt;categories&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;fname&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;glob&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;glob&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;path&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;with&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;io&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;open&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fname&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;r&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;post&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;frontmatter&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;load&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

        &lt;span class=&#34;c1&#34;&gt;# Si no exite la variable categories, crearla con el valor de mainclass&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;post&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;get&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;categories&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
            &lt;span class=&#34;n&#34;&gt;post&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;categories&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;post&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;mainclass&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]]&lt;/span&gt;
            &lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;post&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;categories&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# Categories existe&lt;/span&gt;
            &lt;span class=&#34;n&#34;&gt;cat&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;post&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;categories&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
            &lt;span class=&#34;n&#34;&gt;main&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;post&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;mainclass&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
            &lt;span class=&#34;c1&#34;&gt;# Si categories contiene un solo valor ej: categories: &amp;#39;category1&amp;#39;&lt;/span&gt;
            &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cat&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
                &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;cat&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;lower&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
                    &lt;span class=&#34;n&#34;&gt;cat&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cat&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
            &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# Si categories es una lista ej: categories: [cat1, cat2]&lt;/span&gt;
                &lt;span class=&#34;n&#34;&gt;cat&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;lower&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;s&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;cat&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
                &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;main&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;cat&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;False&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
                    &lt;span class=&#34;n&#34;&gt;cat&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;append&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

            &lt;span class=&#34;n&#34;&gt;post&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;categories&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;cat&lt;/span&gt;
            &lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;%s&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;post&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;categories&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;

        &lt;span class=&#34;c1&#34;&gt;# Guardar los cambios&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;newfile&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;io&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;open&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fname&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;w&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;encoding&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;utf8&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;frontmatter&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dump&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;post&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;newfile&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;newfile&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;close&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h1 id=&#34;referencias&#34;&gt;Referencias&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/eyeseast/python-frontmatter&#34; target=&#34;_blank&#34; title=&#34;Python fronmatter repo&#34;&gt;Repositorio Python-Frontmatter en github&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;</description>
        </item>
        
        <item>
            <title>Compilar OpenCV 3.2 para Java y usarlo en IntelliJ IDEA</title>
            <link>https://elbauldelprogramador.com/compile-opencv-3.2-with-java-intellij-idea/</link>
            <pubDate>Wed, 25 Jan 2017 00:00:00 +0000</pubDate>
            
            <guid>https://elbauldelprogramador.com/compile-opencv-3.2-with-java-intellij-idea/</guid>
            <description>&lt;p&gt;Si quieres compilar OpenCV 3.2 por ti mismo con soporte para Java, esto te ayudará. También te ayudará si, compilado OpenCV, quisieras saber como usarlo en IntelliJ IDEA. ¡Empecemos!&lt;/p&gt;

&lt;p&gt;Para compilar OpenCV 3.2 con soporte para Java debes comprobar que tienes instalado en tu sistema lo siguiente:&lt;/p&gt;

&lt;h1 id=&#34;prerequisitos&#34;&gt;Prerequisitos&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;Java JDK 7+: necesitamos un JDK para construir el Java &lt;em&gt;binding&lt;/em&gt;, así que si no lo tienes instalado puedes hacerlo desde &lt;a href=&#34;http://www.oracle.com/technetwork/java/javase/downloads/index.html&#34; title=&#34;www.oracle.com&#34;&gt;oracle web page&lt;/a&gt;. Puedes comprobar tu versión de JDK ejecutando: &lt;code&gt;java -version&lt;/code&gt;  en un terminal.&lt;/li&gt;
&lt;li&gt;Apache Ant: teclea &lt;code&gt;ant -version&lt;/code&gt; para comprobar que tienes Apache Ant instalado. Si no lo tienes, instálalo tecleando &lt;code&gt;sudo apt-get install ant&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Python 2.6+: teclea &lt;code&gt;python --version&lt;/code&gt; en la terminal para comprobar si tienes python instalado y en que versión.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;!--ad--&gt;&lt;/p&gt;

&lt;h1 id=&#34;1-descarga-opencv-3-2&#34;&gt;1. Descarga OpenCV 3.2&lt;/h1&gt;

&lt;p&gt;Ve a &lt;a href=&#34;http://opencv.org/&#34; title=&#34;opencv.org&#34;&gt;opencv documentation&lt;/a&gt; y descarga la última versión estable para Linux/Mac.&lt;/p&gt;

&lt;h1 id=&#34;2-descomprime-donde-quieras-instalar-y-crea-un-directorio-en-el-que-construir&#34;&gt;2. Descomprime donde quieras instalar y crea un directorio en el que construir&lt;/h1&gt;

&lt;p&gt;Extrae el contenido de la carpeta &lt;strong&gt;opencv-3.2.0&lt;/strong&gt; donde quieras posicionarlo. Después, navega dentro de ese directorio y crea una carpeta vacía &lt;strong&gt;build&lt;/strong&gt;, donde se guardarán los resultados de la compilación:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;    cris@cris ~ $ &lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; opencv-3.2.0/
    cris@cris ~ $ mkdir build
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h1 id=&#34;3-exporta-la-variable-java-home-y-genera-el-makefile&#34;&gt;3. Exporta la variable JAVA_HOME y genera el makefile&lt;/h1&gt;

&lt;p&gt;Debes comprobar que la variable $JAVA_HOME contiene el &lt;em&gt;path&lt;/em&gt; a tu JDK y que sea visible a otros procesos. Tecleando: &lt;code&gt;echo $JAVA_HOME&lt;/code&gt; debe mostrarse el &lt;em&gt;path&lt;/em&gt; de tu JDK. Si no, en una terminalmodifica el valor de la variable al &lt;em&gt;path&lt;/em&gt; del JDK y expórtala. Por ejemplo:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;cris@cris ~$ &lt;span class=&#34;nb&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;JAVA_HOME&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;/home/jdk1.8.0_111/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;navega al directirio &lt;strong&gt;build&lt;/strong&gt; y genera el &lt;em&gt;makefile&lt;/em&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;cris@cris ~/opencv-3.2.0/build $ cmake -DBUILD_SHARED_LIBS&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;OFF ..
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Comprueba que cuando estás generando el &lt;em&gt;makefile&lt;/em&gt; la salida en el campo de Java es la siguiente:
&lt;figure&gt;
    &lt;img sizes=&#34;(min-width: 983px) 983px, 100vw&#34; on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/output-build-makefiles-opencv-java.png&#34; title=&#34;&#34; alt=&#34;&#34; width=&#34;983px&#34; height=&#34;164px&#34;&gt;&lt;/img&gt;
    &lt;figcaption&gt;construcción &lt;em&gt;makefile&lt;/em&gt;&lt;/figcaption&gt;
&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;Es decir, debe estar especificado Apache Ant, así como el &lt;em&gt;path&lt;/em&gt; JNI, y &lt;em&gt;Java wrappers&lt;/em&gt; debe estar a &lt;em&gt;YES&lt;/em&gt;.&lt;/p&gt;

&lt;h1 id=&#34;4-construye&#34;&gt;4. Construye&lt;/h1&gt;

&lt;p&gt;Ejecuta el  &lt;em&gt;make&lt;/em&gt; para compilar openCV con soporte para Java y crear el jar:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;cris@cris ~/opencv-3.2.0/build $ make -j8
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Cuando finalice, comprueba que se han creado los archivos &lt;strong&gt;opencv-320.jar&lt;/strong&gt; y &lt;strong&gt;libopencv_java320.so&lt;/strong&gt; (.so o .dll):&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;    cris@cris ~/opencv-3.2.0/build $ ls -R &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; grep opencv-320.jar
    opencv-320.jar
    opencv-320.jar.dephelper

    cris@cris ~/opencv-3.2.0/build $ ls -R &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; grep libopencv_java320.so
    libopencv_java320.so
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Ahora que lo tenemos compilado, el siguiente paso será crear un ejemplo en Java para comprobar que funciona. Yo uso el IDE IntelliJ IDEA Ultimate 2016, por lo que en la siguiente sección explicaré como crear un proyecto en Java de OpenCV en INTELLIJ.&lt;/p&gt;

&lt;h1 id=&#34;creando-un-proyecto-java-opencv-en-intellij-16&#34;&gt;Creando un proyecto Java OpenCV en INTELLIJ 16&lt;/h1&gt;

&lt;p&gt;La forma más fácil de crear un proyecto de OpenCV en Java y Scala es usando SBT.
 Así que abrimos IntelliJ y creamos un nuevo proyecto SBT. Una ve creado, seleccionamos &lt;code&gt;File-&amp;gt;Project Structure&lt;/code&gt;  (Comprueba que en Module JDK aparece tu SDK)
 y selecciona la pestaña &lt;strong&gt;Dependencies&lt;/strong&gt;. Aquí, hacemos click en &lt;em&gt;+&lt;/em&gt; y añadimos &lt;strong&gt;opencv-320.jar&lt;/strong&gt; y la librería, que se encuentra en &lt;strong&gt;opencv3.2.0/build/lib&lt;/strong&gt; :&lt;/p&gt;

&lt;figure&gt;
    &lt;img sizes=&#34;(min-width: 1022px) 1022px, 100vw&#34; on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/adding-Opencv-jar-to-IntelliJ-project.png&#34; title=&#34;&#34; alt=&#34;&#34; width=&#34;1022px&#34; height=&#34;341px&#34;&gt;&lt;/img&gt;
    &lt;figcaption&gt;añadiendo .jar file&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;figure&gt;
    &lt;img sizes=&#34;(min-width: 734px) 734px, 100vw&#34; on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/adding-libpath-to-intelliJ-project.png&#34; title=&#34;&#34; alt=&#34;&#34; width=&#34;734px&#34; height=&#34;291px&#34;&gt;&lt;/img&gt;
&lt;figcaption&gt;añadiendo .so file&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;Finalmente, tomamos el ejemplo de detección de caras de &lt;a href=&#34;http://docs.opencv.org/2.4.4-beta/doc/tutorials/introduction/desktop_java/java_dev_intro.html&#34; title=&#34;docs.opencv.org&#34;&gt;opencv documentation&lt;/a&gt; , lo corregimos (dado que es para la versión 2.4.4 de OpenCV) y lo guardamos en un fichero llamado &lt;strong&gt;helloOpenCV.java&lt;/strong&gt; dentro de la carpeta &lt;code&gt;src-&amp;gt;main-&amp;gt;java&lt;/code&gt;.  El código de ejemplo adaptado a la versión 3.2 de OpenCV es:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span&gt;&lt;/span&gt;    &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;org.opencv.core.*&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;org.opencv.core.Mat&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;org.opencv.core.MatOfRect&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;org.opencv.core.Point&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;org.opencv.core.Rect&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;org.opencv.core.Scalar&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;org.opencv.imgcodecs.Imgcodecs&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;org.opencv.objdetect.CascadeClassifier&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;

    &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;org&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;opencv&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;imgproc&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;Imgproc&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;rectangle&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;

    &lt;span class=&#34;c1&#34;&gt;//&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;// Detects faces in an image, draws boxes around them, and writes the results&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;// to &amp;quot;faceDetection.png&amp;quot;.&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;//&lt;/span&gt;
    &lt;span class=&#34;kd&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;DetectFaceDemo&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
      &lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;run&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;out&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;\nRunning DetectFaceDemo&amp;quot;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;

        &lt;span class=&#34;c1&#34;&gt;// Create a face detector from the cascade file in the resources&lt;/span&gt;
        &lt;span class=&#34;c1&#34;&gt;// directory.&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;CascadeClassifier&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;faceDetector&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;CascadeClassifier&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;getClass&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;().&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getResource&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;/lbpcascade_frontalface.xml&amp;quot;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getPath&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;());&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;Mat&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;image&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Imgcodecs&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;imread&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;getClass&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;().&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getResource&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;/lena.png&amp;quot;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getPath&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;());&lt;/span&gt;

        &lt;span class=&#34;c1&#34;&gt;// Detect faces in the image.&lt;/span&gt;
        &lt;span class=&#34;c1&#34;&gt;// MatOfRect is a special container class for Rect.&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;MatOfRect&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;faceDetections&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;MatOfRect&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;();&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;faceDetector&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;detectMultiScale&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;image&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;faceDetections&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;

        &lt;span class=&#34;n&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;out&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;format&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;Detected %s faces&amp;quot;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;faceDetections&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;toArray&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;().&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;length&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;));&lt;/span&gt;

        &lt;span class=&#34;c1&#34;&gt;// Draw a bounding box around each face.&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Rect&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;rect&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;faceDetections&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;toArray&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;())&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
            &lt;span class=&#34;n&#34;&gt;rectangle&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;image&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Point&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;rect&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;rect&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;y&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;),&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Point&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;rect&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;rect&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;rect&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;y&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;rect&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;height&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;),&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Scalar&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;255&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;));&lt;/span&gt;
        &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;

        &lt;span class=&#34;c1&#34;&gt;// Save the visualized detection.&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;filename&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;quot;faceDetection.png&amp;quot;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;out&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;format&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;Writing %s&amp;quot;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;filename&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;));&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;Imgcodecs&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;imwrite&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;filename&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;image&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
      &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;

    &lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;HelloOpenCV&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
      &lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;[]&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;args&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;out&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;Hello, OpenCV&amp;quot;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;

        &lt;span class=&#34;c1&#34;&gt;// Load the native library.&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;loadLibrary&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Core&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;NATIVE_LIBRARY_NAME&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;DetectFaceDemo&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;().&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;run&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;();&lt;/span&gt;
     &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Por último ejecutamos el ejemplo &lt;strong&gt;HelloOpenCV&lt;/strong&gt; y comprobamos que funciona, escribiendo la detección de la cara de lenna en la imágen &lt;strong&gt;faceDetection.png&lt;/strong&gt;.&lt;/p&gt;

&lt;figure&gt;
    &lt;img sizes=&#34;(min-width: 531px) 531px, 100vw&#34; on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/example-face-detection-with-opencv.png&#34; title=&#34;&#34; alt=&#34;&#34; width=&#34;531px&#34; height=&#34;528px&#34;&gt;&lt;/img&gt;
    &lt;figcaption&gt;ejemplo detección de caras&lt;/figcaption&gt;
&lt;/figure&gt;</description>
        </item>
        
        <item>
            <title>Los RSS Del Blog Ahora Muestran El Contenido Completo</title>
            <link>https://elbauldelprogramador.com/los-rss-del-blog-ahora-muestran-el-contenido-completo/</link>
            <pubDate>Sat, 03 Dec 2016 10:40:33 +0000</pubDate>
            
            <guid>https://elbauldelprogramador.com/los-rss-del-blog-ahora-muestran-el-contenido-completo/</guid>
            <description>&lt;p&gt;Últimamente he recibo varios consejos de lectores a los que les gustaría poder leer los artículos por completo desde sus aplicaciones &lt;em&gt;RSS&lt;/em&gt;. Es por ello que he decidido habilitarlos.&lt;/p&gt;

&lt;p&gt;Si aún no lo sabías, es posible suscribirse a cada una de las categorías de blog independientemente, o al feed completo. Aquí dejo la lista:&lt;/p&gt;

&lt;p&gt;El blog tiene tantos feeds como &lt;em&gt;categorías/etiquetas&lt;/em&gt; además del feed principal. Esto quiere decir:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;El feed principal, con el que recibirás todas las publicaciones es &lt;strong&gt;&lt;a type=&#34;application/rss+xml&#34; href=&#34;https://elbauldelprogramador.com/index.xml&#34; target=&#34;_blank&#34;&gt;/index.xml&lt;/a&gt;&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Para cada &lt;em&gt;categoría/etiqueta&lt;/em&gt; se crea un feed, por ejemplo, en &lt;strong&gt;&lt;a href=&#34;https://elbauldelprogramador.com/categories/security-now/&#34;&gt;/categories/security-now/&lt;/a&gt;&lt;/strong&gt; existe el feed &lt;strong&gt;&lt;a href=&#34;https://elbauldelprogramador.com/categories/security-now/index.xml&#34;&gt;/categories/security-now/index.xml&lt;/a&gt;&lt;/strong&gt;, en el cual se publicarán únicamente los artículos de la categoría &lt;em&gt;Security Now!&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;De igual manera ocurre con las etiquetas, para suscribirse al RSS de una etiqueta, por ejemplo &lt;strong&gt;&lt;a href=&#34;https://elbauldelprogramador.com/tags/gentoo/&#34;&gt;/tags/gentoo/&lt;/a&gt;&lt;/strong&gt; el feed correspondiente es &lt;strong&gt;&lt;a href=&#34;https://elbauldelprogramador.com/tags/gentoo/index.xml&#34;&gt;/tags/gentoo/index.xml&lt;/a&gt;&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;!--ad--&gt;&lt;/p&gt;</description>
        </item>
        
        <item>
            <title>Guía Gratuita: 5 Lightweight Linux Distros Ideal for an Intel Atom Processor PC</title>
            <link>https://elbauldelprogramador.com/5-lightweight-linux-distros-ideal-for-an-intel-atom-processor-pc/</link>
            <pubDate>Sun, 27 Nov 2016 10:18:24 +0000</pubDate>
            
            <guid>https://elbauldelprogramador.com/5-lightweight-linux-distros-ideal-for-an-intel-atom-processor-pc/</guid>
            <description>&lt;figure&gt;
   &lt;img on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/guides/5-Lightweight-Linux-Distros-Ideal-for-an-Intel-Atom-Processor-PC-centered.jpg&#34; alt=&#34;Guía Gratuita: 5 Lightweight Linux Distros Ideal for an Intel Atom Processor PC&#34; title=&#34;Guía Gratuita: 5 Lightweight Linux Distros Ideal for an Intel Atom Processor PC&#34; width=&#34;800&#34; height=&#34;420&#34;&gt;
   &lt;/img&gt;
&lt;/figure&gt;

&lt;p&gt;Bring your Atom-powered device back to life with a lightweight distribution! There&amp;rsquo;s no shortage of Linux distributions, or lightweight distros for that matter.&lt;/p&gt;

&lt;p&gt;Here are the top five lean distros to breathe new life into your Atom-powered devices.&lt;/p&gt;


&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;NOTA&lt;/strong&gt;: Si quieres apoyar el trabajo que realizamos en &lt;em&gt;El Baúl del Programador&lt;/em&gt;, descargar alguna de estas guías es una buena forma. Para ello en el formuario de descarga &lt;strong&gt; debes indicar que trabajas en el sector relacionado con la guía que descargas, a que te dedicas etc, de lo contrario no obtendremos comisión&lt;/strong&gt; ($1.5). Si tienes un blog y quieres usar esta forma de monetización, puedes darte de alta en &lt;a id=&#34;revresponse&#34; href=&#34;http://www.revresponse.com/join.php?refbrand=bashyc-blogspot&#34; target=&#34;_blank&#34; title=&#34;RevResponse&#34;&gt;RevResponse&lt;/a&gt; y empezar a ofrecer guías de interés a tus lectores. Visita el &lt;a href=&#34;http://elbauldelprogramador.tradepub.com/category/information-technology/1207/&#34; target=&#34;_blank&#34; title=&#34;Catálogo completo de Guías gratuítas&#34;&gt;catálogo completo de guías.&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;




&lt;div class=&#34;button-post&#34;&gt;
  &lt;h2&gt;&lt;a href=&#34;http://bashyc-blogspot.tradepub.com/c/pubRD.mpl?sr=oc&amp;_t=oc:&amp;qf=w_make313&#34; target=&#34;_blank&#34;&gt;Descárgala ahora&lt;/a&gt;&lt;/h2&gt;
&lt;/div&gt;

&lt;p&gt;Visita la página &lt;a href=&#34;https://elbauldelprogramador.com/manuales-gratuitos/&#34;&gt;Manuales gratuitos&lt;/a&gt; o consulta el &lt;a href=&#34;http://elbauldelprogramador.tradepub.com/category/information-technology/1207/&#34; title=&#34;Catálogo completo de Guías gratuítas &#34;&gt;catálogo completo&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;!--ad--&gt;&lt;/p&gt;</description>
        </item>
        
        <item>
            <title>Guía Gratuita: The Power of Predictive Analytics</title>
            <link>https://elbauldelprogramador.com/the-power-of-predictive-analytics/</link>
            <pubDate>Sun, 27 Nov 2016 09:54:40 +0000</pubDate>
            
            <guid>https://elbauldelprogramador.com/the-power-of-predictive-analytics/</guid>
            <description>&lt;figure&gt;
   &lt;img on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/guides/The-Power-of-Predictive-Analytics-centered.jpg&#34; alt=&#34;{{ title }}&#34; title=&#34;{{ title }}&#34; width=&#34;800&#34; height=&#34;420&#34;&gt;
   &lt;/img&gt;
&lt;/figure&gt;

&lt;p&gt;Predictive analytics provide companies the ability to systematically leverage data from across the value chain to peer into the future and identify the most likely outcomes.&lt;/p&gt;

&lt;p&gt;Traditional systems and processes are focused on internal operations and not designed to use real-time data from trading partners. Predictive analytics, on the other hand, provide the ability to systematically leverage data from across the value chain to peer into the future and identify the most likely outcomes.&lt;/p&gt;

&lt;p&gt;Learn about using predictive analytics to help new product introductions and promotions succeed.&lt;/p&gt;


&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;NOTA&lt;/strong&gt;: Si quieres apoyar el trabajo que realizamos en &lt;em&gt;El Baúl del Programador&lt;/em&gt;, descargar alguna de estas guías es una buena forma. Para ello en el formuario de descarga &lt;strong&gt; debes indicar que trabajas en el sector relacionado con la guía que descargas, a que te dedicas etc, de lo contrario no obtendremos comisión&lt;/strong&gt; ($1.5). Si tienes un blog y quieres usar esta forma de monetización, puedes darte de alta en &lt;a id=&#34;revresponse&#34; href=&#34;http://www.revresponse.com/join.php?refbrand=bashyc-blogspot&#34; target=&#34;_blank&#34; title=&#34;RevResponse&#34;&gt;RevResponse&lt;/a&gt; y empezar a ofrecer guías de interés a tus lectores. Visita el &lt;a href=&#34;http://elbauldelprogramador.tradepub.com/category/information-technology/1207/&#34; target=&#34;_blank&#34; title=&#34;Catálogo completo de Guías gratuítas&#34;&gt;catálogo completo de guías.&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;




&lt;div class=&#34;button-post&#34;&gt;
  &lt;h2&gt;&lt;a href=&#34;http://bashyc-blogspot.tradepub.com/c/pubRD.mpl?sr=oc&amp;_t=oc:&amp;qf=w_eope20&#34; target=&#34;_blank&#34;&gt;Descárgala ahora&lt;/a&gt;&lt;/h2&gt;
&lt;/div&gt;

&lt;p&gt;Visita la página &lt;a href=&#34;https://elbauldelprogramador.com/manuales-gratuitos/&#34;&gt;Manuales gratuitos&lt;/a&gt; o consulta el &lt;a href=&#34;http://elbauldelprogramador.tradepub.com/category/information-technology/1207/&#34; title=&#34;Catálogo completo de Guías gratuítas &#34;&gt;catálogo completo&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;!--ad--&gt;&lt;/p&gt;</description>
        </item>
        
        <item>
            <title>Cómo Eliminar Ficheros Demasiado Grandes Para GitHub</title>
            <link>https://elbauldelprogramador.com/eliminar-ficheros-grandes-github/</link>
            <pubDate>Sat, 12 Nov 2016 08:12:16 +0000</pubDate>
            
            <guid>https://elbauldelprogramador.com/eliminar-ficheros-grandes-github/</guid>
            <description>&lt;p&gt;Trabajando en un repositorio &lt;a href=&#34;https://elbauldelprogramador.com/git/&#34; title=&#34;Artículos sobre Git&#34;&gt;git&lt;/a&gt;, cometí el error de hacer un &lt;a href=&#34;https://elbauldelprogramador.com/mini-tutorial-y-chuleta-de-comandos-git/&#34; title=&#34;Git: Mini Tutorial y chuleta de comandos&#34;&gt;commit&lt;/a&gt; de un fichero demasiado grande (~240mb). Github tiene un tamaño máximo de 100mb, por lo que no me dejaba subir los cambios a Github. Tras borrar el fichero, seguía con el problema, ya que el fichero seguía en el historial del repositorio. Tras buscar un rato, encontré la solución, veamos:&lt;/p&gt;

&lt;h1 id=&#34;1-eliminar-el-fichero-del-historial-de-git&#34;&gt;1. Eliminar el fichero del historial de git&lt;/h1&gt;

&lt;p&gt;Para ello basta ejecutar el siguiente comando:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;$ git filter-branch --index-filter &lt;span class=&#34;s1&#34;&gt;&amp;#39;git rm -r --cached --ignore-unmatch &amp;lt;file/dir&amp;gt;&amp;#39;&lt;/span&gt; HEAD
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;!--ad--&gt;&lt;/p&gt;

&lt;p&gt;Y reemplazar &lt;code&gt;&amp;lt;file/dir&amp;gt;&lt;/code&gt; con la ruta de nuestro fichero.&lt;/p&gt;

&lt;h1 id=&#34;2-eliminar-por-completo-el-rastro-del-fichero&#34;&gt;2. Eliminar por completo el rastro del fichero&lt;/h1&gt;

&lt;p&gt;El comando anterior crea una copia de seguridad en caso de que hayamos cometido un error, si ejecutamos&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;$ git lola --name-status
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Veremos un commit parecido a este (&lt;code&gt;* SHA1 (refs/original/refs/heads/master) mensaje del commit&lt;/code&gt;)&lt;/p&gt;

&lt;p&gt;En este commit aún está el fichero problemático, para borrarlo definitivamente:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;$ git update-ref -d refs/original/refs/heads/master
$ git reflog expire --expire&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;now --all
$ git gc --prune&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;now
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h1 id=&#34;3-enviar-los-cambios&#34;&gt;3. Enviar los cambios&lt;/h1&gt;

&lt;p&gt;Una vez hecho esto, solo resta enviar los cambios a Github:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;$ git push origin master
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Y habremos solucionado el problema.&lt;/p&gt;

&lt;h1 id=&#34;fuentes&#34;&gt;Fuentes&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://stackoverflow.com/questions/2100907/how-to-remove-delete-a-large-file-from-commit-history-in-git-repository&#34; title=&#34;How to remove/delete a large file from commit history in Git repository?&#34;&gt;How to remove/delete a large file from commit history in Git repository?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://stackoverflow.com/questions/19573031/cant-push-to-github-because-of-large-file-which-i-already-deleted&#34; title=&#34;Can&#39;t push to GitHub because of large file which I already deleted&#34;&gt;Can&amp;rsquo;t push to GitHub because of large file which I already deleted&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
        </item>
        
        <item>
            <title>Cómo Pasé De Usar Excel a Usar R Y Python</title>
            <link>https://elbauldelprogramador.com/de-excel-a-python-y-r/</link>
            <pubDate>Fri, 04 Nov 2016 15:23:40 +0000</pubDate>
            
            <guid>https://elbauldelprogramador.com/de-excel-a-python-y-r/</guid>
            <description>&lt;p&gt;Cómo pasé de analizar resultados con Excel a analizarlos con R+Python&lt;/p&gt;

&lt;h1 id=&#34;cómo-empezó-todo&#34;&gt;Cómo empezó todo&amp;hellip;&lt;/h1&gt;

&lt;p&gt;Todo empezó cuando me mandaron hacer una práctica para la universidad en la que tenía que:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Desarrollar cuatro algoritmos diferentes.&lt;/li&gt;
&lt;li&gt;Ejecutarlos en 20 casos diferentes, desde tamaño &lt;strong&gt;&lt;em&gt;n = 20&lt;/em&gt;&lt;/strong&gt; hasta tamaño &lt;strong&gt;&lt;em&gt;n = 256&lt;/em&gt;&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Hacer una documentación explicando el problema a resolver, cada algoritmo desarrollado e incluyendo un pseudocódigo de los mismos.&lt;/li&gt;
&lt;li&gt;Incluir en dicha documentación un estudio estadístico de los resultados, valorando cada algoritmo en función de cómo había trabajado con casos grandes (&lt;strong&gt;&lt;em&gt;n&lt;/em&gt;&lt;/strong&gt; grande) o casos pequeños (&lt;strong&gt;&lt;em&gt;n&lt;/em&gt;&lt;/strong&gt; pequeño) y sobre la eficacia del algoritmo en comparación con el mejor resultado conocido y con los resultados obtenidos por el resto de algoritmos. Además, incluir gráficas que apoyaran tus conclusiones estaba &amp;ldquo;muy bien visto&amp;rdquo; (codo, codo, guiño guiño).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;!--ad--&gt;&lt;/p&gt;

&lt;p&gt;y todo esto en unas tres semanas aproximadamente.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Puedes ver una práctica del estilo en &lt;a href=&#34;https://elbauldelprogramador.com/peso-hamming-y-optimizacion/&#34; title=&#34;Optimizando código y evaluando el rendimiento&#34;&gt;Optimizando código y evaluando el rendimiento&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;dormida-en-los-laureles&#34;&gt;Dormida en los laureles&lt;/h2&gt;

&lt;p&gt;Empecé con bastante tranquilidad pensando que en dos semanas tendría todo el trabajo hecho y me quedaría otra semana extra para documentar. A la hora de realizar los algoritmos me encontré con algunos fallos y varios quebraderos de cabeza, pero pude tenerlos todos terminados en esas dos semanas. Empecé a hacer mi documentación explicando con todo detalle todo lo que había hecho, centrándome en obtener tanto una buena presentación como una buena redacción y, finalmente, me quedaron dos días para hacer lo más importante: el análisis de los resultados.&lt;/p&gt;

&lt;p&gt;Para hacer el análisis, el profesor nos había dejado preparada una hoja de cálculo &lt;em&gt;plantilla&lt;/em&gt; con todos los datos que teníamos que rellenar y calcular. En rellenar la maldita plantilla se me fue media mañana, por no decir la mañana entera, ya que en &lt;em&gt;Calc&lt;/em&gt; tienes que introducir los decimales con una coma y &lt;em&gt;Python&lt;/em&gt; los devolvía con un punto. A pesar de esto aún no cundía demasiado el pánico pues tenía otro día más.&lt;/p&gt;

&lt;p&gt;Cuando ya calculé con &lt;em&gt;Calc&lt;/em&gt; todo lo que había que calcular vino &lt;strong&gt;el problema&lt;/strong&gt;: poner todos los datos que había calculado en mi documento de LaTeX. Un amigo me pasó un script que te permite exportar la tabla con sintaxis &lt;code&gt;tabular&lt;/code&gt; de &lt;a href=&#34;https://elbauldelprogramador.com/categories/latex/&#34; title=&#34;Artículos sobre LaTeX&#34;&gt;LaTeX&lt;/a&gt; pero, en la hoja de cálculo tenía las tablas que había hecho para todos y cada uno de los algoritmos y en mi documento tenían que ir separadas en secciones. Al final después de pelearme con &lt;em&gt;Calc&lt;/em&gt; conseguí separar las tablas e incluirlas en mi documento, pero había perdido un precioso día para documentar y analizar los resultados que había estado &lt;strong&gt;todo el día&lt;/strong&gt; preparando.&lt;/p&gt;

&lt;h2 id=&#34;último-día-kernel-panic&#34;&gt;Último día. Kernel panic.&lt;/h2&gt;

&lt;p&gt;Llegó el último día que, como tenía clase por la tarde, era en realidad &lt;em&gt;la última mañana&lt;/em&gt;. Decidí que sería una buena idea poner gráficas en mi documentación, pues con las tablas no me había dado como para escribir &lt;em&gt;todo lo que me hubiese gustado&lt;/em&gt; y además, le darían a mi documento un extra de &amp;ldquo;profesionalidad&amp;rdquo;.&lt;/p&gt;

&lt;p&gt;Así que me dispuse a intentar generar un gráfico en la hoja de cálculo que tenía. Intenté todas las combinaciones posibles de datos, tipos de gráficos, colores, leyendas y demás herramientas que proporciona &lt;em&gt;Calc&lt;/em&gt; para hacer gráficos y con ninguna obtenía un buen gráfico que realmente reflejase lo que quería. De hecho, lo más decente que pude obtener fueron dos gráficos que no decían absolutamente nada sobre los datos y que no supe ni siquiera etiquetar&amp;hellip; supongo que por los nervios de que la entrega se aproximaba y mi análisis daba pena.&lt;/p&gt;

&lt;p&gt;Estos son los gráficos que finalmente incluí en la que iba a ser la chachi documentación extra profesional a 5 minutos de que la entrega se cerrase.&lt;/p&gt;

&lt;figure&gt;
    &lt;img sizes=&#34;(min-width: 605px) 605px, 100vw&#34;on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/calc1.png&#34; alt=&#34;C\xF3mo Pas\xE9 De Usar Excel a Usar R Y Python&#34; title=&#34;C\xF3mo Pas\xE9 De Usar Excel a Usar R Y Python&#34; width=&#34;605&#34; height=&#34;340&#34;&gt;&lt;/img&gt;
    &lt;figcaption&gt;Primer gráfico horrible&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;figure&gt;
    &lt;img sizes=&#34;(min-width: 605px) 605px, 100vw&#34; on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/calc2.png&#34; alt=&#34;C\xF3mo Pas\xE9 De Usar Excel a Usar R Y Python&#34; title=&#34;C\xF3mo Pas\xE9 De Usar Excel a Usar R Y Python&#34; width=&#34;605&#34; height=&#34;340&#34;&gt;&lt;/img&gt;
    &lt;figcaption&gt;Segundo gráfico horrible&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;¿Podéis sacar alguna conclusión de ellos? Yo no.&lt;/p&gt;

&lt;h1 id=&#34;cuello-de-botella&#34;&gt;Cuello de botella&lt;/h1&gt;

&lt;p&gt;Tras el gran desastre que hice en la primera práctica, me prometí que no me pasaría lo mismo en la segunda. Tras un rato de reflexión, me di cuenta de que mi principal problema fue el tiempo que &lt;strong&gt;gasté&lt;/strong&gt; metiendo datos en la hoja de cálculo a mano e intentando hacer una gráfica medio decente. Tareas tediosas y, sobre todo, que podría haber automatizado con un script.&lt;/p&gt;

&lt;p&gt;Empecé a investigar cómo podría hacer un equivalente a mi hoja de cálculo, pero &lt;em&gt;exportable&lt;/em&gt; a LaTeX y sin tener que usar &lt;em&gt;Calc&lt;/em&gt;. Fue entonces cuando encontré el maravillo paquete de &lt;em&gt;Python&lt;/em&gt; llamado &lt;code&gt;tabulate&lt;/code&gt;. Este paquete, te permite generar a partir de una &lt;em&gt;lista de listas&lt;/em&gt; una preciosa tabla en varios formatos (podéis consultarlos en su &lt;a href=&#34;https://pypi.python.org/pypi/tabulate&#34;&gt;documentación&lt;/a&gt;) entre los que se encontraba &lt;code&gt;tabular&lt;/code&gt; de LaTeX.&lt;/p&gt;

&lt;p&gt;Tuve la suerte de haber hecho mi práctica en &lt;em&gt;python&lt;/em&gt;, por lo que añadirle el script que voy a describir a continuación fue pan comido.&lt;/p&gt;

&lt;h1 id=&#34;mi-script-con-tabulate&#34;&gt;Mi script con &lt;code&gt;tabulate&lt;/code&gt;&lt;/h1&gt;

&lt;p&gt;Si habéis leído la documentación de &lt;code&gt;tabulate&lt;/code&gt; habréis visto que es bastante sencillo de usar: sólo hay que hacer una lista de listas, donde cada lista de la lista representa una fila de la tabla. En mi caso, la información que tenía que almacenar para cada algoritmo era:&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Caso&lt;/th&gt;
&lt;th&gt;Coste obtenido&lt;/th&gt;
&lt;th&gt;Tiempo de ejecución&lt;/th&gt;
&lt;th&gt;Desviación&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;La última columna era una forma de reflejar la diferencia del coste obtenido por el algoritmo con el mejor coste obtenido para ese caso del problema.&lt;/p&gt;

&lt;p&gt;Mi script consistió en ejecutar todos los casos del algoritmo y guardar dos medidas, en dos listas separadas: tiempo de ejecución y coste de la solución obtenida. De antemano tenía guardados los distintos casos que tenía que ejecutar y las mejores soluciones conocidas de cada algoritmo, que usé para calcular la desviación de cada solución con la siguiente fórmula:&lt;/p&gt;

&lt;figure&gt;
    &lt;img sizes=&#34;(min-width: 197px) 197px, 100vw&#34; on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/zzpvyzc.png&#34; alt=&#34;C\xF3mo Pas\xE9 De Usar Excel a Usar R Y Python&#34; title=&#34;C\xF3mo Pas\xE9 De Usar Excel a Usar R Y Python&#34; width=&#34;197&#34; height=&#34;36&#34;&gt;&lt;/img&gt;
&lt;/figure&gt;

&lt;p&gt;Una vez tenía estos datos, generé la tabla en formato LaTeX consultando las diferentes listas que había creado.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;imprime&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;# Calculamos la desviación de cada solución con respecto a la mejor&lt;/span&gt;
    &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;calcula_desv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;# Generamos cada fila de la tabla accediendo a los datos guardados en cada&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;# una de las listas&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;table&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[[&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ficheros&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;valores&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tiempos&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;
        &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;desviaciones&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]]&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ficheros&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))]&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;# Añadimos a la tabla una cabecera para cada columna&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tabulate&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;table&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;headers&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;Fichero&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;Coste&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;Tiempo&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;Desviación&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;tablefmt&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;latex&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;# Además, calculamos la desviación media y el tiempo medio de ejecución&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;Desviación = &amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;desv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;Tiempo = &amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tiempo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h1 id=&#34;y-los-gráficos-qué&#34;&gt;Y los gráficos, ¿qué?&lt;/h1&gt;

&lt;p&gt;Una vez tuve mi script &amp;ldquo;hoja de cálculo&amp;rdquo; hecho, pasé a pensar cómo podría automatizar la creación de los gráficos que yo quería. Justo por esa época, @JJ dio una &lt;a href=&#34;http://jj.github.io/data-vis/#/&#34;&gt;charla&lt;/a&gt; sobre &lt;em&gt;Visualización de datos con R&lt;/em&gt; en la que describía el paquete &lt;code&gt;ggplot2&lt;/code&gt;. El funcionamiento de &lt;code&gt;ggplot2&lt;/code&gt; es muy sencillo, y permite obtener gráficos muy bonitos e ilustrativos a partir de un &lt;em&gt;Data frame&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Antes de describir el script en &lt;a href=&#34;https://elbauldelprogramador.com/tags/r&#34; title=&#34;Artículos sobre R&#34;&gt;R&lt;/a&gt; que hice, quiero enseñaros los gráficos que obtuve para que los comparéis con los que obtuve con &lt;em&gt;Calc&lt;/em&gt;.&lt;/p&gt;

&lt;figure&gt;
    &lt;img sizes=&#34;(min-width: 800px) 800px, 100vw&#34; on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/chrp1.png&#34; alt=&#34;Gráfico que muestra el rendimiento en un caso pequeño&#34; title=&#34;Gráfico que muestra el rendimiento en un caso pequeño&#34; width=&#34;800&#34; height=&#34;800&#34;&gt;&lt;/img&gt;
    &lt;figcaption&gt;Gráfico que muestra el rendimiento en un caso pequeño&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;figure&gt;
    &lt;img sizes=&#34;(min-width: 800px) 800px, 100vw&#34; on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/taip1.png&#34; alt=&#34;Gráfico que muestra el rendimiento en un caso grande&#34; title=&#34;Gráfico que muestra el rendimiento en un caso grande&#34; width=&#34;800&#34; height=&#34;800&#34;&gt;&lt;/img&gt;
    &lt;figcaption&gt;Gráfico que muestra el rendimiento en un caso grande&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;¿Qué algoritmo funciona mejor en casos pequeños? ¿Y en casos grandes?&lt;/p&gt;

&lt;figure&gt;
    &lt;img sizes=&#34;(min-width: 800px) 800px, 100vw&#34; on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/converp2.png&#34; alt=&#34;Gráfico de convergencia&#34; title=&#34;Gráfico de convergencia&#34; width=&#34;800&#34; height=&#34;800&#34;&gt;&lt;/img&gt;
    &lt;figcaption&gt;Gráfico de convergencia&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;Este último gráfico lo hice con los datos de la práctica 2, en vez de con los de la práctica 1. Representa la convergencia a una solución, al ser algoritmos multiarranque, pueden llegar a una buena solución y después dar con otra peor. ¿Qué algoritmo da con la mejor solución? ¿Qué algoritmo converge más rápido?&lt;/p&gt;

&lt;h1 id=&#34;mi-script-con-ggplot2&#34;&gt;Mi script con &lt;code&gt;ggplot2&lt;/code&gt;&lt;/h1&gt;

&lt;h2 id=&#34;pasando-datos-de-python-a-r&#34;&gt;Pasando datos de Python a R&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;ggplot2&lt;/code&gt; era ideal, pero tenía un problema: ¿cómo paso mis datos de python a R? La respuesta no fue muy difícil de encontrar. Lo que hice fue añadir una función más a mi script en python que guardaba los datos de la &amp;ldquo;hoja de cálculo&amp;rdquo; en un fichero &lt;code&gt;csv&lt;/code&gt;. Con el fichero &lt;code&gt;csv&lt;/code&gt; de cada algoritmo, creaba un &lt;em&gt;Data frame&lt;/em&gt; en R con los datos que me interesaban para mi gráfica.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;csv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;with&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;open&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;Resultados/&amp;quot;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;nombre_csv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;w&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;csvfile&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;fieldnames&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;Coste&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;Tiempo&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;Desviacion&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;writer&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;csv&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;DictWriter&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;csvfile&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;fieldnames&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fieldnames&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;writer&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;writeheader&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ficheros&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)):&lt;/span&gt;
            &lt;span class=&#34;n&#34;&gt;writer&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;writerow&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;({&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;Coste&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;valores&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]),&lt;/span&gt;
                &lt;span class=&#34;s1&#34;&gt;&amp;#39;Tiempo&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tiempos&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]),&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;Desviacion&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;desviaciones&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])})&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;csvfile&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;close&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Como también representaba en la gráfica los mejores resultados conocidos para cada caso, hice un &lt;code&gt;csv&lt;/code&gt; para almacenarlos y poder leerlos con R. Esta función sólo tuve que ejecutarla una vez pues la mejor solución de cada caso es la misma la compares con el algoritmo que la compares.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;mejor_csv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;with&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;open&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;mejor_csv.csv&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;w&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;csvfile&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;fieldnames&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;Caso&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;Coste&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;writer&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;csv&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;DictWriter&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;csvfile&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;fieldnames&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fieldnames&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;writer&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;writeheader&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ficheros&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)):&lt;/span&gt;
            &lt;span class=&#34;n&#34;&gt;writer&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;writerow&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;({&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;Caso&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ficheros&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;split&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;/&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;
                &lt;span class=&#34;s1&#34;&gt;&amp;#39;Coste&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mejores_sol&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])})&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;csvfile&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;close&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&#34;representando-en-r-los-datos&#34;&gt;Representando en R los datos&lt;/h2&gt;

&lt;p&gt;Una vez tenía los datos en ficheros &lt;code&gt;csv&lt;/code&gt; sólo tenía que usar la función &lt;code&gt;read.csv&lt;/code&gt; para convertirlos en un &lt;em&gt;Data frame&lt;/em&gt;. En mi caso, como habréis visto en las gráficas, sólo estaba interesada en el coste obtenido por cada algoritmo en casos pequeños y grandes, por lo que obivé los datos relacionados con el tiempo de ejecución.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# Parámetros de la función:&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;#   resultados: nombre de los ficheros csv de cada algoritmo&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;#   nombres: nombres de las columnas en el data frame&lt;/span&gt;
construye_datos &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;resultados&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; nombres&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;# leemos los datos sobre los mejores costes obtenidos para cada caso&lt;/span&gt;
    mejor &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; read.csv&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#39;Resultados/mejor_csv.csv&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;# y los costes obtenidos por el algoritmo greedy, este algoritmo se compara&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;# con todos los algoritmos desarrollados en todas las prácticas.&lt;/span&gt;
    greedy &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; read.csv&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#39;Resultados/resultados_greedy.csv&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;# leemos el resto de datos de los algoritmos de la práctica concreta&lt;/span&gt;
    algoritmos &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;kp&#34;&gt;lapply&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;X&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;resultados&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; FUN&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;kr&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;r&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; read.csv&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kp&#34;&gt;paste&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;Resultados/&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; r&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; sep&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)))&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;# hacemos un data frame guardando únicamente el coste obtenido por cada&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;# algoritmo.&lt;/span&gt;
    d &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;data.frame&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kp&#34;&gt;cbind&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;mejor&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; greedy&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; algoritmos&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
    &lt;span class=&#34;kp&#34;&gt;names&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;d&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;Caso&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;quot;MejorCoste&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;quot;CosteGreedy&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;quot;TiempoGreedy&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;quot;DesvGreedy&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; nombres&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    d
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Una vez tenía un &lt;em&gt;Data frame&lt;/em&gt; con los datos que quería representar en la gráfica, pasaba a realizar la gráfica con otra función. Debido a que quería representar tres medidas diferentes en la gráfica (&lt;strong&gt;coste&lt;/strong&gt; obtenido por cada &lt;strong&gt;algoritmo&lt;/strong&gt; en algunos de los &lt;strong&gt;casos&lt;/strong&gt;), tuve que hacer un tratamiento previo al &lt;em&gt;Data frame&lt;/em&gt; para conseguirlo.&lt;/p&gt;

&lt;p&gt;La función &lt;code&gt;construye_datos&lt;/code&gt; aplicada sobre dos algoritmos &lt;em&gt;&amp;ldquo;Ejemplo 1&amp;rdquo;&lt;/em&gt; y &lt;em&gt;&amp;ldquo;Ejemplo 2&amp;rdquo;&lt;/em&gt; nos devuelve un &lt;em&gt;Data frame&lt;/em&gt; con la siguiente forma:&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Caso&lt;/th&gt;
&lt;th&gt;MejorCoste&lt;/th&gt;
&lt;th&gt;CosteGreedy&lt;/th&gt;
&lt;th&gt;TiempoGreedy&lt;/th&gt;
&lt;th&gt;DesvGreedy&lt;/th&gt;
&lt;th&gt;CosteEj1&lt;/th&gt;
&lt;th&gt;TiempoEj1&lt;/th&gt;
&lt;th&gt;DesvEj1&lt;/th&gt;
&lt;th&gt;CosteEj2&lt;/th&gt;
&lt;th&gt;TiempoEj2&lt;/th&gt;
&lt;th&gt;DesvEj2&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;De esos datos, como he dicho antes, sólo nos interesan los relativos al coste obtenido para cada caso. Por tanto, el primer &amp;ldquo;procesamiento&amp;rdquo; que debemos hacer al &lt;em&gt;Data frame&lt;/em&gt; es quedarnos sólo con las columnas que nos interesan:&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Caso&lt;/th&gt;
&lt;th&gt;MejorCoste&lt;/th&gt;
&lt;th&gt;CosteGreedy&lt;/th&gt;
&lt;th&gt;CosteEj1&lt;/th&gt;
&lt;th&gt;CosteEj2&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Una vez hecho esto, tenía que &amp;ldquo;reorganizar&amp;rdquo; el &lt;em&gt;Data frame&lt;/em&gt; de forma que pasase a tener únicamente 3 columnas, que son las que iba a representar en la gráfica:&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Caso&lt;/th&gt;
&lt;th&gt;variable&lt;/th&gt;
&lt;th&gt;value&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;chr20a.dat&lt;/td&gt;
&lt;td&gt;MejorCoste&lt;/td&gt;
&lt;td&gt;2192&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;chr20c.dat&lt;/td&gt;
&lt;td&gt;MejorCoste&lt;/td&gt;
&lt;td&gt;14142&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;chr22b.dat&lt;/td&gt;
&lt;td&gt;MejorCoste&lt;/td&gt;
&lt;td&gt;6194&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;chr25a.dat&lt;/td&gt;
&lt;td&gt;MejorCoste&lt;/td&gt;
&lt;td&gt;3796&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;chr20a.dat&lt;/td&gt;
&lt;td&gt;CosteGreedy&lt;/td&gt;
&lt;td&gt;8100&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;chr20c.dat&lt;/td&gt;
&lt;td&gt;CosteGreedy&lt;/td&gt;
&lt;td&gt;78718&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;chr22b.dat&lt;/td&gt;
&lt;td&gt;CosteGreedy&lt;/td&gt;
&lt;td&gt;11942&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;chr25a.dat&lt;/td&gt;
&lt;td&gt;CosteGreedy&lt;/td&gt;
&lt;td&gt;17556&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;chr20a.dat&lt;/td&gt;
&lt;td&gt;CosteEj1&lt;/td&gt;
&lt;td&gt;2418&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;chr20c.dat&lt;/td&gt;
&lt;td&gt;CosteEj1&lt;/td&gt;
&lt;td&gt;15672&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;chr22b.dat&lt;/td&gt;
&lt;td&gt;CosteEj1&lt;/td&gt;
&lt;td&gt;6530&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;chr25a.dat&lt;/td&gt;
&lt;td&gt;CosteEj1&lt;/td&gt;
&lt;td&gt;4762&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;chr20a.dat&lt;/td&gt;
&lt;td&gt;CosteEj2&lt;/td&gt;
&lt;td&gt;2546&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;chr20c.dat&lt;/td&gt;
&lt;td&gt;CosteEj2&lt;/td&gt;
&lt;td&gt;16986&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;chr22b.dat&lt;/td&gt;
&lt;td&gt;CosteEj2&lt;/td&gt;
&lt;td&gt;6660&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;chr25a.dat&lt;/td&gt;
&lt;td&gt;CosteEj2&lt;/td&gt;
&lt;td&gt;4440&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Como veis, usando la columna &lt;em&gt;Caso&lt;/em&gt; como &lt;strong&gt;identificador&lt;/strong&gt;, hemos reordenado la tabla de manera que, para cada algoritmo, tendremos un gráfico de barras representando el coste obtenido en cada caso.&lt;/p&gt;

&lt;p&gt;Una vez explicado paso a paso el tratamiento que hice a los datos, paso a enseñar la función que hace la gráfica:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# Parámetros de la función:&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;#   datos: Data frame que devuelve la función constuye_datos&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;#   cols: columnas del data frame que vamos a representar en la gráfica&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;#         (en nuestro caso, el coste obtenido por cada algoritmo para cada caso)&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;#   nombres: nombres de cada columna del data frame que aparecerán en la gráfica&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;#   file: nombre del archivo en el que guardaremos las gráficas finalmente&lt;/span&gt;
representa_datos &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;datos&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; cols&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; nombres&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kp&#34;&gt;file&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;# importación de librerías&lt;/span&gt;
    &lt;span class=&#34;kn&#34;&gt;library&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;ggplot2&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;    &lt;span class=&#34;c1&#34;&gt;# para hacer gŕaficos&lt;/span&gt;
    &lt;span class=&#34;kn&#34;&gt;library&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;reshape2&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;   &lt;span class=&#34;c1&#34;&gt;# para poder redistribuir el data frame&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;# nos quedamos con las columnas del data frame que nos interesan&lt;/span&gt;
    d_c &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;data.frame&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kp&#34;&gt;cbind&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;datos&lt;span class=&#34;p&#34;&gt;[,&lt;/span&gt;cols&lt;span class=&#34;p&#34;&gt;]))&lt;/span&gt;
    &lt;span class=&#34;kp&#34;&gt;names&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;d_c&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;Caso&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;quot;Mejor Coste&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;quot;Coste Greedy&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; nombres&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    d_c&lt;span class=&#34;o&#34;&gt;$&lt;/span&gt;Caso &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; datos&lt;span class=&#34;o&#34;&gt;$&lt;/span&gt;Caso
    &lt;span class=&#34;c1&#34;&gt;# filtramos los casos que empiezan por chr2, ya que estos son casos&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;# bastante pequeños y redistribuimos el data frame&lt;/span&gt;
    d_chr &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; melt&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;d_c&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;kp&#34;&gt;grepl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;chr2&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;datos&lt;span class=&#34;o&#34;&gt;$&lt;/span&gt;Caso&lt;span class=&#34;p&#34;&gt;),])&lt;/span&gt;
    &lt;span class=&#34;kp&#34;&gt;names&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;d_chr&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;Caso&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;quot;Algoritmo&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;quot;Coste&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;# representamos la gráfica de barras&lt;/span&gt;
    ggplot&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;d_chr&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;Caso&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; Coste&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; geom_bar&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;fill&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;Algoritmo&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; position&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;dodge&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; stat&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;identity&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;# guardamos el archivo&lt;/span&gt;
    ggsave&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kp&#34;&gt;paste&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;chr&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;kp&#34;&gt;file&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;.png&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;sep&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;# repetimos para casos tai, que son casos grandes.&lt;/span&gt;
    d_tai &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; melt&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;d_c&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;kp&#34;&gt;grepl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;tai&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;datos&lt;span class=&#34;o&#34;&gt;$&lt;/span&gt;Caso&lt;span class=&#34;p&#34;&gt;),])&lt;/span&gt;
    &lt;span class=&#34;kp&#34;&gt;names&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;d_tai&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;Caso&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;quot;Algoritmo&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;quot;Coste&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    ggplot&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;d_tai&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;Caso&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; Coste&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; geom_bar&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;fill&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;Algoritmo&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; position&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;dodge&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; stat&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;identity&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    ggsave&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kp&#34;&gt;paste&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;tai&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;kp&#34;&gt;file&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;.png&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;sep&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Por ejemplo, para obtener la gráfica de los algoritmos &lt;em&gt;&amp;ldquo;Ejemplo 1&amp;rdquo;&lt;/em&gt; y &lt;em&gt;&amp;ldquo;Ejemplo 2&amp;rdquo;&lt;/em&gt;, realizaríamos la siguiente llamada:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span&gt;&lt;/span&gt;datos_prueba &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; construye_datos&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;resultados &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;resultados_Ej1.csv&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;resultados_Ej2.csv&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;
    nombres &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;CosteEj1&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;quot;TiempoEj1&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;quot;DesvEj1&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;CosteEj2&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;quot;TiempoEj2&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;quot;DesvEj2&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
representa_datos&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;datos&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;datos_prueba&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; cols&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;9&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; nombres&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;Coste Ej1&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;quot;Coste Ej2), file=&amp;quot;&lt;/span&gt;prueba&lt;span class=&#34;s&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Conseguí optimizar tanto el tiempo con estos scripts, que me sobró tiempo para implementar un gráfico de convergencia en R. Para ello, modifiqué mi práctica para que guardase en un &lt;code&gt;csv&lt;/code&gt; cada coste que iba encontrando, para después representarlo en una gráfica. Una vez comprendida la función anterior, esta no tiene apenas ninguna diferencia:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span&gt;&lt;/span&gt;representa_convergencia &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;resultados&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; nombres&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kp&#34;&gt;file&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;kn&#34;&gt;library&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;ggplot2&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;kn&#34;&gt;library&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;reshape2&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;# leemos la convergencia de cada algoritmo&lt;/span&gt;
    convergencias &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;kp&#34;&gt;lapply&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;X&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;resultados&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; FUN&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;kr&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;r&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; read.csv&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kp&#34;&gt;paste&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;Resultados/&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;r&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;sep&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)))&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;# El csv guarda tanto las iteraciones dadas por el algoritmo como el coste&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;# obtenido en cada iteración. Como sólo nos interesa el coste, nos quedamos&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;# con la segunda columna.&lt;/span&gt;
    &lt;span class=&#34;kt&#34;&gt;c&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;kp&#34;&gt;lapply&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;X&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;convergencias&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; FUN&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;kr&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;conv&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; conv&lt;span class=&#34;p&#34;&gt;[[&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]])&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;# hacemos un nuevo data frame con la siguiente estructura:&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;#   Iteraciones    ConvergenciaAlgoritmo 1 ..... ConvergenciaAlgoritmo n&lt;/span&gt;
    d_c &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;data.frame&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;convergencias&lt;span class=&#34;p&#34;&gt;[[&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]][,&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;kp&#34;&gt;names&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;d_c&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; nombres
    d_c
    &lt;span class=&#34;c1&#34;&gt;# reorganizamos el data frame&lt;/span&gt;
    d_cm &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; melt&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;d_c&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; id.vars&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;nombres&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;
    &lt;span class=&#34;kp&#34;&gt;names&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;d_cm&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;nombres&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;quot;Algoritmo&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;quot;Coste&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;# lo representamos con ggplot. Hago la distinción de si los datos se han&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;# obtenido por número de llamadas a la función de evaluación o por número de&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;# iteraciones.&lt;/span&gt;
    &lt;span class=&#34;kr&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;nombres&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;quot;Evaluaciones&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
        ggplot&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;d_cm&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;Evaluaciones&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;Coste&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; geom_line&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;color&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;Algoritmo&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
    &lt;span class=&#34;kp&#34;&gt;else&lt;/span&gt;
        ggplot&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;d_cm&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;Iteraciones&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;Coste&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; geom_line&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;color&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;Algoritmo&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;# y lo guardamos.&lt;/span&gt;
    ggsave&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kp&#34;&gt;paste&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;conver&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;kp&#34;&gt;file&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;.png&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; sep&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h1 id=&#34;referencias&#34;&gt;Referencias&lt;/h1&gt;

&lt;p&gt;El código de la práctica está disponible en el GitHub de Marta: &lt;a href=&#34;https://github.com/mgmacias95/Analisis-Resultados-R-Python&#34; title=&#34;Enlace al Repo&#34;&gt;github.com/mgmacias95/Analisis-Resultados-R-Python&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&#34;más-sobre-r-y-python&#34;&gt;Más sobre R y Python&lt;/h1&gt;

&lt;p&gt;Puedes consultar los siguientes atrículos sobre R y python:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://elbauldelprogramador.com/vectorizar-acceso-columnas-r/&#34; title=&#34;Vectorizar El Acceso a Columnas en R&#34;&gt;Vectorizar El Acceso a Columnas en R&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://elbauldelprogramador.com/acceder-variable-dentro-funcion-r/&#34; title=&#34;Cómo modificar Una Variable Desde Dentro De Una Función en R&#34;&gt;Cómo modificar Una Variable Desde Dentro De Una Función en R&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://elbauldelprogramador.com/introduccion-a-las-expresiones-regulares-en-python/&#34; title=&#34;Introducción a las expresiones regulares en python&#34;&gt;Introducción a las expresiones regulares en python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://elbauldelprogramador.com/generar-listas-de-reproduccion-determinada-duracion-python/&#34; title=&#34;Generar listas de reproducción de una determinada duración con Python&#34;&gt;Generar listas de reproducción de una determinada duración con Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://elbauldelprogramador.com/python-lista-de-listas-eficiente/&#34; title=&#34;Crear Una Lista De Listas De Forma Eficiente en Python&#34;&gt;Crear Una Lista De Listas De Forma Eficiente en Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://elbauldelprogramador.com/como-anadir-automaticamente-el-tamao-de-una-imagen-en-html-con-python/&#34; title=&#34;Cómo Añadir Automáticamente El Tamaño De Una Imagen en HTML Con Python&#34;&gt;Cómo Añadir Automáticamente El Tamaño De Una Imagen en HTML Con Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Los artículos etiquetados con estos temas se encuentran en &lt;a href=&#34;https://elbauldelprogramador.com/tags/r&#34;&gt;/tags/r&lt;/a&gt; y &lt;a href=&#34;https://elbauldelprogramador.com/tags/python&#34;&gt;/tags/python&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
        </item>
        
        <item>
            <title>Liberado El Curso De Android</title>
            <link>https://elbauldelprogramador.com/descargar-curso-android-gratuito/</link>
            <pubDate>Sat, 22 Oct 2016 06:03:57 +0000</pubDate>
            
            <guid>https://elbauldelprogramador.com/descargar-curso-android-gratuito/</guid>
            <description>&lt;p&gt;He decidido liberar el &lt;a href=&#34;https://elbauldelprogramador.com/curso-programacion-android/&#34; title=&#34;Curso de Programación en Android&#34;&gt;curso de programación Android&lt;/a&gt;, ya que está algo antiguo, podéis descargarlo en: &lt;a href=&#34;http://elbauldelprogramador.com/pdfs/PaqueteProgramacionAndroid.zip&#34; id=&#34;androidCourse&#34;&gt;Curso de Programación Android Gratuíto&lt;/a&gt;. De todos modos, si valoras el trabajo realizado, se aceptan donaciones mediante nuestro &lt;a href=&#34;https://www.paypal.me/elbaul&#34;&gt;enlace de Paypal&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Espero que os resulte útil.&lt;/p&gt;

&lt;p&gt;&lt;!--ad--&gt;&lt;/p&gt;</description>
        </item>
        
        <item>
            <title>Ebook Gratuito: 10 Things You Must Do With a Brand New Router</title>
            <link>https://elbauldelprogramador.com/10-things-you-must-do-with-a-brand-new-router/</link>
            <pubDate>Tue, 04 Oct 2016 06:57:02 +0000</pubDate>
            
            <guid>https://elbauldelprogramador.com/10-things-you-must-do-with-a-brand-new-router/</guid>
            <description>&lt;figure&gt;
   &lt;img on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/guides/10-Things-You-Must-Do-With-a-Brand-New-Router-centered.jpg&#34; alt=&#34;{{ title }}&#34; title=&#34;{{ title }}&#34; width=&#34;800&#34; height=&#34;420&#34;&gt;
   &lt;/img&gt;
&lt;/figure&gt;

&lt;p&gt;There are many good reasons to upgrade your router (or buy one if you don’t have one). You can get faster speeds, improved range, and new features. It’ll also ensure maximum compatibility with your latest gadgets.&lt;/p&gt;

&lt;p&gt;But to get the best out of it you also need to set it up properly. It’s not difficult — adjust the hardware, tweak a few settings — but the results are well worth it. Here’s what you need to do every time you get a brand new router.
Copyright&lt;/p&gt;


&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;NOTA&lt;/strong&gt;: Si quieres apoyar el trabajo que realizamos en &lt;em&gt;El Baúl del Programador&lt;/em&gt;, descargar alguna de estas guías es una buena forma. Para ello en el formuario de descarga &lt;strong&gt; debes indicar que trabajas en el sector relacionado con la guía que descargas, a que te dedicas etc, de lo contrario no obtendremos comisión&lt;/strong&gt; ($1.5). Si tienes un blog y quieres usar esta forma de monetización, puedes darte de alta en &lt;a id=&#34;revresponse&#34; href=&#34;http://www.revresponse.com/join.php?refbrand=bashyc-blogspot&#34; target=&#34;_blank&#34; title=&#34;RevResponse&#34;&gt;RevResponse&lt;/a&gt; y empezar a ofrecer guías de interés a tus lectores. Visita el &lt;a href=&#34;http://elbauldelprogramador.tradepub.com/category/information-technology/1207/&#34; target=&#34;_blank&#34; title=&#34;Catálogo completo de Guías gratuítas&#34;&gt;catálogo completo de guías.&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;




&lt;div class=&#34;button-post&#34;&gt;
  &lt;h2&gt;&lt;a href=&#34;http://bashyc-blogspot.tradepub.com/c/pubRD.mpl?sr=oc&amp;_t=oc:&amp;qf=w_make298&#34; target=&#34;_blank&#34;&gt;Descárgala ahora&lt;/a&gt;&lt;/h2&gt;
&lt;/div&gt;

&lt;p&gt;Visita la página &lt;a href=&#34;https://elbauldelprogramador.com/manuales-gratuitos/&#34;&gt;Manuales gratuitos&lt;/a&gt; o consulta el &lt;a href=&#34;http://elbauldelprogramador.tradepub.com/category/information-technology/1207/&#34; title=&#34;Catálogo completo de Guías gratuítas &#34;&gt;catálogo completo&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;!--ad--&gt;&lt;/p&gt;</description>
        </item>
        
        <item>
            <title>Cómo Resolver El Error “Can&#39;t Open Display: :0.0” Al Conectarse a Una Red Wi-Fi</title>
            <link>https://elbauldelprogramador.com/cant-open-display-0-0-wifi-net/</link>
            <pubDate>Mon, 03 Oct 2016 14:15:35 +0000</pubDate>
            
            <guid>https://elbauldelprogramador.com/cant-open-display-0-0-wifi-net/</guid>
            <description>&lt;h1 id=&#34;problema-can-t-open-display-0-0&#34;&gt;Problema: Can&amp;rsquo;t Open Display: :0.0&lt;/h1&gt;

&lt;p&gt;&lt;em&gt;NetworkManager&lt;/em&gt; tiene la costumbre de cambiar el nombre del host (&lt;em&gt;hostname&lt;/em&gt;) al conectarse a una red, y esto a veces provoca que las aplicaciones con interfaz gráfica no puedan lanzarse. El típico error que se obtiene cuando esto ocurre es:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;Can&lt;span class=&#34;err&#34;&gt;&amp;#39;&lt;/span&gt;t Open Display: :0.0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;!--ad--&gt;&lt;/p&gt;

&lt;h1 id=&#34;solución-establecer-de-forma-permanente-un-hostname&#34;&gt;Solución: Establecer de forma permanente un hostname&lt;/h1&gt;

&lt;p&gt;Tras mucho investigar, descubrí que el problema estaba en &lt;em&gt;NetworkManager&lt;/em&gt;, y para solucionarlo basta con hacer permanente el &lt;em&gt;hostname&lt;/em&gt;. Para ello en el fichero &lt;code&gt;/etc/hosts&lt;/code&gt; debemos añadir un alias a &lt;code&gt;localhost&lt;/code&gt; con el nombre que queramos:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;127.0.0.1	localhost NombreDeseado
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Luego, en el fichero de configuración de &lt;em&gt;NetworkManager&lt;/em&gt; (&lt;code&gt;/etc/NetworkManager/NetworkManager.conf&lt;/code&gt;) escribimos lo siguiente:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;main&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;plugins&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;keyfile

&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;keyfile&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;hostname&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;NombreDeseado
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Con esto bastará.&lt;/p&gt;

&lt;h1 id=&#34;cuando-la-solución-no-funciona&#34;&gt;Cuando la solución no funciona&lt;/h1&gt;

&lt;p&gt;Recientemente se actualizó &lt;em&gt;NetworkManager&lt;/em&gt; y la solución de arriba dejó de funcionar. Esto se debe a que &lt;em&gt;NetworkManager&lt;/em&gt; ya no mira el nombre del host en el fichero de configuración, como mencionan en el &lt;em&gt;man&lt;/em&gt; de &lt;code&gt;NetworkManager.conf&lt;/code&gt;:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;hostname: This key is deprecated and has no effect since the hostname is now stored in /etc/hostname or other system configuration files according to build options.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Por tanto la solución ahora es más sencilla, basta con añadir el nombre para el host en &lt;code&gt;/etc/hostname&lt;/code&gt;, por ejemplo:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;$ cat /etc/hostname
NombreDeseado
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h1 id=&#34;referencias&#34;&gt;Referencias&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://bbs.archlinux.org/viewtopic.php?id=59575&#34; title=&#34;Can&#39;t open display: :0.0&#34;&gt;Arch Linux forums&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://wiki.gnome.org/Projects/NetworkManager/SystemSettings&#34; title=&#34;System settings gnome&#34;&gt;System Settings gnome&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
        </item>
        
        <item>
            <title>Cómo Obtener La Dimensión De Una Imagen en Internet</title>
            <link>https://elbauldelprogramador.com/obtener-dimension-imagen-internet-url/</link>
            <pubDate>Sat, 01 Oct 2016 16:32:13 +0000</pubDate>
            
            <guid>https://elbauldelprogramador.com/obtener-dimension-imagen-internet-url/</guid>
            <description>&lt;h2 id=&#34;problema-dada-la-url-de-una-imagen-extraer-sus-dimensiones-ancho-y-alto&#34;&gt;Problema: Dada la url de una imagen extraer sus dimensiones (Ancho y alto)&lt;/h2&gt;

&lt;p&gt;Queremos obtener las dimensiones de una imagen desde línea de comandos. La imagen puede ser local o estar en internet.  En anteriores artículos vimos algo parecido (&lt;a href=&#34;https://elbauldelprogramador.com/como-anadir-automaticamente-el-tamao-de-una-imagen-en-html-con-python/&#34; title=&#34;Cómo Añadir Automáticamente El Tamaño De Una Imagen en HTML Con Python&#34;&gt;Cómo Añadir Automáticamente El Tamaño De Una Imagen en HTML Con Python&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;!--ad--&gt;&lt;/p&gt;

&lt;h2 id=&#34;solución-el-comando-identify-de-imagemagick&#34;&gt;Solución: el comando Identify de ImageMagick&lt;/h2&gt;

&lt;p&gt;El comando &lt;code&gt;identify&lt;/code&gt; es un programa perteneciente a la suite &lt;em&gt;ImageMagick&lt;/em&gt;, citamos su página &lt;code&gt;man&lt;/code&gt;:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Identify describe el formato y características de una o más imágenes. Así como informar si una imagen está incompleta o dañada. La información dada incluye: Número de imagen, nombre, dimensiones, si es a color, número de colores, tamaño en bytes, formato y el tiempo que se tardó en procesarla. Se pueden acceder a más datos con la opción &lt;code&gt;--verbose&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;De todos esos datos, en este caso solo nos interesa la dimensión. Si ejecutamos el programa y le pasamos la url de una imagen, por ejemplo una del artículo &lt;a href=&#34;https://elbauldelprogramador.com/las-medallas-de-oro-en-las-olimpiadas-desde-1896-visualizadas/&#34; title=&#34;Plumas Olímpicas, Visualización de las medallas Olímpicas desde 1896 hasta 2016&#34;&gt;Plumas Olímpicas, Visualización de las medallas Olímpicas desde 1896 hasta 2016&lt;/a&gt;, veremos lo siguiente:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;$ identify https://elbauldelprogramador.com/img/Olympic-Feathers-Detail-7.png
https://elbauldelprogramador.com/img/Olympic-Feathers-Detail-7.png&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&amp;gt;&lt;span class=&#34;se&#34;&gt;\&lt;/span&gt;
//elbauldelprogramador.com/img/Olympic-Feathers-Detail-7.png PNG 750x750&lt;span class=&#34;se&#34;&gt;\&lt;/span&gt;
750x750+0+0 8-bit sRGB 149KB 0.000u 0:00.000
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Esto es útil, pero ¿qué pasa si queremos un formato en concreto? en mi caso necesitaba que me devolviera las dimensiones formateadas para insertarlas en una etiqueta &lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt;. Para ello usamos la opción &lt;code&gt;format&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;$ identify -format &lt;span class=&#34;s2&#34;&gt;&amp;quot;width=\&amp;quot;%[fx:w]\&amp;quot; height=\&amp;quot;%[fx:h]\&amp;quot;\n&amp;quot;&lt;/span&gt; https://elbauldelprogramador.com/img/Olympic-Feathers-Detail-7.png
&lt;span class=&#34;nv&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;750&amp;quot;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;height&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;750&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Como vemos nos devuelve las dimensiones listas para pegarlas en la etiqueta &lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt;. Para evitar tener que escribir todo ese comando, basta con crear un &lt;code&gt;alias&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;alias&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;imgsize&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;identify -format &amp;quot;width=\&amp;quot;%[fx:w]\&amp;quot; height=\&amp;quot;%[fx:h]\&amp;quot;\n&amp;quot;&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Y a partir de ahora usaremos el comando con &lt;code&gt;imgsize&lt;/code&gt;.&lt;/p&gt;</description>
        </item>
        
        <item>
            <title>Plumas Olímpicas, Visualización de las medallas Olímpicas desde 1896 hasta 2016</title>
            <link>https://elbauldelprogramador.com/las-medallas-de-oro-en-las-olimpiadas-desde-1896-visualizadas/</link>
            <pubDate>Fri, 23 Sep 2016 13:01:18 +0000</pubDate>
            
            <guid>https://elbauldelprogramador.com/las-medallas-de-oro-en-las-olimpiadas-desde-1896-visualizadas/</guid>
            <description>&lt;figure&gt;
    &lt;img sizes=&#34;(min-width: 750px) 750px, 100vw&#34; on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/Olympic-Feathers-Detail-7.png&#34; alt=&#34;Plumas Olímpicas, Visualización de las medallas Olímpicas desde 1896 hasta 2016&#34; title=&#34;Plumas Olímpicas, Visualización de las medallas Olímpicas desde 1896 hasta 2016&#34; width=&#34;750&#34; height=&#34;750&#34;&gt;&lt;/img&gt;
&lt;/figure&gt;

&lt;p&gt;Hace unos meses publicamos &lt;a href=&#34;https://elbauldelprogramador.com/14-ejemplos-visualizacion-datos/&#34; title=&#34;15 Ejemplos De Las Mejores Visualizaciones De Datos&#34;&gt;15 Ejemplos De Las Mejores Visualizaciones De Datos&lt;/a&gt;, hoy os traemos otra visualización muy interesante de &lt;a href=&#34;http://www.visualcinnamon.com&#34; title=&#34;Sitio web de Nadieh Bremer&#34;&gt;&lt;em&gt;Nadieh Bremer&lt;/em&gt;&lt;/a&gt;, en la cual muestra &lt;strong&gt;todas las medallas de oro en los Juegos Olímpicos desde 1896&lt;/strong&gt;, en forma de plumas.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Olympic Feathers&lt;/strong&gt;, es una &lt;em&gt;visualización de datos&lt;/em&gt; interactiva que muestra la historia de las medallas olímpicas desde 1896 hasta hoy. Los gráficos muestran cómo se distribuyen las medallas por disciplina, país, género y geografía. También proporciona una visión de cómo han evolucionado las distintas disciplinas a lo largo del tiempo.&lt;/p&gt;

&lt;h1 id=&#34;cómo-surgió-la-idea&#34;&gt;Cómo surgió la idea&lt;/h1&gt;

&lt;p&gt;Inicialmente Nadieh tenía pensado visualizar cada una de las 56 disciplinas como una “pluma” y usar el interior de la pluma para colocar todas las medallas en función de la edición de los juegos y género del ganador. Al final la idea del diseño usando forma de pluma no cuajó, pero lo mantuvo en el nombre del proyecto (&lt;em&gt;“Olympic feathers”&lt;/em&gt; o Plumas Olímpicas).&lt;/p&gt;

&lt;p&gt;&lt;!--ad--&gt;&lt;/p&gt;

&lt;h1 id=&#34;qué-herramientas-usó&#34;&gt;Qué herramientas usó&lt;/h1&gt;

&lt;p&gt;Para desarrollar el proyecto usó &lt;strong&gt;Excel&lt;/strong&gt;, &lt;strong&gt;R&lt;/strong&gt; (Puedes consultar &lt;a href=&#34;https://elbauldelprogramador.com/tags/r&#34; title=&#34;Artículos sobre R&#34;&gt;artículos sobre R en este enlace&lt;/a&gt;) , &lt;strong&gt;Sketch&lt;/strong&gt; y &lt;strong&gt;D3.js&lt;/strong&gt;.&lt;/p&gt;

&lt;h1 id=&#34;la-historia-de-las-olimpiadas&#34;&gt;La historia de las Olimpiadas&lt;/h1&gt;

&lt;p&gt;Más de 5000 eventos en las Olimpiadas han tenido ganador, premiados con una medalla de oro desde 1904. Podemos investigar la visualización interactiva para ver cómo cada una de estas medallas se ganaron en las 56 disciplinas que han participado en los juegos, 41 de las cuales participaron también en los últimos Juegos Olímpicos de Rio.&lt;/p&gt;

&lt;h1 id=&#34;qué-nos-cuentan-los-datos&#34;&gt;Qué nos cuentan los datos&lt;/h1&gt;

&lt;p&gt;La mayoría de deportes Olímpicos empezaron siendo solo para hombres. Afortunadamente esta tendiencia comenzó a cambiar en la segunda mitad el último siglo. Incluso el número de medallas que pueden ganarse para una disciplina comienza a ser el mismo para ambos géneros. En los juegos de Rio hubo 3 disciplinas en las que solo podía participar un género; La &lt;strong&gt;&lt;em&gt;lucha Greco-Romana&lt;/em&gt;&lt;/strong&gt;, aún en los juegos desde la primera edición, en la que solo participan hombres. Por otro lado, en  &lt;strong&gt;&lt;em&gt;Gimnasia Rítmica&lt;/em&gt;&lt;/strong&gt;, y &lt;strong&gt;&lt;em&gt;Natación Sincronizada&lt;/em&gt;&lt;/strong&gt;, en los juegos desde 1984, solo participan mujeres.&lt;/p&gt;

&lt;h1 id=&#34;como-leer-las-plumas&#34;&gt;Como leer las plumas&lt;/h1&gt;

&lt;p&gt;Cada círculo representa un grupo de deportes similares, como deportes de agua, deportes de pelotas etc. Dentro de cada círculo se muestran porciones, cada una de estas porciones es una &lt;strong&gt;pluma&lt;/strong&gt;, que representa una disciplina.&lt;/p&gt;

&lt;figure&gt;
    &lt;img sizes=&#34;(min-width: 292px) 292px, 100vw&#34; on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/Plumas-Olimpicas-Visualizacion-medallas-Olimpicas-1896-hasta-2016.png&#34; alt=&#34;Plumas Olímpicas, Visualización de las medallas Olímpicas desde 1896 hasta 2016&#34; title=&#34;Plumas Olímpicas, Visualización de las medallas Olímpicas desde 1896 hasta 2016&#34; width=&#34;292&#34; height=&#34;214&#34;&gt;&lt;/img&gt;
    &lt;figcaption&gt;Una pluma&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;Una &lt;strong&gt;pluma&lt;/strong&gt; se divide en 31 secciones, irradiando hacia afuera. Empiezan desde los primeros juegos en 1896, en el centro del círculo hasta los últimos juegos en Rio 2016, en el exterior del círculo. Cada disciplina se hace el doble de ancha según el máximo de medallas que se podrían haber ganado durante una edición para un género (El ancho es el mismo para hombres y mujeres).&lt;/p&gt;

&lt;p&gt;La siguiente división se hace por género. Por ejemplo, en la imagen de arriba, las barras que van hacia arriba, con un fondo rojo son medallas de oro ganadas por mujeres, las de abajo por hombres.&lt;/p&gt;

&lt;p&gt;Las medallas se colorean en función del continente, como se muestra en la siguiente imagen:&lt;/p&gt;

&lt;figure&gt;
    &lt;img sizes=&#34;(min-width: 196px) 196px, 100vw&#34; on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/Plumas-Olimpicas-Visualizacion-medallas-Olimpicas-1896-hasta-20162.png&#34; alt=&#34;Plumas Olímpicas, Visualización de las medallas Olímpicas desde 1896 hasta 2016&#34; title=&#34;Plumas Olímpicas, Visualización de las medallas Olímpicas desde 1896 hasta 2016&#34; width=&#34;196&#34; height=&#34;129&#34;&gt;&lt;/img&gt;
    &lt;figcaption&gt;Representación de los continentes&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;h1 id=&#34;detalles-técnicos-y-referencias&#34;&gt;Detalles técnicos y referencias&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;Para conocer más sobre la elaboración del proyecto, puedes visitar el repositorio &lt;a href=&#34;https://github.com/nbremer/olympicfeathers/tree/gh-pages/data&#34; title=&#34;Olympic Feathers en GitHub&#34;&gt;Olympic Feathers en GitHub&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;La página del &lt;a href=&#34;https://nbremer.github.io/olympicfeathers/&#34; title=&#34;proyecto Olympic Feathers&#34;&gt;proyecto Olympic Feathers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Página personal de &lt;a href=&#34;http://www.visualcinnamon.com/portfolio/olympic-feathers&#34; title=&#34;Página Oficial de Nadieh Bremer&#34;&gt;Nadieh Bremer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Para escuchar Nadieh hablar de su proyecto en el podcast &lt;strong&gt;Data Stories&lt;/strong&gt;, visita el episodio &lt;a href=&#34;http://datastori.es/83-olympic-feathers-with-nadieh-bremer/&#34; title=&#34;83 \| Olympic Feathers with Nadieh Bremer&#34;&gt;83 | Olympic Feathers with Nadieh Bremer&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
        </item>
        
        <item>
            <title>Cómo Crear Diagramas De Gantt en LaTeX</title>
            <link>https://elbauldelprogramador.com/crear-diagrama-de-gantt-en-latex/</link>
            <pubDate>Fri, 16 Sep 2016 13:48:53 +0000</pubDate>
            
            <guid>https://elbauldelprogramador.com/crear-diagrama-de-gantt-en-latex/</guid>
            <description>&lt;figure&gt;
  &lt;img sizes=&#34;(min-width: 800px) 800px, 100vw&#34; on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/crear-diagrama-de-gantt-en-latex.png&#34; alt=&#34;Cómo Crear Diagramas De Gantt en LaTeX&#34; title=&#34;Cómo Crear Diagramas De Gantt en LaTeX&#34; width=&#34;800&#34; height=&#34;335&#34;&gt;&lt;/img&gt;
&lt;/figure&gt;

&lt;blockquote&gt;
&lt;p&gt;Consulta el resto de &lt;a href=&#34;https://elbauldelprogramador.com/categories/latex&#34; title=&#34;Artículos sobre LaTeX&#34;&gt;artículos sobre LaTeX escritos en el blog&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&#34;qué-es-un-diagrama-de-gantt&#34;&gt;Qué es un Diagrama de Gantt&lt;/h1&gt;

&lt;p&gt;La definición de WikiPedia:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;El diagrama de Gantt es una útil herramienta gráfica cuyo objetivo es exponer el tiempo de dedicación previsto para diferentes tareas o actividades a lo largo de un tiempo total determinado.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;!--ad--&gt;&lt;/p&gt;

&lt;h1 id=&#34;diagramas-de-gantt-en-latex&#34;&gt;Diagramas de Gantt en Latex&lt;/h1&gt;

&lt;p&gt;Para crear estos diagramas en LaTeX, existe un paquete llamado &lt;a href=&#34;http://bay.uchicago.edu/CTAN/graphics/pgf/contrib/pgfgantt/pgfgantt.pdf&#34; title=&#34;Documentación de pgfgantt&#34;&gt;Pgfgantt&lt;/a&gt; que nos permite crear estos diagramas de forma sencilla. Explicaré por encima un ejemplo:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-latex&#34; data-lang=&#34;latex&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;\begin&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;ganttchart&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;[
canvas/.append style=&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;fill=none, draw=black!5, line width=.75pt&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;,
hgrid style/.style=&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;draw=black!5, line width=.75pt&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;,
vgrid=&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;*1&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;draw=black!5, line width=.75pt&lt;span class=&#34;nb&#34;&gt;}}&lt;/span&gt;,
today=1,
today rule/.style=&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;
draw=black!64,
dash pattern=on 3.5pt off 4.5pt,
line width=1.5pt
&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;,
today label font=&lt;span class=&#34;k&#34;&gt;\small\bfseries&lt;/span&gt;,
title/.style=&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;draw=none, fill=none&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;,
title label font=&lt;span class=&#34;k&#34;&gt;\bfseries\footnotesize&lt;/span&gt;,
title label node/.append style=&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;below=7pt&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;,
include title in canvas=false,
bar label font=&lt;span class=&#34;k&#34;&gt;\mdseries\small\color&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;black!70&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;,
bar label node/.append style=&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;left=2cm&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;,
bar/.append style=&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;draw=none, fill=black!63&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;,
bar incomplete/.append style=&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;fill=barblue&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;,
bar progress label font=&lt;span class=&#34;k&#34;&gt;\mdseries\footnotesize\color&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;black!70&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;,
group incomplete/.append style=&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;fill=groupblue&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;,
group left shift=0,
group right shift=0,
group height=.5,
group peaks tip position=0,
group label node/.append style=&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;left=.6cm&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;,
group progress label font=&lt;span class=&#34;k&#34;&gt;\bfseries\small&lt;/span&gt;,
link/.style=&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;-latex, line width=1.5pt, linkred&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;,
link label font=&lt;span class=&#34;k&#34;&gt;\scriptsize\bfseries&lt;/span&gt;,
link label node/.append style=&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;below left=-2pt and 0pt&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;,
]&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;1&lt;span class=&#34;nb&#34;&gt;}{&lt;/span&gt;24&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;\gantttitle&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;Título del diagrama&lt;span class=&#34;nb&#34;&gt;}{&lt;/span&gt;24&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;\\&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;[grid]&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;\gantttitle&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;Septiembre&lt;span class=&#34;nb&#34;&gt;}{&lt;/span&gt;4&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;\gantttitle&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;Octubre&lt;span class=&#34;nb&#34;&gt;}{&lt;/span&gt;4&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;\gantttitle&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;Noviembre&lt;span class=&#34;nb&#34;&gt;}{&lt;/span&gt;4&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;\gantttitle&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;Diciembre&lt;span class=&#34;nb&#34;&gt;}{&lt;/span&gt;4&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;\gantttitle&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;Enero&lt;span class=&#34;nb&#34;&gt;}{&lt;/span&gt;4&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;\gantttitle&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;Febrero&lt;span class=&#34;nb&#34;&gt;}{&lt;/span&gt;4&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;\\&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;\gantttitle&lt;/span&gt;[
title label node/.append style=&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;below left=7pt and -3pt&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;
]&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;Semana:&lt;span class=&#34;k&#34;&gt;\quad&lt;/span&gt;1&lt;span class=&#34;nb&#34;&gt;}{&lt;/span&gt;1&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;\gantttitlelist&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;2,...,24&lt;span class=&#34;nb&#34;&gt;}{&lt;/span&gt;1&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;\\&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;\ganttgroup&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;[progress=65]&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;Título del grupo&lt;span class=&#34;nb&#34;&gt;}{&lt;/span&gt;1&lt;span class=&#34;nb&#34;&gt;}{&lt;/span&gt;24&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;\\&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;\ganttbar&lt;/span&gt;[
progress=100,
name=bar1
]&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;\textbf&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;Actividad 1&lt;span class=&#34;nb&#34;&gt;}}{&lt;/span&gt;1&lt;span class=&#34;nb&#34;&gt;}{&lt;/span&gt;1&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;\\&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;\ganttbar&lt;/span&gt;[
progress=14,
name=bar2
]&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;\textbf&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;Actividad 2&lt;span class=&#34;nb&#34;&gt;}}{&lt;/span&gt;2&lt;span class=&#34;nb&#34;&gt;}{&lt;/span&gt;2&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;\\&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;\ganttbar&lt;/span&gt;[
progress=25,
name=bar3
]&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;\textbf&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;Actividad 3&lt;span class=&#34;nb&#34;&gt;}}{&lt;/span&gt;3&lt;span class=&#34;nb&#34;&gt;}{&lt;/span&gt;3&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;\\&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;\ganttbar&lt;/span&gt;[
progress=56,
name=bar4
]&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;\textbf&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;Actividad 4&lt;span class=&#34;nb&#34;&gt;}}{&lt;/span&gt;4&lt;span class=&#34;nb&#34;&gt;}{&lt;/span&gt;4&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;\\&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;\ganttbar&lt;/span&gt;[
progress=100,
name=bar5
]&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;\textbf&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;Actividad 5&lt;span class=&#34;nb&#34;&gt;}}{&lt;/span&gt;5&lt;span class=&#34;nb&#34;&gt;}{&lt;/span&gt;7&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;\\&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;\ganttbar&lt;/span&gt;[
progress=80,
]&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;\textbf&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;Actividad 6&lt;span class=&#34;nb&#34;&gt;}}{&lt;/span&gt;8&lt;span class=&#34;nb&#34;&gt;}{&lt;/span&gt;8&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;\\&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;\ganttbar&lt;/span&gt;[
progress=49,
]&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;\textbf&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;Actividad 7&lt;span class=&#34;nb&#34;&gt;}}{&lt;/span&gt;9&lt;span class=&#34;nb&#34;&gt;}{&lt;/span&gt;11&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;\\&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;\ganttmilestone&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;Hito 1&lt;span class=&#34;nb&#34;&gt;}{&lt;/span&gt;11&lt;span class=&#34;nb&#34;&gt;}{&lt;/span&gt;11&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;  &lt;span class=&#34;k&#34;&gt;\\&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;\ganttmilestone&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;Hito 2&lt;span class=&#34;nb&#34;&gt;}{&lt;/span&gt;12&lt;span class=&#34;nb&#34;&gt;}{&lt;/span&gt;12&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;\\&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;\ganttbar&lt;/span&gt;[
progress=35,
]&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;\textbf&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;Actividad 8&lt;span class=&#34;nb&#34;&gt;}}{&lt;/span&gt;12&lt;span class=&#34;nb&#34;&gt;}{&lt;/span&gt;22&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;\\&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;\ganttbar&lt;/span&gt;[
progress=0,
]&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;\textbf&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;Actividad 9&lt;span class=&#34;nb&#34;&gt;}}{&lt;/span&gt;23&lt;span class=&#34;nb&#34;&gt;}{&lt;/span&gt;24&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;\\&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;\ganttmilestone&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;Q6 report&lt;span class=&#34;nb&#34;&gt;}{&lt;/span&gt;24&lt;span class=&#34;nb&#34;&gt;}{&lt;/span&gt;24&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;\\&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;\ganttmilestone&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;M2: Project finished&lt;span class=&#34;nb&#34;&gt;}{&lt;/span&gt;24&lt;span class=&#34;nb&#34;&gt;}{&lt;/span&gt;24&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;\ganttlink&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;[link type=f-s]&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;bar1&lt;span class=&#34;nb&#34;&gt;}{&lt;/span&gt;bar2&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;\ganttlink&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;[link type=f-s]&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;bar4&lt;span class=&#34;nb&#34;&gt;}{&lt;/span&gt;bar5&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;\end&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;ganttchart&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h1 id=&#34;comandos-básicos-del-diagrama-de-gantt&#34;&gt;Comandos básicos del diagrama de Gantt&lt;/h1&gt;

&lt;p&gt;Veamos algunos de los comandos más útiles:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;\begin{ganttchart}[opciones]{1}{24}&lt;/code&gt;: Con este comando iniciamos el diagrama, en las opciones se especifican comandos para el estilo del gráfico, luego se especifica cuantos cuadros de tiempo queremos, en este caso del 1 a 24.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;gantttitle{titulo}{n}&lt;/code&gt;: Con este comando se especifica un título para el diagrama, seguido de cuantos cuadros de tiempo queremos que ocupe dicho título. Podemos tener varios títulos, como en este ejemplo.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;\ganttgroup[opciones]{titulo}{inicio cuadro}{fin cuadro}&lt;/code&gt;: Especifica un grupo en el diagrama, recibe como parámetro el título, en qué cuadro de tiempo empieza y en cual acaba. En las opciones podemos especificar el porcentaje completado con &lt;code&gt;progress=n&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;\ganttbar[opciones]{tarea}{inicio cuadro}{fin cuadro}&lt;/code&gt;: Especifica una tarea, similar al anterior, los parámetros son el nombre de la tarea y la franja de tiempo que ocupa.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ganttlink[opciones]{nombre tarea 1}{nombre tarea 2}&lt;/code&gt;: Con este comando podemos establecer un enlace entre dos tareas, a las tareas involucradas se les ha dado un nombre con la opción &lt;code&gt;name=nombre&lt;/code&gt; en sus opciones.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;conclusión&#34;&gt;Conclusión&lt;/h1&gt;

&lt;p&gt;Eso es todo, para crear un simple diagrama de Gantt no es necesario saber mucho más sobre este paquete. Recomiendo echar un vistazo a la documentación del paquete para cosas más específicas.&lt;/p&gt;</description>
        </item>
        
        <item>
            <title>El gran Mapa mundial de GNU/Linux</title>
            <link>https://elbauldelprogramador.com/el-mapa-mundial-de-gnulinux-img/</link>
            <pubDate>Thu, 08 Sep 2016 00:00:00 +0000</pubDate>
            
            <guid>https://elbauldelprogramador.com/el-mapa-mundial-de-gnulinux-img/</guid>
            <description>&lt;blockquote&gt;
&lt;p&gt;Hace unos años que publiqué este artículo, pero he decidido actualizarlo, ya que han aparecido versiones del mapa más actuales. Espero que os guste.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&#34;mapa-mundial-de-gnu-linux-1&#34;&gt;Mapa mundial de GNU/Linux 1&lt;/h1&gt;

&lt;figure&gt;
    &lt;a href=&#34;https://elbauldelprogramador.com/img/el-mapa-mundial-de-gnulinux-full.png&#34;&gt;&lt;img sizes=&#34;(min-width: 640px) 640px, 100vw&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/el-mapa-mundial-de-gnulinux-1.jpg&#34; alt=&#34;El gran Mapa mundial de GNU/Linux&#34; title=&#34;El gran Mapa mundial de GNU/Linux&#34; width=&#34;680&#34; height=&#34;383&#34;&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/figure&gt;

&lt;p&gt;&lt;!--ad--&gt;&lt;/p&gt;

&lt;h1 id=&#34;mapa-mundial-de-gnu-linux-2&#34;&gt;Mapa Mundial de GNU/Linux 2&lt;/h1&gt;

&lt;figure&gt;
    &lt;a href=&#34;https://elbauldelprogramador.com/img/el-mapa-mundial-de-gnulinux-2-full.jpg&#34;&gt;&lt;img sizes=&#34;(min-width: 800px) 800px, 100vw&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/el-mapa-mundial-de-gnulinux-2.jpg&#34; alt=&#34;El gran Mapa mundial de GNU/Linux&#34; title=&#34;El gran Mapa mundial de GNU/Linux&#34; width=&#34;800&#34; height=&#34;477&#34;&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/figure&gt;

&lt;h1 id=&#34;referencias&#34;&gt;Referencias&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.dedoimedo.com/computers/linux-world-map-reloaded.html&#34;&gt;The Great Linux World Map 2.0!&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.reddit.com/r/linuxmasterrace/comments/3lxrv0/linux_world_map/&#34; title=&#34;Just Linux Things in Reddit&#34;&gt;Linux World Map&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
        </item>
        
        <item>
            <title>Libro Gratuito: Apache Maven Cookbook</title>
            <link>https://elbauldelprogramador.com/apache-maven-cookbook/</link>
            <pubDate>Wed, 07 Sep 2016 13:10:02 +0000</pubDate>
            
            <guid>https://elbauldelprogramador.com/apache-maven-cookbook/</guid>
            <description>&lt;figure&gt;
   &lt;img on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/guides/Apache-Maven-Cookbook-centered.jpg&#34; alt=&#34;{{ title }}&#34; title=&#34;{{ title }}&#34; width=&#34;800&#34; height=&#34;420&#34;&gt;
   &lt;/img&gt;
&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;Delve into the world of Apache Maven with this compact cookbook that introduces common recipes for the Maven tool!&lt;/strong&gt;&lt;/p&gt;


&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;NOTA&lt;/strong&gt;: Si quieres apoyar el trabajo que realizamos en &lt;em&gt;El Baúl del Programador&lt;/em&gt;, descargar alguna de estas guías es una buena forma. Para ello en el formuario de descarga &lt;strong&gt; debes indicar que trabajas en el sector relacionado con la guía que descargas, a que te dedicas etc, de lo contrario no obtendremos comisión&lt;/strong&gt; ($1.5). Si tienes un blog y quieres usar esta forma de monetización, puedes darte de alta en &lt;a id=&#34;revresponse&#34; href=&#34;http://www.revresponse.com/join.php?refbrand=bashyc-blogspot&#34; target=&#34;_blank&#34; title=&#34;RevResponse&#34;&gt;RevResponse&lt;/a&gt; y empezar a ofrecer guías de interés a tus lectores. Visita el &lt;a href=&#34;http://elbauldelprogramador.tradepub.com/category/information-technology/1207/&#34; target=&#34;_blank&#34; title=&#34;Catálogo completo de Guías gratuítas&#34;&gt;catálogo completo de guías.&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;




&lt;p&gt;Maven is a build automation tool used primarily for Java projects. Maven addresses two aspects of building software: first, it describes how software is built, and second, it describes its dependencies. Contrary to preceding tools like Apache Ant, it uses conventions for the build procedure, and only exceptions need to be written down.&lt;/p&gt;

&lt;p&gt;&lt;!--ad--&gt;&lt;/p&gt;

&lt;p&gt;In this ebook, we provide a compilation of Maven examples that will help you kick-start your own projects. We cover a wide range of topics, from project structure and configuration, to dependency management and plug-ins. With our straightforward tutorials, you will be able to get your own projects up and running in minimum time.&lt;/p&gt;

&lt;p&gt;With this free eBook you will also receive weekly news, tips and special offers delivered to your inbox courtesy of Java Code Geeks.&lt;/p&gt;

&lt;div class=&#34;button-post&#34;&gt;
  &lt;h2&gt;&lt;a href=&#34;http://bashyc-blogspot.tradepub.com/c/pubRD.mpl?sr=oc&amp;_t=oc:&amp;qf=w_java30&#34; target=&#34;_blank&#34;&gt;Descárgala ahora&lt;/a&gt;&lt;/h2&gt;
&lt;/div&gt;

&lt;p&gt;Visita la página &lt;a href=&#34;https://elbauldelprogramador.com/manuales-gratuitos/&#34;&gt;Manuales gratuitos&lt;/a&gt; o consulta el &lt;a href=&#34;http://elbauldelprogramador.tradepub.com/category/information-technology/1207/&#34; title=&#34;Catálogo completo de Guías gratuítas &#34;&gt;catálogo completo&lt;/a&gt;.&lt;/p&gt;</description>
        </item>
        
        <item>
            <title>Libro Gratuito: Linux BASH Programming Cookbook</title>
            <link>https://elbauldelprogramador.com/linux-bash-programming-cookbook/</link>
            <pubDate>Wed, 07 Sep 2016 13:01:09 +0000</pubDate>
            
            <guid>https://elbauldelprogramador.com/linux-bash-programming-cookbook/</guid>
            <description>&lt;figure&gt;
   &lt;img on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/guides/Linux-BASH-Programming-Cookbook-centered.jpg&#34; alt=&#34;{{ title }}&#34; title=&#34;{{ title }}&#34; width=&#34;800&#34; height=&#34;420&#34;&gt;
   &lt;/img&gt;
&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;Delve into the world of Linux BASH Programming with this compact cookbook that introduces common recipes for the BASH command line!&lt;/strong&gt;&lt;/p&gt;


&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;NOTA&lt;/strong&gt;: Si quieres apoyar el trabajo que realizamos en &lt;em&gt;El Baúl del Programador&lt;/em&gt;, descargar alguna de estas guías es una buena forma. Para ello en el formuario de descarga &lt;strong&gt; debes indicar que trabajas en el sector relacionado con la guía que descargas, a que te dedicas etc, de lo contrario no obtendremos comisión&lt;/strong&gt; ($1.5). Si tienes un blog y quieres usar esta forma de monetización, puedes darte de alta en &lt;a id=&#34;revresponse&#34; href=&#34;http://www.revresponse.com/join.php?refbrand=bashyc-blogspot&#34; target=&#34;_blank&#34; title=&#34;RevResponse&#34;&gt;RevResponse&lt;/a&gt; y empezar a ofrecer guías de interés a tus lectores. Visita el &lt;a href=&#34;http://elbauldelprogramador.tradepub.com/category/information-technology/1207/&#34; target=&#34;_blank&#34; title=&#34;Catálogo completo de Guías gratuítas&#34;&gt;catálogo completo de guías.&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;




&lt;p&gt;Bash is a Unix shell and command language written by Brian Fox for the GNU Project as a free software replacement for the Bourne shell. First released in 1989, it has been distributed widely as it is a default shell on the major Linux distributions and OS X.&lt;/p&gt;

&lt;p&gt;&lt;!--ad--&gt;&lt;/p&gt;

&lt;p&gt;In this ebook, we provide a compilation of BASH programming examples that will help you kick-start your own projects. We cover a wide range of topics, from user management and permissions setting, to specific commands like sed, tar, etc. With our straightforward tutorials, you will be able to get your own projects up and running in minimum time.&lt;/p&gt;

&lt;p&gt;With this free eBook you will also receive weekly news, tips and special offers delivered to your inbox courtesy of System Code Geeks.&lt;/p&gt;

&lt;div class=&#34;button-post&#34;&gt;
  &lt;h2&gt;&lt;a href=&#34;http://bashyc-blogspot.tradepub.com/c/pubRD.mpl?sr=oc&amp;_t=oc:&amp;qf=w_syst05&#34; target=&#34;_blank&#34;&gt;Descárgala ahora&lt;/a&gt;&lt;/h2&gt;
&lt;/div&gt;

&lt;p&gt;Visita la página &lt;a href=&#34;https://elbauldelprogramador.com/manuales-gratuitos/&#34;&gt;Manuales gratuitos&lt;/a&gt; o consulta el &lt;a href=&#34;http://elbauldelprogramador.tradepub.com/category/information-technology/1207/&#34; title=&#34;Catálogo completo de Guías gratuítas &#34;&gt;catálogo completo&lt;/a&gt;.&lt;/p&gt;</description>
        </item>
        
        <item>
            <title>Evolución de las distribuciones GNU/Linux, de 1992 a 2016</title>
            <link>https://elbauldelprogramador.com/linea-cronologica-de-distribuciones/</link>
            <pubDate>Thu, 01 Sep 2016 00:00:00 +0000</pubDate>
            
            <guid>https://elbauldelprogramador.com/linea-cronologica-de-distribuciones/</guid>
            <description>&lt;figure&gt;
    &lt;img on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/linea-cronologica-de-distribuciones.png&#34; alt=&#34;{{ title }}&#34; title=&#34;{{ title }}&#34; width=&#34;800&#34; height=&#34;400&#34;&gt;&lt;/img&gt;
&lt;/figure&gt;

&lt;p&gt;Hoy os traigo la línea cronológica de las &lt;a href=&#34;https://elbauldelprogramador.com/categories/linux/&#34; title=&#34;Artículos sobre linux&#34;&gt;distribuciones GNU/Linux&lt;/a&gt; desde el año 1992 al 2016, es increíble la cantidad de distribuciones que hay.&lt;/p&gt;

&lt;p&gt;De &lt;a target=&#34;_blank&#34; href=&#34;http://futurist.se/gldt/&#34;&gt;futurist.se&lt;/a&gt; he sacado esta imagen que representa la evolución de las distribuciones GNU/Linux, partiendo de las 3 principales, debian, slackware y Red Hat, aunque hay algunas independientes de las anteriores.&lt;/p&gt;

&lt;p&gt;&lt;!--ad--&gt;&lt;/p&gt;

&lt;p&gt;A partir de estas 3, se abre un abanico inmenso de distribuciones, y seguro que de la gran mayoría ni las conozcáis. Ya que la imagen pesa demasiado, proporciono el enlace a Wikipedia para su visualización:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://upload.wikimedia.org/wikipedia/commons/1/1b/Linux_Distribution_Timeline.svg&#34; title=&#34;Evolución de las distros GNU/Linux, de 1992 a 2016&#34;&gt;https://upload.wikimedia.org/wikipedia/commons/1/1b/Linux_Distribution_Timeline.svg&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;referencias&#34;&gt;Referencias&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/konimex/linuxtimeline&#34; title=&#34;Repositorio en Github de LinuxTimeline&#34;&gt;linuxtimeline&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
        </item>
        
        <item>
            <title>Chuleta De Comandos / Atajos De Teclado / Paquetes más útiles para Emacs</title>
            <link>https://elbauldelprogramador.com/chuleta-atajos-teclado-emacs/</link>
            <pubDate>Tue, 30 Aug 2016 14:10:30 +0000</pubDate>
            
            <guid>https://elbauldelprogramador.com/chuleta-atajos-teclado-emacs/</guid>
            <description>&lt;p&gt;No es la primera vez que se publica en el blog una &lt;a href=&#34;https://elbauldelprogramador.com/tags/chuleta&#34; title=&#34;Artículos sobre chuletas&#34;&gt;chuleta&lt;/a&gt; de algo:&lt;/p&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://elbauldelprogramador.com/dig-chuleta-basica-de-comandos/&#34; title=&#34;Chuleta básica de comandos Dig&#34;&gt;Chuleta de comandos para dig&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://elbauldelprogramador.com/mini-tutorial-y-chuleta-de-comandos-git/&#34; title=&#34;Chuleta de comandos para Git&#34;&gt;Git: Chuleta de comandos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://elbauldelprogramador.com/chuleta-de-comandos-para-gpg/&#34; title=&#34;Chuleta de comandos para GPG&#34;&gt;Chuleta de comandos GPG&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://elbauldelprogramador.com/chuleta-markdown-para-wordpress/&#34; title=&#34;Chuleta de comandos de Markdown&#34;&gt;Chuleta de comandos MarkDown&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;La de hoy va sobre &lt;em&gt;Emacs&lt;/em&gt;. La idea es que esta chuleta la creemos entre todos. Que cada uno aporte su granito de arena para crear la &lt;strong&gt;chuleta de atajos de teclado/comandos/paquetes para emacs definitiva&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;A lo largo del poco tiempo que llevo usando &lt;a href=&#34;https://elbauldelprogramador.com/tags/emacs&#34; title=&#34;Artículos sobre emacs&#34;&gt;emacs&lt;/a&gt;, ya he ido descubriendo los atajos que me resultan más útiles para mi día a día, empecemos:&lt;/p&gt;

&lt;h1 id=&#34;paquetes-útiles&#34;&gt;Paquetes útiles&lt;/h1&gt;

&lt;h2 id=&#34;yasnippet&#34;&gt;Yasnippet&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://www.emacswiki.org/emacs/Yasnippet&#34; title=&#34;Página oficial de YaSnippet&#34;&gt;YaSnippet&lt;/a&gt; es un sistema de plantillas para &lt;strong&gt;emacs&lt;/strong&gt;, es uno de los paquetes que recomiendo instalar, ya que te facilita mucho la vida. Por defecto ya trae configurados muchos &lt;em&gt;snippets&lt;/em&gt; para todos los lenguajes, pero podemos configurar más a nuestro gusto. Por ejemplo:&lt;/p&gt;

&lt;p&gt;&lt;!--ad--&gt;&lt;/p&gt;

&lt;p&gt;Una de las plantillas que tengo para escribir en el blog es:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# -*- mode: snippet -*-&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# name: Modified&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# key: mod&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# # modified: 2016-$1-$2T$3:$4$0&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# --&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;lastmod&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;`(format-time-string &amp;quot;&lt;/span&gt;%Y-%m-%dT%H:%M:%S+01:00&lt;span class=&#34;s2&#34;&gt;&amp;quot;)`&amp;quot;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$0&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;En los comentarios se especifica el nombre del &lt;em&gt;snippet&lt;/em&gt;, la palabra que lo lanzará (&lt;em&gt;mod&lt;/em&gt;) en este caso. Así, al escribir &lt;code&gt;mod&lt;/code&gt; y pulsar el tabulador se insertará en el editor:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;lastmod&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;2017-03-08T16:58:45+01:00&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Otro ejemplo:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# -*- mode: snippet -*-&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# name: CodeBlock&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# key: code&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# --&lt;/span&gt;
&lt;span class=&#34;se&#34;&gt;\`\`\`&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$1&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;$2&lt;/span&gt;
&lt;span class=&#34;se&#34;&gt;\`\`\`&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Este otro &lt;em&gt;snippet&lt;/em&gt; lo uso para insertar código en &lt;em&gt;Markdown&lt;/em&gt;, al escribir &lt;code&gt;code&lt;/code&gt; y pulsar el tabulador, me inserta en el texto las tres tildes ``` con el cursor situado en &lt;em&gt;$1&lt;/em&gt; para que escriba el lenguaje en el que resaltará la sintáxis, y al volver a pulsar el tabulador el cursor se posiciona dentro del bloque de código para que comience a escribir.&lt;/p&gt;

&lt;h1 id=&#34;miscelánica-taréas-habituales&#34;&gt;Miscelánica / Taréas habituales&lt;/h1&gt;

&lt;h2 id=&#34;buscar-y-reemplazar-en-varios-ficheros&#34;&gt;Buscar y reemplazar en varios ficheros&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Problema:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Queremos buscar por una &lt;a href=&#34;https://elbauldelprogramador.com/tags/regex&#34; title=&#34;Artículos sobre expresiones regulares&#34;&gt;expresión regular&lt;/a&gt; o un texto simple en varios ficheros a la vez, o un directorio completo, y reemplazar el texto encontrado por otro.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Solución:&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Ejecutar &lt;code&gt;M-x find-name-dired&lt;/code&gt;: e introducir el directorio en el que están los ficheros.&lt;/li&gt;
&lt;li&gt;Pulsar &lt;code&gt;t&lt;/code&gt; para “marcar” todos los ficheros del directorio.&lt;/li&gt;
&lt;li&gt;Pulsar &lt;code&gt;Q&lt;/code&gt; para ejecutar el comando &lt;code&gt;query-replace&lt;/code&gt; para todos los ficheros marcados.&lt;/li&gt;
&lt;li&gt;Una vez escrita la expresión regular, se nos pide confirmación para cada fichero, podemos pulsar &lt;code&gt;espacio&lt;/code&gt; para reemplazar la expresión en el fichero, &lt;code&gt;n&lt;/code&gt; para descartarla, o &lt;code&gt;A&lt;/code&gt; para reemplazar la expresión en todos los ficheros.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Fuente&lt;/strong&gt;: &lt;a href=&#34;http://stackoverflow.com/a/271136/1612432&#34; title=&#34;Using Emacs to recursively find and replace in text files not already open&#34;&gt;Using Emacs to recursively find and replace in text files not already open&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;selección-rectangular&#34;&gt;Selección rectangular&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Problema:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;A veces queremos seleccionar una región de texto y realizar una acción sobre ella, por ejemplo eliminar espacios en blanco, añadir algún texto delante de cada frase etc.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Solución:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Supongamos que tenemos el siguiente texto:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;línea 1
línea 2
línea 3
línea 4
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Y queremos transformarla a:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;- línea 1
- línea 2
- línea 3
- línea 4
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Para ello seleccionamos la región, y pulsamos &lt;code&gt;C-x r t&lt;/code&gt;, nos preguntará qué texto queremos introducir, le damos a enter y listo. Otras combinaciones para operar en selecciones rectangulares:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;C-x r k&lt;/code&gt;: &lt;em&gt;Kill&lt;/em&gt; el texto de la región seleccionada.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;C-x r d&lt;/code&gt;: &lt;em&gt;Borra&lt;/em&gt; el texto de la región seleccionada.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;C-x r y&lt;/code&gt;: Pega (&lt;em&gt;Yank&lt;/em&gt;) la última región borrada (Con &lt;em&gt;kill&lt;/em&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;C-x r o&lt;/code&gt;: Inserta espacios en blanco para rellenar el espacio de la región seleccionada.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;M-x clear-rectangle&lt;/code&gt;: Reemplaza la selección con espacios.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;M-x delete-white-spaces-rectangle&lt;/code&gt;: Elimina los espacios en blanco a la izquierda.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;C-x r t string RET&lt;/code&gt;: Reemplaza el contenido del rectángulo con &lt;em&gt;string&lt;/em&gt; en cada línea. (El ejemplo visto)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;M-x string-insert-rectangle RET string RET&lt;/code&gt;: Inserta &lt;em&gt;string&lt;/em&gt; en cada línea del rectángulo.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Fuente&lt;/strong&gt;: &lt;a href=&#34;http://www.delorie.com/gnu/docs/emacs/emacs_68.html&#34; title=&#34;GNU Emacs Manual&#34;&gt;GNU Emacs Manual&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;reemplazar-un-carácter-con-un-salto-de-línea&#34;&gt;Reemplazar un carácter con un salto de línea&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Problema:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Supongamos que tenemos un texto mal formateado, y queremos reemplazar un caracter en concreto por un salto de línea. Esto suele pasar por ejemplo al leer ficheros con codificaciones distintas. En los que el salto de línea se interpreta de otro modo. A modo de ejemplo, supongamos que vamos a reemplazar el caracter &lt;code&gt;^N&lt;/code&gt; por un salto de línea. Tenemos este texto:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;Lorem ipsum dolor sit amet^N, consectetur adipiscing elit.^N Fusce vestibulum.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Solución:&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Pulsar &lt;code&gt;M-x replace-string&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Introducimos el texto que queremos reemplazar, en este caso &lt;code&gt;^N&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Insertamos el salto de línea, para ello, pulsar:

&lt;ol&gt;
&lt;li&gt;&lt;code&gt;C-q&lt;/code&gt;: Para decirle a emacs que vamos a insertar un caracter en crudo (&lt;em&gt;raw&lt;/em&gt;).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;C-j&lt;/code&gt;: Esta combinación se corresponde con el salto de línea&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;li&gt;Pulsamos &lt;code&gt;Enter&lt;/code&gt; y deberíamos tener el siguiente texto:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;Lorem ipsum dolor sit amet
, consectetur adipiscing elit.
 Fusce vestibulum.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Fuente:&lt;/strong&gt; &lt;a href=&#34;http://stackoverflow.com/a/613029/1612432&#34; title=&#34;How to replace a character with a newline in Emacs?&#34;&gt;How to replace a character with a newline in Emacs?&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;eliminiar-los-espacios-en-blanco-sobrantes-al-final-de-una-línea&#34;&gt;Eliminiar los espacios en blanco sobrantes al final de una línea&lt;/h2&gt;

&lt;p&gt;Basta ejecutar &lt;code&gt;M-x delete-trailing-whitespace&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&#34;guardar-comandos-que-usamos-usualmente&#34;&gt;Guardar comandos que usamos usualmente&lt;/h2&gt;

&lt;p&gt;Este tema se trató en más profundidad en el artículo &lt;a href=&#34;https://elbauldelprogramador.com/como-crear-comandos-personalizados-en-emacs&#34; title=&#34;Cómo crear comandos personalizados en Emacs&#34;&gt;&lt;em&gt;Cómo crear comandos personalizados en Emacs&lt;/em&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;administar-las-copias-de-seguridad-de-emacs&#34;&gt;Administar las copias de seguridad de emacs&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Problema:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Emacs&lt;/em&gt; por defecto guarda una copia de seguridad del fichero en un fichero del mismo nombre pero acabado en &lt;code&gt;~&lt;/code&gt;, aunque es bastánte útil, a veces molesta tener ficheros desperdigados a lo largo de las carpetas acabando en &lt;code&gt;~&lt;/code&gt;. Es posible almacenarlos todos en una carpeta. Veamos.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Solución:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;En el fichero de configuración (&lt;code&gt;~/.emacs/init.el&lt;/code&gt;) añadimos&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-elisp&#34; data-lang=&#34;elisp&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;;; Set a directory for backup files&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;setq&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;backup-directory-alist&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;.&amp;quot;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;quot;~/.saves&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)))&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;setq&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;delete-old-versions&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;t&lt;/span&gt;
    &lt;span class=&#34;nv&#34;&gt;kept-new-versions&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;6&lt;/span&gt;
    &lt;span class=&#34;nv&#34;&gt;kept-old-versions&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;
    &lt;span class=&#34;nv&#34;&gt;version-control&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;t&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Donde podemos sustituir &lt;code&gt;~/.saves&lt;/code&gt; por el directorio deseado.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Fuente:&lt;/strong&gt; &lt;a href=&#34;http://stackoverflow.com/a/151946/1612432&#34; title=&#34;How do I control how Emacs makes backup files?&#34;&gt;How do I control how Emacs makes backup files?&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;ejecutar-una-acción-para-todos-los-buffers-abiertos&#34;&gt;Ejecutar una acción para todos los buffers abiertos&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Problema:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Algunos comandos que hemos visto aquí, como buscar y reemplazar texto en varios ficheros a la vez, realizan la acción pero no guardan los cambios en el fichero. Para guardarlos tenemos que seleccionarlos uno a uno en el &lt;em&gt;buffer&lt;/em&gt; y ejecutar la acción de guardar. Para hacernos la vida más fácil, podemos usar &lt;code&gt;ibuffer&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Solución:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Para sustituir el modo &lt;em&gt;buffer&lt;/em&gt;, por &lt;em&gt;ibuffer&lt;/em&gt; debemos añadir a nuestra configuración:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-elisp&#34; data-lang=&#34;elisp&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;;; make ibuffer the default&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;global-set-key&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;quot;\C-x\C-b&amp;quot;&lt;/span&gt; &lt;span class=&#34;ss&#34;&gt;&amp;#39;ibuffer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;A partir de ahora, cada vez que visitemos la pestaña del &lt;em&gt;buffer&lt;/em&gt;, se abrirá &lt;em&gt;ibuffer&lt;/em&gt;. Para seleccionar todos los ficheros abiertos y guardarlos:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Pulsar &lt;code&gt;t&lt;/code&gt;, para seleccionar todos los ficheros.&lt;/li&gt;
&lt;li&gt;Pulsar &lt;code&gt;S&lt;/code&gt;, para guardar los ficheros seleccionados&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Fuente:&lt;/strong&gt; &lt;a href=&#34;http://stackoverflow.com/a/14293998/1612432&#34; title=&#34;Execute a particular command on multiple emacs buffers&#34;&gt;Execute a particular command on multiple emacs buffers&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;alinear-verticalmente-código-en-base-al-signo&#34;&gt;Alinear verticalmente código en base al signo =&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;M-x align-regex =&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;convertir-texto-a-mayúscula-minúscula&#34;&gt;Convertir texto a mayúscula/minúscula&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;C-x C-u&lt;/code&gt;: Convertir la región seleccionada a mayúsculas.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;C-x C-l&lt;/code&gt;: Convertir la región seleccionada a minúsculas.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;M-l&lt;/code&gt;: Convertir la siguiente palabra a minúscula.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;M-u&lt;/code&gt;: Convertir la siguiente palabra a mayúscula.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;M-c&lt;/code&gt;: Convertir a mayúscula la primera letra de la palabra &amp;ndash; Capitalizar &amp;ndash;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;reemplazar-tabulador-por-espacios-y-viceversa&#34;&gt;Reemplazar tabulador por espacios y viceversa&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;M-x tabify&lt;/code&gt;: Sustituye en la región seleccionada espacios por tabuladores.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;M-x untabify&lt;/code&gt;: Proceso contrario, reemplaza en la región selecionada tabuladores por espacios.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Fuente: &lt;a href=&#34;https://mdk.fr/blog/emacs-replace-tabs-with-spaces.html&#34; title=&#34;Emacs: replace tabs with spaces&#34;&gt;mdk.fr&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&#34;prelude&#34;&gt;Prelude&lt;/h1&gt;

&lt;p&gt;Tal y como dice la descripción de su repositorio en &lt;a href=&#34;https://elbauldelprogramador.com/tags/github/&#34; title=&#34;Github&#34;&gt;Github&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Prelude&lt;/em&gt; is an enhanced Emacs 24 distribution that should make your experience with Emacs both more pleasant and more powerful.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;es decir:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Prelude&lt;/em&gt; es una distribución mejorada de Emacs 24 que debería hacer tu experiencia con emacs más agradable y potente.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Aunque la descripción menciona la versión 24, personalmente yo estoy usando la versión 25 en &lt;a href=&#34;https://elbauldelprogramador.com/tags/gentoo&#34; title=&#34;Gentoo&#34;&gt;Gentoo&lt;/a&gt; y funciona perfectamente.&lt;/p&gt;

&lt;p&gt;La instalación de &lt;em&gt;Prelude&lt;/em&gt; es muy sencilla, toda la documentación necesaria se encuentra en su &lt;a href=&#34;https://github.com/bbatsov/prelude&#34; target=&#34;_blank&#34; title=&#34;repositorio de Github&#34;&gt;repositorio de Github&lt;/a&gt;.&lt;/p&gt;

&lt;h1 id=&#34;tu-turno&#34;&gt;Tu Turno&lt;/h1&gt;

&lt;p&gt;El propósito de este artículo es que crezca con las contribuciones de todos nosotros, para ello he subido el código de este artículo a github. Para aportar vuestro granito de arena, mandad &lt;a href=&#34;https://github.com/elbaulp/algui91-hugo/edit/master/content/post/chuleta-atajos-teclado-emacs.markdown&#34; target=&#34;_blank&#34; title=&#34;Pull Request&#34;&gt;Pull Request&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Esperamos vuestras colaboraciones!&lt;/p&gt;</description>
        </item>
        
        <item>
            <title>Cómo Crear Comandos Personalizados en Emacs</title>
            <link>https://elbauldelprogramador.com/como-crear-comandos-personalizados-en-emacs/</link>
            <pubDate>Thu, 25 Aug 2016 15:01:15 +0000</pubDate>
            
            <guid>https://elbauldelprogramador.com/como-crear-comandos-personalizados-en-emacs/</guid>
            <description>&lt;p&gt;Hace unos meses que comencé a usar &lt;em&gt;emacs&lt;/em&gt; como editor predeterminado, y la verdad es que una vez me acostumbré a él es bastante cómodo. Sin embargo, editando artículos del blog, me encontraba ejecutando una y otra vez el mismo comando, o comandos similares. Así que busqué la forma de asociarlos a una función para no tener que andar escribiendolos cada dos por trés. Veamos cómo crear estas funciones.&lt;/p&gt;

&lt;h1 id=&#34;la-función-query-replace-regexp&#34;&gt;La función (query-replace-regexp)&lt;/h1&gt;

&lt;p&gt;Una función que uso mucho en &lt;em&gt;emacs&lt;/em&gt; es &lt;code&gt;(query-replace-regexp)&lt;/code&gt;, la cual permite buscar y reemplazar un texto en base a una &lt;a href=&#34;https://elbauldelprogramador.com/tags/regex&#34; title=&#34;Posts etiquetados con regex&#34;&gt;expresión regular&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;!--ad--&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;En este blog ya hemos tratado este tema en varias ocasiones (&lt;em&gt;Véase &lt;a href=&#34;https://elbauldelprogramador.com/expresiones-regulares-multilinea/&#34; title=&#34;Crear expresiones regulares multilínea&#34;&gt;Expresiones regulares multilínea&lt;/a&gt; o &lt;a href=&#34;https://elbauldelprogramador.com/introduccion-a-las-expresiones-regulares-en-python/&#34; title=&#34;Expresiones regulares en python&#34;&gt;una introducción a las expresiones regulares en Python&lt;/a&gt;&lt;/em&gt;).&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Si como yo, te encuentras repitiendo este comando una y otra vez, con los mismos argumentos, es posible guardarlo en una función y simplemente ejecutarla escribiendo su nombre.&lt;/p&gt;

&lt;p&gt;Supongamos que queremos guardar la siguiente acción:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-elisp&#34; data-lang=&#34;elisp&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;query-replace-regexp&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;quot;\\([A-Z]\\{3,\\} ?[A-Z]+\\)&amp;quot;&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;quot;`\\1`&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;La cual he estado usando mucho para pasar palabras en mayúsculas a código en línea en &lt;em&gt;markdown&lt;/em&gt;. Esto lo he estado haciendo para todos los comandos que aparecen en los artículos del &lt;a href=&#34;https://elbauldelprogramador.com/bases-de-datos/&#34; title=&#34;Curso base de datos&#34;&gt;curso de base de datos&lt;/a&gt;. Bien, para guardar el comando basta con añadir lo siguiente al fichero &lt;code&gt;init.el&lt;/code&gt; de emacs:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;NOTA&lt;/strong&gt;: Hay que escapar la &lt;code&gt;\&lt;/code&gt; en la expresión regular, por eso aparecen dobles &lt;code&gt;\\&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-elisp&#34; data-lang=&#34;elisp&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;;; Hacer inline codigo en markdown&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;defun&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;to-inline-code&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;interactive&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;query-replace-regexp&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;quot;\\([A-Z]\\{3,\\} ?[A-Z]+\\)&amp;quot;&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;quot;`\\1`&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;A partir de ahora, para ejecutar &lt;code&gt;(query-replace-regexp)&lt;/code&gt; con esos parámetros, solo hay que llamar a la función &lt;code&gt;to-inline-code()&lt;/code&gt;. Esto se puede hacer con la combinación de teclas &lt;code&gt;M-x &amp;lt;función&amp;gt;&lt;/code&gt;, en este caso &lt;code&gt;M-x to-inline-code&lt;/code&gt;.&lt;/p&gt;

&lt;h1 id=&#34;la-función-query-replace&#34;&gt;La función (query-replace)&lt;/h1&gt;

&lt;p&gt;Esta función es similar a la de arriba, pero más simple. No acepta &lt;em&gt;expresiones regulares&lt;/em&gt;. Concretamente, para lo que más uso esta función es para eliminar el dominio del blog (&lt;code&gt;http://elbauldelprogramador.com/&lt;/code&gt;) de los enlaces en los artículos, de forma que un enlace:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[Enlace](http://elbauldelprogramador.com/algun-post/ )
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;pase a ser&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[Enlace](/algun-post/ )
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;De igual forma, para asociarla a una función, añadimos lo siguiente al &lt;code&gt;init.el&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-elisp&#34; data-lang=&#34;elisp&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;;; Borra uri&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;defun&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;delbaul&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;interactive&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;query-replace&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;quot;https://elbauldelprogramador.com&amp;quot;&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h1 id=&#34;conclusiones&#34;&gt;Conclusiones&lt;/h1&gt;

&lt;p&gt;Eso es todo, espero que os sea de ayuda. ¿Qué otras funciones te resulta útiles en &lt;em&gt;emacs&lt;/em&gt;? Déjanos un comentario.&lt;/p&gt;

&lt;h1 id=&#34;referencias&#34;&gt;Referencias&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;How to define an Emacs command to &lt;code&gt;query-replace-regexp&lt;/code&gt; using a specific regexp | &lt;a href=&#34;http://stackoverflow.com/questions/39040092/how-to-define-an-emacs-command-to-query-replace-regexp-using-a-specific-regexp&#34; title=&#34;How to define an Emacs command to `query-replace-regexp` using a specific regexp&#34;&gt;stackoverflow.com&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
        </item>
        
        <item>
            <title>Libro Gratuito. Android Programming Cookbook</title>
            <link>https://elbauldelprogramador.com/libro-gratuito-android-programming-cookbook/</link>
            <pubDate>Wed, 24 Aug 2016 08:22:59 +0000</pubDate>
            
            <guid>https://elbauldelprogramador.com/libro-gratuito-android-programming-cookbook/</guid>
            <description>&lt;figure&gt;
   &lt;img on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/guides/Android-Programming-Cookbook-centered.jpg&#34; alt=&#34;{{ title }}&#34; title=&#34;{{ title }}&#34; width=&#34;800&#34; height=&#34;420&#34;&gt;
   &lt;/img&gt;
&lt;/figure&gt;

&lt;p&gt;&lt;a href=&#34;https://elbauldelprogramador.com/curso-programacion-android/&#34; title=&#34;Curso de Android&#34;&gt;Android&lt;/a&gt; is a mobile operating system developed by Google, based on the Linux kernel and designed primarily for touchscreen mobile devices such as smartphones and tablets. Android&amp;rsquo;s user interface is mainly based on direct manipulation, using touch gestures that loosely correspond to real-world actions, such as swiping, tapping and pinching, to manipulate on-screen objects, along with a virtual keyboard for text input.&lt;/p&gt;

&lt;p&gt;In this ebook, we provide a compilation of Android programming examples that will help you kick-start your own web projects. We cover a wide range of topics, from Services and Views, to Google Maps and Bluetooth functionality. With our straightforward tutorials, you will be able to get your own projects up and running in minimum time.&lt;/p&gt;

&lt;p&gt;With this free eBook you will also receive weekly news, tips and special offers delivered to your inbox courtesy of Java Code Geeks.&lt;/p&gt;

&lt;p&gt;&lt;!--ad--&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;NOTA&lt;/strong&gt;: Si quieres apoyar el trabajo que realizamos en &lt;em&gt;El Baúl del Programador&lt;/em&gt;, descargar alguna de estas guías es una buena forma. Para ello en el formuario de descarga &lt;strong&gt;debes indicar que trabajas en el sector relacionado con la guía que descargas, a que te dedicas etc, de lo contrario no obtendremos comisión&lt;/strong&gt; ($1.5). Si tienes un blog y quieres usar esta forma de monetización, puedes darte de alta en &lt;a href=&#34;http://www.revresponse.com/join.php?refbrand=bashyc-blogspot&#34; title=&#34;RevResponse&#34;&gt;RevResponse&lt;/a&gt; y empezar a ofrecer guías de interés a tus lectores. Visita el &lt;a href=&#34;http://elbauldelprogramador.tradepub.com/category/information-technology/1207/&#34; title=&#34;Catálogo completo de Guías gratuítas&#34;&gt;catálogo completo de guías.&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&#34;button-post&#34;&gt;
  &lt;a href=&#34;http://bashyc-blogspot.tradepub.com/c/pubRD.mpl?sr=oc&amp;_t=oc:&amp;qf=w_java25&#34; target=&#34;_blank&#34;&gt;Descárgala ahora&lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;Visita la página &lt;a href=&#34;https://elbauldelprogramador.com/manuales-gratuitos/&#34;&gt;Manuales gratuitos&lt;/a&gt; o consulta el &lt;a href=&#34;http://elbauldelprogramador.tradepub.com/category/information-technology/1207/&#34; title=&#34;Catálogo completo de Guías gratuítas &#34;&gt;catálogo completo&lt;/a&gt;.&lt;/p&gt;</description>
        </item>
        
        <item>
            <title>Intel Anuncia Sus Nuevos Discos Duros, 1000 Veces Más Rápidos Que Los SSDs</title>
            <link>https://elbauldelprogramador.com/optanetm-3d-nand-tecnologa-3d-xpoint-intel-ssds/</link>
            <pubDate>Sat, 20 Aug 2016 05:06:16 +0000</pubDate>
            
            <guid>https://elbauldelprogramador.com/optanetm-3d-nand-tecnologa-3d-xpoint-intel-ssds/</guid>
            <description>&lt;blockquote&gt;
&lt;p&gt;En un artículo anterior hablamos de &lt;a href=&#34;https://elbauldelprogramador.com/intel-buffer-overflow-control-flow-enforcement-technology-cet/&#34; title=&#34;Cómo Intel Va a Acabar Con Los Buffers Overflows Con Control-Flow Enforcement&#34;&gt;Cómo Intel Va a Acabar Con Los Buffers Overflows Con Control-Flow Enforcement&lt;/a&gt;. Hoy Intel vuelve a ser noticia, hace unos días en el episodio #573 de &lt;a href=&#34;https://elbauldelprogramador.com/categories/security-now/&#34; title=&#34;Todos los artículos de Security Now!&#34;&gt;Security now!&lt;/a&gt; Steve habló de una nueva tecnología que ha creado Intel junto con Micron. Se llama &lt;strong&gt;3D XPoint&lt;/strong&gt; y con ella han creado dos tipos de discos duros 1000 veces más rápidos que los SSDs.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;A continuación se proporciona un resumen:&lt;/p&gt;

&lt;h2 id=&#34;características-de-la-nueva-memoria-3d-xpoint&#34;&gt;Características de la nueva memoria 3D XPoint™&lt;/h2&gt;

&lt;p&gt;&lt;!--ad--&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;1000&lt;/strong&gt; veces &lt;strong&gt;más rápida&lt;/strong&gt; que las NANDs. La latencia de las NANDs se mide en decenas de &lt;strong&gt;microsegundos&lt;/strong&gt;, 3D Point en decenas de &lt;strong&gt;nanosegundos&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;1000 veces más resistencia&lt;/strong&gt; que las NANDs.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;10 veces más densa&lt;/strong&gt; que las memorias convencionales.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;No volátil&lt;/strong&gt;, Memoria no volátil (&lt;em&gt;NVM&lt;/em&gt;) es la nueva era de las memorias en los ordenadores, manteniendo los datos incluso después de que el ordenador se apague. Ejemplos de memorias no volátiles: 3D NAND, SSDs, y la tecnología 3D XPoint™.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;3d-xpoint-solventa-la-poca-durabilidad-de-los-ssds&#34;&gt;3D XPoint solventa la poca durabilidad de los SSDs&lt;/h2&gt;

&lt;p&gt;Con esta tecnología, que Intel pretende sacar al mercado &lt;strong&gt;en 2016&lt;/strong&gt;, se acaba con un gran problema que tienen los SSDs, su poca durabilidad. Los 3D XPoint acabarán por reemplazar a los SSDs en poco tiempo.&lt;/p&gt;

&lt;p&gt;El problema con los SSDs (Que son memoria NAND), es que se van varando electrones en una pequeña isla que está flotando con el aislante debajo. La forma de escribir en un SSD es crear un campo electroestático lo suficientemente potenten como para superar al aislante y que los electrones fluyan a través de él.&lt;/p&gt;

&lt;p&gt;Este proceso crea una fatiga en las propiedades físicas del aislante. Esta es la razón por la que escribir en dispositivos de memoria flash es costoso y causa daños a la larga. Algo que los discos duros convencionales no sufren. Esta nueva tecnología de &lt;a href=&#34;https://elbauldelprogramador.com/tags/intel&#34;&gt;Intel&lt;/a&gt;, &lt;strong&gt;3D XPoint&lt;/strong&gt; no sufre de este problema. Además es &lt;strong&gt;10 veces más denso&lt;/strong&gt; que la &lt;strong&gt;DRAM&lt;/strong&gt;.&lt;/p&gt;

&lt;h2 id=&#34;static-ram-sram-o-ram-estática&#34;&gt;Static RAM (SRAM) o RAM estática&lt;/h2&gt;

&lt;p&gt;La memoria RAM estática o &lt;em&gt;SRAM&lt;/em&gt; es como los &lt;a href=&#34;https://elbauldelprogramador.com/introduccion-los-procesos/&#34;&gt;registros del procesador&lt;/a&gt;, las &lt;em&gt;SRAM&lt;/em&gt; son inversores de acoplamiento cruzado. El problema que tiene este tipo de memoria es que requiere de muchos transistores, y éstos requieren de espacio físico y energía. También producen calor. Sin embargo son bastante rápidas. Como desventaja es que son volátiles, en cuanto no se les suministra energía los datos que almacenan se pierden.&lt;/p&gt;

&lt;h2 id=&#34;dynamic-ram-dram-o-ram-dinámica&#34;&gt;Dynamic RAM (DRAM) o RAM dinámica&lt;/h2&gt;

&lt;p&gt;Como mejora a la &lt;em&gt;SRAM&lt;/em&gt; se creó la &lt;em&gt;DRAM&lt;/em&gt;, que reducía la complejidad de la &lt;em&gt;SRAM&lt;/em&gt; a un solo transistor y un condensador. &lt;em&gt;DRAM&lt;/em&gt; almacena la información en el condensador. El problema de estos condensadores es que tienen que ser diminutos para poder colocarlos en un espacio pequeño. La desventaja de &lt;em&gt;DRAM&lt;/em&gt; es que hay que refrescar los condensadores periódicamente para que no pierdan la información almacenada, y hay que hacerlo con la suficiente frecuencia para no darle tiempo al condensador a que se descargue. También es volátil.&lt;/p&gt;

&lt;h2 id=&#34;memorias-3d-xpoint&#34;&gt;Memorias 3D XPoint&lt;/h2&gt;

&lt;p&gt;Estas nuevas memorias usan una tecnología de cambio de fase. Imaginemos un conjunto de conductores dispuestos horizontalmente, colocamos pequeños puntos de cosas en dichos conductores horizontalmente. Después, en la parte superior colocamos una rejilla de conductores verticalmente de forma que intersequen con los conductores horizontales en el punto X, de ahí el nombre &lt;strong&gt;XPoint&lt;/strong&gt;. La siguiente imagen ayuda a visualizarlo:&lt;/p&gt;

&lt;figure&gt;
    &lt;img on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/IntelAnunciaSusNuevosDiscosDuros1000VecesMasRapidosQueLosSSDs.png&#34; alt=&#34;{{ title }}&#34; title=&#34;{{ title }}&#34; width=&#34;1289&#34; height=&#34;1035&#34;&gt;
&lt;/img&gt;
    &lt;figcaption&gt;Créditos de la imagen: &lt;a href=&#34;http://www.intelsalestraining.com/infographics/memory/3DXPointc.pdf&#34; target=&#34;_blank&#34;&gt;Intel&lt;/a&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;En cada intersección hay una sustancia que las separa. Lo que han conseguido es hacer pasar corriente a través de esta sustancia que cambia su resistencia permanentemente. Por lo tanto, si se envia un pulso de corriente en una dirección, su resistencia decáe. Por contra, al enviar la corriente en el sentido contrario, la resistencia aumenta. Esto se conoce como &lt;em&gt;bulk change&lt;/em&gt; (&lt;em&gt;Cambio en masa, o cambio masivo&lt;/em&gt;) y significa que el material al completo cambia su propiedad. Además es muy estable y &lt;strong&gt;no-volátil&lt;/strong&gt;.&lt;/p&gt;

&lt;h2 id=&#34;de-donde-viene-el-nombre-3d&#34;&gt;De donde viene el nombre 3D&lt;/h2&gt;

&lt;p&gt;Después de la descripción dada, uno puede imaginar de dónde sale el nombre &lt;strong&gt;3D&lt;/strong&gt;. Lo que hemos descrito es solo una capa, pero si vamos poniendo capas una encima de otra, apilándolas de forma que se aumenta la eficiencia enormemente.&lt;/p&gt;

&lt;h2 id=&#34;bulk-storage-almacenamiento-en-masa&#34;&gt;Bulk storage (Almacenamiento en masa)&lt;/h2&gt;

&lt;p&gt;Hasta ahora, los dispositivos de almacenamiento a los que estamos acostumbrados formaban una pirámide jerárquica. Siendo los discos duros los más lentos, pero con más capacidad, hasta la memoria caché del microprocesador (L1, L2 etc), la más rápida pero con menor capacidad. Esta tecnología se situa justo debajo de la &lt;em&gt;DRAM&lt;/em&gt;, como mostramos en la siguiente imagen:&lt;/p&gt;

&lt;figure&gt;
    &lt;img on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/IntelAnunciaSusNuevosDiscosDuros1000VecesMasRapidosQueLosSSDs2.png&#34; alt=&#34;{{ title }}&#34; title=&#34;{{ title }}&#34; width=&#34;1264&#34; height=&#34;672&#34;&gt;&lt;/img&gt;
    &lt;figcaption&gt;Imagen cortesia del &lt;a href=&#34;https://www.youtube.com/watch?v=gMwz1eWQzno&#34; target=&#34;_blank&#34;&gt;vídeo de Intel&lt;/a&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;h2 id=&#34;propiedades-de-3d-xpoint&#34;&gt;Propiedades de 3D XPoint&lt;/h2&gt;

&lt;p&gt;Lo más impresionante de esta nueva tecnología es que es de &lt;strong&gt;acceso aleatorio&lt;/strong&gt;, de &lt;strong&gt;alta densidad&lt;/strong&gt; y &lt;strong&gt;no volátil&lt;/strong&gt;. Lo cual significa que tendremos velocidades similares a &lt;strong&gt;DRAM&lt;/strong&gt; pero sin perder la información al apagar el PC.&lt;/p&gt;

&lt;h2 id=&#34;conclusión&#34;&gt;Conclusión&lt;/h2&gt;

&lt;p&gt;Con esta nueva tecnología, en unos meses no tendremos que decir &lt;em&gt;“Me he comprado un PC con 8GB de RAM”&lt;/em&gt;, simplemente diremos  _“Me he comprado un ordenador con 20TB de almacenamiento &lt;strong&gt;XPoint&lt;/strong&gt;”_.&lt;/p&gt;

&lt;p&gt;De aquí a unos &lt;sup&gt;5&lt;/sup&gt;&amp;frasl;&lt;sub&gt;10&lt;/sub&gt; años, seguramente los SSDs &lt;strong&gt;Optane&lt;/strong&gt; de Intel hayan reemplazado a los &lt;strong&gt;SSDs&lt;/strong&gt; de hoy día.&lt;/p&gt;

&lt;p&gt;¿Qué te ha parecido esta nueva tecnología? Déjanos un comentario con tu opinión.&lt;/p&gt;

&lt;figure&gt;
    &lt;amp-youtube
        data-videoid=&#34;gMwz1eWQzno&#34;
        layout=&#34;responsive&#34;
        width=&#34;480&#34; height=&#34;270&#34;&gt;&lt;/amp-youtube&gt;
&lt;/figure&gt;

&lt;h3 id=&#34;referencias&#34;&gt;Referencias&lt;/h3&gt;

&lt;figure&gt;
    &lt;amp-youtube
        data-videoid=&#34;sjXZitLTwyg&#34;
        layout=&#34;responsive&#34;
        width=&#34;480&#34; height=&#34;270&#34;&gt;&lt;/amp-youtube&gt;
&lt;/figure&gt;

&lt;ul&gt;
&lt;li&gt;3D XPoint™ Unveiled—The Next Breakthrough in Memory Technology. &lt;a href=&#34;http://www.intel.com/content/www/us/en/architecture-and-technology/3d-xpoint-unveiled-video.html&#34; title=&#34;3D XPoint™ Unveiled—The Next Breakthrough in Memory Technology&#34;&gt;intel.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Introducing Breakthrough Memory Technology. &lt;a href=&#34;http://www.intel.com/content/www/us/en/architecture-and-technology/non-volatile-memory.html&#34; title=&#34;Introducing Breakthrough Memory Technology&#34;&gt;intel.com&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
        </item>
        
        <item>
            <title>Cómo Cambiar El Directorio De Portage a Otro Directorio en Gentoo</title>
            <link>https://elbauldelprogramador.com/how-to-change-portage-folders-to-other-location/</link>
            <pubDate>Wed, 17 Aug 2016 08:30:50 +0000</pubDate>
            
            <guid>https://elbauldelprogramador.com/how-to-change-portage-folders-to-other-location/</guid>
            <description>&lt;p&gt;Hace poco tuve problemas con &lt;a href=&#34;https://elbauldelprogramador.com/como-instalar-actualizar-elminar-paquetes-gentoo/&#34; title=&#34;Cómo Instalar/actualizar/eliminar Paquetes en Gentoo&#34;&gt;portage&lt;/a&gt; y su directorio de trabajo temporal en &lt;code&gt;/var/tmp/portage&lt;/code&gt; en &lt;a href=&#34;https://elbauldelprogramador.com/tags/gentoo&#34;&gt;Gentoo&lt;/a&gt; porque me quedé sin las 10GB mínimas que necesita:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;There is NOT at least &lt;span class=&#34;m&#34;&gt;10&lt;/span&gt; GiB disk space at &lt;span class=&#34;s2&#34;&gt;&amp;quot;/var/tmp/portage&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Así que la primera solución que se me ocurrió fue hacer que &lt;code&gt;portage&lt;/code&gt; trabaje en otro directorio, concretamente en otro disco duro auxiliar en el que dispongo de más espacio. Veamos cómo conseguirlo:&lt;/p&gt;

&lt;h1 id=&#34;cambiar-el-fichero-etc-portage-make-conf&#34;&gt;Cambiar el fichero /etc/portage/make.conf&lt;/h1&gt;

&lt;p&gt;&lt;!--ad--&gt;&lt;/p&gt;

&lt;p&gt;Para ello necesitamos decirle a &lt;code&gt;portage&lt;/code&gt; que queremos cambiar el directorio por defecto, para ello editamos el fichero &lt;code&gt;/etc/portage/make.conf&lt;/code&gt; y añadimos las variables &lt;code&gt;PORTDIR, DISTDIR&lt;/code&gt; y &lt;code&gt;PKGDIR&lt;/code&gt; apuntando al directorio deseado, en mi caso &lt;code&gt;/home/hkr/ssd2/portage&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;PORTDIR&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;/home/hkr/ssd2/portage&amp;quot;&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;DISTDIR&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;PORTDIR&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;/distfiles&amp;quot;&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;PKGDIR&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;PORTDIR&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;/packages&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h1 id=&#34;sincronizar-el-árbol-de-portage&#34;&gt;Sincronizar el árbol de portage&lt;/h1&gt;

&lt;p&gt;El siguiente paso es sincronizar &lt;code&gt;portage&lt;/code&gt; para que se de cuenta del cambio, para ello:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;emerge --sync
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Tras esto, &lt;code&gt;portage&lt;/code&gt; ya conocerá la nueva localización de directorios, pero resta una cosa más por hacer.&lt;/p&gt;

&lt;h1 id=&#34;crear-enlace-simbólico-para-make-profile&#34;&gt;Crear enlace simbólico para make.profile&lt;/h1&gt;

&lt;p&gt;Ahora mismo &lt;code&gt;make.conf&lt;/code&gt; es un enlace a &lt;code&gt;/usr/portage/profiles/default/linux/amd64/13.0/desktop/&lt;/code&gt;, el directorio antiguo, debemos enlazarlo con el directorio nuevo:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;ln -s /home/hkr/ssd2/portage/profiles/default/linux/amd64/13.0/desktop /etc/portage/make.profile
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Tras esto, tendremos &lt;code&gt;portage&lt;/code&gt; en un nuevo directorio.&lt;/p&gt;

&lt;h1 id=&#34;cambiar-solo-el-directorio-temporal-var-tmp-portage&#34;&gt;Cambiar solo el directorio temporal /var/tmp/portage&lt;/h1&gt;

&lt;p&gt;Mi problema orignal era no tener espacio en &lt;code&gt;/var/tmp/portage&lt;/code&gt;, resulta que este directorio también se puede cambiar, sin necesidad de mover de sitio lo ficheros de &lt;code&gt;portage&lt;/code&gt;, para ello basta con añadir al &lt;code&gt;make.conf&lt;/code&gt; la siguiente variable:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;PORTAGE_TMPDIR&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;/home/hkr/ssd2/&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Sincronizamos y listo.&lt;/p&gt;

&lt;h1 id=&#34;references&#34;&gt;References&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://forums.gentoo.org/viewtopic-t-774539.html&#34; title=&#34;/var/tmp/portage: not enough space&#34;&gt;&lt;code&gt;/var/tmp/portage: not enough space&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://forums.gentoo.org/viewtopic.php?t=120770&#34; title=&#34;moving portage folders [SOLVED]&#34;&gt;&lt;code&gt;moving portage folders&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
        </item>
        
        <item>
            <title>Crean Un Algoritmo Que Replica Tu Letra</title>
            <link>https://elbauldelprogramador.com/crean-un-algoritmo-que-replica-tu-letra/</link>
            <pubDate>Sat, 13 Aug 2016 05:07:34 +0000</pubDate>
            
            <guid>https://elbauldelprogramador.com/crean-un-algoritmo-que-replica-tu-letra/</guid>
            <description>&lt;p&gt;Investigadores de la &lt;em&gt;UCL&lt;/em&gt; han desarrollado un software que analiza el texto escrito en papel de un individuo y replica de forma muy similar su letra. El programa se llama &lt;em&gt;My Text in Your Handwriting&lt;/em&gt; (Mi texto en tu letra).&lt;/p&gt;

&lt;p&gt;&lt;!--ad--&gt;&lt;/p&gt;

&lt;h1 id=&#34;lo-que-había-hasta-ahora&#34;&gt;Lo que había hasta ahora&lt;/h1&gt;

&lt;p&gt;Antes de que se desarrollara este software, la única forma de conseguir tipografías parecidas al texto escrito era con fuentes &lt;em&gt;Free style&lt;/em&gt;. El problema de estas fuentes es que cada letra (cada &lt;em&gt;a&lt;/em&gt; por ejemplo), es igual a lo largo del texto. Lo cual no da una sensación de que sea un texto escrito a mano. Otras investigaciones generaban una fuente a partir de texto escrito por el usuario en una &lt;em&gt;Tablet&lt;/em&gt;, pero como todos sabemos, no se escribe igual de bien en una tablet que en papel.&lt;/p&gt;

&lt;h1 id=&#34;cómo-funciona-el-algoritmo&#34;&gt;Cómo funciona el algoritmo&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;El usuario comienza seleccionando un texto escrito a mano que quiera replicar.&lt;/li&gt;
&lt;li&gt;Luego el algoritmo selecciona y combina los distintos &lt;em&gt;glyphs&lt;/em&gt; (los símbolos que forma una letra) y produce una tipografía basada en dicho tipo de letra.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;posibles-usos&#34;&gt;Posibles usos&lt;/h1&gt;

&lt;h2 id=&#34;replicar-la-letra-de-personajes-históricos&#34;&gt;Replicar la letra de personajes históricos&lt;/h2&gt;

&lt;p&gt;Este programa se podría usar para replicar el tipo de letra que tenían personajes pasados. El equipo replicó la letra de &lt;em&gt;Arthur Conan Doyle&lt;/em&gt;, &lt;em&gt;Abraham Lincoln&lt;/em&gt; y &lt;em&gt;Frida Kahio&lt;/em&gt;, como podemos ver en la imagen:&lt;/p&gt;

&lt;figure&gt;
  &lt;img sizes=&#34;(min-width: 755px) 755px, 100vw&#34; on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/crean-un-algoritmo-que-replica-tu-letra.jpg&#34; alt=&#34;Crean Un Algoritmo Que Replica Tu Letra&#34; title=&#34;Crean Un Algoritmo Que Replica Tu Letra&#34; width=&#34;755&#34; height=&#34;701&#34;&gt;
  &lt;/img&gt;
  &lt;figcaption&gt;Crédito de la imagen &lt;a href=&#34;http://visual.cs.ucl.ac.uk/pubs/handwriting/&#34; target=&#34;_blank&#34;&gt;visual.cs.ucl.ac.uk&lt;/a&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;h2 id=&#34;crear-subtítulos-personalizados&#34;&gt;Crear subtítulos personalizados&lt;/h2&gt;

&lt;p&gt;En un vídeo, podrían subtitularse las voces de cada personaje con su letra real.&lt;/p&gt;

&lt;h2 id=&#34;juegos-y-películas&#34;&gt;Juegos y películas&lt;/h2&gt;

&lt;p&gt;Podría cambiarse la letra en escenas de juegos y películas sin necesidad de volver a grabar.&lt;/p&gt;

&lt;h2 id=&#34;cómics&#34;&gt;Cómics&lt;/h2&gt;

&lt;p&gt;Los comics suelen tener el tipo de letra del autor, que lo escribe a mano. Cuando se traduce el comic se pierde esta característica. Con este software sería posible traducir el comic a cualquier lenguaje manteniendo la fuente original del autor.&lt;/p&gt;

&lt;h2 id=&#34;enfermos&#34;&gt;Enfermos&lt;/h2&gt;

&lt;p&gt;Las personas que tengan problemas para escribir, por haber padecido un ictus, por ejemplo, podrían firmar papeles con su letra original&lt;/p&gt;

&lt;h1 id=&#34;resultados&#34;&gt;Resultados&lt;/h1&gt;

&lt;p&gt;Para evaluar la calidad del software, los investigadores imprimieron una serie de cartas escritas por su programa, y otras escritas a mano. Preguntaron a los participantes que decidieran si la carta mostrada estaba escrita a mano o por un ordenador. Solo acertaron el 60% de las veces.&lt;/p&gt;

&lt;h1 id=&#34;referencias&#34;&gt;Referencias&lt;/h1&gt;

&lt;p&gt;A continuación dejo un vídeo explicativo del software, junto con el enlace a la investigación y artículos relacionados. Puedes consultar más &lt;a href=&#34;https://elbauldelprogramador.com/categories/articulos/&#34; title=&#34;Artículos del blog&#34;&gt;artículos escritos en el blog&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;amp-youtube
  data-videoid=&#34;3mAKZaOPbBo&#34;
  layout=&#34;responsive&#34;
  width=&#34;640&#34; height=&#34;480&#34;&gt;&lt;/amp-youtube&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;New computer programme replicates handwriting | &lt;a href=&#34;http://phys.org/news/2016-08-programme-replicates.html&#34;&gt;phys.org&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;My Text in Your Handwriting | &lt;a href=&#34;http://visual.cs.ucl.ac.uk/pubs/handwriting/&#34;&gt;visual.cs.ucl.ac.uk&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
        </item>
        
        <item>
            <title>Informe Sobre Defensa Frente a Ciberamenazas 2015. Por CyberEdge Group</title>
            <link>https://elbauldelprogramador.com/informe-sobre-defensa-frente-a-ciberamenazas-2015-por-cyberedge-group/</link>
            <pubDate>Fri, 12 Aug 2016 11:24:05 +0000</pubDate>
            
            <guid>https://elbauldelprogramador.com/informe-sobre-defensa-frente-a-ciberamenazas-2015-por-cyberedge-group/</guid>
            <description>&lt;figure&gt;
   &lt;img on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/guides/informe-sobre-defensa-frente-a-ciberamenazas-2015-por-cyberedge-group-centered.jpg&#34; alt=&#34;{{ title }}&#34; title=&#34;{{ title }}&#34; width=&#34;800&#34; height=&#34;420&#34;&gt;
   &lt;/img&gt;
&lt;/figure&gt;

&lt;p&gt;Descubra cómo impactan las aplicaciones web y los dispositivos móviles sobre la capacidad de TI para defenderse con éxito contra las amenazas cibernéticas, y averigüe por qué SDN puede ser la solución.&lt;/p&gt;

&lt;p&gt;&lt;!--ad--&gt;&lt;/p&gt;

&lt;p&gt;El segundo informe anual sobre defensa frente a ciberamenazas de CyberEdge Group proporciona una visión detallada de cómo los profesionales de seguridad informática perciben las amenazas y planean defenderse de ellas. El informe, que se basa en una encuesta realizada en diciembre de 2014 a más de 800 profesionales y responsables de la toma de decisiones de seguridad informática, aporta innumerables datos relevantes de los que los equipos de seguridad informática se pueden valer para descubrir mejor en qué se diferencian sus percepciones, prioridades y estado de seguridad de los de sus homólogos.&lt;/p&gt;

&lt;div class=&#34;button-post&#34;&gt;
  &lt;a href=&#34;http://bashyc-blogspot.tradepub.com/c/pubRD.mpl?sr=oc&amp;_t=oc:&amp;qf=w_ct237&#34; target=&#34;_blank&#34;&gt;Descárgala ahora&lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;Visita la página &lt;a href=&#34;https://elbauldelprogramador.com/manuales-gratuitos/&#34;&gt;Manuales gratuitos&lt;/a&gt; o consulta el &lt;a href=&#34;http://elbauldelprogramador.tradepub.com/category/information-technology/1207/&#34; title=&#34;Catálogo completo de Guías gratuítas &#34;&gt;catálogo completo&lt;/a&gt;.&lt;/p&gt;</description>
        </item>
        
        <item>
            <title>Hackeando Tu Monitor De Pantalla</title>
            <link>https://elbauldelprogramador.com/hackeando-tu-monitor-de-pantalla/</link>
            <pubDate>Fri, 12 Aug 2016 07:06:02 +0000</pubDate>
            
            <guid>https://elbauldelprogramador.com/hackeando-tu-monitor-de-pantalla/</guid>
            <description>&lt;figure&gt;
  &lt;img on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/Hackeando-Tu-Monitor-De-Pantalla.jpg&#34; alt=&#34;{{ title }}&#34; title=&#34;{{ title }}&#34; width=&#34;800px&#34; height=&#34;400px&#34;&gt;
  &lt;/img&gt;
  &lt;figcaption&gt;Imagen: Lorenzo Franceschi-Bicchierai/Motherboard&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;hr /&gt;

&lt;p&gt;En el blog de [Bruce Schneier]() he leido esta interesante noticia que os traduzco:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Un grupo de investigadores ha encontrado la forma de hackear directamente el pequeño ordenador que controla el monitor de la pantalla sin acceder directamente al ordenador en sí (Lo que entendemos por la torre, el portatil etc). Tanto el mini ordenador de la pantalla como el ordenador, ven los píxeles que se muestran por pantalla &amp;ndash; por tanto es posible espiar lo que el usuario hace &amp;ndash; así como manipular los píxeles y mostrar imágenes diferentes.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;!--ad--&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Cui&lt;/em&gt;, el científico que trabaja en &lt;em&gt;Reb Ballon &lt;a href=&#34;https://elbauldelprogramador.com/categories/security-now/&#34; title=&#34;Articulos de seguridad&#34;&gt;Security&lt;/a&gt;&lt;/em&gt; y Doctor por la Universidad de Columbia, presentó su investigación en la &lt;strong&gt;Def Con&lt;/strong&gt; de este año.&lt;/p&gt;

&lt;p&gt;El hack funciona del siguiente modo: Si el hacker consigue que pinches en un enlace malicioso, o que visites una web, puede atacar el ordenador embebido en la pantalla, más en concreto su &lt;em&gt;firmware&lt;/em&gt;. Este mini ordenador es el que controla el menú de la pantalla, donde ajustamos el brillo etc.&lt;/p&gt;

&lt;p&gt;Para hacerlo funcionar, es necesario subir un pequeño programa al monitor para que espere a recibir instrucciones. Una vez que el programa está instalado, la forma de comunicarse con él es a través de un píxel. Es decir, el programa esperará recibir instrucciones de un pixel que parpadee. Dicho pixel puede estar incluido en cualquier video o imagen. En esencia, el píxel está subiendo código al monitor.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Cui&lt;/em&gt; dice que esto podría servir para espiar, pero también para mostrar en la pantalla cosas que no deberían estar. Por ejemplo, en un monitor que controla una planta nuclear, podría mostrarse una imagen falsa que indique que hay una emergencia falsa.&lt;/p&gt;

&lt;p&gt;Los investigadores alertan de que esta vulnerabilidad puede afectar a más de mil millones de monitores.&lt;/p&gt;

&lt;p&gt;Sin embargo, el ataque tiene un problema, es excesivamente lento. Quizá no sea práctico para atacar ordenadores domésticos, pero sí monitores de control industrial, en los cuales las pantallas suelen ser estáticas.&lt;/p&gt;

&lt;h1 id=&#34;referencias&#34;&gt;Referencias&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://motherboard.vice.com/read/hackers-could-break-into-your-monitor-to-spy-on-you-and-manipulate-your-pixels&#34; title=&#34;Hackers Could Break Into Your Monitor To Spy on You and Manipulate Your Pixels&#34;&gt;motherboard.vice.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.schneier.com/blog/archives/2016/08/hacking_your_co.html&#34; title=&#34;Hacking Your Computer Monitor&#34;&gt;schneier.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Imagen via Lorenzo Franceschi-Bicchierai/Motherboard&lt;/li&gt;
&lt;/ul&gt;</description>
        </item>
        
        <item>
            <title>Manual De Git Gratuito</title>
            <link>https://elbauldelprogramador.com/manual-de-git-gratuito/</link>
            <pubDate>Sat, 06 Aug 2016 16:15:22 +0000</pubDate>
            
            <guid>https://elbauldelprogramador.com/manual-de-git-gratuito/</guid>
            <description>&lt;figure&gt;
   &lt;img on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/git-tutorial-centered.jpg&#34; alt=&#34;{{ title }}&#34; title=&#34;{{ title }}&#34; width=&#34;800&#34; height=&#34;420&#34;&gt;
   &lt;/img&gt;
&lt;/figure&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;NOTA&lt;/strong&gt; También puedes consultar nuestra &lt;a href=&#34;https://elbauldelprogramador.com/mini-tutorial-y-chuleta-de-comandos-git/&#34; title=&#34;Git: Mini Tutorial y chuleta de comandos&#34;&gt;Chuleta de comandos GIT&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Delve into the world of Git version source control with this compact guide that discusses the features of this popular control system!&lt;/p&gt;

&lt;p&gt;&lt;!--ad--&gt;&lt;/p&gt;

&lt;p&gt;Git is, without any doubt, the most popular version control system. Ironically, there are other version control systems easier to learn and to use, but, despite that, Git is the favorite option for developers, which is quite clarifying about the powerfulness of Git.&lt;/p&gt;

&lt;p&gt;In this guide, we will cover all the topics needed to know in order to use Git properly, from explaining what is it and how it differs from other tools, to its usage, covering also advanced topics and practices that can suppose an added value to the process of version controlling.&lt;/p&gt;

&lt;p&gt;With this free eBook you will also receive weekly news, tips and special offers delivered to your inbox courtesy of Java Code Geeks.&lt;/p&gt;

&lt;div class=&#34;button-post&#34;&gt;
  &lt;a href=&#34;http://bashyc-blogspot.tradepub.com/c/pubRD.mpl?sr=oc&amp;_t=oc:&amp;qf=w_java24&amp;ch=ocsoc&#34; target=&#34;_blank&#34;&gt;Descárgala ahora&lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;Visita la página &lt;a href=&#34;https://elbauldelprogramador.com/manuales-gratuitos/&#34;&gt;Manuales gratuitos&lt;/a&gt; o consulta el &lt;a href=&#34;http://elbauldelprogramador.tradepub.com/category/information-technology/1207/&#34; title=&#34;Catálogo completo de Guías gratuítas &#34;&gt;catálogo completo&lt;/a&gt;.&lt;/p&gt;</description>
        </item>
        
        <item>
            <title>Error NSS Al Actualizar Firefox 48 en Gentoo</title>
            <link>https://elbauldelprogramador.com/cant-update-to-firefox-48-in-gentoo-nss-version-too-old/</link>
            <pubDate>Thu, 04 Aug 2016 08:55:12 +0000</pubDate>
            
            <guid>https://elbauldelprogramador.com/cant-update-to-firefox-48-in-gentoo-nss-version-too-old/</guid>
            <description>&lt;p&gt;Hoy ha salido la versión 48 de Firefox para &lt;a href=&#34;https://elbauldelprogramador.com/como-instalar-actualizar-elminar-paquetes-gentoo/&#34; title=&#34;Instalar y actualizar Gentoo&#34;&gt;Gentoo&lt;/a&gt;, pero cuando realicé la actualización obtenía el siguiente error:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;configure: error: you don&lt;span class=&#34;err&#34;&gt;&amp;#39;&lt;/span&gt;t have NSS installed or your version is too old
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;!--ad--&gt;&lt;/p&gt;

&lt;p&gt;Así que pregunté en los foros de &lt;a href=&#34;https://forums.gentoo.org/viewtopic-p-7951120.html#7951120&#34; title=&#34;Can&#39;t update to firefox 48&#34;&gt;Gentoo&lt;/a&gt; y parece que se trata de un &lt;a href=&#34;https://bugs.gentoo.org/show_bug.cgi?id=590424&#34;&gt;bug&lt;/a&gt; pendiente de resolver.&lt;/p&gt;

&lt;p&gt;Para salir del paso, en el foro me comentaron que existe un &lt;em&gt;Workaround&lt;/em&gt;, se trata de obligar a instalar una versión concreta de &lt;em&gt;NSS&lt;/em&gt;, en concreto la 3.24. Para ello basta con ejecutar:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;=dev-libs/nss-3.24 ~amd64&amp;quot;&lt;/span&gt; &amp;gt;&amp;gt; /etc/portage/package.accept_keywords
emerge -u nss
&lt;span class=&#34;nv&#34;&gt;emerge&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;www-client/firefox-48.0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Y con esto deberíamos tener firefox 48 listo, y con ello el &lt;a href=&#34;http://www.genbeta.com/navegadores/el-nuevo-firefox-48-incluye-por-fin-soporte-para-multiples-procesos&#34; title=&#34;El nuevo Firefox 48 incluye por fin soporte para múltiples procesos&#34;&gt;soporte para múltiples procesos&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Gracias a &lt;em&gt;fedeliallalinea&lt;/em&gt; por la respuesta en el foro.&lt;/p&gt;</description>
        </item>
        
        <item>
            <title>Libro Gratuito: Getting Analytics Right</title>
            <link>https://elbauldelprogramador.com/getting-analytics-right/</link>
            <pubDate>Mon, 01 Aug 2016 09:42:49 +0000</pubDate>
            
            <guid>https://elbauldelprogramador.com/getting-analytics-right/</guid>
            <description>&lt;figure&gt;
    &lt;img sizes=&#34;(min-width: 640px) 640px, 100vw&#34; on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/Getting-Analytics-Right-centered.jpg&#34; alt=&#34;Getting Analytics Right&#34; title=&#34;Getting Analytics Right&#34; width=&#34;640px&#34; height=&#34;336px&#34;&gt;
   &lt;/img&gt;
&lt;/figure&gt;

&lt;p&gt;Are your big data and analytics capabilities up to par? Nearly half of the global company executives in a recent Forbes Insight/Teradata survey certainly don’t think theirs are. This new book from O’Reilly examines how things typically go wrong in the data analytics process, and introduces a question-first, data-second strategy that can help your company close the gap between being analytics-invested and truly data-driven.&lt;/p&gt;

&lt;p&gt;Authors from Tamr, Inc. share insights into why analytics projects often fail, and offer solutions based on their combined experience in engineering, architecture, product strategizing, and marketing. You’ll learn how projects often start from the wrong place, take too long, and don’t go far enough—missteps that lead to incomplete, late, or useless answers to critical business questions.&lt;/p&gt;

&lt;p&gt;&lt;!--ad--&gt;&lt;/p&gt;

&lt;p&gt;Find out how their question-first, data-second approach—fueled by vastly improved data preparation platforms and cataloging software—can help you create human-machine analytics solutions designed specifically to produce better answers, faster.&lt;/p&gt;

&lt;p&gt;By downloading this free report, you agree to receive regular updates on events, video, books, and learning opportunities from O&amp;rsquo;Reilly Media.&lt;/p&gt;

&lt;div class=&#34;button-post&#34;&gt;
  &lt;a href=&#34;http://bashyc-blogspot.tradepub.com/c/pubRD.mpl?sr=oc&amp;_t=oc:&amp;qf=w_oreb26&#34; target=&#34;_blank&#34;&gt;Descárgala ahora&lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;Visita la página &lt;a href=&#34;https://elbauldelprogramador.com/manuales-gratuitos/&#34;&gt;Manuales gratuitos&lt;/a&gt; o consulta el &lt;a href=&#34;http://elbauldelprogramador.tradepub.com/category/information-technology/1207/&#34; title=&#34;Catálogo completo de Guías gratuítas &#34;&gt;catálogo completo&lt;/a&gt;.&lt;/p&gt;</description>
        </item>
        
        <item>
            <title>Cómo solucionar errores Al Implementar Amp-mustache</title>
            <link>https://elbauldelprogramador.com/error-al-implementar-amp-mustache/</link>
            <pubDate>Sat, 30 Jul 2016 16:27:54 +0000</pubDate>
            
            <guid>https://elbauldelprogramador.com/error-al-implementar-amp-mustache/</guid>
            <description>&lt;h1 id=&#34;amp-mustache-da-error-al-sustituir-las-etiquetas&#34;&gt;Amp-mustache da error al sustituir las etiquetas&lt;/h1&gt;

&lt;p&gt;Intentando implementar la etiqueta &lt;code&gt;amp-mustache&lt;/code&gt; para el blog encontré muchos problemas, la idea era usar una plantilla para que fuera rellenada desde un &lt;a href=&#34;https://elbauldelprogramador.com/como-mapear-json-a-objetos-java-con-jackson-objectmapper/&#34; title=&#34;Cómo mapear json a objetos Java con jackson ObjectMapper&#34;&gt;json&lt;/a&gt;. El código era bastante simple:&lt;/p&gt;

&lt;p&gt;&lt;!--ad--&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span&gt;&lt;/span&gt;  &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;amp-list&lt;/span&gt;
     &lt;span class=&#34;na&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;popular-posts&amp;quot;&lt;/span&gt;
     &lt;span class=&#34;na&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;300&lt;/span&gt;
     &lt;span class=&#34;na&#34;&gt;height&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;300&lt;/span&gt;
     &lt;span class=&#34;na&#34;&gt;layout&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;responsive&lt;/span&gt;
     &lt;span class=&#34;na&#34;&gt;src&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;/assets/popular.json&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;template&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;amp-mustache&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;card related&amp;quot;&lt;/span&gt;
         &lt;span class=&#34;na&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;{% raw %}{{id}}{% endraw %}&amp;quot;&lt;/span&gt;
         &lt;span class=&#34;na&#34;&gt;href&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;{%&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;raw&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;%}{{&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;url&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;}}{%&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;endraw&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;%}&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;img&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;101&amp;quot;&lt;/span&gt;
                 &lt;span class=&#34;na&#34;&gt;height&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;75&amp;quot;&lt;/span&gt;
                 &lt;span class=&#34;na&#34;&gt;src&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;{% raw %}}{% endraw %}&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;img&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;span&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;{% raw %}{{title}}{% endraw %}&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;span&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;template&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
   &lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;amp-list&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;El problema era que por alguna razón las etiquetas &lt;code&gt;{% raw %}{{url}}, {{title}}, ...{% endraw %}&lt;/code&gt; no eran sustituidas por los valores del json, que era el siguiente:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;quot;items&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;
        &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
            &lt;span class=&#34;nt&#34;&gt;&amp;quot;title&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;QuÃ© es un NullPointerException y cÃ³mo solucionarlo&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
            &lt;span class=&#34;nt&#34;&gt;&amp;quot;thumbnail&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;/img/2014/05/Qu%C3%A9-es-un-NullPointerException-y-c%C3%B3mo-solucionarlo.png&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
            &lt;span class=&#34;nt&#34;&gt;&amp;quot;id&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;pop1&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
            &lt;span class=&#34;nt&#34;&gt;&amp;quot;url&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;/que-es-un-nullpointerexception-y-como-solucionarlo/&amp;quot;&lt;/span&gt;
        &lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
        &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
            &lt;span class=&#34;nt&#34;&gt;&amp;quot;title&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;Mini tutorial y chuleta de comandos para Git&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
            &lt;span class=&#34;nt&#34;&gt;&amp;quot;thumbnail&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;/img/2013/03/git-logo.png&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
            &lt;span class=&#34;nt&#34;&gt;&amp;quot;id&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;pop2&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
            &lt;span class=&#34;nt&#34;&gt;&amp;quot;url&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;/mini-tutorial-y-chuleta-de-comandos-git/&amp;quot;&lt;/span&gt;
        &lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
        &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
            &lt;span class=&#34;nt&#34;&gt;&amp;quot;title&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;Buenas prÃ¡cticas para el DiseÃ±o de una API RESTful PragmÃ¡tica&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
            &lt;span class=&#34;nt&#34;&gt;&amp;quot;thumbnail&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;/img/2014/01/201305-xml-vs-json-api.png&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
            &lt;span class=&#34;nt&#34;&gt;&amp;quot;id&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;pop3&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
            &lt;span class=&#34;nt&#34;&gt;&amp;quot;url&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;/buenas-practicas-para-el-diseno-de-una-api-restful-pragmatica/&amp;quot;&lt;/span&gt;
        &lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
        &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
            &lt;span class=&#34;nt&#34;&gt;&amp;quot;title&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;Â¿Cual es la diferencia entre los distintos formatos de audio, y cual deberÃ­a elegir?&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
            &lt;span class=&#34;nt&#34;&gt;&amp;quot;thumbnail&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;/img/2012/07/original1.jpg&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
            &lt;span class=&#34;nt&#34;&gt;&amp;quot;id&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;pop4&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
            &lt;span class=&#34;nt&#34;&gt;&amp;quot;url&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;/cual-es-la-diferencia-entre-los-distintos-formatos-de-audio-y-cual-deberia-elegir/&amp;quot;&lt;/span&gt;
        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

    &lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h1 id=&#34;solucionar-error-de-amp-mustache-en-jekyll&#34;&gt;Solucionar error de amp-mustache en Jekyll&lt;/h1&gt;

&lt;p&gt;Tras pelearme una mañana entera intentando resolver el error que me mostraba la consola de AMP:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Missing&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;URL&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;attribute&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;src&amp;#39;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;tag&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;a&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Me di cuenta de que el error residía en &lt;em&gt;jekyll&lt;/em&gt;, ya que este usa etiquetas de liquid, que son iguales que las usadas en amp-mustache. Es decir, &lt;code&gt;{% raw %}{{url}}{% endraw %}&lt;/code&gt; estaba siendo parseado por &lt;em&gt;Jekyll&lt;/em&gt; y cuando llegaba a &lt;code&gt;amp-mustache&lt;/code&gt; ya estaba consumido. La solución es fácil, decirle a &lt;em&gt;jekyll&lt;/em&gt; que no interprete las etiquetas con &lt;code&gt;{% raw %}{% raw %}{{ etiqueta }}{% endraw %}{{ &amp;quot;{% endraw &amp;quot; }}%}&lt;/code&gt;. Por tanto el código necesario es el siguiente:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;amp-list&lt;/span&gt;
    &lt;span class=&#34;na&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;popular-posts&amp;quot;&lt;/span&gt;
    &lt;span class=&#34;na&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;300&lt;/span&gt;
    &lt;span class=&#34;na&#34;&gt;height&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;300&lt;/span&gt;
    &lt;span class=&#34;na&#34;&gt;layout&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;responsive&lt;/span&gt;
    &lt;span class=&#34;na&#34;&gt;src&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;/assets/popular.json&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;template&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;amp-mustache&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
            &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;card related&amp;quot;&lt;/span&gt;
               &lt;span class=&#34;na&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;{% raw %}{% raw %}{{ id }}{% endraw %}{{ &amp;quot;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;{%&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;endraw&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;&amp;quot;&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;}}%}&amp;quot;&lt;/span&gt;
               &lt;span class=&#34;na&#34;&gt;href&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;{% raw %}{% raw %}{{ url }}{% endraw %}{{ &amp;quot;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;{%&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;endraw&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;&amp;quot;&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;}}%}&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
               &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;img&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;101&amp;quot;&lt;/span&gt;
                        &lt;span class=&#34;na&#34;&gt;height&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;75&amp;quot;&lt;/span&gt;
                        &lt;span class=&#34;na&#34;&gt;src&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;{% raw %}{% raw %}{{ thumbnail }}{% endraw %}{{ &amp;quot;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;{%&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;endraw&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;&amp;quot;&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;}}%}&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;img&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
                    &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;span&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;{% raw %}{% raw %}{{ title }}{% endraw %}{{ &amp;quot;{% endraw &amp;quot; }}%}&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;span&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
            &lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;template&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;amp-list&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Así ya todo funciona correctamente, espero haberos ayudado.&lt;/p&gt;</description>
        </item>
        
        <item>
            <title>Cómo Instalar/actualizar/eliminar Paquetes en Gentoo</title>
            <link>https://elbauldelprogramador.com/como-instalar-actualizar-elminar-paquetes-gentoo/</link>
            <pubDate>Fri, 29 Jul 2016 10:20:01 +0000</pubDate>
            
            <guid>https://elbauldelprogramador.com/como-instalar-actualizar-elminar-paquetes-gentoo/</guid>
            <description>&lt;figure&gt;
        &lt;a href=&#34;https://elbauldelprogramador.com/img/como-instalar-actualizar-elminar-paquetes-gentoo.png&#34;&gt;
          &lt;img
            on=&#34;tap:lightbox1&#34;
            role=&#34;button&#34;
            tabindex=&#34;0&#34;
            layout=&#34;responsive&#34;
            src=&#34;https://elbauldelprogramador.com/img/como-instalar-actualizar-elminar-paquetes-gentoo.png&#34;
            alt=&#34;Cómo Instalar/actualizar/eliminar Paquetes en Gentoo&#34;
            title=&#34;Cómo Instalar/actualizar/eliminar Paquetes en Gentoo&#34;
            sizes=&#34;(min-width: 526px) 526px, 100vw&#34;
            width=&#34;526&#34;
            height=&#34;256&#34;&gt;
          &lt;/img&gt;
        &lt;/a&gt;
        &lt;figcaption&gt;Imagen tomada con &lt;em&gt;ScreenFetch&lt;/em&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;Hace unos meses me decidí a instalar &lt;em&gt;Gentoo&lt;/em&gt; en mi portátil por probar cómo iba, y la verdad es que me está gustando bastante. La capacidad de personalización que tiene es tremenda.&lt;/p&gt;

&lt;p&gt;Una de las cosas que más me gusta es su gestor de paquetes, &lt;em&gt;emerge&lt;/em&gt; y sus programas auxiliares para administrar el sistema (&lt;em&gt;equery, eclean, euse y similares&lt;/em&gt;) es por ello que escribo este artículo, para recopilar una lista de las tareas más habituales en el día a día de usar &lt;em&gt;Gentoo&lt;/em&gt;. Cómo buscar paquetes a instalar, eliminar paquetes instalados, consultar qué paquetes queremos instalar, limpiar espacio en el sistema, actualizarlo etc. Empecemos:&lt;/p&gt;

&lt;p&gt;&lt;!--ad--&gt;&lt;/p&gt;

&lt;h1 id=&#34;comprobar-si-hay-actualizaciones-para-el-sistema&#34;&gt;Comprobar si hay actualizaciones para el sistema&lt;/h1&gt;

&lt;p&gt;Una de las primeras cosas que hago cuando enciendo el PC es comprobar si hay actualizaciones del sistema, en &lt;em&gt;Gentoo&lt;/em&gt; esto podemos hacerlo con el siguiente comando:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;$ emerge-webrsync
$ emerge --sync
$ emaint -A sync
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Los tres comandos llevan a cabo la misma tarea, pero difieren en varios aspectos:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;emerge --sync&lt;/code&gt;: Solo existe para propósito de compatibilidad, ya que los otros dos comandos son más modernos&lt;/li&gt;
&lt;li&gt;&lt;code&gt;emaint -A sync&lt;/code&gt;: &lt;code&gt;emaint&lt;/code&gt; es una herramienta para realizar tareas de mantenimiento en el sistema relacionadas con los paquetes, también realiza comprobaciones de “salud”. Entre sus subcomandos está la opción &lt;code&gt;sync&lt;/code&gt;, que comprueba si hay actualizaciones para los paquetes instalados. La opción &lt;code&gt;-A&lt;/code&gt; es para que sincronice todos los repositorios.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;emerge-webrsync&lt;/code&gt;: Este es similar al anterior, pero descarga los datos en un &lt;em&gt;tarball&lt;/em&gt;, lo cual lo hará mucho más rápido que los dos anteriores, este es el comando que suelo usar.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;actualizar-el-sistema&#34;&gt;Actualizar el sistema&lt;/h1&gt;

&lt;p&gt;Sincronizados con el servidor, deberemos realizar la actualización en sí, en caso de existir. Para esta tarea yo suelo usar el siguiente comando:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;$ emerge --update --deep --newuse -atv @world
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Desglosemos cada parámetro:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;--update&lt;/code&gt;: Actualiza el paquete a la mejor versión disponible.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--deep:&lt;/code&gt;: Obliga a que se consideren todas las dependencias de un paquete, en lugar de únicamente las dependencias directas. De este modo se actulizan librerías que no están listadas directamente en las dependencias de un paquete.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--newuse&lt;/code&gt;: En el caso de que se haya modificado la variable &lt;code&gt;USE&lt;/code&gt;, no es necesaria de lo contrario, pero yo suelo ponerla.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-a&lt;/code&gt; (&lt;code&gt;--ask&lt;/code&gt;): Pide confirmación antes de realizar la operación.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-t&lt;/code&gt; (&lt;code&gt;--tree&lt;/code&gt;): Muestra los paquetes a actualizar e instalar en forma de árbol.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-v&lt;/code&gt; (&lt;code&gt;--verbose&lt;/code&gt;): Muestra más información.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;eliminar-un-paquete-con-todas-sus-dependencias&#34;&gt;Eliminar un paquete con todas sus dependencias&lt;/h1&gt;

&lt;p&gt;Para eliminar por completo un paquete, con todas las dependencias:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;$ emerge -atv --depclean paquete
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Tras eliminar el paquete podemos ejecutar de nuevo:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;$ emerge -atv --depclean
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;para eliminar las dependencias que tuviera el paquete desistalado, pero &lt;code&gt;depclean&lt;/code&gt; no eliminará ningún paquete a no ser que todas las dependencias requeridas hayan sido resueltas, por tanto es necesario ejecutar el siguiente comando:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;$ emerge --update --newuse --deep @world
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;En el caso de no haber actualizado la variable &lt;code&gt;USE&lt;/code&gt; en nuestro sistema, podemos ahorrar tiempo con:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;$ emerge --update --changed-use --deep @world
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h1 id=&#34;buscar-paquetes-a-instalar&#34;&gt;Buscar paquetes a instalar&lt;/h1&gt;

&lt;p&gt;Hay varias formas, se puede buscar:&lt;/p&gt;

&lt;h2 id=&#34;usando-expresiones-regulares&#34;&gt;Usando expresiones regulares&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;$ emerge -s &lt;span class=&#34;s2&#34;&gt;&amp;quot;%^python&lt;/span&gt;$&lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Esto buscará paquetes que se llamen exáctamente &lt;em&gt;python&lt;/em&gt;, y por tanto solo hay uno:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt; Results &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; search key : %^python$ &lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;
Searching...

*  dev-lang/python
      Latest version available: 3.4.3-r1
      Latest version installed: 3.4.3-r1
      Size of files: 14,096 KiB
      Homepage:      http://www.python.org/
      Description:   An interpreted, interactive, object-oriented programming language
      License:       PSF-2

&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt; Applications found : &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&#34;buscar-paquetes-que-contengan-la-palabra-x&#34;&gt;Buscar paquetes que contengan la palabra x&lt;/h2&gt;

&lt;p&gt;Para buscar todos los paquetes que contengan la palabra &lt;em&gt;python&lt;/em&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;$ emerge -s python
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Tras ejecutar este comando, en mi caso aparecen 200 paquetes.&lt;/p&gt;

&lt;h2 id=&#34;buscar-paquetes-basándonos-en-su-descripción&#34;&gt;Buscar paquetes basándonos en su descripción&lt;/h2&gt;

&lt;p&gt;En lugar de buscar por el nombre del paquete, podemos buscar en su descripción:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;$ emerge --searchdesc python
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;También se pueden usar &lt;a href=&#34;https://elbauldelprogramador.com/introduccion-a-las-expresiones-regulares-en-python/&#34; title=&#34;Introducción a las expresiones regulares en python&#34;&gt;expresiones regulares&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;instalar-paquetes&#34;&gt;Instalar paquetes&lt;/h2&gt;

&lt;p&gt;Una vez encontrado el paquete que deaseamos instalar, prodecemos del siguiente modo:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;$ emerge -atv paquete
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h1 id=&#34;equery&#34;&gt;Equery&lt;/h1&gt;

&lt;p&gt;&lt;em&gt;Equery&lt;/em&gt; es parte del paquete &lt;code&gt;gentoolkit&lt;/code&gt;, el cual instala una serie de aplicaciones destinadas a la administración de &lt;em&gt;Gentoo&lt;/em&gt;, para instalarlo basta con ejecutar:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;$ emerge --ask app-portage/gentoolkit
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;em&gt;Equery&lt;/em&gt; es una aplicación creada con el propósito de hacer tareas comunes en &lt;em&gt;Portage&lt;/em&gt; más sencillas, veamos una lista de lo que puede hacer:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;Gentoo package query tool
Usage: equery &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;global-options&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; module-name &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;module-options&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;

global options
 ....

modules &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;short name&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
 &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;b&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;elongs               list what package FILES belong to
 &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;c&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;hanges               list changelog entries &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; ATOM
 chec&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;k&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;                 verify checksums and timestamps &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; PKG
 &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;d&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;epends               list all packages directly depending on ATOM
 dep&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;g&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;raph              display a tree of all dependencies &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; PKG
 &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;f&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;iles                 list all files installed by PKG
 h&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;a&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;s                   list all packages &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; matching ENVIRONMENT data stored in /var/db/pkg
 &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;h&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;asuse                list all packages that have USE flag
 ke&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;y&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;words              display keywords &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; specified PKG
 &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;l&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;ist                  list package matching PKG
 &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;m&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;eta                  display metadata about PKG
 &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;s&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;ize                  display total size of all files owned by PKG
 &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;u&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;ses                  display USE flags &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; PKG
 &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;w&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;hich                 print full path to ebuild &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; PKG
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Si quisieramos ver el árbol de dependencias de firefox:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;$ equery g firefox
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h1 id=&#34;eclean&#34;&gt;Eclean&lt;/h1&gt;

&lt;p&gt;&lt;em&gt;eclean&lt;/em&gt; es otra herramienta parte del paquete &lt;em&gt;Gentoolkit&lt;/em&gt;, diseñada para limpiar el sistema del código fuente usado para compilar los paquetes y binarios creados durante el proceso de compilación.&lt;/p&gt;

&lt;h2 id=&#34;limpiar-el-código-fuente-de-los-paquetes&#34;&gt;Limpiar el código fuente de los paquetes&lt;/h2&gt;

&lt;p&gt;Tras instalar paquetes, el código fuente queda guardado junto con los objetos generados por si es necesario recompilar, si no los queremos mantener, es posible eliminarlos con estos comandos:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;$ eclean --deep distfiles
$ eclean-dist
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;code&gt;eclean-dist&lt;/code&gt; es un alias de &lt;code&gt;eclean distfiles&lt;/code&gt;, la opción &lt;code&gt;--deep&lt;/code&gt; deja únicamente el código fuente necesario para una reinstalación.&lt;/p&gt;

&lt;h2 id=&#34;limpiar-paquetes-binarios&#34;&gt;Limpiar paquetes binarios&lt;/h2&gt;

&lt;p&gt;Los paquetes binarios son aquellos que no proporcionan código fuente, como por ejemplo el software privativo, o paquetes precompilados, para borrarlos basta ejecutar:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;$ eclean --deep packages
$ eclean-pkg
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h1 id=&#34;apps-recomendadas&#34;&gt;Apps Recomendadas&lt;/h1&gt;

&lt;p&gt;Antes de usar &lt;em&gt;Gentoo&lt;/em&gt;, utilizaba el comando &lt;code&gt;df&lt;/code&gt; para ver el estado de los discos duros, un ejemplo:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;$ df -h
Filesystem      Size  Used Avail Use% Mounted on
/dev/sda4        20G  7.9G   11G  44% /
tmpfs           1.2G  952K  1.2G   1% /run
dev              10M     &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;   10M   0% /dev
shm             5.9G   91M  5.8G   2% /dev/shm
cgroup_root      10M     &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;   10M   0% /sys/fs/cgroup
/dev/sda2       128M   16M  113M  12% /boot
/dev/sda5        87G   38G   45G  46% /home
/dev/sdb1       110G   11G   94G  11% /home/hkr/ssd2
none            5.9G     &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;  5.9G   0% /run/user/1000
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Tras instalar &lt;em&gt;Gentoo&lt;/em&gt; descubrí el paquete &lt;code&gt;pydf&lt;/code&gt;, similar a &lt;code&gt;df&lt;/code&gt; pero visualmente más atractivo, colorea el resultado y muestra una representación gráfica del porcentaje ocupado:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;$ pydf  -h
Filesystem Size  Used Avail Use%                                                                                       Mounted on
/dev/sda4   19G 8043M   10G 41.1 &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;##################################.................................................] /&lt;/span&gt;
/dev/sda2  128M   15M  112M 12.0 &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;##########.........................................................................] /boot&lt;/span&gt;
/dev/sda5   87G   38G   45G 43.4 &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;####################################...............................................] /home&lt;/span&gt;
/dev/sdb1  110G   11G   94G  9.8 &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;########...........................................................................] /home/hkr/ssd2&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&#34;referencias&#34;&gt;Referencias&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://wiki.gentoo.org/wiki/Gentoo_Cheat_Sheet&#34; title=&#34;CheatSheet de Gentoo&#34;&gt;Gentoo Cheat Sheet&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://wiki.gentoo.org/wiki/Equery&#34; title=&#34;Página de Equery&#34;&gt;Equery&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://wiki.gentoo.org/wiki/Eclean&#34; title=&#34;Página de Eclean&#34;&gt;Eclean&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
        </item>
        
        <item>
            <title>Cambia La Imágen De Fondo Del Terminal Gnome Y Pon Un Color De Texto a Juego, Automáticamente</title>
            <link>https://elbauldelprogramador.com/imagen-terminal-color-texto-a-juego-linux/</link>
            <pubDate>Mon, 18 Jul 2016 16:08:56 +0000</pubDate>
            
            <guid>https://elbauldelprogramador.com/imagen-terminal-color-texto-a-juego-linux/</guid>
            <description>&lt;p&gt;Seguramente seas una de esas personas que pasan mucho tiempo delante del ordenador con una o varias shells abiertas. De hecho, seguramente tengas más que visto el fondo negro con letras blancas, o el estilo de terminal que pusiste hace tiempo,  porque cambiarlo todos los días no es el hobbie de nadie. Pero ¿y si se cambiara sólo?¿ y si pudieras poner tus imágenes favoritas de fondo del terminal, con un color de texto que no desentone con tu imágen  y tú no tuvieras que hacer nada?&lt;/p&gt;

&lt;p&gt;&lt;!--ad--&gt;&lt;/p&gt;

&lt;p&gt;Aquí os quiero contar como se me ocurrió hacerlo a mí, con un script en bash  y así escapar de la rutina de estilo de las shells.&lt;/p&gt;

&lt;h2 id=&#34;antes-de-comenzar&#34;&gt;Antes de comenzar&amp;hellip;&lt;/h2&gt;

&lt;h4 id=&#34;comprobar-versión-de-gnome-shell&#34;&gt;Comprobar versión de gnome-shell&lt;/h4&gt;

&lt;p&gt;El script es válido para &lt;strong&gt;versiones de gnome &amp;lt; 3.8&lt;/strong&gt;. Lo he probado en Linux Mint Debian Edition y en Ubuntu 14.04. En este último tuve que instalar gnome-shell.&lt;/p&gt;

&lt;p&gt;Para instalar gnome-shell:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;    cris@cris ~ $ sudo apt-get install gnome-shell
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Para comprobar la versión de gnome:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;    cris@cris ~ $ gnome-shell --version
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4 id=&#34;instalar-imagemagick-y-gawk&#34;&gt;instalar ImageMagick y gawk&lt;/h4&gt;

&lt;p&gt;Usaremos funciones de ImageMagick para convertir las imágenes, y gawk para filtrar por expresiones. Para instalarlos:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;    cris@cris ~ $ sudo apt-get install gawk
    cris@cris ~ $ sudo apt-get install imagemagick
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;expliación-del-script&#34;&gt;Expliación del script&lt;/h2&gt;

&lt;p&gt;La idea del script es modificar directamente los valores de configuración de terminal que se establecen en el fichero &lt;strong&gt;%gconf.xml&lt;/strong&gt; que se ubica en &lt;code&gt;home/user/.gconf/apps/gnome-terminal/profiles/Default/&lt;/code&gt;, para versiones de shell gnome &amp;lt; 3.8.&lt;/p&gt;

&lt;h4 id=&#34;declaración-de-variables&#34;&gt;Declaración de variables&lt;/h4&gt;

&lt;p&gt;Inicialmente declaramos las variables con la ruta de los comandos que vamos a tilizar frecuentemente. No es obligatorio, pero es recomendable. La variable &lt;strong&gt;ROUTE&lt;/strong&gt; contiene la ruta del directorio donde guardamos las imágenes que queremos poner de fondo.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;    &lt;span class=&#34;nv&#34;&gt;GCONFT&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;/usr/bin/gconftool-2&amp;quot;&lt;/span&gt;
    &lt;span class=&#34;nv&#34;&gt;SORT&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;/usr/bin/sort&amp;quot;&lt;/span&gt;
    &lt;span class=&#34;nv&#34;&gt;GAWK&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;/usr/bin/gawk&amp;quot;&lt;/span&gt;
    &lt;span class=&#34;nv&#34;&gt;CNVRT&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;/usr/bin/convert&amp;quot;&lt;/span&gt;
    &lt;span class=&#34;nv&#34;&gt;ROUTE&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;/miRuta/*&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Nota:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;gconftool-2&lt;/strong&gt; : herramienta de configuración gnome. La usaremos con la opción set para modificar el archivo de configuración.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;sort&lt;/strong&gt; : comando que ordena líneas de texto.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;gawk&lt;/strong&gt; : escaneador de patrones. Lo usaremo para filtrar patrón hexadecimal.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;convert&lt;/strong&gt; : lo usaremos para redimensionar la imágen y convertirla en hibstograma.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;tomar-imágenes&#34;&gt;Tomar imágenes&lt;/h4&gt;

&lt;p&gt;tomamos aleatoriamente una imágen de &lt;strong&gt;miRuta&lt;/strong&gt; para la terminal:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;    &lt;span class=&#34;nv&#34;&gt;FILE&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;$(&lt;/span&gt;shuf -n &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt; -e $ROUTE&lt;span class=&#34;k&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Limpiamos la ruta, quedándonos solo con el nombre de la imágen:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;    &lt;span class=&#34;nv&#34;&gt;FILECONV&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;$(&lt;/span&gt;basename &lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$F&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;ILE&amp;quot;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Redimensionamos la imágen (sólo si es necesario, por ejemplo, si las imágenes que queremos usar son tamaño fondo de escritorio). Para no modificar la imágen original ni guardar muchas copias innecesarias, la guardamos en /tmp.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;    convert &lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$F&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;ILE&amp;quot;&lt;/span&gt; -resize %50 &lt;span class=&#34;s2&#34;&gt;&amp;quot;/tmp/&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$F&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;ILECONV&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Como mis imágenes son tamaño fondo de escritorio, las redimensiono a la mitad de su tamaño para que se aprecien mejor en el terminal.&lt;/p&gt;

&lt;p&gt;Opcional: tomamos otra imágen aleatoriamente de la carpeta para fondo de escritorio:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;    &lt;span class=&#34;nv&#34;&gt;FILED&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;$(&lt;/span&gt;shuf -n &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt; -e $ROUTE&lt;span class=&#34;k&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4 id=&#34;ponemos-la-imágen-de-fondo-en-el-terminal&#34;&gt;Ponemos la imágen de fondo en el terminal&lt;/h4&gt;

&lt;p&gt;modificamos algunas configuraciones que vienen por defecto antes de aplicar los cambios, para que tengan efecto:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;    $GCONFT --set /apps/gnome-terminal/profiles/Default/background_type --type string &lt;span class=&#34;s2&#34;&gt;&amp;quot;image&amp;quot;&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;#solido por defecto&lt;/span&gt;

    $GCONFT --set /apps/gnome-terminal/profiles/Default/use_custom_command --type bool &lt;span class=&#34;s2&#34;&gt;&amp;quot;false&amp;quot;&lt;/span&gt;

    $GCONFT --set /apps/gnome-terminal/profiles/Default/use_theme_colors --type bool &lt;span class=&#34;s2&#34;&gt;&amp;quot;false&amp;quot;&lt;/span&gt;

    $GCONFT --set /apps/gnome-terminal/profiles/Default/use_custom_default_size --type bool &lt;span class=&#34;s2&#34;&gt;&amp;quot;true&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Ahora, ya podemos tomar la imágen redimensionada y ponerla como imágen de fondo del terminal:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;    $GCONFT --set /apps/gnome-terminal/profiles/Default/background_image --type string &lt;span class=&#34;s2&#34;&gt;&amp;quot;/tmp/&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$F&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;ILECONV&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Por último, ponemos un color oscuro de fondo del terminal y un nivel de opacidad alto, para que se vea mejor el texto:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;    $GCONFT --set /apps/gnome-terminal/profiles/Default/background_color --type string &lt;span class=&#34;s2&#34;&gt;&amp;quot;#181824243131&amp;quot;&lt;/span&gt;

    $GCONFT --set /apps/gnome-terminal/profiles/Default/background_darkness --type float &lt;span class=&#34;s2&#34;&gt;&amp;quot;0.78&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4 id=&#34;ponemos-color-del-texto-a-juego&#34;&gt;Ponemos color del texto a juego&lt;/h4&gt;

&lt;p&gt;Para ello, sacamos el hibstograma de colores de la imágen, y tomamos un tono de esos colores. Con &lt;strong&gt;convert&lt;/strong&gt; podemos indicar el número de colores que deseamos sacar y la profundidad. Luego los ordenamos segun su orden numérico y filtramos solo el  código hexadecimal de los colores con &lt;strong&gt;gawk&lt;/strong&gt;. Lo guardamos en un fichero de texto llamado paleta.txt que se creara en /tmp.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;    &lt;span class=&#34;nv&#34;&gt;$C&lt;/span&gt;NVRT &lt;span class=&#34;s2&#34;&gt;&amp;quot;/tmp/&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$F&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;ILECONV&amp;quot;&lt;/span&gt; -colors &lt;span class=&#34;m&#34;&gt;25&lt;/span&gt; -depth &lt;span class=&#34;m&#34;&gt;6&lt;/span&gt; -format &lt;span class=&#34;s1&#34;&gt;&amp;#39;%c&amp;#39;&lt;/span&gt; histogram:info:- &lt;span class=&#34;se&#34;&gt;\&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; $SORT --general-numeric-sort &lt;span class=&#34;se&#34;&gt;\&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; $GAWK &lt;span class=&#34;s1&#34;&gt;&amp;#39;match ($0, /^ *[0-9]+: \([^)]+\) (#[0-9A-F]+) .+$/, a) { print a[1] }&amp;#39;&lt;/span&gt; &amp;gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;/tmp/paleta.txt&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Para finalizar, abrimos el fichero temporal &lt;strong&gt;paleta.txt&lt;/strong&gt; y leemos  6 primeras líneas, es decir, los 6 primeros colores:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;    &lt;span class=&#34;c1&#34;&gt;#abrir fichero&lt;/span&gt;
    &lt;span class=&#34;nb&#34;&gt;exec&lt;/span&gt; 3&amp;lt; /tmp/paleta.txt
    &lt;span class=&#34;c1&#34;&gt;#leer 6 lineas&lt;/span&gt;
    &lt;span class=&#34;nb&#34;&gt;read&lt;/span&gt; color1 &amp;lt;&lt;span class=&#34;p&#34;&gt;&amp;amp;&lt;/span&gt;3
    &lt;span class=&#34;nb&#34;&gt;read&lt;/span&gt; color2 &amp;lt;&lt;span class=&#34;p&#34;&gt;&amp;amp;&lt;/span&gt;3
    &lt;span class=&#34;nb&#34;&gt;read&lt;/span&gt; color3 &amp;lt;&lt;span class=&#34;p&#34;&gt;&amp;amp;&lt;/span&gt;3
    &lt;span class=&#34;nb&#34;&gt;read&lt;/span&gt; color4 &amp;lt;&lt;span class=&#34;p&#34;&gt;&amp;amp;&lt;/span&gt;3
    &lt;span class=&#34;nb&#34;&gt;read&lt;/span&gt; color5 &amp;lt;&lt;span class=&#34;p&#34;&gt;&amp;amp;&lt;/span&gt;3
    &lt;span class=&#34;nb&#34;&gt;read&lt;/span&gt; color6 &amp;lt;&lt;span class=&#34;p&#34;&gt;&amp;amp;&lt;/span&gt;3
    &lt;span class=&#34;c1&#34;&gt;#cerrar&lt;/span&gt;
    &lt;span class=&#34;nb&#34;&gt;exec&lt;/span&gt; 3&amp;lt;&lt;span class=&#34;p&#34;&gt;&amp;amp;&lt;/span&gt;-
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;y ponemos el último color leído como color de texto:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;    $GCONFT --set /apps/gnome-terminal/profiles/Default/foreground_color --type string &lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$c&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;olor6&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Lo de tomar el 6º color es porque como están ordenados de más claro a más oscuro, los colores claros &amp;ldquo; centrales&amp;rdquo; son los que mejor resultados dan. No obstante, puedes modificarlo dependiendo de tus fotos. El script no es infalible, la carpeta que yo uso tiene 700 imagenes y siempre hay  imágenes con las que falla eligiendo el color de texto más adecuado para su lectura, sobre todo en las  imágenes muy oscuras  donde no hay ningún color claro. Si se te ocurre alguna mejora, ¡comentala!&lt;/p&gt;

&lt;p&gt;Opcional: si tambien quieres cambiar la imágen del escritorio:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;    gsettings &lt;span class=&#34;nb&#34;&gt;set&lt;/span&gt; org.gnome.desktop.background picture-uri &lt;span class=&#34;s2&#34;&gt;&amp;quot;file:///&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$F&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;ILED&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4 id=&#34;disfruta-y-luce-tus-terminales&#34;&gt;Disfruta y luce tus terminales&lt;/h4&gt;

&lt;h4 id=&#34;planifica-la-ejecución&#34;&gt;Planifica la ejecución&lt;/h4&gt;

&lt;p&gt;Para no tener que andar lanzando el script, puedes planificarlo con &lt;strong&gt;crontab&lt;/strong&gt; para que se ejecute, por ejemplo cada vez que inicias el sistema:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;    cris@cris ~ $ crontab -e &lt;span class=&#34;c1&#34;&gt;#para abrir contab&lt;/span&gt;
    @reboot /miRuta_al_script/CambiaTerminales.sh &lt;span class=&#34;c1&#34;&gt;# añadir tarea&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4 id=&#34;algunos-ejemplos&#34;&gt;Algunos ejemplos&lt;/h4&gt;

&lt;figure&gt;
&lt;img on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/imagen-terminal-color-texto-a-juego-linux2.png&#34; alt=&#34;imagen-terminal-color-texto-a-juego-linux2&#34; title=&#34;Ejemplo 1&#34; width=&#34;656px&#34; height=&#34;386px&#34; /&gt;
&lt;/figure&gt;
&lt;figure&gt;
&lt;img on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/imagen-terminal-color-texto-a-juego-linux3.png&#34; alt=&#34;imagen-terminal-color-texto-a-juego-linux2&#34; title=&#34;Ejemplo 1&#34; width=&#34;650px&#34; height=&#34;386px&#34; /&gt;
&lt;/figure&gt;
&lt;figure&gt;
&lt;img on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/imagen-terminal-color-texto-a-juego-linux4.png&#34; alt=&#34;imagen-terminal-color-texto-a-juego-linux2&#34; title=&#34;Ejemplo 1&#34; width=&#34;656px&#34; height=&#34;385px&#34; /&gt;
&lt;/figure&gt;
&lt;figure&gt;
&lt;img on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/imagen-terminal-color-texto-a-juego-linux5.png&#34; alt=&#34;imagen-terminal-color-texto-a-juego-linux2&#34; title=&#34;Ejemplo 1&#34; width=&#34;1003px&#34; height=&#34;581px&#34; /&gt;
&lt;/figure&gt;

&lt;h4 id=&#34;enlace-al-código&#34;&gt;Enlace al código&lt;/h4&gt;

&lt;p&gt;Puedes bajarte el script en &lt;a href=&#34;https://github.com/CristinaHG/My-TerminalsBacgroundSetter&#34; title=&#34;Repositorio My Terminals Background Setter&#34;&gt;github&lt;/a&gt;&lt;/p&gt;</description>
        </item>
        
        <item>
            <title>Cómo Intel Va a Acabar Con Los Buffers Overflows Con Control-Flow Enforcement Technology (CET)</title>
            <link>https://elbauldelprogramador.com/intel-buffer-overflow-control-flow-enforcement-technology-cet/</link>
            <pubDate>Tue, 05 Jul 2016 20:09:47 +0000</pubDate>
            
            <guid>https://elbauldelprogramador.com/intel-buffer-overflow-control-flow-enforcement-technology-cet/</guid>
            <description>&lt;p&gt;Hace tiempo que hablamos aquí sobre lo que es un &lt;a href=&#34;https://elbauldelprogramador.com/explotacion-buffers-overflows-y-exploits-parte-i/&#34; title=&#34;Explotación – Buffers OverFlows y exploits&#34;&gt;Buffer Overflow&lt;/a&gt; y cómo aprovecharnos de ellos para tomar control del sistema. Pues bien, Intel se propone acabar con este tipo tan común de vulnerabilidad en sus nuevos procesadores.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Este artículo está basado en el episodio #565 de Security Now!, &lt;em&gt;Control-Flow Enforcement Technology (CET)&lt;/em&gt;, puedes ver todos los artículos traducidos en la página &lt;a href=&#34;https://elbauldelprogramador.com/security-now/&#34; title=&#34;Página de episodios traducidos&#34;&gt;security now!&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;!--ad--&gt;&lt;/p&gt;

&lt;h1 id=&#34;cómo-pretende-intel-acabar-con-los-buffers-overflows&#34;&gt;Cómo pretende Intel acabar con los buffers overflows&lt;/h1&gt;

&lt;p&gt;Básicamente Intel añadirá una nueva instrucción a sus procesadores, llamada &lt;strong&gt;ENDBRANCH&lt;/strong&gt; y una nueva funcionalidad llamada &lt;strong&gt;Shadow stack&lt;/strong&gt;, que podría traducirse como pila oculta. Antes de meternos de lleno a describir ambas novedades, analicemos el problema.&lt;/p&gt;

&lt;h1 id=&#34;un-poco-de-historia&#34;&gt;Un poco de historia&lt;/h1&gt;

&lt;p&gt;El problema con la programación orientada al retorno (&lt;em&gt;return oriented-programming&lt;/em&gt;) es que la gente inteligente ideó una forma de conseguir ejecutar código que ya tenía privilegios de ejecución. A lo largo de los años se ha producido una batalla entre gente intentando explotar programas y las compañías intentando idear métodos que lo impidieran.&lt;/p&gt;

&lt;p&gt;La primera medida de prevención fue el bit &lt;strong&gt;NX&lt;/strong&gt; (&lt;em&gt;No-eXecute bit&lt;/em&gt;), este bit se añadió a los sistemas para evitar los problemas mencionados en el párrafo anterior, que consistía en proporcionar datos al sistema y conseguir que esos datos se ejecutaran. Es decir, en estos sistemas no se diferenciaba lo que era código para ejecutar y lo que eran los datos, por lo que si conseguías que el procesador ejecutara unos datos cuidadosamente proporcionados&amp;hellip; te hacías con el sistema. En la arquitectura Von Neuman clásica, los datos e instrucciones comparten el mismo espacio.&lt;/p&gt;

&lt;h2 id=&#34;instrucción-nx&#34;&gt;Instrucción NX&lt;/h2&gt;

&lt;p&gt;Como hemos mencionado, esta compartición de espacio entre datos e instrucciones tenía el siguiente problema: Si consigues que el procesador ejecute una instrucción de salto (&lt;em&gt;jump&lt;/em&gt; ) a esa zona de datos que contiene intencionadamente instrucciones, el procesador las ejecutará. En orden de prevenir este tipo de ataques se creó la el bit &lt;strong&gt;NX&lt;/strong&gt;, una bandera o flag que se añadió al hardware que especifica qué región de memoria no puede ejecutarse. De esta forma, si alguien introduce datos y mediante una instrucción &lt;em&gt;jmp&lt;/em&gt; salta a ellos, el procesador no ejecutará las intrucciones en esos datos porque están marcados con el flag &lt;strong&gt;NX&lt;/strong&gt;. Pero como siempre, la gente es muy lista.&lt;/p&gt;

&lt;h2 id=&#34;cómo-saltarse-la-protección-del-bit-nx&#34;&gt;Cómo saltarse la protección del bit NX&lt;/h2&gt;

&lt;p&gt;Ya que esta protección estaba activada, los hackers idearon otra forma de saltarsela, intentar desactivar el bit saltando a alguna región de memoria que sea de ejecución y tenga la llamada al sistema que desactiva el bit &lt;strong&gt;NX&lt;/strong&gt;, normalmente saltaban a una subrutina del kernel, y sobre-escribían la dirección de retorno para saltar a la parte donde reside el código que ellos quieren ejecutar. De este modo ya volvían a poder ejecutar lo que quisieran en la región de datos. ¿Cual fue la contramedida de Intel en ese entonces?  &lt;em&gt;ASLR&lt;/em&gt; (&lt;em&gt;Address Space Layout Randomization&lt;/em&gt;)&lt;/p&gt;

&lt;h2 id=&#34;qué-es-aslr-address-space-layout-randomization&#34;&gt;Qué es ASLR (Address Space Layout Randomization)&lt;/h2&gt;

&lt;p&gt;Para prevenir los ataques del tipo anterior, Intel ideo otra solución, aleatorizar la distribución del espacio en el que se reparte el código ejecutable del sistema operativo. Sin embargo, debido al diseño de la arquitectura, no tenían mucho espacio de donde aleatorizar, normalmente disponían solo de 8 bits, es decir 256 posibles localizaciones en memoria. 256 opciones no son muchas, así que los malos podían simplemente probar suerte, fallarían 255 de cada 256 veces, pero acertarían 1 de cada 256, una baja probabilidad de acierto, pero mejor que 0.&lt;/p&gt;

&lt;h3 id=&#34;mi-ordenador-se-ha-quedado-colgado-por-alguna-misteriosa-razón&#34;&gt;Mi ordenador se ha quedado colgado por alguna misteriosa razón&amp;hellip;&lt;/h3&gt;

&lt;p&gt;Seguro que alguna vez os ha pasado, el ordenador se queda colgado, os aparece una pantallazo azul&amp;hellip; y simplemente habéis reiniciado y todo parece estar correcto, pues bien, esto fruto de alguien probando suerte en vuestro sistema, y fallando una de esas 255 veces que puede equivocarse “probando suerte” intentando hacerse con vuestro PC.&lt;/p&gt;

&lt;h1 id=&#34;la-nueva-instrucción-endbranch-de-intel&#34;&gt;La nueva instrucción ENDBRANCH de Intel&lt;/h1&gt;

&lt;p&gt;Despues de este pequeño repaso por la historia de las vulnerabilidades, vamos a describir la nueva instrucción que Intel ha creado para acabar con los &lt;em&gt;Buffers Overflows&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Su funcionamiento es simple, &lt;strong&gt;ENDBRANCH&lt;/strong&gt; es el único destino válido de una instrucción &lt;code&gt;call&lt;/code&gt; o &lt;code&gt;jump&lt;/code&gt;. Es decir, el principio de cada subrutina debe empezar con la instrucción &lt;strong&gt;ENDBRANCH&lt;/strong&gt;. Lo elegante de este diseño, es que los procesadores tienen un &lt;a href=&#34;https://en.wikipedia.org/wiki/Instruction_pipelining&#34;&gt;Instruction Pipeline&lt;/a&gt;, y conforme el procesador va leyendo instrucciones que tiene que ejecutar y encuentra una instrucción &lt;code&gt;call&lt;/code&gt; o &lt;code&gt;jump&lt;/code&gt; (Recuerda que estas intrucciones tiene que aterrizar en un &lt;strong&gt;ENDBRANCH&lt;/strong&gt;), la instrucción inmediatamente siguiente que va a coger el pipeline debe ser un &lt;strong&gt;ENDBRANCH&lt;/strong&gt;. Por tanto, como esto debe de ser inmutable, Intel sabe que tras una instrucción &lt;code&gt;call&lt;/code&gt; o &lt;code&gt;jump&lt;/code&gt; la siguiente debe ser &lt;strong&gt;ENDBRANCH&lt;/strong&gt;, así que Intel ha añadido un pequeño autómata finito que comprueba que esto es cierto, de no ser así, lanza una excepción y aborta el proceso.&lt;/p&gt;

&lt;p&gt;Con esta simple mejora, se acaba el problema de sobre-escribir la dirección de retorno de una función para permitir al atacante saltar a una porción de codigo que él controla. Al obligar a que la instrucción &lt;strong&gt;ENDBRANCH&lt;/strong&gt; sea la primera instrucción de todas las subrutinas, define un único punto de entrada válido. Cualquier intento de saltar a la mitad o al final de una función es imposible, ya que el proceso se abortará.&lt;/p&gt;

&lt;h1 id=&#34;la-pila-stack-y-la-nueva-funcionalidad-de-intel-shadow-stack&#34;&gt;La pila (Stack) y la nueva funcionalidad de Intel, Shadow Stack&lt;/h1&gt;

&lt;p&gt;Todos estamos familiarizados con el concepto de &lt;a href=&#34;https://es.wikipedia.org/wiki/Pila_(inform%C3%A1tica)&#34; title=&#34;Definición de Pila&#34;&gt;Pila (Stack)&lt;/a&gt; esa estructura de datos que permite introducir datos y sacar datos. Cuando se inventó en su día, de repente permitía hacer llamadas recursivas, lo cual hasta el momento no podía hacerse. Pero el problema con la pila viene a ser el mismo de antes, se comparten instrucciones y datos. Cuando se llama a un método, con unos parámetros, se introduce en la pila la dirección de retorno y los parámetros de la función, si los tuviera. He aquí el problema, es un claro objetivo para un ataque &lt;em&gt;buffer overflow&lt;/em&gt;. En la pila se reserva un espacio para variables de tamaño variable (Valga la redundancia), si no se usa correctamente y no se hacen comprobaciones del tamaño de lo que se intenta guardar en una variable, se corre el riesgo de que alguien mal intencionado desborde la capacidad de esa variable y consiga sobre-escribir la dirección de retorno de la pila. Ya sabemos qué puede pasar cuando alguien sobr escribe la dirección de retorno, pueden saltar a donde quiera y tomar el control.&lt;/p&gt;

&lt;p&gt;Para resolver este problema Intel ha diseñado la llamada &lt;em&gt;Shadow Stack&lt;/em&gt; o pila oculta. Es una pila a la que el desarrollador no tiene acceso, y mantiene una copia de los parámetros de la pila normal, como dirección de retorno etc, pero nada de datos. Cuando el programador modifica la pila, lo hace en la normal, a la que tiene acceso. Y aquí reside la fortaleza del &lt;em&gt;Shadow Stack&lt;/em&gt;, al no tener acceso, cuando el sistema mira la dirección de retorno, si esta dirección no coincide en ambas pilas, alguien ha modificado la dirección de retorno en la pila normal y el proceso se aborta. Y así, Intel ha puesto fin a años de vulnerabilidades debidas al simple hecho de no comprobar que el tamaño de los datos que intentamos guardar en una variable, no cabe en el espacio que tienen reservado. Una obra maestra.&lt;/p&gt;

&lt;p&gt;Además, no implica ningun decremento en el rendimiento del sistema, ya que está implementado en hardware, es problema de Intel añadir los transictores necesarios a sus procesadores para que esto funcione.&lt;/p&gt;

&lt;h1 id=&#34;conclusión&#34;&gt;Conclusión&lt;/h1&gt;

&lt;p&gt;Me ha parecido un tema muy interesante y quería compartirlo con vosotros, espero que también os haya gustado. Dejanos un comentario para hacernos llegar tu opinión!&lt;/p&gt;

&lt;h3 id=&#34;referencias&#34;&gt;Referencias&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Security Now 565 Control-Flow Enforcement Technology (CET) | &lt;a href=&#34;https://twit.tv/shows/security-now/episodes/565 &amp;quot;Security Now 565
Control-Flow Enforcement Technology (CET&#34;&gt;twit.tv&lt;/a&gt;&amp;rdquo;)&lt;/li&gt;
&lt;li&gt;Episodio en Youtube | &lt;a href=&#34;https://www.youtube.com/watch?v=W3AdFoJ8lCs &amp;quot;Security Now 565
Control-Flow Enforcement Technology (CET&#34;&gt;Youtube.com&lt;/a&gt;&amp;rdquo;)&lt;/li&gt;
&lt;/ul&gt;</description>
        </item>
        
        <item>
            <title>Cómo Añadir Automáticamente El Tamaño De Una Imagen en HTML Con  Python</title>
            <link>https://elbauldelprogramador.com/como-anadir-automaticamente-el-tamao-de-una-imagen-en-html-con-python/</link>
            <pubDate>Thu, 30 Jun 2016 10:59:47 +0000</pubDate>
            
            <guid>https://elbauldelprogramador.com/como-anadir-automaticamente-el-tamao-de-una-imagen-en-html-con-python/</guid>
            <description>&lt;p&gt;Hace poco me encontré con el problema de añadir a todas las etiquetas de imágenes del blog los atributos de tamaño (Altura y anchura). Hacerlo a mano era inviable debido a la cantidad de artículos. Así que pensé que una buena forma sería hacerlo con &lt;a href=&#34;https://elbauldelprogramador.com/tags/python/&#34;&gt;python&lt;/a&gt;. El razonamiento es el siguiente:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Iterar sobre todos los artículos del blog.&lt;/li&gt;
&lt;li&gt;Buscar en cada artículo todas las etiquetas &lt;code&gt;img&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Acceder a la ruta donde se encuentra la imagen (El atributo &lt;code&gt;src&lt;/code&gt;).&lt;/li&gt;
&lt;li&gt;Leer la imagen y extraer su tamaño.&lt;/li&gt;
&lt;li&gt;Escribir el tamaño de la imagen en los atributos &lt;code&gt;width&lt;/code&gt; y &lt;code&gt;height&lt;/code&gt; de la imagen.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;!--ad--&gt;&lt;/p&gt;

&lt;p&gt;Para llevar a cabo la tarea he usado el módulo &lt;code&gt;BeautifulSoup&lt;/code&gt;. A continuación se muestra el código comentado:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;ch&#34;&gt;#!/bin/python&lt;/span&gt;

&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;BeautifulSoup&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;BeautifulSoup&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;os.path&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;basename&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;splitext&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;PIL&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Image&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;glob&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# Ruta a la carpeta que contiene los ficheros, en este caso&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# cualquier fichero markdown&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;path&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;/ruta/ficheros/*.md&amp;quot;&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# Iteramos para cada fichero&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;fname&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;glob&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;glob&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;path&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;# Lo abrimos&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;f&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;open&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fname&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;# Creamos un objeto BeautifulSoup para parsear el fichero&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;soup&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;BeautifulSoup&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;close&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;

    &lt;span class=&#34;c1&#34;&gt;# Para cada etiqueta de imagen que encontremos en el fichero&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;img&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;soup&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;findAll&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;img&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;img&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
            &lt;span class=&#34;k&#34;&gt;try&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
                &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;img&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;src&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;startswith&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;/assets&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
                    &lt;span class=&#34;c1&#34;&gt;# Abrimos la imagen&lt;/span&gt;
                    &lt;span class=&#34;n&#34;&gt;pil&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Image&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;open&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;/ruta/carpeta/imagenes&amp;quot;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;img&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;src&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;
                    &lt;span class=&#34;c1&#34;&gt;# Obtenemos su tamaño&lt;/span&gt;
                    &lt;span class=&#34;n&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;height&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pil&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;
                    &lt;span class=&#34;c1&#34;&gt;# Modificamos la etiqueta HTML para añadirle el tamaño&lt;/span&gt;
                    &lt;span class=&#34;n&#34;&gt;img&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;width&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;px&amp;quot;&lt;/span&gt;
                    &lt;span class=&#34;n&#34;&gt;img&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;height&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;height&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;px&amp;quot;&lt;/span&gt;
            &lt;span class=&#34;k&#34;&gt;except&lt;/span&gt; &lt;span class=&#34;ne&#34;&gt;KeyError&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
                &lt;span class=&#34;k&#34;&gt;pass&lt;/span&gt;

    &lt;span class=&#34;c1&#34;&gt;# Guardamos el fichero modificado&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;with&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;open&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fname&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;wb&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;file&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;nb&#34;&gt;file&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;write&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;soup&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Espero que os resulte útil, he subido el script a &lt;a href=&#34;https://gist.github.com/elbaulp/188a7f9d24e586cb16d9ed9188aa5823&#34; title=&#34;Gist en github&#34;&gt;github&lt;/a&gt;.&lt;/p&gt;

&lt;h1 id=&#34;referencias&#34;&gt;Referencias&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;How to save back changes made to a HTML file using BeautifulSoup in Python? | &lt;a href=&#34;http://stackoverflow.com/a/14369600/1612432&#34; title=&#34;How to save back changes made to a HTML file using BeautifulSoup in Python?&#34;&gt;stackoverflow.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Replace SRC of all IMG elements using Parser | &lt;a href=&#34;http://stackoverflow.com/a/1579733/1612432&#34; title=&#34;Replace SRC of all IMG elements using Parser&#34;&gt;stackoverflow.com&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
        </item>
        
        <item>
            <title>Rss Feeds Para Cada Categoría</title>
            <link>https://elbauldelprogramador.com/rss-feeds-para-cada-categora/</link>
            <pubDate>Fri, 24 Jun 2016 06:06:58 +0000</pubDate>
            
            <guid>https://elbauldelprogramador.com/rss-feeds-para-cada-categora/</guid>
            <description>&lt;p&gt;Puede que solo te interesen algunas publicaciones del blog y no desees recibir todos y cada uno de los artículos que se escriben.&lt;/p&gt;

&lt;p&gt;&lt;!--ad--&gt;&lt;/p&gt;

&lt;p&gt;Por ello he creado varios feeds RSS en base a las categorías más importantes del blog, para que cada uno se susbscriba a la que más le interese:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;El feed principal, con el que recibirás todas las publicaciones es &lt;strong&gt;&lt;a href=&#34;https://elbauldelprogramador.com/feed&#34; target=&#34;_blank&#34;&gt;/feed&lt;/a&gt;&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;En &lt;strong&gt;&lt;a href=&#34;https://elbauldelprogramador.com/feed-articulos&#34; target=&#34;_blank&#34;&gt;/feed-articulos&lt;/a&gt;&lt;/strong&gt; se publican artículos en general, traducciones de notícias etc.&lt;/li&gt;
&lt;li&gt;En &lt;strong&gt;&lt;a href=&#34;https://elbauldelprogramador.com/feed-security-now&#34; target=&#34;_blank&#34; title=&#34;Feed security now&#34;&gt;/security-now&lt;/a&gt;&lt;/strong&gt; se publican algunas traducciones del programa de radio &lt;a href=&#34;http://twit.tv/sn&#34;&gt;Security Now!&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;En &lt;strong&gt;&lt;a href=&#34;https://elbauldelprogramador.com/feed-android&#34; target=&#34;_blank&#34; title=&#34;Feed Android&#34;&gt;/feed-android&lt;/a&gt;&lt;/strong&gt; artículos y cursos relacionados con Android.&lt;/li&gt;
&lt;li&gt;En &lt;strong&gt;&lt;a href=&#34;https://elbauldelprogramador.com/feed-dev&#34; target=&#34;_blank&#34; title=&#34;Feed dev&#34;&gt;/feed-dev&lt;/a&gt;&lt;/strong&gt; todo lo que tenga que ver con desarrollo de aplicaciones, lenguajes de programación etc.&lt;/li&gt;
&lt;li&gt;En &lt;strong&gt;&lt;a href=&#34;https://elbauldelprogramador.com/feed-geek&#34; target=&#34;_blank&#34; title=&#34;Feed Geek&#34;&gt;/feed-geek&lt;/a&gt;&lt;/strong&gt; cosas para geeks.&lt;/li&gt;
&lt;li&gt;En &lt;strong&gt;&lt;a href=&#34;https://elbauldelprogramador.com/feed-java&#34; target=&#34;_blank&#34; title=&#34;Feed Java&#34;&gt;/feed-java&lt;/a&gt;&lt;/strong&gt; tutoriales y artículos sobre Java.&lt;/li&gt;
&lt;li&gt;En &lt;strong&gt;&lt;a href=&#34;https://elbauldelprogramador.com/feed-latex&#34; target=&#34;_blank&#34; title=&#34;Feed LaTeX&#34;&gt;/feed-latex&lt;/a&gt;&lt;/strong&gt; artículos y tutoriales sobre LaTeX.&lt;/li&gt;
&lt;li&gt;En &lt;strong&gt;&lt;a href=&#34;https://elbauldelprogramador.com/feed-linux&#34; target=&#34;_blank&#34; title=&#34;Feed Linux&#34;&gt;/feed-linux&lt;/a&gt;&lt;/strong&gt; artículos y tutoriales sobre Linux.&lt;/li&gt;
&lt;li&gt;En &lt;strong&gt;&lt;a href=&#34;https://elbauldelprogramador.com/feed-misc&#34; target=&#34;_blank&#34; title=&#34;Feed Misc&#34;&gt;/feed-misc&lt;/a&gt;&lt;/strong&gt; se publican todas las &lt;a href=&#34;https://elbauldelprogramador.com/manuales-gratuitos/&#34;&gt;guías gratuítas&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Creo que con este cambio el blog puede estar más personalizado para cada lector, permitiéndole recibir artículos únicamente de los temas que le interesan.&lt;/p&gt;

&lt;p&gt;A lo largo del tiempo iré creado nuevos feeds conforme nazcan nuevas categorías.&lt;/p&gt;</description>
        </item>
        
        <item>
            <title>¿Qué Aplicación De Mensajería Móvil Es Más Segura?</title>
            <link>https://elbauldelprogramador.com/aplicacion-mensajeria-movil-segura-whatsapp-signal-allo/</link>
            <pubDate>Thu, 23 Jun 2016 17:16:56 +0000</pubDate>
            
            <guid>https://elbauldelprogramador.com/aplicacion-mensajeria-movil-segura-whatsapp-signal-allo/</guid>
            <description>&lt;blockquote&gt;
&lt;p&gt;Este artículo es un resumen de los aspectos más importantes de una nota que he leido en el blog de &lt;a href=&#34;https://www.schneier.com/blog/archives/2016/06/comparing_messa.html&#34; title=&#34;Comparing Messaging Apps&#34;&gt;Bruce Schneier&lt;/a&gt; y del blog de &lt;a href=&#34;https://theintercept.com/2016/06/22/battle-of-the-secure-messaging-apps-how-signal-beats-whatsapp/&#34; title=&#34;Battle of the Secure Messaging Apps: How Signal Beats WhatsApp&#34;&gt;Michah Lee&lt;/a&gt; en el que se comparan las distintas aplicaciones de mensajería (WhatsApp, Signal y Allo) en función de su privacidad y seguridad. Recomiendo leer el articulo original, sin embargo, he escrito un resumen con las características de cada aplicación&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Para los impacientes, este es el resumen extremo del artículo:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;WhatsApp, Signal y Allo usan el mismo protocolo seguro para enviar mensajes (El protocolo de &lt;em&gt;Open Whisper Systems&lt;/em&gt;).&lt;/li&gt;
&lt;li&gt;Se diferencian en la información que cifran, &lt;em&gt;metadatos&lt;/em&gt; que almacenan y qué es lo que almacenan en sus bases de datos. Es esto último lo que en teoría el gobierno puede fisgonear.&lt;/li&gt;
&lt;li&gt;Para quien busque la total privacidad y seguridad, no hay más opción que &lt;em&gt;Signal&lt;/em&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;!--ad--&gt;&lt;/p&gt;

&lt;h1 id=&#34;whatsapp&#34;&gt;WhatsApp&lt;/h1&gt;

&lt;h2 id=&#34;pros&#34;&gt;Pros&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://elbauldelprogramador.com/whatsapp-mensajes-cifrados-extremo-a-extremo/&#34; title=&#34;WhatsApp: Entendiendo Su Cifrado Extremo a Extremo&#34;&gt;Cifra todos los mensajes&lt;/a&gt;, imágenes, vídeos y notas de voz.&lt;/li&gt;
&lt;li&gt;Si el gobierno solicita los mensajes de un usuario, WhatsApp no puede darselos, porque no conoce la clave que los descifran.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;contras&#34;&gt;Contras&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Aunque usen Signal, los servidores de WhatsApp ven los mensajes que los usuarios mandan a través de su servicio. No pueden saber el contenido del mensaje, pero sí quienes están hablando y cuando. En otras palabras, almacenan &lt;em&gt;metadatos&lt;/em&gt; (Se reservan el derecho en su &lt;a href=&#34;https://www.WhatsApp.com/legal/#Privacy&#34;&gt;política de privacidad&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;WhatsApp may retain date and time stamp information associated with successfully delivered messages and the mobile phone numbers involved in the messages, as well as any other information which WhatsApp is legally compelled to collect.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;Dicho esto, si el gobierno les pide &lt;em&gt;metadatos&lt;/em&gt;, pueden dárselos.&lt;/li&gt;
&lt;li&gt;Al registrarnos en WhatsApp podemos facilitar nuestra lista de contactos. Pueden almancenar esa lista de contactos y compartírsela al gobierno si se la piden.&lt;/li&gt;
&lt;li&gt;Las copias de seguridad que sugiere WhatsApp para almacenar en la nube no están cifradas, por tanto cedemos las conversaciones al servidor de terceros que almacene la copia.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;allo&#34;&gt;Allo&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;Por defecto Google puede leer todos tus mensajes, Para habilitar cifrado punto a punto hay que pasar a modo incógnito.&lt;/li&gt;
&lt;li&gt;El que venga deshabilitado por defecto es peligroso.&lt;/li&gt;
&lt;li&gt;El beneficio de no cifrar, es que google usa aprendizaje automático para sugerirte las respuestas que debes dar a la conversación. (Aprende lo qué tú contestarías)&lt;/li&gt;
&lt;li&gt;Hasta que no se libere Allo, no se sabe dónde se almacenaran las conversaciones y por cuanto tiempo.&lt;/li&gt;
&lt;li&gt;La tecnología que hay detrás es buena, pero moviendose en la dirección incorrecta en términos de privacidad. Si te preocupa tu privacidad, no la uses.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;signal&#34;&gt;Signal&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;El elemento diferenciador de Signal con WhatsApp y Allo es que es &lt;strong&gt;&lt;a href=&#34;https://github.com/WhisperSystems&#34; title=&#34;Repositorio en GitHub&#34;&gt;software libre&lt;/a&gt;&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;No tienen modelo de negocio, al contrario que Google o Facebook, que hacen dinero con anuncios. Signal vive de donaciones y subvenciones.&lt;/li&gt;
&lt;li&gt;Sin anuncios que mostrar, Signal almacena la menor cantidad de información del usuario posible.&lt;/li&gt;
&lt;li&gt;Como WhatsApp, todos los mensajes están &lt;a href=&#34;https://elbauldelprogramador.com/como-cifrar-correos-con-gpg-con-mailvelope/&#34; title=&#34;Cómo cifrar correos electrónicos con GPG usando Mailvelope&#34;&gt;cifrados&lt;/a&gt; punto a punto.&lt;/li&gt;
&lt;li&gt;En su &lt;a href=&#34;https://whispersystems.org/signal/privacy/&#34;&gt;política de privacidad&lt;/a&gt;, dicen que no almacenan &lt;em&gt;metadatos&lt;/em&gt; de los mensajes. &lt;em&gt;Moxie&lt;/em&gt; (Fundadod de &lt;em&gt;Open Whisper Systems&lt;/em&gt;) dice que la única información que guardan es la última conexión del usuario, con una precisión de tan solo un dia (Ni horas ni minutos ni segundos se almacenan).&lt;/li&gt;
&lt;li&gt;Comparte la lista de contactos, pero no la envía en texto plano, les aplica un hash y el servidor responde con los hashes que tienen en comun ambas cuentas. (Compara hashes solo)&lt;/li&gt;
&lt;li&gt;En sus copias de seguridad, al contrario que WhatsApp, no incluye los mensajes. Así que no hay riesgo de que se filtren los mensajes a terceros. (Como desventaja, no hay copia de los mensajes.)&lt;/li&gt;
&lt;li&gt;Si el gobierno pide a &lt;em&gt;Open Whisper Systems&lt;/em&gt; que le facilite información o &lt;em&gt;metadatos&lt;/em&gt;, Signal no tiene nada que dar.&lt;/li&gt;
&lt;li&gt;Desde el punto de vista de privacidad, Signal es el claro ganador. Pero tiene algunas desventajas&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;contras-1&#34;&gt;Contras&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Lo usa poca gente.&lt;/li&gt;
&lt;li&gt;Menos caracterísitcas&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;¿Y Tú, qué opinas? Déjanos un comentario!&lt;/p&gt;</description>
        </item>
        
    </channel>
</rss>
