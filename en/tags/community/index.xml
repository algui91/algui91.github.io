<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>community on The Programmer&#39;s Chest</title>
        <link>https://elbauldelprogramador.com/en/tags/community/</link>
        <description>Recent content in community on The Programmer&#39;s Chest</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>es-ES</language>
        <lastBuildDate>Tue, 16 Oct 2018 18:54:00 +0200</lastBuildDate>
        <image>
            <url>https://elbauldelprogramador.com/img/bio-photo-rss.png</url>
            <link>https://elbauldelprogramador.com/en/tags/community/</link>
            <title>community on The Programmer&#39;s Chest</title>
            <width>144</width>
            <height>144</height>
        </image>
        <atom:link href="https://elbauldelprogramador.com/en/tags/community/" rel="self" type="application/rss+xml" />
        
        <item>
            <title>An analysis and visualization of my twitter account with Gephi</title>
            <link>https://elbauldelprogramador.com/en/social-mining-gephi/</link>
            <pubDate>Tue, 16 Oct 2018 18:54:00 +0200</pubDate>
            
            <guid>https://elbauldelprogramador.com/en/social-mining-gephi/</guid>
            <description>&lt;blockquote&gt;
&lt;p&gt;This article is the result of an exercise for the subject &lt;em&gt;Mining of
Social Media&lt;/em&gt; in the Master&amp;rsquo;s Degree in Data Science at the UGR&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;network-analysis&#34;&gt;Network analysis&lt;/h2&gt;
&lt;p&gt;This network contains a subset of the followers of the Twitter account &lt;a href=&#34;https://twitter.com/ElBaulP&#34;&gt;@elbaulp&lt;/a&gt;, since due to API limitations the download of the network up to the second degree of connection took a long time.&lt;/p&gt;
&lt;p&gt;The objective of this analysis is to identify the most influential actors, who
act as a bridge between communities in order to expand the number of followers
of @ElbaulP.&lt;/p&gt;
&lt;h3 id=&#34;average-degree&#34;&gt;Average degree&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;N = 2132 nodes.&lt;/li&gt;
&lt;li&gt;L = 6643 links&lt;/li&gt;
&lt;li&gt;Density = 0.001&lt;/li&gt;
&lt;li&gt;Average grade = 3.116, which means that each node of the network is connected to another 3 on average.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The density graphs of the degrees are shown below.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://elbauldelprogramador.com/img/avgdegree/degree-distribution.png&#34;&gt;&lt;figure&gt;
    &lt;img src=&#34;https://elbauldelprogramador.com/img/avgdegree/degree-distribution.png&#34; height=&#34;400&#34;/&gt; 
&lt;/figure&gt;
&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;In terms of total grades, there are four nodes that stand out, with a grade greater than 120. The node with the highest grade is 161. These nodes correspond to &lt;em&gt;hubs&lt;/em&gt;. The distribution of degrees indicates that the property is fulfilled free of scale. Very few with many connections, and many with few connections.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://elbauldelprogramador.com/img/avgdegree/indegree-distribution.png&#34;&gt;&lt;figure&gt;
    &lt;img src=&#34;https://elbauldelprogramador.com/img/avgdegree/indegree-distribution.png&#34; height=&#34;400&#34;/&gt; 
&lt;/figure&gt;
&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The nodes with the highest degree of input (with the highest number of followers) have 120 and 160 followers, respectively.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://elbauldelprogramador.com/img/avgdegree/outdegree-distribution.png&#34;&gt;&lt;figure&gt;
    &lt;img src=&#34;https://elbauldelprogramador.com/img/avgdegree/outdegree-distribution.png&#34; height=&#34;400&#34;/&gt; 
&lt;/figure&gt;
&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;It is absolutely the same for the degrees of entry and exit, in the case of
Twitter this indicates followers and followers. The user with more friends has
about 99 friends.&lt;/p&gt;
&lt;h3 id=&#34;diameter&#34;&gt;Diameter&lt;/h3&gt;
&lt;p&gt;The diameter of the network is 13. This value represents the maximum distance between two nodes in the entire network. The average distance is 4.5.&lt;/p&gt;
&lt;p&gt;The distance histogram is as follows:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://elbauldelprogramador.com/img/diameter/Closeness-Centrality-Distribution.png&#34;&gt;&lt;figure&gt;
    &lt;img src=&#34;https://elbauldelprogramador.com/img/diameter/Closeness-Centrality-Distribution.png&#34; height=&#34;400&#34;/&gt; 
&lt;/figure&gt;
&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The closeness diagram shows that there are quite a few nodes very far from the
centre (around 90). Others, on the other hand, are very located in the centre of
the network (about 85). The rest of the nodes are located around the centre of
the network.&lt;/p&gt;
&lt;h3 id=&#34;connectivity&#34;&gt;Connectivity&lt;/h3&gt;
&lt;p&gt;There are 845 related components, the giant component groups 1261 nodes. The average clustering coefficient is 0.068. In this case it is low, since the twitter account is a blog account, rather than a personal account. The CC histogram is as follows:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://elbauldelprogramador.com/img/gephi/clustering.png&#34;&gt;&lt;figure&gt;
    &lt;img src=&#34;https://elbauldelprogramador.com/img/gephi/clustering.png&#34; height=&#34;400&#34;/&gt; 
&lt;/figure&gt;
&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This indicates that in sparsely populated regions the clustering coefficient is
very high, as the nodes are more locally connected to each other. For this
reason, a very high point stands out at the beginning of the graph.&lt;/p&gt;
&lt;h3 id=&#34;betweeness-centrality&#34;&gt;Betweeness Centrality&lt;/h3&gt;
&lt;p&gt;The first five actors for the following measures are:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;Centralidad de Grado&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Intermediación&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Cercanía&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Vector propio&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;nixcraft: 161&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;rootjaeger: 0.048&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;programador4web: 1&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Makova_: 1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;Makova_: 151&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;podcastlinux: 0.048&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;KevinhoMorales: 1&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;psicobyte_: 0.966&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;cenatic: 132&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Linuxneitor: 0.043&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;elrne: 1&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Terceranexus6: 0.908&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;Terceranexus6: 129&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Makova_: 0.039&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Mrcoo16: 1&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;NuriaStatgirl: 0.796&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;LignuxSocial: 121&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Wdesarrollador: 0.038&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;RodriKing14: 1&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Inter_ferencias: 0.780&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;As for the &lt;strong&gt;grade centrality&lt;/strong&gt;, it is not very much taken into account, although it reflects the number of connections of an actor, it does not take into account the overall structure of the network.&lt;/p&gt;
&lt;p&gt;An important measure is &lt;strong&gt;intermediation&lt;/strong&gt;, these actors act as a bridge between other regions of the network. So they can connect different communities to each other. In the case at hand (Twitter), if we get one of these actors to mention us or do RT, our tweet could reach other types of users who might be interested in our ideas.&lt;/p&gt;
&lt;p&gt;The &lt;strong&gt;closeness&lt;/strong&gt; measures how close an actor is to the center of the network. In this case it doesn&amp;rsquo;t help us much, since all the nodes have the same measure.&lt;/p&gt;
&lt;p&gt;Finally, the &lt;strong&gt;own vector core&lt;/strong&gt; is a recursive measure that assigns importance to
a node according to the importance of its neighbors. That is, it takes into
account the quality of connections, rather than quantity. The first actor has a
value of this measure of 1, which indicates that it is the most important node
and with the greatest number of important connections. It is then an actor to be
taken into account in the network.&lt;/p&gt;
&lt;h3 id=&#34;community-detection&#34;&gt;Community detection&lt;/h3&gt;
&lt;p&gt;For the detection of communities, a resolution factor of 1.99 has been used to obtain a total of 5 communities. This resolution value was chosen because lower values resulted in a greater number of communities, but many of them formed by two nodes. The value for modularity is 0.436, which is a good value.&lt;/p&gt;
&lt;p&gt;The proportion of nodes in each community is as follows:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;40.85%&lt;/li&gt;
&lt;li&gt;21.39%&lt;/li&gt;
&lt;li&gt;17.5%&lt;/li&gt;
&lt;li&gt;10.98%&lt;/li&gt;
&lt;li&gt;9.15%&lt;/li&gt;
&lt;li&gt;0.14%&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The modularity distribution can be seen in the following image:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://elbauldelprogramador.com/img/mod/communities-size-distribution.png&#34;&gt;&lt;figure&gt;
    &lt;img src=&#34;https://elbauldelprogramador.com/img/mod/communities-size-distribution.png&#34; height=&#34;400&#34;/&gt; 
&lt;/figure&gt;
&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;All are reasonably sized except one, which is too small.&lt;/p&gt;
&lt;p&gt;The following image shows the colored graph according to which community
belongs to each node:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://elbauldelprogramador.com/img/gephi/comunities.png&#34;&gt;&lt;figure&gt;
    &lt;img src=&#34;https://elbauldelprogramador.com/img/gephi/comunities.png&#34; height=&#34;1116&#34;/&gt; 
&lt;/figure&gt;
&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Analyzing the network, it can be seen that the community above (sky blue)
belongs to nodes related to ETSIIT. Some members of this community act as a
bridge (they are nodes with a lot of intermediation) with other communities. For
example, Makova_ and Linuxneitor bridge with the purple community, this
community is more related to Linux users and Linux blogs. NataliaDiazRodrz
bridges the ETSIIT community with the green community, more related to the Data
Science theme. This makes sense, since NataliaDiazRodrz studied at ETSIIT and
works in Data Science, specifically in NLP topics. The Amarilla community is
related to programming.&lt;/p&gt;
&lt;h3 id=&#34;additional-plots&#34;&gt;Additional plots&lt;/h3&gt;
&lt;p&gt;The following graph shows the network arranged with the colors according to the value of the vector itself, and the size of the nodes as the intermediation:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://elbauldelprogramador.com/img/gephi/color-eige-size-betwenn.png&#34;&gt;&lt;figure&gt;
    &lt;img src=&#34;https://elbauldelprogramador.com/img/gephi/color-eige-size-betwenn.png&#34; height=&#34;792&#34;/&gt; 
&lt;/figure&gt;
&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;In the following figure the inverse is shown, color the intermediation, size the own vector:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://elbauldelprogramador.com/img/gephi/color-betwenn-size-eigen.png&#34;&gt;&lt;figure&gt;
    &lt;img src=&#34;https://elbauldelprogramador.com/img/gephi/color-betwenn-size-eigen.png&#34; height=&#34;760&#34;/&gt; 
&lt;/figure&gt;
&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I consider that the most important measures are the own vector value and the
intermediation, the following graphic shows how they are related between
them. The higher the value for both the better, the more important the node:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://elbauldelprogramador.com/img/gephi/eigenvsbt.png&#34;&gt;&lt;figure&gt;
    &lt;img src=&#34;https://elbauldelprogramador.com/img/gephi/eigenvsbt.png&#34; height=&#34;570&#34;/&gt; 
&lt;/figure&gt;
&lt;/a&gt;&lt;/p&gt;
</description>
        </item>
        
        <item>
            <title>Mining your github community with R - Analysing languages popularity</title>
            <link>https://elbauldelprogramador.com/en/githubmininglanguages/</link>
            <pubDate>Mon, 24 Apr 2017 21:13:39 +0200</pubDate>
            
            <guid>https://elbauldelprogramador.com/en/githubmininglanguages/</guid>
            <description>&lt;p&gt;In this post we are exploring our github community considering our friends (or followers) in that social network. We will first give some directions for creating an application and starting to use the github API. Then we will extract the information we need to perform our analysis and get what programming languages do our friends use and what is the most popular and the less popular language. Let&amp;rsquo;s explore the languages popularity in your community!&lt;/p&gt;
&lt;h1 id=&#34;1--create-the-app-install-packages-authenticate&#34;&gt;1.  Create the app, install packages, authenticate&lt;/h1&gt;
&lt;h2 id=&#34;11-app-registration&#34;&gt;1.1 App registration&lt;/h2&gt;
&lt;p&gt;First of all, as we want to access public data from Github, we need to register an app with authentication to do that. This will allow us to have no limit of calls.
So go to &lt;a href=&#34;https://developer.github.com/program/&#34; title=&#34;github developer program page&#34;&gt;github developer program page&lt;/a&gt; and click on &lt;strong&gt;Register now&lt;/strong&gt;. Then select an account and in &lt;strong&gt;Personal settings&lt;/strong&gt; tabs select &lt;strong&gt;Authorized applications&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;If you already have an authorized aplication to access gitHub API, you must see it here. Otherwise if you don&amp;rsquo;t have any registered app, then go to &lt;strong&gt;OAuth applications&lt;/strong&gt; and click on &lt;strong&gt;Register a new application&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;There you have to register your new application, giving it a name, a description&amp;hellip; Fill the fields and in &lt;strong&gt;Callback URL&lt;/strong&gt; enter &lt;a href=&#34;http://localhost:1410/&#34; title=&#34;localhost:1410&#34;&gt;localhost:1410&lt;/a&gt; which is the URL that github will return once the app is authenticated.&lt;/p&gt;
&lt;p&gt;Now you have registered your app, the &lt;strong&gt;Client ID&lt;/strong&gt; and &lt;strong&gt;Client Secret&lt;/strong&gt; for your app will be generated. You can see them clicking on &lt;strong&gt;OAuth applications -&amp;gt; Your App&lt;/strong&gt;. Remember to keep them secret and safe!&lt;/p&gt;
&lt;p&gt;Wow! you&amp;rsquo;re now a member of the developer program. The next thing we will do is installing the R packages we are going to use to work with gitHub from &lt;a href=&#34;https://elbauldelprogramador.com/en/tags/r/&#34; title=&#34;R&#34;&gt;R&lt;/a&gt;.&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;h2 id=&#34;12-packages-installation&#34;&gt;1.2 Packages installation&lt;/h2&gt;
&lt;p&gt;We will use the version 3 of GitHub API to access data &lt;a href=&#34;https://developer.github.com/v3/&#34; title=&#34;github v3 API&#34;&gt;github v3 API&lt;/a&gt;. As all the data from the API will be received in JSON format, we are going to use the function &lt;code&gt;fromJSON&lt;/code&gt; which will let us use the API url directly, and will parse the JSON data returned to a data frame format. That function is on package &lt;code&gt;jsonlite&lt;/code&gt;, so we must install it if you don&amp;rsquo;t have it installed:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span class=&#34;nf&#34;&gt;install.packages&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#39;jsonlite&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;If you have not installed &lt;code&gt;stringr&lt;/code&gt; package, install it as we just do with &lt;code&gt;jsonlite&lt;/code&gt;. We are using it to make some common operations on strings. Install &lt;code&gt;ggplot2&lt;/code&gt; if you have not, too. We must use it to make the graphics, and install &lt;code&gt;httpuv&lt;/code&gt;, a package to work with HTTP.&lt;/p&gt;
&lt;p&gt;For connecting to the GitHub app, we will need to install &lt;code&gt;rgithub&lt;/code&gt; package. We do it directly from github source code. Note that it have a dependency on package &lt;code&gt;devtools&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span class=&#34;nf&#34;&gt;require&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;devtools&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;install_github&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;cscheid/rgithub&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;After installing, load the packages:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# load libraries&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;library&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;github&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;library&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;jsonlite&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;library&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;stringr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;library&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ggplot2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;13-authenticate-the-access&#34;&gt;1.3 Authenticate the access&lt;/h2&gt;
&lt;p&gt;We will need to authenticate the access, and we will do it through the function &lt;code&gt;interactive.login&lt;/code&gt; from the &lt;code&gt;rgithub&lt;/code&gt; package, passing to it our &lt;strong&gt;ID&lt;/strong&gt; and &lt;strong&gt;secret&lt;/strong&gt;. My recommendation to you is to put that lines in a separate file and not share it with anyone or anywhere.
Then just source the file when you need to authenticate, or just execute its lines.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# github app autentication&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;clientID&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;your_client_id_goes_here&amp;#34;&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;clientSecret&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;your_secret_goes_here&amp;#34;&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;context&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;interactive.login&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;clientID&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;clientSecret&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;2-get-your-friends-info&#34;&gt;2. Get your friends info&lt;/h1&gt;
&lt;p&gt;Now you&amp;rsquo;re authenticated, lets get your followers on GitHub. The function &lt;code&gt;get.my.followers&lt;/code&gt; will give us the people following us and some info about them:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# get your followers&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;myFollowers&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;get.my.followers&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;context&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;we can easily check how many people is following us using &lt;code&gt;length&lt;/code&gt; function:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# get number of my followers&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;numFollowing&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;length&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;myFollowers&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;content&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Now we have our followers, lets create a dataframe to store all the info returned. First, we extract each content line in &lt;em&gt;myFollowers&lt;/em&gt; list, and append them in a &lt;em&gt;dataset&lt;/em&gt; variable using &lt;code&gt;rbind&lt;/code&gt; function:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# create a dataset with your followers&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;dataset&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;unlist&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;myFollowers&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;content[[1]]&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;nf&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;length&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;myFollowers&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;content&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)){&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;dataset&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;rbind&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dataset&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;unlist&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;myFollowers&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;content[[i]]&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Then we make it a data frame, name the columns as they were originally named in &lt;em&gt;myFollowers$content&lt;/em&gt; list and save it as a csv for later use:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# create a data frame and save it for later use&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;dataset&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;unname&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dataset&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;dataset&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;as.data.frame&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dataset&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;colnames&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dataset&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;names&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;myFollowers&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;content[[1]]&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;write.csv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dataset&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;file&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;CrisFollowers.csv&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Obviously you can save it with whatever name you like. But don&amp;rsquo;t forget the extension.&lt;/p&gt;
&lt;h1 id=&#34;3-get-our-friends-repositories-information-and-create-a-new-dataset&#34;&gt;3. Get our friends&amp;rsquo; repositories information and create a new dataset&lt;/h1&gt;
&lt;p&gt;As you sure have seen, in the last information we extracted, there&amp;rsquo;s info about our followers name, id, avatar, type, and some url of interest. However, that info doesn&amp;rsquo;t includes our friends repositories info as repo name, repo language, repo lines of code&amp;hellip;&lt;/p&gt;
&lt;p&gt;That info is fundamental to make our analysis, so we must get it. If you have took a look to the latest extracted data, you must have realized that there&amp;rsquo;s a column named &lt;strong&gt;repos_url&lt;/strong&gt; which tells us that the url to get the repos from a user is __&lt;a href=&#34;https://api.github.com/users/user/repos__&#34;&gt;https://api.github.com/users/user/repos__&lt;/a&gt; . For example, to get my repos information we should call __&lt;a href=&#34;https://api.github.com/users/CritinaHG/repos__&#34;&gt;https://api.github.com/users/CritinaHG/repos__&lt;/a&gt; , and we will get the data in JSON format from the API.&lt;/p&gt;
&lt;p&gt;So we are getting that data for each of our followers, by reading the already created dataset and getting our followers names, composing their repo url and parsing the returned data from the API using the &lt;code&gt;fromJSON&lt;/code&gt; function:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# read latest created csv&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;myFriends&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;read.csv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;CrisFollowers.csv&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# extract the names&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;unname&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;as.character&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;myFriends&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;login&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# extract data from friends&amp;#39; public repositories&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;compdata&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;NULL&lt;/span&gt;

&lt;span class=&#34;nf&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;nrow&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;myFriends&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)){&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;fromJSON&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;paste0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;https://api.github.com/users/&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;str_trim&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;unname[i]&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;side&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;both&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;/repos?clientID&amp;amp;clientSecret&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
  &lt;span class=&#34;nf&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;length&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;){&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;data[&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;-4&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;]&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;compdata&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;rbind&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;compdata&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# write data for reuse&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;write.csv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;compdata&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;UsersWithRepoInfo.csv&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;In &lt;strong&gt;clientID&lt;/strong&gt; and &lt;strong&gt;clientSecret&lt;/strong&gt; you should put your ID and secret generated at the begining of the post. It is not necesary but this will let us avoid request limitations. We remove the 4º column because it has redundant data. Whith &lt;code&gt;rbind&lt;/code&gt; function we are appending the new data obtained to the existing one.&lt;/p&gt;
&lt;h1 id=&#34;4-lets-do-some-data-processing&#34;&gt;4. Lets do some data processing&lt;/h1&gt;
&lt;p&gt;Lets read (if you have not read it yet) the dataset : &lt;code&gt;activeFriends&amp;lt;-read.csv(&amp;quot;UsersWithRepoInfo.csv&amp;quot;)&lt;/code&gt; We are going to perform some transformations over it to make data more readable for the analysis in R.&lt;/p&gt;
&lt;p&gt;First, as the data timezone is UTC+2 (also Madrid timezone) we need to set the timezone parameter. Let&amp;rsquo;s build a function to do that and apply it to every date column:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# make date format supported by R&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;date.format&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;datestring&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;){&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;date&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;as.POSIXct&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;datestring&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;format&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;%Y-%m-%d %H:%M:%S&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tz&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Europe/Madrid&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;usetz&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;TRUE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# update dates with new format&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;activeFriends&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;created_at&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;date.format&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;activeFriends&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;created_at&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;activeFriends&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;updated_at&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;date.format&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;activeFriends&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;updated_at&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;activeFriends&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pushed_at&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;date.format&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;activeFriends&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pushed_at&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Feel free to explore the dataset. You will have noticed that there&amp;rsquo;re some very interesting columns for our analysis, and others that are not so. Next we are doing is selecting the most interesting columns for our analysis:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# selecting just the interesting cols&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;activeFriends&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;activeFriends[&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;full_name&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;private&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;description&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;fork&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;created_at&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;updated_at&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;pushed_at&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;homepage&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;size&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;stargazers_count&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;watchers_count&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;language&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;                             &lt;span class=&#34;s&#34;&gt;&amp;#34;has_issues&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;has_downloads&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;forks_count&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;open_issues_count&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;forks&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;open_issues&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;watchers&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Now binarize the columns which have True and False values:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span class=&#34;n&#34;&gt;activeFriends&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;private&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;as.integer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;activeFriends&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;private&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;activeFriends&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;has_issues&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;as.integer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;activeFriends&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;has_issues&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;activeFriends&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fork&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;as.integer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;activeFriends&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fork&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;activeFriends&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;has_downloads&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;as.integer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;activeFriends&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;has_downloads&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Finally, in the &lt;code&gt;full_name&lt;/code&gt; column we must just get the user name, because the repos names are already included in &lt;code&gt;name&lt;/code&gt; column. It can be achieved by spliting each item by the slash, and getting the first:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# Getting the username&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;activeFriends&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;full_name&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;unlist&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;lapply&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;strsplit&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;as.character&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;activeFriends&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;full_name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;split&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#39;/&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fixed&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;TRUE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x[1]&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Save it if you want, for later reuse.&lt;/p&gt;
&lt;h1 id=&#34;5-analizing-programming-language-popularity&#34;&gt;5. Analizing programming language popularity&lt;/h1&gt;
&lt;p&gt;We can get a first understanding of the data distribution like the mean, median, max or min of each column using &lt;code&gt;summary&lt;/code&gt; over our dataset. That is just an example of the output for my community, showing the metrics for the first columns:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span class=&#34;nf&#34;&gt;summary&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;activeFriends&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
       &lt;span class=&#34;n&#34;&gt;id&lt;/span&gt;                 &lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;      &lt;span class=&#34;n&#34;&gt;full_name&lt;/span&gt;            &lt;span class=&#34;n&#34;&gt;private&lt;/span&gt;                                                                      &lt;span class=&#34;n&#34;&gt;description&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;Min.&lt;/span&gt;   &lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;2054512&lt;/span&gt;   &lt;span class=&#34;n&#34;&gt;IV&lt;/span&gt;      &lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;  &lt;span class=&#34;m&#34;&gt;4&lt;/span&gt;   &lt;span class=&#34;n&#34;&gt;Length&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;524&lt;/span&gt;         &lt;span class=&#34;n&#34;&gt;Min.&lt;/span&gt;   &lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;   &lt;span class=&#34;n&#34;&gt;Asignatura&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;de&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;infraestructuras&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;virtuales&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;para&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;el&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Grado&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;de&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Informática&lt;/span&gt;     &lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;  &lt;span class=&#34;m&#34;&gt;4&lt;/span&gt;
&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;st&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Qu.&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;32878832&lt;/span&gt;   &lt;span class=&#34;n&#34;&gt;blog&lt;/span&gt;    &lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;  &lt;span class=&#34;m&#34;&gt;3&lt;/span&gt;   &lt;span class=&#34;n&#34;&gt;Class&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;character&lt;/span&gt;   &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;st&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Qu.&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;   &lt;span class=&#34;n&#34;&gt;Repositorio&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;para&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;la&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;asignatura&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Infraestructura&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Virtual&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;de&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;2016-2017&lt;/span&gt;       &lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;  &lt;span class=&#34;m&#34;&gt;3&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;Median&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;51252063&lt;/span&gt;   &lt;span class=&#34;n&#34;&gt;DAI&lt;/span&gt;     &lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;  &lt;span class=&#34;m&#34;&gt;3&lt;/span&gt;   &lt;span class=&#34;n&#34;&gt;Mode&lt;/span&gt;  &lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;character&lt;/span&gt;   &lt;span class=&#34;n&#34;&gt;Median&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;   &lt;span class=&#34;n&#34;&gt;An&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;example&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;repo&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Ruby&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;continuous&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;integration&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;with&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Travis&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;CI&lt;/span&gt;         &lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;  &lt;span class=&#34;m&#34;&gt;2&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;Mean&lt;/span&gt;   &lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;51191269&lt;/span&gt;   &lt;span class=&#34;n&#34;&gt;IV16&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;-17&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;  &lt;span class=&#34;m&#34;&gt;3&lt;/span&gt;                      &lt;span class=&#34;n&#34;&gt;Mean&lt;/span&gt;   &lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;   &lt;span class=&#34;n&#34;&gt;Curso&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;de&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;LaTeX&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;organizado&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;por&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;AMAT&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;para&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;alumnos&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;de&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Trabajo&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;de&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Fin&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;de&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Grado&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;  &lt;span class=&#34;m&#34;&gt;2&lt;/span&gt;
&lt;span class=&#34;m&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;rd&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Qu.&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;70082791&lt;/span&gt;   &lt;span class=&#34;n&#34;&gt;swap1415&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;  &lt;span class=&#34;m&#34;&gt;3&lt;/span&gt;                      &lt;span class=&#34;m&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;rd&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Qu.&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;   &lt;span class=&#34;n&#34;&gt;Diferentes&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;scripts&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;para&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;representación&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;de&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;carreras&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;en&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;cifras&lt;/span&gt;              &lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;  &lt;span class=&#34;m&#34;&gt;2&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;Max.&lt;/span&gt;   &lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;88848228&lt;/span&gt;   &lt;span class=&#34;n&#34;&gt;TFG&lt;/span&gt;     &lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;  &lt;span class=&#34;m&#34;&gt;3&lt;/span&gt;                      &lt;span class=&#34;n&#34;&gt;Max.&lt;/span&gt;   &lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;   &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Other&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;                                                                   &lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;404&lt;/span&gt;
                   &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Other&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;505&lt;/span&gt;                                  &lt;span class=&#34;kc&#34;&gt;NA&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;s                                                                      :107&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Now lets dive into what concern us: see what programming languages are being used in our friends&amp;rsquo; community, and how much they&amp;rsquo;re used. For that purpose we can start creating a contingency table to give ourselves a quick look at our answer:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span class=&#34;n&#34;&gt;languagesAndUse&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;table&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;activeFriends&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;language&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;languagesAndUse&lt;/span&gt;

         &lt;span class=&#34;n&#34;&gt;Arduino&lt;/span&gt;                &lt;span class=&#34;n&#34;&gt;C&lt;/span&gt;               &lt;span class=&#34;n&#34;&gt;C&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;#              C++            CLIPS              CSS             Dart&lt;/span&gt;
               &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;               &lt;span class=&#34;m&#34;&gt;13&lt;/span&gt;                &lt;span class=&#34;m&#34;&gt;7&lt;/span&gt;               &lt;span class=&#34;m&#34;&gt;55&lt;/span&gt;                &lt;span class=&#34;m&#34;&gt;5&lt;/span&gt;               &lt;span class=&#34;m&#34;&gt;19&lt;/span&gt;                &lt;span class=&#34;m&#34;&gt;2&lt;/span&gt;
      &lt;span class=&#34;n&#34;&gt;Emacs&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Lisp&lt;/span&gt;              &lt;span class=&#34;n&#34;&gt;GAP&lt;/span&gt;         &lt;span class=&#34;n&#34;&gt;GDScript&lt;/span&gt;               &lt;span class=&#34;n&#34;&gt;Go&lt;/span&gt;           &lt;span class=&#34;n&#34;&gt;Groovy&lt;/span&gt;          &lt;span class=&#34;n&#34;&gt;Haskell&lt;/span&gt;             &lt;span class=&#34;n&#34;&gt;HTML&lt;/span&gt;
               &lt;span class=&#34;m&#34;&gt;2&lt;/span&gt;                &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;                &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;                &lt;span class=&#34;m&#34;&gt;3&lt;/span&gt;                &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;                &lt;span class=&#34;m&#34;&gt;2&lt;/span&gt;               &lt;span class=&#34;m&#34;&gt;48&lt;/span&gt;
            &lt;span class=&#34;n&#34;&gt;Java&lt;/span&gt;       &lt;span class=&#34;n&#34;&gt;JavaScript&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Jupyter&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Notebook&lt;/span&gt;              &lt;span class=&#34;n&#34;&gt;Lex&lt;/span&gt;              &lt;span class=&#34;n&#34;&gt;Lua&lt;/span&gt;         &lt;span class=&#34;n&#34;&gt;Makefile&lt;/span&gt;      &lt;span class=&#34;n&#34;&gt;Mathematica&lt;/span&gt;
              &lt;span class=&#34;m&#34;&gt;60&lt;/span&gt;               &lt;span class=&#34;m&#34;&gt;67&lt;/span&gt;                &lt;span class=&#34;m&#34;&gt;3&lt;/span&gt;                &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;                &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;                &lt;span class=&#34;m&#34;&gt;6&lt;/span&gt;                &lt;span class=&#34;m&#34;&gt;2&lt;/span&gt;
             &lt;span class=&#34;n&#34;&gt;PHP&lt;/span&gt;       &lt;span class=&#34;n&#34;&gt;PostScript&lt;/span&gt;           &lt;span class=&#34;n&#34;&gt;Prolog&lt;/span&gt;           &lt;span class=&#34;n&#34;&gt;Python&lt;/span&gt;                &lt;span class=&#34;n&#34;&gt;R&lt;/span&gt;             &lt;span class=&#34;n&#34;&gt;Ruby&lt;/span&gt;            &lt;span class=&#34;n&#34;&gt;Scala&lt;/span&gt;
               &lt;span class=&#34;m&#34;&gt;8&lt;/span&gt;                &lt;span class=&#34;m&#34;&gt;2&lt;/span&gt;                &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;               &lt;span class=&#34;m&#34;&gt;56&lt;/span&gt;               &lt;span class=&#34;m&#34;&gt;12&lt;/span&gt;               &lt;span class=&#34;m&#34;&gt;24&lt;/span&gt;                &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;
           &lt;span class=&#34;n&#34;&gt;Shell&lt;/span&gt;              &lt;span class=&#34;n&#34;&gt;TeX&lt;/span&gt;       &lt;span class=&#34;n&#34;&gt;TypeScript&lt;/span&gt;
               &lt;span class=&#34;m&#34;&gt;7&lt;/span&gt;               &lt;span class=&#34;m&#34;&gt;38&lt;/span&gt;                &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;With &lt;code&gt;nrow(languagesAndUse)&lt;/code&gt; we can get the number of different languages our friends are using. For mine it is 31.
We can also see that there are many repos with &lt;em&gt;JavaScript&lt;/em&gt; code between my 30 friends, however &lt;em&gt;Scala&lt;/em&gt;, &lt;em&gt;Lua&lt;/em&gt;, &lt;em&gt;Arduino&lt;/em&gt;, &lt;em&gt;TypeScript&lt;/em&gt;, &lt;em&gt;Groovy&lt;/em&gt;, &lt;em&gt;Lex&lt;/em&gt;, &lt;em&gt;Prolog&lt;/em&gt;, &lt;em&gt;GDScript&lt;/em&gt;&amp;hellip; each one of these seems to have been used just for one person in my community.&lt;/p&gt;
&lt;p&gt;Finally, we use &lt;code&gt;qplot&lt;/code&gt; from &lt;code&gt;ggplot2&lt;/code&gt; package to plot an hibstogram representation of the usage of langugages in our github community:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span class=&#34;n&#34;&gt;languages&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;na.omit&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;activeFriends&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;language&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;langUssage&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;qplot&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;languages&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;geom&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;bar&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;xlab&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Language&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ylab&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Usage&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fill&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;I&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;cornflowerblue&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;langUssage&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;theme&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;axis.text.x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;element_text&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;angle&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;90&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;hjust&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;ggtitle&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Programming languages used by my friends&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;theme&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;plot.title&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;element_text&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;hjust&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0.5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Where we use &lt;code&gt;na.omit&lt;/code&gt; to omit from data representation those languages which are NA (cannot have been extracted). The resulting hibstogram is the following:&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;So, as we can see, in the representation, &lt;em&gt;JavaScript&lt;/em&gt; is the language most used with 67 repos containing &lt;em&gt;JavaScript&lt;/em&gt; code. Then &lt;a href=&#34;https://elbauldelprogramador.com/en/tags/java&#34;&gt;&lt;em&gt;Java&lt;/em&gt;&lt;/a&gt;, &lt;em&gt;C++&lt;/em&gt; and &lt;a href=&#34;https://elbauldelprogramador.com/en/tags/python&#34;&gt;&lt;em&gt;Python&lt;/em&gt;&lt;/a&gt; are also very popular in my community.&lt;/p&gt;
&lt;p&gt;We find that &lt;em&gt;Tex&lt;/em&gt; code is in 38 repositories, so &lt;a href=&#34;https://elbauldelprogramador.com/en/tags/latex&#34;&gt;&lt;em&gt;LaTeX&lt;/em&gt;&lt;/a&gt; is also very present in my friends&amp;rsquo; community. They&amp;rsquo;re also many repos with &lt;em&gt;HTML&lt;/em&gt;, and much more less with &lt;em&gt;CSS&lt;/em&gt;, &lt;em&gt;Ruby&lt;/em&gt;, &lt;em&gt;R&lt;/em&gt; and &lt;em&gt;C&lt;/em&gt; code. Then come some languages not loved that much by the people such as &lt;em&gt;PHP&lt;/em&gt;, &lt;em&gt;C#&lt;/em&gt; or &lt;em&gt;CLIPS&lt;/em&gt; that are contained in less than 10 repositories.&lt;/p&gt;
&lt;p&gt;Finally, we can see that there&amp;rsquo;re less than 5 repos with &lt;em&gt;Dart&lt;/em&gt;, &lt;em&gt;Go&lt;/em&gt;,&lt;em&gt;Haskell&lt;/em&gt;, &lt;em&gt;Jupyter&lt;/em&gt;, &lt;em&gt;PostScript&lt;/em&gt; and &lt;em&gt;Mathematica&lt;/em&gt; code, and just one using &lt;a href=&#34;https://elbauldelprogramador.com/en/tags/scala&#34;&gt;&lt;em&gt;Scala&lt;/em&gt;&lt;/a&gt;, &lt;em&gt;Groovy&lt;/em&gt;, &lt;em&gt;Lua&lt;/em&gt; or &lt;em&gt;TypeScript&lt;/em&gt;. So that answers my own question: as my favorite programming language is Scala, I wanted to know if my friends use it too.&lt;/p&gt;
&lt;p&gt;So What happens in your friends community?
Are the languages used similarly than in my friends&amp;rsquo; community? Is JavaScript also the top used language?&lt;/p&gt;
&lt;h1 id=&#34;references&#34;&gt;References:&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;!-- raw HTML omitted --&gt;Mastering Social Media Mining with R&lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
        </item>
        
    </channel>
</rss>
