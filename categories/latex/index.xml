<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Latex on El Baúl del programador</title>
        <link>https://elbauldelprogramador.com/categories/latex/</link>
        <description>Recent content in Latex on El Baúl del programador</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>es-ES</language>
        <lastBuildDate>Fri, 29 Sep 2017 13:26:02 +0100</lastBuildDate>
        <image>
            <url>https://elbauldelprogramador.com/img/bio-photo-rss.png</url>
            <link>https://elbauldelprogramador.com/categories/latex/</link>
            <title>Latex on El Baúl del programador</title>
            <width>144</width>
            <height>144</height>
        </image>
        <atom:link href="https://elbauldelprogramador.com/categories/latex/" rel="self" type="application/rss+xml" />
        
        <item>
            <title>Mini Curso de LaTeX - Figuras, Enlaces y cabeceras</title>
            <link>https://elbauldelprogramador.com/curso-de-latex-figuras-enlaces-y-cabeceras/</link>
            <pubDate>Fri, 29 Sep 2017 13:26:02 +0100</pubDate>
            
            <guid>https://elbauldelprogramador.com/curso-de-latex-figuras-enlaces-y-cabeceras/</guid>
            <description>&lt;figure&gt;
    &lt;a href=&#34;https://elbauldelprogramador.com/img/2013/05/latex_logo.png&#34;&gt;&lt;img sizes=&#34;(min-width: 300px) 300px, 100vw&#34; on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/2013/05/latex_logo.png&#34; title=&#34;Mini Curso de LaTeX - Figuras, Enlaces y cabeceras&#34; alt=&#34;Mini Curso de LaTeX - Figuras, Enlaces y cabeceras&#34; width=&#34;300px&#34; height=&#34;114px&#34; /&gt;&lt;/a&gt;
&lt;/figure&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://elbauldelprogramador.com/mini-curso-de-latex-introduccion/&#34; title=&#34;Mini Curso de LaTeX – Introducción&#34;&gt;Mini Curso de LaTeX - Introducción&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://elbauldelprogramador.com/curso-de-latex-incluir-codigo-fuente-y-simbolos-matematicos/&#34; title=&#34;Mini Curso de LaTeX – Incluir código fuente y símbolos matemáticos&#34;&gt;Mini Curso de LaTeX - Incluir código fuente y símbolos matemáticos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Mini Curso de LaTeX - Figuras, Enlaces y cabeceras&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;mini-curso-de-latex&#34;&gt;Mini curso de Latex&lt;/h1&gt;

&lt;p&gt;Tras haber terminado nuestra sección del análisis de la eficiencia, ahora nos piden que pongamos un pantallazo con la salida del programa en terminal. Para ello, vamos a usar dos herramientas:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Los &lt;strong&gt;enlaces&lt;/strong&gt;: con esta herramienta podemos referenciar cualquier parte de nuestro documento con un sólo click, es decir, como si fuera un enlace en una página web. Lo vamos a usar para referenciar a nuestro código.&lt;/li&gt;
&lt;li&gt;La orden &lt;strong&gt;figure&lt;/strong&gt;: para insertar nuestra imagen.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Para colocar un enlace en nuestro documento, debemos hacer dos cosas:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Poner una &lt;strong&gt;etiqueta&lt;/strong&gt; en el lugar que queramos referenciar.&lt;/li&gt;
&lt;li&gt;Poner un &lt;strong&gt;enlace&lt;/strong&gt; a esa etiqueta donde queramos referenciarla.&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&#34;enlaces&#34;&gt;Enlaces&lt;/h1&gt;

&lt;p&gt;Para ello, ponemos justo al inicio de la sección &lt;em&gt;Código del programa&lt;/em&gt; lo siguiente:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-latex&#34; data-lang=&#34;latex&#34;&gt;\label{codigo_programa}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Y justo al inicio de la sección Salida del programa esto otro:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-latex&#34; data-lang=&#34;latex&#34;&gt;\hyperref[codigo_programa]{texto del enlace}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Este sería el resultado final:&lt;/p&gt;

&lt;p&gt;&lt;!--ad--&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-latex&#34; data-lang=&#34;latex&#34;&gt;\newpage
\section{Salida del programa}
\noindent
La salida por terminal que obtener al ejecutar el \hyperref[codigo_programa]{programa} es la siguiente:&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Debemos compilar dos veces para que LaTeX establezca bien los enlaces, y tras compilar dos veces, si hacemos click sobre programa nos llevará al código de nuestro programa.&lt;/p&gt;

&lt;h1 id=&#34;incluir-imágenes-en-el-documento&#34;&gt;Incluir imágenes en el documento&lt;/h1&gt;

&lt;p&gt;Ahora vamos a ver como introducir una imagen en nuestro documento. Debemos tenerla en la misma carpeta que nuestro arhivo .tex, y para insertarla usamos la orden figure e includegraphics, cuya sintaxis es:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-latex&#34; data-lang=&#34;latex&#34;&gt;\begin{figure}[opciones donde insertar la imagen]
\centering % si queremos la imagen centrada
\includegraphics[opciones de tamaño]{imagen}
\caption{texto a poner debajo de la imagen}
\end{figure}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Para usar includegraphics debemos incluir el siguiente paquete en la cabecera:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-latex&#34; data-lang=&#34;latex&#34;&gt;\usepackage{graphicx} % para incluir imágenes en nuestro código&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Respecto a las opciones de tamaño, son las siguientes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;width&lt;/strong&gt; : para escalar las imágenes un determinado ancho&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;height&lt;/strong&gt; : para escalar las imágenes un determinado alto&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;angle&lt;/strong&gt; : para rotar las imagenes según las agujas del reloj&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;scale&lt;/strong&gt; : para escalar imágenes&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Respecto a las opciones sobre donde insertar la imagen, pueedn ser las siguientes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;h&lt;/strong&gt;: Insertar la imagen justo aquí (&lt;em&gt;here&lt;/em&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;b&lt;/strong&gt;: Insertar la imagen al final de la página (&lt;em&gt;bottom&lt;/em&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;t&lt;/strong&gt;: Insertar la imagen al principio de la página (&lt;em&gt;top&lt;/em&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;p&lt;/strong&gt;: Insertar la imagen en una página especial que contenga otras figuras o imágenes (&lt;em&gt;p&lt;/em&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;!&lt;/strong&gt;: Insertar la imagen sin considerar las opciones de LaTeX (como por ejemplo, el número máximo de figuras por página) que podrían hacer que no se insertara la imagen donde queremos.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Estos parámetros también nos valen para las tablas. También podemos combinarlos o establecer una jerarquía. Por ejemplo:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-latex&#34; data-lang=&#34;latex&#34;&gt;\begin{table}[!hbp]&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Así, permitimos a LaTeX poner la tabla justo aquí (&lt;code&gt;h&lt;/code&gt;), o al final de la página (&lt;code&gt;b&lt;/code&gt;) o en una página especial para tablas, incluso si no queda bien (!). Si no se da ninguna opción, por defecto se asume &lt;code&gt;[tbp]&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Sobre la orden &lt;code&gt;\caption{texto}&lt;/code&gt;, nos sirve para describir un poco la imagen, o la tabla en cuestión. LaTeX añadirá por su cuenta el &amp;#8220;Figure&amp;#8221; o &amp;#8220;Table&amp;#8221; más un número para identificarla. También podemos hacer un índice de figuras o tablas con los comandos &lt;code&gt;\listoffigures&lt;/code&gt; y &lt;code&gt;\listoftables&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Después de este pequeño repaso de teoría, vamos a insertar nuestra imagen en el documento, en mi caso, la imagen se llama 1:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-latex&#34; data-lang=&#34;latex&#34;&gt;\begin{figure}[!h]
\centering
\includegraphics[width=1\textwidth]{1}
\caption{Salida por terminal del programa}
\end{figure}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1 id=&#34;cabeceras-de-los-documentos&#34;&gt;Cabeceras de los documentos&lt;/h1&gt;

&lt;p&gt;Y por último, vamos a personalizar un poco nuestro documento, aunque ya hay un &lt;a href=&#34;https://elbauldelprogramador.com/como-crear-un-pie-de-pagina-en-latex-con-fancyhdr/&#34; title=&#34;Pie de página con FancyHdr&#34;&gt;post&lt;/a&gt; sobre esto en El baúl del programador, para poner una cabecera y un pie de página a nuestro gusto. Para ello, usamos el paquete &lt;strong&gt;fancyhdr&lt;/strong&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-latex&#34; data-lang=&#34;latex&#34;&gt;\usepackage{fancyhdr} % para personalizar la cabecera y el pie de pagina&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;También debemos establecer el estilo de página a &lt;strong&gt;fancy&lt;/strong&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-latex&#34; data-lang=&#34;latex&#34;&gt;\pagestyle{fancy}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;También, para ver el uso de dos paquetes muy útiles, vamos a darle color a nuestra cabecera y además, vamos a numerar las páginas con el estilo: &amp;#8220;página x de n&amp;#8221;, para ello incluimos también el paquete &lt;strong&gt;color&lt;/strong&gt; (que habíamos incluido al principio) y el paquete &lt;strong&gt;lastpage&lt;/strong&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-latex&#34; data-lang=&#34;latex&#34;&gt;\usepackage{lastpage} % para saber el numero de pagina del documento&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Vamos a empezar personalizando la cabecera, para ello usamos el siguiente comando:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-latex&#34; data-lang=&#34;latex&#34;&gt;\fancyhead[opciones de localizacion]{la salida que quieras}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Donde las opciones de localización son E, O, L, C y R.&lt;/p&gt;

&lt;p&gt;En nuestro código, vamos a hacer lo siguiente:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-latex&#34; data-lang=&#34;latex&#34;&gt;% CABECERA
% el nombre del autor en la izquierda de las paginas pares y a la derecha de las paginas impares
\fancyhead[LE,RO]{\textcolor[rgb]{0.5,0.2,0.6}{Marta Gómez}}
\fancyhead[RE,LO]{\textcolor[rgb]{0.2,0.2,0.9}{\date{\today}}} % en el lado contrario, la fecha

% PIE DE PAGINA
% en la parte central del pie de pagina el numero de pagina actual y un enlace a la ultima pagina
\fancyfoot[C]{\textcolor[rgb]{0.2,0.4,0.5}{\thepage{} de} \pageref{LastPage}}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Un último detale: si os habéis dado cuenta, los links tal y como tenemos el documento actualmente quedan muy feos, ¿verdad?. Para cambiar eso, debemos modificar algunas opciones del paquete &lt;code&gt;hyperref&lt;/code&gt; que incluímos antes, en concreto estas dos:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;colorlinks=true&lt;/strong&gt;: con esta opción establecemos que queremos cambiar el color de los links, al activarla, por defecto nuestros links se quedan de color rojo.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;linkcolor&lt;/strong&gt;: y con esta, establecemos el color. Podemos ponerle valores como red, blue, green&amp;#8230;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Así, nuestro paquete &lt;code&gt;hyperref&lt;/code&gt; quedaría de la siguiente forma:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-latex&#34; data-lang=&#34;latex&#34;&gt;\usepackage[colorlinks=true,linkcolor=magenta]{hyperref} % para poder poner &amp;#34;enlaces&amp;#34; en nuestro codigo&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1 id=&#34;compilar-el-documento-y-generar-el-pdf&#34;&gt;Compilar el documento y generar el PDF&lt;/h1&gt;

&lt;p&gt;Ahora que ya tenemos nuestro fichero escrito, ¿cómo lo convertimos a PDF?. Si usas Linux, tienes que bajarte el paquete &lt;code&gt;texlive&lt;/code&gt; y ejecutar en terminal el siguiente comando en el directorio donde tengas tu fichero .tex:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-latex&#34; data-lang=&#34;latex&#34;&gt;pdflatex nombrefichero.tex&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Y si usas el paquete &lt;code&gt;minted&lt;/code&gt; deberás incluir también:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-latex&#34; data-lang=&#34;latex&#34;&gt;pdflatex -shell-escape nombrefichero.tex&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1 id=&#34;editores-de-texto&#34;&gt;Editores de Texto&lt;/h1&gt;

&lt;p&gt;También tienes la opción de configurar tu editor de texto favorito con un plugin para compilar LaTeX directamente desde ahí. Para hacerlo en Sublime Text tienes que seguir los siguientes pasos:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Ve a Tools &amp;gt; build system &amp;gt; new build system&lt;/li&gt;
&lt;li&gt;Pega el siguiente código y guarda el archivo con el nombre que quieras:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-latex&#34; data-lang=&#34;latex&#34;&gt;{
    &amp;#34;cmd&amp;#34;: [&amp;#34;pdflatex&amp;#34;,&amp;#34;-shell-escape&amp;#34;,&amp;#34;$file_name&amp;#34;],
    &amp;#34;selector&amp;#34;: &amp;#34;text.tex.latex&amp;#34;
}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ol&gt;
&lt;li&gt;Cada vez que quieras compilar, presiona control+b, teniendo elegido el build system de LaTeX que has creado.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;En &lt;a href=&#34;https://elbauldelprogramador.com/instalar-atom-el-editor-de-github-en-linux/&#34; title=&#34;Instalar ATOM&#34;&gt;Atom&lt;/a&gt; hay un paquete para compilar LaTeX pulsando control+alt+b.&lt;/p&gt;

&lt;p&gt;Si trabajáis en Windows, probad a trabajar con un programa llamado &lt;a href=&#34;http://miktex.org/&#34; title=&#34;MikTeX&#34;&gt;MikTeX&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Y para Mac OS X, si no tengo mal entendido, podéis usar cualquiera de las dos alternativas.&lt;/p&gt;

&lt;p&gt;Y con esto, ya tenemos un portafolios de prácticas bonito, bien presentado y estructurado. Por supuesto, con LaTeX se pueden hacer muchas más cosas, pero no me he querido meter muy a fondo en un curso introductorio.&lt;/p&gt;

&lt;p&gt;Espero que os haya gustado este curso y os haya servido como base para aprender LaTeX, podéis consultar el fichero fuente que he utilizado yo en &lt;a href=&#34;https://github.com/mgmacias95/CursoLaTex/&#34; title=&#34;github&#34;&gt;github&lt;/a&gt; (también os he incluido en el repositorio el fichero .h y la imagen para que lo podáis compilar y trastear con él todo lo que queráis).&lt;/p&gt;

&lt;p&gt;Quiero despedirme no sin antes dedicar todo esto a mi profesor, Francisco Miguel García, ya que sin su ayuda seguramente aún seguiría haciendo mis documentos con el Microsoft Word y a mi amigo, Alejandro Alcalde, por dejarme publicarlo en su blog y llegar así a más gente.&lt;/p&gt;

&lt;p&gt;¡Nos vemos en próximas entradas!&lt;/p&gt;

&lt;p&gt;Marta.&lt;/p&gt;</description>
        </item>
        
        <item>
            <title>Mini Curso de LaTeX - Incluir código fuente y símbolos matemáticos</title>
            <link>https://elbauldelprogramador.com/curso-de-latex-incluir-codigo-fuente-y-simbolos-matematicos/</link>
            <pubDate>Fri, 29 Sep 2017 13:25:50 +0100</pubDate>
            
            <guid>https://elbauldelprogramador.com/curso-de-latex-incluir-codigo-fuente-y-simbolos-matematicos/</guid>
            <description>&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://elbauldelprogramador.com/mini-curso-de-latex-introduccion/&#34; title=&#34;Mini Curso de LaTeX - Introducción&#34;&gt;Mini Curso de LaTeX - Introducción&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Mini Curso de LaTeX - Incluir código fuente y símbolos matemáticos&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://elbauldelprogramador.com/curso-de-latex-figuras-enlaces-y-cabeceras/&#34;&gt;Mini Curso de LaTeX - Figuras, Enlaces y cabeceras&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;mini-curso-de-latex&#34;&gt;Mini curso de Latex&lt;/h1&gt;

&lt;figure&gt;
    &lt;a href=&#34;https://elbauldelprogramador.com/img/2013/05/latex_logo.png&#34;&gt;&lt;img sizes=&#34;(min-width: 300px) 300px, 100vw&#34; on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/2013/05/latex_logo.png&#34; title=&#34;Mini Curso de LaTeX - Incluir código fuente y símbolos matemáticos&#34; alt=&#34;Mini Curso de LaTeX - Incluir código fuente y símbolos matemáticos&#34; width=&#34;300px&#34; height=&#34;114px&#34; /&gt;&lt;/a&gt;
&lt;/figure&gt;

&lt;p&gt;Continuando por donde lo dejamos en el último artículo, hoy veremos cómo incluir código fuente en el documento.&lt;/p&gt;

&lt;p&gt;Nuestra nueva sección se va a llamar:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-latex&#34; data-lang=&#34;latex&#34;&gt;\section{Código del programa}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Ahora, tras haber descrito brevemente lo que hace nuestro programa, vamos a proceder a enseñar el código. Hay varias alternativas para esto, mi favorita? El paquete &lt;strong&gt;minted&lt;/strong&gt;. En El baúl del programador ya hay una &lt;a href=&#34;https://elbauldelprogramador.com/resaltar-sintaxis-del-codigo-fuente-en-latex-con-minted/&#34; title=&#34;Intro a Minted&#34;&gt;pequeña guía&lt;/a&gt; sobre el uso de este paquete, así que no voy a explicarlo de manera muy extensa:&lt;/p&gt;

&lt;p&gt;&lt;!--ad--&gt;&lt;/p&gt;

&lt;h2 id=&#34;paquetes-necesarios&#34;&gt;Paquetes necesarios&lt;/h2&gt;

&lt;p&gt;Incluimos el paquete &lt;code&gt;minted&lt;/code&gt; en nuestra cabecera:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-latex&#34; data-lang=&#34;latex&#34;&gt;\usepackage{minted} % para resaltar código fuente&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Y ahora:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Si no tenemos nuestro código en un fichero aparte o si vamos a escribir muy poco código, podemos usar directamente el paquete con la siguiente sintaxis:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-latex&#34; data-lang=&#34;latex&#34;&gt;cout &amp;lt;&amp;lt; &amp;#34;Hola mundo&amp;#34; &amp;lt;&amp;lt; endl;
return 0;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1 id=&#34;añadir-ficheros&#34;&gt;Añadir ficheros&lt;/h1&gt;

&lt;ol&gt;
&lt;li&gt;Si, como en nuestro caso, tenemos el fichero en un fichero a parte podemos exportarlo directamente a nuestro documento, Copiando lo siguiente en nuestra cabecera:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-latex&#34; data-lang=&#34;latex&#34;&gt;\newmintedfile[micodigofuente]{milenguajedeprogramacion}{
    linenos,
    numbersep=5pt,
    gobble=0,
    frame=lines,
    framesep=2mm,
    tabsize=3,
}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Y esto justo en el sitio en el que quieras insertar tu código:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-latex&#34; data-lang=&#34;latex&#34;&gt;\micodigofuente[label=&amp;#34;nombredemifichero.extension&amp;#34;]{nombredemifichero.extension}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;En nuestro caso sería, insertar lo siguiente en la cabecera (porque estamos haciéndolo en c++):&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-latex&#34; data-lang=&#34;latex&#34;&gt;\newmintedfile[mycplusplus]{c++}{
    linenos, % muestra el número de línea
    numbersep=5pt, % separación entre el código y el número de línea
    gobble=0, % columna desde la que empieza a mostrar código
    frame=lines, % dibuja las líneas enmarcando el código
    framesep=2mm, % separación entre la línea y el código
    tabsize=3, % tamaño de la tabulación
}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;y esto en nuestro código:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-latex&#34; data-lang=&#34;latex&#34;&gt;\mycplusplus[label=&amp;#34;postfija.h&amp;#34;]{postfija.h}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Debéis tener cuidado con el paquete minted pues no hace saltos de línea si vuestro código es muy extenso, y además, no reconoce los carácteres acentuados ni la ñ.&lt;/p&gt;

&lt;p&gt;Tras esto, empezamos una nueva sección, en la que usaremos los paquetes y entornos matemáticos. No hace falta incluir ningún paquete, pues ya lo hemos incluido antes.&lt;/p&gt;

&lt;p&gt;Empezamos nueva sección, para ello:&lt;/p&gt;

&lt;h2 id=&#34;símbolos-matemáticos&#34;&gt;Símbolos matemáticos&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-latex&#34; data-lang=&#34;latex&#34;&gt;\newpage
\section{Análisis de la eficiencia del programa}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Así es, alguna vez tendremos que analizar la eficiencia de algún programa que hagamos, y para ello vamos a tener que hacer uso de las matemáticas. En este caso, vamos a imaginar que nos piden la eficiencia del algoritmo usado para pasar de notación infija a postfija, es decir, la función infija2postfija.&lt;/p&gt;

&lt;p&gt;Para analizar la eficiencia del algoritmo, tendremos que combinar matemáticas y texto. Para las matemáticas utilizaremos la orden &lt;code&gt;displaymath&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-latex&#34; data-lang=&#34;latex&#34;&gt;\noindent
En primer lugar, nos encontramos un for que va desde $i=0$ hasta $s.size()$,
donde $s.size()$ es el tamaño de string que contiene la operación aritmética
en notación infija. Este for equivaldría a la siguiente sumatoria, teniendo
en cuenta que todos las operaciones dentro del for tienen eficiencia $O(1)$:

\begin{displaymath}
\sum_{i=0}^{s.size()} = s.size(), \qquad\ \textrm{siendo $s.size()$
    el tamaño del string que contiene la operación aritmética}
\end{displaymath}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Para representar la sumatoria dentro del entorno matemático utilizamos la opción &lt;code&gt;\sum&lt;/code&gt;, después, utilizamos &lt;code&gt;_&lt;/code&gt; y &lt;code&gt;^&lt;/code&gt; para establecer los límites de la sumatoria. &lt;code&gt;\qquad\&lt;/code&gt; lo usamos para dejar un pequeño espacio (podemos usar &lt;code&gt;\quad&lt;/code&gt; o &lt;code&gt;\qquad\&lt;/code&gt;). Así, el texto de arriba quedaría \(\sum_{i=0}^{s.size()} = s.size()\)&lt;/p&gt;

&lt;p&gt;Otro detalle a destacar, es que en el párrafo de introducción, cuando menciono variables matemáticas, las menciono entre signos de dólar. Esto es para que salgan en cursiva y se puedan diferenciar del resto del texto.&lt;/p&gt;

&lt;p&gt;Seguimos analizando la eficiencia, y ahora recurrimos a la estructura &lt;code&gt;enumerate&lt;/code&gt; que vimos antes, pero con un &amp;ldquo;contador&amp;rdquo; un tanto especial:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-latex&#34; data-lang=&#34;latex&#34;&gt;\noindent
Ahora, vamos a proceder a analizar las operaciones dentro de dicho for:
\begin{enumerate}[$\heartsuit$]
    \item Tenemos en primer lugar una asignación, cuya eficiencia es $O(1)$
    \item Y después un if, como sabemos las comparaciones también tienen $O(1)$,
                    y dentro de dicho if una llamada a una función que lo único que
                    hace es añadir un elemento a la cola, por lo que también es $O(1)$.
    \item Luego tenemos un else, cuyas operaciones también tienen un coste
                    de $O(1)$ puesto que tanto Pila como Cola están implementadas
                    con celdas enlazadas.
\end{enumerate}

\noindent
Por tanto, tal y como dijimos antes, la eficiencia del bucle es de $O(s.size())$.&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Si os fijáis, la lista estará enumerada con corazones. Y si os fijáis un poco más, veréis que esos corazones son interpretados por LaTeX como símbolo matemático, pues están entre signos de dólar. Así, podemos usar cualquier signo matemático de los que LaTeX nos da para hacer nuestras listas más originales. Aquí os dejo una &lt;a href=&#34;http://web.ift.uib.no/Teori/KURS/WRK/TeX/symALL.html&#34; title=&#34;lista&#34;&gt;lista&lt;/a&gt; de algunos símbolos que podéis usar.&lt;/p&gt;

&lt;p&gt;Ahora seguiríamos con nuestro análisis de la eficiencia:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-latex&#34; data-lang=&#34;latex&#34;&gt;\noindent
Después, tenemos un pequeño bucle, en el que insertamos en la cola de la
operación postfija, los operadores con menos prioridad que han quedado en la pila.
Este bucle iría desde $0$ hasta $t$, siendo $t$ el tamaño de la pila.
Y se traduciría en la siguiente sumatoria:

\begin{displaymath}
\sum_0^t 1 = t
\end{displaymath}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Esta vez, los límites de la sumatoria estaban formados por un único carácter, por eso podemos poner &lt;code&gt;\sum_0^t&lt;/code&gt; en vez de &lt;code&gt;\sum_{0}^{t}&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Terminamos de analizar la eficiencia del último bucle que nos queda:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-latex&#34; data-lang=&#34;latex&#34;&gt;\noindent
Por último,  tenemos otro bucle más en el que metemos en un string la
operación en notación postfija que hemos calculado y lo devolvemos.
La devolución tiene eficiencia $O(1)$, y las operaciones que hacemos
dentro del bucle también, por tanto, el bucle se traduciría en la
siguiente sumatoria:

\begin{displaymath}
\sum_{i=0}^{c.size()} 1 = c.size();
\end{displaymath}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Y ahora vamos a hacer una subsección a modo de conclusión. Para ello, usamos la orden &lt;code&gt;\subsection{Conclusión}&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-latex&#34; data-lang=&#34;latex&#34;&gt;\subsection{Conclusión}
Tenemos tres bucles, al ser independientes, la eficiencia de todo el
código es la suma de la eficiencia de cada bucle por separado, es decir:

\begin{displaymath}
eficiencia = \underbrace{s.size() + t + c.size()}_{O(n)} = O(n)
\end{displaymath}

\noindent
Podemos concluir diciendo que la eficiencia de nuestra función es $O(n)$.&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Esto ha sido un pequeño ejemplo del uso de las matemáticas en LaTeX, los demás símbolos matemáticos que hay se usan exactamente igual a como hemos visto aquí.&lt;/p&gt;

&lt;p&gt;En el proximo artículo veremos cómo añadir figuras, enlaces y tablas al documento.&lt;/p&gt;</description>
        </item>
        
        <item>
            <title>Mantén tu proyecto de LaTeX limpio con este simple script</title>
            <link>https://elbauldelprogramador.com/mantener-proyecto-latex-limpio-script/</link>
            <pubDate>Wed, 09 Aug 2017 17:45:16 +0200</pubDate>
            
            <guid>https://elbauldelprogramador.com/mantener-proyecto-latex-limpio-script/</guid>
            <description>&lt;blockquote&gt;
&lt;p&gt;Este artículo es una colaboración de &lt;a href=&#34;http://Github.com/lulivi&#34; target=&#34;_blank&#34; title=&#34;Luis Liñan&#34;&gt;Luis Liñan&lt;/a&gt;, &lt;a href=&#34;https://t.me/lulivi&#34; target=&#34;_blank&#34; title=&#34;@lulivi&#34;&gt;@lulivi&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;En esta entrada del blog utilizaremos un script simple que nos permitirá actualizar automáticamente nuestro documento pdf (a partir del fichero tex) y devolverlo al directorio de trabajo manteniendolo totalmente limpio.&lt;/p&gt;

&lt;h1 id=&#34;estructura-del-directorio&#34;&gt;Estructura del directorio&lt;/h1&gt;

&lt;p&gt;Siguiendo la estructura ya comentada en &lt;a href=&#34;https://elbauldelprogramador.com/ocultar-los-metaficheros-de-latex-del-directorio-de-trabajo/&#34;&gt;otro artículo del blog&lt;/a&gt; tendremos lo siguiente en nuestro directorio de trabajo:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;.
|-- figures
|   |-- figure_1.pdf
|   `-- ...
|-- main.pdf
|-- main.tex
|-- ref.bib
|-- style.sty
`-- metafiles
    |-- main.aux
    |-- main.bbl
    |-- main.blg
    |-- main.fdb_latexmk
    |-- main.fls
    |-- main.lof
    |-- main.log
    |-- main.lot
    |-- main.out
    |-- main.pdf
    `-- main.toc
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;ejecución-del-script&#34;&gt;Ejecución del script&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#!/bin/bash
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# Help function
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;help&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$0&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt; &amp;lt;metafiles_directory&amp;gt;&amp;#34;&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# Check correct execution of the script
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$#&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt; -ne &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;then&lt;/span&gt;
  &lt;span class=&#34;nb&#34;&gt;help&lt;/span&gt;
  &lt;span class=&#34;nb&#34;&gt;exit&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;fi&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# Create directory if it doesn&amp;#39;t exist
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt; ! -d &lt;span class=&#34;nv&#34;&gt;$1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;then&lt;/span&gt;
  mkdir &lt;span class=&#34;nv&#34;&gt;$1&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;fi&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# Copy the pdf from the temporal directory to the parent directory
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;function&lt;/span&gt; listen_pdf_update &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;nv&#34;&gt;pdf_substring&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;(.*[.]pdf.*)&amp;#39;&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;while&lt;/span&gt; true&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;do&lt;/span&gt;
    &lt;span class=&#34;nv&#34;&gt;change&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;$(&lt;/span&gt;inotifywait -e close_write &lt;span class=&#34;nv&#34;&gt;$1&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;[[&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$change&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;~ &lt;span class=&#34;nv&#34;&gt;$pdf_substring&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;]]&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;then&lt;/span&gt;
      cp &lt;span class=&#34;nv&#34;&gt;$1&lt;/span&gt;/*.pdf ./
      &lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;============&amp;gt; iNotify &amp;lt;============&amp;#34;&lt;/span&gt;
      &lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;==&amp;gt;   Updated parent pdf file   &amp;lt;==&amp;#34;&lt;/span&gt;
      &lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;===================================&amp;#34;&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;fi&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;done&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# Set up listener for the target PDF file
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;listen_pdf_update &lt;span class=&#34;nv&#34;&gt;$1&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;&amp;amp;&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# Set up latex listener for changes in the directory
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;latexmk -shell-escape -silent -bibtex -view&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;pdf -xelatex -pdf -pvc -output-directory&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$1&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# Kill all processes created in this script
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;kill&lt;/span&gt; -9 -&lt;span class=&#34;nv&#34;&gt;$$&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;!--ad--&gt;&lt;/p&gt;

&lt;p&gt;Lo único que hay que hacer es ejecutar el script desde el directorio de trabajo pasando como argumento el directorio donde irán los outputs de la compilación:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ /PATH/TO/SCRIPT/updatePdfLatex.sh &amp;lt;metafiles_directory&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;Para más información sobre el script, vea el &lt;a href=&#34;https://github.com/lulivi/Latex-PDF-auto-updater&#34;&gt;repositorio del script&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&#34;referencias&#34;&gt;Referencias&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://elbauldelprogramador.com/compilar-automaticamente-ficheros-en-latex-mientras-los-modificamos&#34; target=&#34;_blank&#34; title=&#34;Compilar automáticamente ficheros en latex mientras los modificamos&#34;&gt;Compilar automáticamente ficheros en latex mientras los modificamos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://elbauldelprogramador.com/ejecutar-un-script-al-modificar-un-fichero-con-inotify&#34; target=&#34;_blank&#34; title=&#34;Ejecutar un script al modificar un fichero con inotify&#34;&gt;Ejecutar un script al modificar un fichero con inotify&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.mankier.com/1/latexmk&#34; target=&#34;_blank&#34; title=&#34;Latexmk man page&#34;&gt;Latexmk man page&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
        </item>
        
        <item>
            <title>Dibujar árboles de dependencias y Máquinas de soporte Vectoriales usando LaTeX y Tikz</title>
            <link>https://elbauldelprogramador.com/creating-trees-dependency-graphs-svms-in-tikz/</link>
            <pubDate>Thu, 16 Feb 2017 16:50:27 +0100</pubDate>
            
            <guid>https://elbauldelprogramador.com/creating-trees-dependency-graphs-svms-in-tikz/</guid>
            <description>&lt;p&gt;Como he comentado, para dibujar los árboles y la SVM usé el paquete &lt;code&gt;tikz&lt;/code&gt; de &lt;a href=&#34;https://elbauldelprogramador.com/tags/latex&#34; title=&#34;LaTeX&#34;&gt;LaTeX&lt;/a&gt;, a continuación muestro el código que usé:&lt;/p&gt;

&lt;h1 id=&#34;dibujando-un-árbol-de-dependencias-con-tikz&#34;&gt;Dibujando un árbol de dependencias con Tikz&lt;/h1&gt;

&lt;p&gt;&lt;!--ad--&gt;&lt;/p&gt;

&lt;h2 id=&#34;ejemplo-1&#34;&gt;Ejemplo 1&lt;/h2&gt;

&lt;p&gt;El código es el siguiente:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-latex&#34; data-lang=&#34;latex&#34;&gt;\documentclass{standalone}
\usepackage{tikz}
\usepackage{tikz-dependency}

\begin{document}

\begin{dependency}[edge slant=15pt,label theme = simple, edge theme = iron]
  \begin{deptext}[column sep=1em]
    This \&amp;amp; time \&amp;amp; around \&amp;amp; , \&amp;amp; they \&amp;amp; &amp;#39;re \&amp;amp; moving \&amp;amp; even \&amp;amp; faster \&amp;amp;
    . \\
  \end{deptext}
  \deproot{7}{ROOT}
  \depedge{2}{1}{DET}
  \depedge[edge height=1.9cm]{7}{2}{TMOD}
  \depedge{2}{3}{ADVMOD}
  \depedge{7}{6}{AUX}
  \depedge{7}{5}{NSUBJ}
  \depedge{7}{4}{PUNCT}
  \depedge{7}{10}{PUNCT}
  \depedge{7}{9}{ADVMOD}
  \depedge[edge start x offset=-4pt]{9}{8}{ADVMOD}
\end{dependency}

\end{document}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;El resultado:&lt;/p&gt;

&lt;figure&gt;
&lt;a href=&#34;https://elbauldelprogramador.com/img/dependency-tree.png&#34;&gt;&lt;img sizes=&#34;(min-width: 799px) 799px, 100vw&#34; on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/dependency-tree.png&#34; alt=&#34;Dependenty tree in tikz&#34; title=&#34;Dependenty tree in tikz&#34; width=&#34;799&#34; height=&#34;194&#34;&gt;&lt;/img&gt;&lt;/a&gt;
&lt;figcaption&gt;Dependenty tree in tikz&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;h2 id=&#34;ejemplo-2&#34;&gt;Ejemplo 2&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-latex&#34; data-lang=&#34;latex&#34;&gt;\documentclass{standalone}
\usepackage{tikz}
\usepackage{tikz-qtree,tikz-qtree-compat}

\begin{document}

\tiny
\begin{tikzpicture}[every node/.style={align=center},scale=.9]
  \tikzset{
    edge from parent/.style={
      draw,edge from parent
      path={(\tikzparentnode.south)-- +(0,-8pt)-| (\tikzchildnode)}
    },
    frontier/.style={distance from root=208pt}, % Align leaf nodes
    level 1+/.style={level distance=18pt} % Distance between levels
  }

   \Tree [.S
             [.NP Rolls-Royce\\NNP Motor\\NNP Cars\\NNPS Inc\\NNP ]
             [.VP said\\VBD
                [.SBAR [.none ]
                   [.S
                      [.NP it\\PRP ]
                      [. VP expects\\VBZ
                         [.S
                            [.NP its\\PRP\$ U.S\\NNP sales\\NNS ]
                            [.VP to\\TO
                               [.VP remain\\VB
                                  [.ADJP steady\\JJ ]
                                  [.PP at\\IN
                                     [.NP
                                        [.QP about\\IN 1200\\CD ]
                                        cars\\NNS
                                     ]
                                  ]
                               ]
                            ]
                         ]
                      ]
                   ]
                ]
             ]
         ]
\end{tikzpicture}
\end{document}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Resultado:&lt;/p&gt;

&lt;figure&gt;
&lt;a href=&#34;https://elbauldelprogramador.com/img/dependency-tree-2.png&#34;&gt;&lt;img sizes=&#34;(min-width: 926px) 926px, 100vw&#34; on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/dependency-tree-2.png&#34; alt=&#34;Other Dependency Tree in tikz&#34; title=&#34;Other Dependency Tree in tikz&#34; width=&#34;926&#34; height=&#34;485&#34;&gt;&lt;/img&gt;&lt;/a&gt;
&lt;figcaption&gt;Other Dependency Tree in tikz&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;h2 id=&#34;ejemplo-3&#34;&gt;Ejemplo 3&lt;/h2&gt;

&lt;p&gt;El último ejemplo de árbol:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-latex&#34; data-lang=&#34;latex&#34;&gt;\documentclass{standalone}
\usepackage{tikz}
\usepackage{tikz-qtree,tikz-qtree-compat}

\begin{document}
  \begin{tikzpicture}[every node/.style={align=center},level distance=30pt]
    \tikzset{edge from parent/.append style={&amp;lt;-, &amp;gt;=latex,thick}}
   \Tree [.said\\VBD
             [.Inc.\\NNP Rolls-Royce\\NNP Motor\\NNP Cars\\NNPS ]
             [.expects\\VBZ it\\PRP
                [.remain\\VB
                   [.sales\\NNS its\\PRP\$ U.S\\NNP ]
                   to\\TO
                   steady\\JJ
                   [.at\\IN [.cars\\NNS [.about\\IN 1200\\CD ] ] ]
                ]
             ]
           ]
   \end{tikzpicture}
\end{document}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;figure&gt;
&lt;a href=&#34;https://elbauldelprogramador.com/img/dependency-tree-3.png&#34;&gt;&lt;img sizes=&#34;(min-width: 795px) 795px, 100vw&#34; on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/dependency-tree-3.png&#34; alt=&#34;Yet another example of a Dependency tree in tikz&#34; title=&#34;Yet another example of a Dependency tree in tikz&#34; width=&#34;795&#34; height=&#34;513&#34;&gt;&lt;/img&gt;&lt;/a&gt;
&lt;figcaption&gt;Yet another example of a Dependency tree in tikz&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;h1 id=&#34;dibujando-una-máquina-de-soporte-vectorial-svm-en-tikz&#34;&gt;Dibujando una máquina de soporte vectorial (SVM) en Tikz&lt;/h1&gt;

&lt;p&gt;Para la explicación gráfica de lo que es una SVM:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-latex&#34; data-lang=&#34;latex&#34;&gt;\documentclass{standalone}
\usepackage{tikz}
\usepackage{tikz-qtree,tikz-qtree-compat}
\usetikzlibrary{calc}

\begin{document}


  \tikzset{
    leftNode/.style={circle,minimum width=.5ex, fill=none,draw},
    rightNode/.style={circle,minimum width=.5ex, fill=black,thick,draw},
    rightNodeInLine/.style={solid,circle,minimum width=.7ex, fill=black,thick,draw=white},
    leftNodeInLine/.style={solid,circle,minimum width=.7ex, fill=none,thick,draw},
  }
  \begin{tikzpicture}[
        scale=2,
        important line/.style={thick}, dashed line/.style={dashed, thin},
        every node/.style={color=black},
    ]
    \draw[dashed line, yshift=.7cm]
       (.2,.2) coordinate (sls) -- (2.5,2.5) coordinate (sle)
       node[solid,circle,minimum width=2.8ex,fill=none,thick,draw] (name) at (2,2){}
       node[leftNodeInLine] (name) at (2,2){}
       node[solid,circle,minimum width=2.8ex,fill=none,thick,draw] (name) at (1.5,1.5){}
       node[leftNodeInLine] (name) at (1.5,1.5){}
       node [above right] {$w\cdot x + b &amp;gt; 1$};

    \draw[important line]
       (.7,.7) coordinate (lines) -- (3,3) coordinate (linee)
       node [above right] {$w\cdot x + b = 0$};

    \draw[dashed line, xshift=.7cm]
       (.2,.2) coordinate (ils) -- (2.5,2.5) coordinate (ile)
       node[solid,circle,minimum width=2.8ex,fill=none,thick,draw] (name) at (1.8,1.8){}
       node[rightNodeInLine] (name) at (1.8,1.8){}
       node [above right] {$w\cdot x + b &amp;lt; -1$};

    \draw[very thick,&amp;lt;-&amp;gt;] ($(sls)+(.2,.2)$) -- ($(ils)+(.2,.2)$)
       node[sloped,above, near end] {Margen};

    \foreach \Point in {(.9,2.4), (1.3,2.5), (1.3,2.1), (2,3), (1,2.9)}{
      \draw \Point node[leftNode]{};
    }

    \foreach \Point in {(2.9,1.4), (2.3,.5), (3.3,.1), (2,0.9), (2.5,1)}{
      \draw \Point node[rightNode]{};
    }
  \end{tikzpicture}
\end{document}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;figure&gt;
&lt;a href=&#34;https://elbauldelprogramador.com/img/support-vector-machine-tikz-latex.png&#34;&gt;&lt;img sizes=&#34;(min-width: 811px) 811px, 100vw&#34; on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/support-vector-machine-tikz-latex.png&#34; alt=&#34;Support Vector Machine in Latex with Tikz&#34; title=&#34;Support Vector Machine in Latex with Tikz&#34; width=&#34;811&#34; height=&#34;652&#34;&gt;&lt;/img&gt;&lt;/a&gt;
&lt;figcaption&gt;Support Vector Machine in Latex with Tikz&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;h1 id=&#34;referencias&#34;&gt;Referencias&lt;/h1&gt;

&lt;p&gt;Cuando empecé a dibujar estas figuras en &lt;code&gt;tikz&lt;/code&gt; se me presentaron algunas dudas que pregunté en tex.stackexchange.com. Estas fueron dichas preguntas:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Align all leaf nodes in tikz-qtree | &lt;a href=&#34;http://tex.stackexchange.com/questions/340929/align-all-leaf-nodes-in-tikz-qtree&#34; target=&#34;_blank&#34; title=&#34;Align all leaf nodes in tikz-qtree&#34;&gt;tex.stackexchange.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Align independent tikzpictures | &lt;a href=&#34;http://tex.stackexchange.com/questions/342978/align-independent-tikzpictures&#34; target=&#34;_blank&#34; title=&#34;Align independent tikzpictures&#34;&gt;tex.stackexchange.com&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
        </item>
        
        <item>
            <title>Cómo Crear Diagramas De Gantt en LaTeX</title>
            <link>https://elbauldelprogramador.com/crear-diagrama-de-gantt-en-latex/</link>
            <pubDate>Fri, 16 Sep 2016 13:48:53 +0000</pubDate>
            
            <guid>https://elbauldelprogramador.com/crear-diagrama-de-gantt-en-latex/</guid>
            <description>&lt;figure&gt;
  &lt;img sizes=&#34;(min-width: 800px) 800px, 100vw&#34; on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/crear-diagrama-de-gantt-en-latex.png&#34; alt=&#34;Cómo Crear Diagramas De Gantt en LaTeX&#34; title=&#34;Cómo Crear Diagramas De Gantt en LaTeX&#34; width=&#34;800&#34; height=&#34;335&#34;&gt;&lt;/img&gt;
&lt;/figure&gt;

&lt;blockquote&gt;
&lt;p&gt;Consulta el resto de &lt;a href=&#34;https://elbauldelprogramador.com/categories/latex&#34; title=&#34;Artículos sobre LaTeX&#34;&gt;artículos sobre LaTeX escritos en el blog&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&#34;qué-es-un-diagrama-de-gantt&#34;&gt;Qué es un Diagrama de Gantt&lt;/h1&gt;

&lt;p&gt;La definición de WikiPedia:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;El diagrama de Gantt es una útil herramienta gráfica cuyo objetivo es exponer el tiempo de dedicación previsto para diferentes tareas o actividades a lo largo de un tiempo total determinado.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;!--ad--&gt;&lt;/p&gt;

&lt;h1 id=&#34;diagramas-de-gantt-en-latex&#34;&gt;Diagramas de Gantt en Latex&lt;/h1&gt;

&lt;p&gt;Para crear estos diagramas en LaTeX, existe un paquete llamado &lt;a href=&#34;http://bay.uchicago.edu/CTAN/graphics/pgf/contrib/pgfgantt/pgfgantt.pdf&#34; title=&#34;Documentación de pgfgantt&#34;&gt;Pgfgantt&lt;/a&gt; que nos permite crear estos diagramas de forma sencilla. Explicaré por encima un ejemplo:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-latex&#34; data-lang=&#34;latex&#34;&gt;\begin{ganttchart}[
canvas/.append style={fill=none, draw=black!5, line width=.75pt},
hgrid style/.style={draw=black!5, line width=.75pt},
vgrid={*1{draw=black!5, line width=.75pt}},
today=1,
today rule/.style={
draw=black!64,
dash pattern=on 3.5pt off 4.5pt,
line width=1.5pt
},
today label font=\small\bfseries,
title/.style={draw=none, fill=none},
title label font=\bfseries\footnotesize,
title label node/.append style={below=7pt},
include title in canvas=false,
bar label font=\mdseries\small\color{black!70},
bar label node/.append style={left=2cm},
bar/.append style={draw=none, fill=black!63},
bar incomplete/.append style={fill=barblue},
bar progress label font=\mdseries\footnotesize\color{black!70},
group incomplete/.append style={fill=groupblue},
group left shift=0,
group right shift=0,
group height=.5,
group peaks tip position=0,
group label node/.append style={left=.6cm},
group progress label font=\bfseries\small,
link/.style={-latex, line width=1.5pt, linkred},
link label font=\scriptsize\bfseries,
link label node/.append style={below left=-2pt and 0pt},
]{1}{24}
\gantttitle{Título del diagrama}{24} \\[grid]
\gantttitle{Septiembre}{4}
\gantttitle{Octubre}{4}
\gantttitle{Noviembre}{4}
\gantttitle{Diciembre}{4}
\gantttitle{Enero}{4}
\gantttitle{Febrero}{4}\\
\gantttitle[
title label node/.append style={below left=7pt and -3pt}
]{Semana:\quad1}{1}
\gantttitlelist{2,...,24}{1} \\
\ganttgroup[progress=65]{Título del grupo}{1}{24} \\
\ganttbar[
progress=100,
name=bar1
]{\textbf{Actividad 1}}{1}{1} \\
\ganttbar[
progress=14,
name=bar2
]{\textbf{Actividad 2}}{2}{2} \\
\ganttbar[
progress=25,
name=bar3
]{\textbf{Actividad 3}}{3}{3} \\
\ganttbar[
progress=56,
name=bar4
]{\textbf{Actividad 4}}{4}{4} \\
\ganttbar[
progress=100,
name=bar5
]{\textbf{Actividad 5}}{5}{7} \\
\ganttbar[
progress=80,
]{\textbf{Actividad 6}}{8}{8} \\
\ganttbar[
progress=49,
]{\textbf{Actividad 7}}{9}{11} \\
\ganttmilestone{Hito 1}{11}{11}  \\
\ganttmilestone{Hito 2}{12}{12} \\
\ganttbar[
progress=35,
]{\textbf{Actividad 8}}{12}{22} \\
\ganttbar[
progress=0,
]{\textbf{Actividad 9}}{23}{24} \\

\ganttmilestone{Q6 report}{24}{24} \\
\ganttmilestone{M2: Project finished}{24}{24}

\ganttlink[link type=f-s]{bar1}{bar2}
\ganttlink[link type=f-s]{bar4}{bar5}
\end{ganttchart}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1 id=&#34;comandos-básicos-del-diagrama-de-gantt&#34;&gt;Comandos básicos del diagrama de Gantt&lt;/h1&gt;

&lt;p&gt;Veamos algunos de los comandos más útiles:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;\begin{ganttchart}[opciones]{1}{24}&lt;/code&gt;: Con este comando iniciamos el diagrama, en las opciones se especifican comandos para el estilo del gráfico, luego se especifica cuantos cuadros de tiempo queremos, en este caso del 1 a 24.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;gantttitle{titulo}{n}&lt;/code&gt;: Con este comando se especifica un título para el diagrama, seguido de cuantos cuadros de tiempo queremos que ocupe dicho título. Podemos tener varios títulos, como en este ejemplo.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;\ganttgroup[opciones]{titulo}{inicio cuadro}{fin cuadro}&lt;/code&gt;: Especifica un grupo en el diagrama, recibe como parámetro el título, en qué cuadro de tiempo empieza y en cual acaba. En las opciones podemos especificar el porcentaje completado con &lt;code&gt;progress=n&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;\ganttbar[opciones]{tarea}{inicio cuadro}{fin cuadro}&lt;/code&gt;: Especifica una tarea, similar al anterior, los parámetros son el nombre de la tarea y la franja de tiempo que ocupa.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ganttlink[opciones]{nombre tarea 1}{nombre tarea 2}&lt;/code&gt;: Con este comando podemos establecer un enlace entre dos tareas, a las tareas involucradas se les ha dado un nombre con la opción &lt;code&gt;name=nombre&lt;/code&gt; en sus opciones.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;conclusión&#34;&gt;Conclusión&lt;/h1&gt;

&lt;p&gt;Eso es todo, para crear un simple diagrama de Gantt no es necesario saber mucho más sobre este paquete. Recomiendo echar un vistazo a la documentación del paquete para cosas más específicas.&lt;/p&gt;</description>
        </item>
        
        <item>
            <title>Cómo crear un pie de página en LaTeX con fancyhdr</title>
            <link>https://elbauldelprogramador.com/como-crear-un-pie-de-pagina-en-latex-con-fancyhdr/</link>
            <pubDate>Fri, 01 Jan 2016 00:00:00 +0000</pubDate>
            
            <guid>https://elbauldelprogramador.com/como-crear-un-pie-de-pagina-en-latex-con-fancyhdr/</guid>
            <description>&lt;figure&gt;
    &lt;img sizes=&#34;(min-width: 300px) 300px, 100vw&#34; on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/2013/05/latex_logo.png&#34; alt=&#34;latex_logo&#34; width=&#34;300px&#34; height=&#34;114px&#34;&gt;&lt;/img&gt;
&lt;/figure&gt;

&lt;p&gt;Como he mencionado en algún &lt;a href=&#34;https://elbauldelprogramador.com/resaltar-sintaxis-del-codigo-fuente-en-latex-con-minted/&#34; title=&#34;Resaltar sintaxis del código fuente en LaTeX con minted&#34;&gt;artículo anterior&lt;/a&gt;, he aprendido bastante a programar en LaTeX reescribiendo el &lt;a href=&#34;https://elbauldelprogramador.com/disponible-la-primera-parte-del-curso/&#34; title=&#34;Disponible la primera parte del curso Android en PDF&#34;&gt;curso de Android&lt;/a&gt;. Hoy vamos a ver cómo crear un pie de página en LaTeX.&lt;/p&gt;

&lt;p&gt;&lt;!--ad--&gt;&lt;/p&gt;

&lt;h1 id=&#34;fancyhdr&#34;&gt;Fancyhdr&lt;/h1&gt;

&lt;p&gt;Para poder crear pies de página y cabeceras es necesario usar el paquete &lt;em&gt;fancyhdr&lt;/em&gt;, y establecer el estilo de página a &lt;em&gt;fancy&lt;/em&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-latex&#34; data-lang=&#34;latex&#34;&gt;\usepackage{fancyhdr}
\pagestyle{fancy}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Ahora nuestros documentos tendrán una línea arriba y abajo, en la cabecera y pie de página respectivamente.&lt;/p&gt;

&lt;h1 id=&#34;personalizar-el-estilo-del-pie-de-página&#34;&gt;Personalizar el estilo del pie de página&lt;/h1&gt;

&lt;p&gt;Para cambiar el aspecto por defecto que ofrece el paquete fancyhdr, hemos de usar los comandos &lt;code&gt;fancyhead&lt;/code&gt; y &lt;code&gt;fancyfoot&lt;/code&gt;, correspondientes a la cabecera y pie de página, respectivamente. Nosotros nos centraremos en el pie, aunque para personalizar la cabecera bastará con sustituir &lt;code&gt;fancyfoot&lt;/code&gt; por &lt;code&gt;fancyhead&lt;/code&gt; en el código.&lt;/p&gt;

&lt;p&gt;Es necesario conocer el significado de las siguientes letras:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;E: Página par&lt;/li&gt;
&lt;li&gt;O: Página impar&lt;/li&gt;
&lt;li&gt;L: Parte izquierda&lt;/li&gt;
&lt;li&gt;C: Parte central&lt;/li&gt;
&lt;li&gt;R: Parte derecha&lt;/li&gt;
&lt;li&gt;H: Cabecera&lt;/li&gt;
&lt;li&gt;F: Pie de página&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Conocido el significado de las mismas, ahora es posible definir el estilo en el preámbulo:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-latex&#34; data-lang=&#34;latex&#34;&gt;\fancyhead[CO,CE]{---Draft---}
\fancyfoot[C]{Confidential}
\fancyfoot[RO, LE] {\thepage}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;El grosor de las líneas decorativas puede cambiarse con:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-latex&#34; data-lang=&#34;latex&#34;&gt;\renewcommand{\headrulewidth}{0.4pt}
\renewcommand{\footrulewidth}{0.4pt}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Como apunte personal, uso plantillas para distintos tipos de documentos, estas plantillas vienen con un fichero de estilo propio y para no modificar directamente el valor del pie de página podemos crear un comando que permita establecer el contenido del pie de página. Por ejemplo, en el fichero que define la estructura del documento creamos el comando:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-latex&#34; data-lang=&#34;latex&#34;&gt;\newcommand{\setFooterL}[1]{
    \fancyfoot[L]{\small\textit{#1}}
}
\newcommand{\setFooterR}[1]{
    \fancyfoot[R]{\small\textit{#1}}
}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Ahora desde el fichero principal, resulta muy fácil reusar la plantilla y cambiar el texto del pie de página de la siguiente manera:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-latex&#34; data-lang=&#34;latex&#34;&gt;\setFooterL{\href{http://twitter.com/elbaulp}{Alejandro Alcalde}}
\setFooterR{\href{https://elbauldelprogramador.com}{elbauldelprogramador.com}}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Produciendo el siguiente resultado:&lt;/p&gt;

&lt;figure&gt;
    &lt;img sizes=&#34;(min-width: 887px) 887px, 100vw&#34; on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/2013/05/footerFancyHdrLatex.png&#34; alt=&#34;Cómo crear un pie de página en LaTeX con fancyhdr&#34; title=&#34;Cómo crear un pie de página en LaTeX con fancyhdr&#34; width=&#34;887px&#34; height=&#34;53px&#34;&gt;&lt;/img&gt;
&lt;/figure&gt;

&lt;h1 id=&#34;referencias&#34;&gt;Referencias&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;em&gt;Header/Footer in Latex with Fancyhdr&lt;/em&gt; »» &lt;a href=&#34;http://texblog.org/2007/11/07/headerfooter-in-latex-with-fancyhdr/&#34; target=&#34;_blank&#34;&gt;texblog.org&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
        </item>
        
        <item>
            <title>Mini Curso de LaTeX - Introducción</title>
            <link>https://elbauldelprogramador.com/mini-curso-de-latex-introduccion/</link>
            <pubDate>Fri, 01 Jan 2016 00:00:00 +0000</pubDate>
            
            <guid>https://elbauldelprogramador.com/mini-curso-de-latex-introduccion/</guid>
            <description>&lt;figure&gt;
    &lt;a href=&#34;https://elbauldelprogramador.com/img/2013/05/latex_logo.png&#34;&gt;&lt;img sizes=&#34;(min-width: 300px) 300px, 100vw&#34; on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/2013/05/latex_logo.png&#34; title=&#34;Mini Curso de LaTeX - Introducción&#34; alt=&#34;Mini Curso de LaTeX - Introducción&#34; width=&#34;300px&#34; height=&#34;114px&#34; /&gt;&lt;/a&gt;
&lt;/figure&gt;

&lt;ul&gt;
&lt;li&gt;Mini Curso de LaTeX - Introducción&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://elbauldelprogramador.com/curso-de-latex-incluir-codigo-fuente-y-simbolos-matematicos/&#34; title=&#34;Curso de LaTeX - Incluir código fuente y símbolos matemáticos&#34;&gt;Mini Curso de LaTeX - Incluir código fuente y símbolos matemáticos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://elbauldelprogramador.com/curso-de-latex-figuras-enlaces-y-cabeceras/&#34;&gt;Mini Curso de LaTeX - Figuras, Enlaces y cabeceras&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;mini-curso-de-latex&#34;&gt;Mini curso de Latex&lt;/h1&gt;

&lt;p&gt;¡Hola &lt;em&gt;internet&lt;/em&gt;!&lt;/p&gt;

&lt;p&gt;En este tutorial, curso o como queráis llamarlo os voy a enseñar lo básico que debéis saber para hacer vuestros documentos en &lt;strong&gt;LaTeX&lt;/strong&gt;! Como estamos en un blog sobre informática vamos a orientarlo un poco hacia la informática.&lt;/p&gt;

&lt;p&gt;Bueno, podría empezar contándote qué significa LaTeX o quién lo creó pero me gusta ser directa, así que abre tu editor de texto preferido que vamos a empezar a escribir ya!&lt;/p&gt;

&lt;p&gt;&lt;!--ad--&gt;&lt;/p&gt;

&lt;p&gt;Vamos a imaginar que tenemos que hacer una pequeña documentación que acompañe a un programa muy simple que hemos hecho para unas prácticas.&lt;/p&gt;

&lt;h1 id=&#34;cabecera-de-un-documento&#34;&gt;Cabecera de un documento&lt;/h1&gt;

&lt;p&gt;Lo primero que debemos hacer en un documento de LaTeX es poner una cabecera, esto es, establecer la configuración del documento. La primera línea de cualquier documento LaTeX sería la siguiente:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-latex&#34; data-lang=&#34;latex&#34;&gt;\documentclass[opciones]{clase}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;La parte de clase podemos rellenarla con varias opciones, dependiendo del tipo de archivo que queramos hacer. Los más populares son:
1. &lt;code&gt;article&lt;/code&gt;: para documentos cortos tales como artículos, presentaciones&amp;#8230;
2. &lt;code&gt;report&lt;/code&gt;: ideal para documentos más largos que contengan varios capítulos, libros pequeños, etc
3. &lt;code&gt;book&lt;/code&gt;: para libros&lt;/p&gt;

&lt;p&gt;Y la parte de opciones, con algunas opciones que queramos añadirle a nuestro documento tales como:
1. &lt;strong&gt;El tamaño de la letra&lt;/strong&gt;: 10pt, 11pt y 12pt. El tamaño por defecto es 10pt
2. &lt;strong&gt;El tamaño del papel&lt;/strong&gt;: &lt;code&gt;a4paper&lt;/code&gt;, &lt;code&gt;letterpaper&lt;/code&gt;, &lt;code&gt;a5paper&lt;/code&gt;, &lt;code&gt;b5paper&lt;/code&gt;, &lt;code&gt;executivepaper&lt;/code&gt;, &lt;code&gt;legalpaper&lt;/code&gt;. El tamaño por defecto es &lt;code&gt;letterpaper&lt;/code&gt;.
3. &lt;strong&gt;Página de titulo&lt;/strong&gt;: &lt;code&gt;titlepage&lt;/code&gt;, &lt;code&gt;notitlepage&lt;/code&gt;. Por defecto, el artículo no tiene página de título mientras que el &lt;code&gt;book&lt;/code&gt; y el &lt;code&gt;report&lt;/code&gt; sí.
4. &lt;strong&gt;El número de columnas del documento&lt;/strong&gt;: &lt;code&gt;twoside&lt;/code&gt;, &lt;code&gt;oneside&lt;/code&gt;. Las clases artículo y report son de una columna por defecto mientras que la clase libro es de dos columnas por defecto.
5. &lt;strong&gt;Apaisar documento&lt;/strong&gt;: con la opción &lt;code&gt;landscape&lt;/code&gt;.
6. &lt;strong&gt;Establecer donde empieza el nuevo capítulo&lt;/strong&gt;: con &lt;code&gt;openright&lt;/code&gt; empezaría en las páginas alineadas a la derecha (por defecto en &lt;code&gt;book&lt;/code&gt;) y con openany en la siguiente página disponible (por defecto en &lt;code&gt;report&lt;/code&gt;).&lt;/p&gt;

&lt;p&gt;Sabiendo esto ya podemos poner la primera línea de nuestro documento, que en nuestro caso será:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-latex&#34; data-lang=&#34;latex&#34;&gt;\documentclass[11pt,a4paper]{article}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;El siguiente paso, es especificarle a LaTeX los paquetes que necesitaremos usar en nuestro documento, podemos ir añadiéndolos conforme los vayamos necesitando a la hora de hacer el documento, pero vamos a añadir de primeras los más básicos. La sintáxis de uso de paquetes es:&lt;/p&gt;

&lt;h2 id=&#34;paquetes&#34;&gt;Paquetes&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-latex&#34; data-lang=&#34;latex&#34;&gt;\usepackage[opciones]{paquete}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Los paquetes que añadiremos de primeras son:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-latex&#34; data-lang=&#34;latex&#34;&gt;\usepackage[utf8]{inputenc} % para que nos acepte la codificación UTF-8
\usepackage[spanish]{babel} % establecemos el idioma del documento al español
\usepackage{hyperref} % para poder poner &amp;#34;enlaces&amp;#34; en nuestro codigo
\usepackage{color} % para darle color a nuestros documentos
\usepackage{enumerate} % para poder añadirle a enumerate un argumento con el tipo de &amp;#34;contador&amp;#34; que queremos&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1 id=&#34;comienzo-del-documento&#34;&gt;Comienzo del documento&lt;/h1&gt;

&lt;p&gt;Tras añadir los paquetes podríamos añadir otras opciones al documento tales como el encabezado, el pie de página&amp;#8230; Pero no nos vamos a entretener ahora en eso. Vamos a empezar nuestro documento con el comando:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-latex&#34; data-lang=&#34;latex&#34;&gt;\begin{document}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Y para acabarlo escribiremos un&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-latex&#34; data-lang=&#34;latex&#34;&gt;\end{document}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Como truco os diré que debajo del &lt;em&gt;end document&lt;/em&gt; podéis escribir lo que queráis, que el compilador no lo va a leer. Yo apunto ahí los comandos que más uso, o de los que no recuerdo su sintaxis para poder tenerlos a mano.&lt;/p&gt;

&lt;p&gt;Y ahora vamos a empezar a escribir. Lo primero que debemos hacer es especificarle a LaTeX el título de nuestro artículo, y nuestro nombre como autores, para ello:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-latex&#34; data-lang=&#34;latex&#34;&gt;% especificamos el titulo del documento y le ponemos un tamaño de letra grande
\title{\huge Portafolios de prácticas}
% Y ahora, el autor
\author{Marta Gómez}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;También, si queremos, podemos añadirle la fecha actual:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-latex&#34; data-lang=&#34;latex&#34;&gt;% le añadimos la fecha actual
\date{\today}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Y por último, le añadimos el título a nuestro documento y un pequeño índice:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-latex&#34; data-lang=&#34;latex&#34;&gt;\maketitle % nos crea el titulo, el autor y la fecha en el inicio del documento
\tableofcontents % nos crea un indice con enlaces a las diferentes secciones y subsecciones&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;secciones&#34;&gt;Secciones&lt;/h2&gt;

&lt;p&gt;Y ahora vamos a empezar en la primera sección, para indicarle a LaTeX que vamos a empezar una sección lo hacemos de la siguiente manera:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-latex&#34; data-lang=&#34;latex&#34;&gt;\section{Descripción del programa}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Así crearíamos una sección llamada &amp;#8220;Descripción del programa&amp;#8221;. Que se correspondería con la primera sección del artículo. Si por casualidad quisieramos que empezara por otro número tendríamos que usar el siguiente comando:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-latex&#34; data-lang=&#34;latex&#34;&gt;\setcounter{section}{4}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;y así empezaríamos a contar desde la sección 5.&lt;/p&gt;

&lt;p&gt;Y sí ahora queremos hacer una subsección lo haríamos con el siguiente comando:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-latex&#34; data-lang=&#34;latex&#34;&gt;\subsection{Funcionamiento general}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Con este comando tendríamos una subsección en Descripción del programa llamada Funcionamiento general.&lt;/p&gt;

&lt;h2 id=&#34;formateo-del-texto&#34;&gt;Formateo del texto&lt;/h2&gt;

&lt;p&gt;Ahora tenemos que empezar a escribir normalmente, cuando queramos cambiar de párrafo hacemos un doble salto de línea, si queremos hacer un salto de línea lo hacemos con una doble barra y, si queremos poner nuestro texto en negrita, en cursiva o con subrayado lo haríamos con los siguientes comandos:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-latex&#34; data-lang=&#34;latex&#34;&gt;\textbf{Esto es un texto en negrita} \\
\textit{Esto es un texto en cursiva} \\
\underline{Este texto está subrayado}.&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Otro dato importante es, que si no nos gusta el indentado que hace LaTeX al principio del párrafo podemos eliminarlo con el siguiente comando:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-latex&#34; data-lang=&#34;latex&#34;&gt;\noindent&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Ahora que sabemos esto, podemos empezar a escribir:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-latex&#34; data-lang=&#34;latex&#34;&gt;\noindent
El programa da al usuario a elegir entre escribir en la \textit{entrada estándar} una operación aritmética
en \textbf{notación postfija} o \textbf{notación infija} y después, devuelve el resultado de dicha operación por la \textit{salida estándar}.&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Ahora vamos a hacer una pequeña tabla, para ello, tenemos que añadir el paquete &lt;code&gt;multirow&lt;/code&gt; para poder hacer tablas con más de una celda. También tendríamos que añadir los paquetes de matemáticas pues vamos a usar expresiones matemáticas en la tabla:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-latex&#34; data-lang=&#34;latex&#34;&gt;\usepackage{multirow} % para hacer tablas con mas de una columna
\usepackage{amsmath} % paquete basico de matematicas&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;tablas-en-latex&#34;&gt;Tablas en Latex&lt;/h2&gt;

&lt;p&gt;Y para hacer una tabla usamos la orden &lt;code&gt;tabular&lt;/code&gt; (si escribimos &lt;code&gt;tab&lt;/code&gt; en Sublime Text y le damos a tabulación nos completa la sintaxis) cuya sintaxis es:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-latex&#34; data-lang=&#34;latex&#34;&gt;\noindent
La siguiente tabla refleja la diferencia entre notación postfija y notación infija:

\begin{tabular}{|p{4cm} | p{4cm} |}
\hline % para poner una linea horizontal
Notación infija &amp;amp; Notación postfija \\ % el &amp;amp; se usa para separar columnas y el \\ para saltos de linea
\hline
$1 + 2$ &amp;amp; $1$ $2 +$ \\
$5 + ((1 + 2) * 4) - 3$ &amp;amp;  $5$ $1$ $2 + 4 * + 3 -$ \\
\hline
\end{tabular}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Hay varios puntos a tener en cuenta:
1. Entre las llaves que hay después del &lt;code&gt;tabular&lt;/code&gt; podemos poner c, l, r para especificar la alineación del texto, esto mejor hacerlo si no tenemos mucho texto en la celda ya que no pone saltos de línea. Y una p con una medida entre llaves que especifica el ancho de la celda y pone saltos de línea al texto de dentro.
2. El comando &lt;code&gt;\hline&lt;/code&gt; se usa para poner una línea horizontal que actúa a modo de separador.
3. Cuando tenemos varias columnas, las separamos con el &amp;amp;
4. Cuando queremos indicar que hemos terminado una fila ponemos &amp;#92;\ al final de dicha fila
5. Los $ que pongo se usan en LaTeX para representar signos u operaciones matemáticas &amp;#8220;inline&amp;#8221;. El entorno matemático no respeta espacios en blanco, por eso he tenido que poner varios dólares en la segunda columna para obtener 1 espacio 2 en vez de 12 o 5 1 2 en vez de 512.&lt;/p&gt;

&lt;p&gt;Si queremos hacer un listado, podemos hacerlo con la orden &lt;code&gt;enumerate&lt;/code&gt; (si escribimos &lt;code&gt;enum&lt;/code&gt; en Sublime Text y le damos a tabulador nos autocompleta la sintaxis) o la orden &lt;code&gt;itemize&lt;/code&gt; (y lo mismo si escribimos &lt;code&gt;item&lt;/code&gt;) o, incluso, combinando las dos haciendo listas con sublistas:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-latex&#34; data-lang=&#34;latex&#34;&gt;Las distintas estructuras que hay en el fichero son:
\begin{enumerate}[1.]
    \item \textbf{clase Postfija}: que contiene los siguientes métodos:
    \begin{itemize}
        \item Constructor
        \item Método que calcula el resultado de la operación.
    \end{itemize}
    \item \textbf{función infija2postfija}: función que pasa de infija a postfija.
\end{enumerate}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Con el 1. que le pasamos a enumerate hacemos que nuestra lista sea 1. 2. 3. etc.&lt;/p&gt;

&lt;p&gt;Vamos a cambiar de sección, para ello usamos la orden &lt;code&gt;section&lt;/code&gt;, como hemos visto antes, si además queremos que nuestra nueva secci��n empiece en una nueva página usamos el siguiente comando&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-latex&#34; data-lang=&#34;latex&#34;&gt;\newpage&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Con esto completamos una pequeña introducción a LaTeX, en el siguiente artículo veremos cómo incluir código fuente en nuestro documento.&lt;/p&gt;</description>
        </item>
        
        <item>
            <title>Resaltar sintaxis del código fuente en LaTeX con minted</title>
            <link>https://elbauldelprogramador.com/resaltar-sintaxis-del-codigo-fuente-en-latex-con-minted/</link>
            <pubDate>Fri, 01 Jan 2016 00:00:00 +0000</pubDate>
            
            <guid>https://elbauldelprogramador.com/resaltar-sintaxis-del-codigo-fuente-en-latex-con-minted/</guid>
            <description>&lt;p&gt;Hace unas semanas que aprendí a usar &lt;a href=&#34;https://elbauldelprogramador.com/categories/latex&#34; title=&#34;Post sobre latex&#34;&gt;LaTeX&lt;/a&gt; , y cada vez me gusta más, proporciona una calidad a los documentos impecable. De hecho, estoy entregando las prácticas de la facultad en que he reescrito el &lt;a href=&#34;https://elbauldelprogramador.com/disponible-la-primera-parte-del-curso/&#34;&gt;Curso de programación Android&lt;/a&gt; por completo.&lt;/p&gt;

&lt;p&gt;Sin embargo, una de las cosas que más me ha costado conseguir es encontrar alguna forma que me gustase de resaltar la sintaxis en latex del código fuente. Tras mucho buscar por internet encontré un paquete que concluyó con mi búsqueda, se llama &lt;strong&gt;minted&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;!--ad--&gt;&lt;/p&gt;

&lt;h1 id=&#34;instalando-dependencias&#34;&gt;Instalando dependencias&lt;/h1&gt;

&lt;p&gt;Para instalarlo, es necesaria una versión de python igual o superior a la 2.6, y &lt;em&gt;Pygments&lt;/em&gt;. Para instalar el último ejecuta:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;# easy_install Pygments&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Si no tienes instalado el programa &lt;em&gt;easy_install&lt;/em&gt;, ejecuta:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;# aptitude install python-setuptools&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1 id=&#34;instalar-minted&#34;&gt;Instalar minted&lt;/h1&gt;

&lt;p&gt;Descarga el paquete desde su &lt;a href=&#34;http://code.google.com/p/minted/downloads/list&#34; target=&#34;_blank&#34;&gt;repositorio&lt;/a&gt;. Extráelo y sitúate en su directorio. Luego ejecuta la instrucción &lt;em&gt;make&lt;/em&gt;.&lt;/p&gt;

&lt;h1 id=&#34;algunos-ejemplos&#34;&gt;Algunos ejemplos&lt;/h1&gt;

&lt;p&gt;Ya está todo listo para usar, empecemos con un ejemplo básico extraido del manual, disponible para descargar en las referencias:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-latex&#34; data-lang=&#34;latex&#34;&gt;\documentclass{article}

\usepackage{minted}

\begin{document}

\begin{minted}{c}
    /**
    * Ejemplo resaltado sintaxis con minted
    */
    int main() {
        printf(&amp;#34;hello, world&amp;#34;);
        return 0;
    }
\end{minted}
\end{document}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Este trozo de código dará como resultado lo siguiente:&lt;/p&gt;

&lt;figure&gt;
    &lt;img sizes=&#34;(min-width: 599px) 599px, 100vw&#34; on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/2013/05/mintedEjemploC.png&#34; alt=&#34;Ejemplo minted C&#34; width=&#34;599px&#34; height=&#34;246px&#34;&gt;&lt;/img&gt;
&lt;/figure&gt;

&lt;h1 id=&#34;insertar-código-desde-un-archivo-de-código-fuente&#34;&gt;Insertar código desde un archivo de código fuente&lt;/h1&gt;

&lt;p&gt;Normalmente, si tenemos un código fuente con muchas líneas es más cómodo incluirlo directamente en lugar de copiar todas esas líneas. &lt;strong&gt;Minted&lt;/strong&gt; proporciona un comando para tal fin. &lt;code&gt;\newmintedfile[]{}&lt;/code&gt;. Veamos un ejemplo:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-latex&#34; data-lang=&#34;latex&#34;&gt;\newmintedfile[myJava]{java}{
    linenos,
    numbersep=5pt,
    gobble=0,
    frame=lines,
    framesep=2mm,
}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Con este comando, hemos definido una nueva función (&lt;em&gt;myJava&lt;/em&gt;), que permitirá incluir el código fuente de un archivo al documento pdf. Por ejemplo. Supongamos que el contenido del fichero &lt;em&gt;miCodigo.java&lt;/em&gt; es el siguiente:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;kn&#34;&gt;package&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;com.elbauldelprogramador.actividades&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;

&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;android.app.Activity&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;android.os.Bundle&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;android.view.View&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;android.view.View.OnClickListener&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;android.widget.Button&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;android.widget.TextView&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;

&lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Activity1&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;extends&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Activity&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
   &lt;span class=&#34;cm&#34;&gt;/** Called when the activity is first created. */&lt;/span&gt;
   &lt;span class=&#34;nd&#34;&gt;@Override&lt;/span&gt;
   &lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;onCreate&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Bundle&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;savedInstanceState&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
      &lt;span class=&#34;kd&#34;&gt;super&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;onCreate&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;savedInstanceState&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
      &lt;span class=&#34;n&#34;&gt;setContentView&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;R&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;layout&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;segunda_actividad&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;

      &lt;span class=&#34;c1&#34;&gt;// Capturamos los objetos gráficos que vamos a usar
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;      &lt;span class=&#34;n&#34;&gt;TextView&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;text&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;TextView&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;findViewById&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;R&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;textView1&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
      &lt;span class=&#34;n&#34;&gt;Button&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;button&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Button&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;findViewById&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;R&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;boton&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;

      &lt;span class=&#34;c1&#34;&gt;// Agregamos al textView un texto
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;      &lt;span class=&#34;n&#34;&gt;text&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;setText&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;R&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;string&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;cadena1&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;

      &lt;span class=&#34;c1&#34;&gt;// Cambiamos el texto al botón
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;      &lt;span class=&#34;n&#34;&gt;button&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;setText&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;R&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;string&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;salir&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;

      &lt;span class=&#34;c1&#34;&gt;// Evento onclick del botón, cuando se pulse,
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;      &lt;span class=&#34;c1&#34;&gt;// cerramos la actividad
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;      &lt;span class=&#34;n&#34;&gt;button&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;setOnClickListener&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;OnClickListener&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
         &lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;onClick&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;View&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
            &lt;span class=&#34;n&#34;&gt;finish&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;();&lt;/span&gt;
         &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
      &lt;span class=&#34;o&#34;&gt;});&lt;/span&gt;
   &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Para incluirlo en el documento, haremos lo siguiente:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-latex&#34; data-lang=&#34;latex&#34;&gt;\documentclass{article}

\usepackage{minted}

\newmintedfile[myJava]{java}{
    linenos,
    numbersep=5pt,
    gobble=0,
    frame=lines,
    framesep=2mm,
}

\begin{document}

Ejemplo de \textbackslash newmintedfile:
\myJava[label=&amp;#34;miCodigo.java&amp;#34;]{miCodigo.java}
\end{document}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;linenos muestra el número de línea, numbersep es la separación entre el código y el número de línea, gobble es la columna desde la que empezar a mostrar código, frame dibuja las líneas enmarcando el código y framsep es la separación entre la línea y el código.&lt;/p&gt;

&lt;p&gt;El resultado será:&lt;/p&gt;

&lt;figure&gt;
    &lt;img sizes=&#34;(min-width: 733px) 733px, 100vw&#34; on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/2013/05/newmintedfileEjemplo.png&#34; alt=&#34;newmintedfileEjemplo&#34; width=&#34;733px&#34; height=&#34;940px&#34;&gt;&lt;/img&gt;
&lt;/figure&gt;

&lt;h1 id=&#34;creando-un-comando&#34;&gt;Creando un comando&lt;/h1&gt;

&lt;p&gt;Puede resultar incómodo y pesado tener que escribir una y otra vez &lt;em&gt;\myJava[label=&amp;#8221;&lt;/em&gt;&amp;#8221;]{*.java}*. Así que creamos un comando para facilitar las cosas:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-latex&#34; data-lang=&#34;latex&#34;&gt;\newmintedfile[myJava]{java}{
    linenos,
    numbersep=5pt,
    gobble=0,
    frame=lines,
    framesep=2mm,
}
\newcommand{\myJavaCode}[2]{
    \myJava[label=#2.java]{#1.java}
}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Ahora en lugar de usar &lt;em&gt;myJava&lt;/em&gt; para incluir ficheros fuente en el documento, usamos un comando definido por nosotros (myJavaCode). Sustituyendo la línea &lt;code&gt;\myJava[label=&amp;quot;miCodigo.java&amp;quot;]{miCodigo.java}&lt;/code&gt; del ejemplo anterior por&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-latex&#34; data-lang=&#34;latex&#34;&gt;\myJavaCode{src/miCodigo}{miCodigo}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Obtenemos el mismo resultado, el primer argumento es la ruta al fichero y el segundo la etiqueta a mostrar en el documento.&lt;/p&gt;

&lt;h1 id=&#34;conclusiones&#34;&gt;Conclusiones&lt;/h1&gt;

&lt;p&gt;Para mi, minted es el mejor paquete que hay para resaltar código en &lt;strong&gt;LaTeX&lt;/strong&gt;. Y recomiendo a todo el mundo que aprenda a programar en él.&lt;/p&gt;

&lt;h1 id=&#34;referencias&#34;&gt;Referencias&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;em&gt;Manual de referencia Minted&lt;/em&gt; »» &lt;a href=&#34;http://mirror.unl.edu/ctan/macros/latex/contrib/minted/minted.pdf&#34; target=&#34;_blank&#34;&gt;Descargar&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Repositorio del paquete&lt;/em&gt; »» &lt;a href=&#34;http://code.google.com/p/minted/downloads/list&#34; target=&#34;_blank&#34;&gt;Visitar repositorio&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
        </item>
        
        <item>
            <title>Cómo Definir Colores Personalizados en LaTeX</title>
            <link>https://elbauldelprogramador.com/como-definir-colores-personalizados-en-latex/</link>
            <pubDate>Wed, 09 Dec 2015 15:55:32 +0000</pubDate>
            
            <guid>https://elbauldelprogramador.com/como-definir-colores-personalizados-en-latex/</guid>
            <description>&lt;figure&gt;
    &lt;img sizes=&#34;(min-width: 300px) 300px, 100vw&#34; on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/2013/05/latex_logo.png&#34; title=&#34;Cómo Definir Colores Personalizados en LaTeX&#34; alt=&#34;Cómo Definir Colores Personalizados en LaTeX&#34; width=&#34;300px&#34; height=&#34;114px&#34; /&gt;
&lt;/figure&gt;

&lt;blockquote&gt;
&lt;p&gt;Os traigo hoy otro artículo interesante que he encontrado en el blog de &lt;a href=&#34;http://texblog.org&#34; target=&#34;_blank&#34; title=&#34;http://texblog.org&#34;&gt;blog de Tom&lt;/a&gt;. Veremos cómo es posible definir colores personalizados en LaTeX con el paquete &lt;code&gt;xcolor&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;!--ad--&gt;&lt;/p&gt;

&lt;p&gt;Hay distintas formas de definir un color específico en LaTeX. Normalmente lo más fácil es elegir un color predefinido del paquete &lt;code&gt;xcolor&lt;/code&gt; o definirlo a mano usando el modelo RGB. Otra notación existente es &lt;code&gt;red!40!blue&lt;/code&gt;. Esta notación crea un morado con 40% rojo y 60% azul. Veamos en este artículo los distintos métodos disponibles para la especificación de colores.&lt;/p&gt;

&lt;h1 id=&#34;colores-predefinidos&#34;&gt;Colores predefinidos&lt;/h1&gt;

&lt;p&gt;El paquete &lt;a href=&#34;http://mirrors.ctan.org/macros/latex/contrib/xcolor/xcolor.pdf&#34; target=&#34;_blank&#34; title=&#34;&#34;&gt;xcolor&lt;/a&gt; trae definidos una gama amplia de colores, especificados en su &lt;a href=&#34;http://mirrors.ctan.org/macros/latex/contrib/xcolor/xcolor.pdf&#34; target=&#34;_blank&#34; title=&#34;Documentación xcolor&#34;&gt;documentación&lt;/a&gt;. Es tan simple de usar como se muestra en este trozo de código:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-latex&#34; data-lang=&#34;latex&#34;&gt;\documentclass[11pt]{article}
\usepackage{blindtext}

\usepackage[x11names]{xcolor}

\begin{document}

\textcolor{RoyalBlue2}{\blindtext}

\end{document}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;figure&gt;
    &lt;a href=&#34;https://elbauldelprogramador.com/img/xcolorlatex1.png&#34;&gt;&lt;img sizes=&#34;(min-width: 300px) 300px, 100vw&#34; on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/xcolorlatex1.png&#34; title=&#34;Cómo Definir Colores Personalizados en LaTeX&#34; alt=&#34;Cómo Definir Colores Personalizados en LaTeX&#34; width=&#34;300px&#34; height=&#34;154px&#34; /&gt;&lt;/a&gt;
    &lt;span class=&#34;image-credit&#34;&gt;Crédito de la imagen: texblog.org&lt;/span&gt;
&lt;/figure&gt;

&lt;h1 id=&#34;mezclar-colores-usando-un-modelo-de-color&#34;&gt;Mezclar colores usando un modelo de color&lt;/h1&gt;

&lt;p&gt;El paquete xcolor permite definir colores usando modelos de color (&lt;em&gt;gris, RGB, HTML, CMYK&lt;/em&gt; y otros ). Veamos un ejemplo de RGB, al que estamos más acostumbrados:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-latex&#34; data-lang=&#34;latex&#34;&gt;\documentclass[11pt]{article}
\usepackage{blindtext}

\usepackage{xcolor}
\definecolor{myOrange}{rgb}{1,0.5,0}

\begin{document}

\textcolor{myOrange}{\blindtext}

\end{document}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;figure&gt;
    &lt;a href=&#34;https://elbauldelprogramador.com/img/xcolorlatex2.png&#34;&gt;&lt;img sizes=&#34;(min-width: 300px) 300px, 100vw&#34; on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/xcolorlatex2.png&#34; title=&#34;Cómo Definir Colores Personalizados en LaTeX&#34; alt=&#34;Cómo Definir Colores Personalizados en LaTeX&#34; width=&#34;300px&#34; height=&#34;142px&#34; /&gt;&lt;/a&gt;
    &lt;span class=&#34;image-credit&#34;&gt;Crédito de la imagen: texblog.org&lt;/span&gt;
&lt;/figure&gt;

&lt;h1 id=&#34;mezclar-dos-colores&#34;&gt;Mezclar dos colores&lt;/h1&gt;

&lt;p&gt;Para terminar, el paquete xcolor también permite definir un color mediante la mezcla de dos colores predefinidos. Por ejemplo, para definir un morado con 40% de azul y 60% de rojo:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-latex&#34; data-lang=&#34;latex&#34;&gt;\documentclass[11pt]{article}
\usepackage{blindtext}

\usepackage{xcolor}
\colorlet{myPurple}{blue!40!red}

\begin{document}

\textcolor{myPurple}{\blindtext}

\end{document}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;figure&gt;
&lt;a href=&#34;https://elbauldelprogramador.com/img/xcolorlatex3.png&#34;&gt;&lt;img sizes=&#34;(min-width: 300px) 300px, 100vw&#34; on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/xcolorlatex3.png&#34; title=&#34;Cómo Definir Colores Personalizados en LaTeX&#34; alt=&#34;Cómo Definir Colores Personalizados en LaTeX&#34; width=&#34;300px&#34; height=&#34;156px&#34; /&gt;&lt;/a&gt;
&lt;span class=&#34;image-credit&#34;&gt;Crédito de la imagen: texblog.org&lt;/span&gt;
&lt;/figure&gt;

&lt;h1 id=&#34;ejemplo-colores-brillantes&#34;&gt;Ejemplo: Colores brillantes&lt;/h1&gt;

&lt;p&gt;Los colores básicos como el rojo, verde o amarillo son demasiado chillones a la vista. Para atenuar su intensidad, es posible usar el modo de definir colores de arriba y luego mezclarlos con gris. Por ejemplo, combinar el 40% del color chillón con 60% de gris atenua la intensidad del color, haciendolo más agradable a la vista, compruébalo tú mismo:&lt;/p&gt;

&lt;figure&gt;
&lt;a href=&#34;https://elbauldelprogramador.com/img/latexxcolorbrillantes.png&#34;&gt;&lt;img sizes=&#34;(min-width: 1024px) 1024px, 100vw&#34; on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/latexxcolorbrillantes.png&#34; title=&#34;Cómo Definir Colores Personalizados en LaTeX&#34; alt=&#34;Cómo Definir Colores Personalizados en LaTeX&#34; width=&#34;1024px&#34; height=&#34;291px&#34; /&gt;&lt;/a&gt;
&lt;span class=&#34;image-credit&#34;&gt;Crédito de la imagen: texblog.org&lt;/span&gt;
&lt;/figure&gt;

&lt;p&gt;Aquí el código que genera la imagen de arriba:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-latex&#34; data-lang=&#34;latex&#34;&gt;\documentclass[border=10pt,varwidth]{standalone}
\usepackage{pgffor}
\usepackage[x11names]{xcolor}

\newcommand\colorrulemix[1]{\textcolor{#1!40!gray}{\rule{1cm}{1cm}} }
\newcommand\colorrule[1]{\textcolor{#1}{\rule{1cm}{1cm}} }

\begin{document}

\begin{center}
\foreach \name in { {red},{orange},{yellow},{green},{cyan},{blue},{purple}} {
    \colorrule{\name}}

\rule{\linewidth}{1pt}
\phantom{}\par


\foreach \name in { {red},{orange},{yellow},{green},{cyan},{blue},{purple}} {
    \colorrulemix{\name}}
\end{center}
\end{document}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1 id=&#34;referencias&#34;&gt;Referencias&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;Custom Colors in LaTeX | &lt;a href=&#34;http://texblog.org/2015/12/08/custom-colors-in-latex/&#34;&gt;texblog.org&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
        </item>
        
        <item>
            <title>Ocultar Los Metaficheros De LaTeX Del Directorio De Trabajo</title>
            <link>https://elbauldelprogramador.com/ocultar-los-metaficheros-de-latex-del-directorio-de-trabajo/</link>
            <pubDate>Thu, 19 Nov 2015 09:20:00 +0000</pubDate>
            
            <guid>https://elbauldelprogramador.com/ocultar-los-metaficheros-de-latex-del-directorio-de-trabajo/</guid>
            <description>&lt;p&gt;Si trabajas habitualmente con &lt;a href=&#34;https://elbauldelprogramador.com/category/latex/&#34; title=&#34;Tutoriales sobre LaTeX&#34;&gt;LaTeX&lt;/a&gt;, estás acostumbrado a ver múltiples ficheros generados automáticamente al compilar el proyecto. Pueden llegar a molestar bastante, ya que ensucian el directorio de trabajo. Hoy explicaré dos alternativas para mover todos esos ficheros a un directorio separado para mantener un directorio de trabajo limpio.&lt;/p&gt;

&lt;h1 id=&#34;estructura-del-directorio&#34;&gt;Estructura del directorio&lt;/h1&gt;

&lt;p&gt;&lt;!--ad--&gt;&lt;/p&gt;

&lt;p&gt;La idea sería tener el directorio de trabajo organizado del siguiente modo:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;Directorio del proyecto/
&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;__ main.tex
&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;__ main.bib
&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;__ main.pdf
&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;__ chapter1.tex
&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;__ chapter2.tex
&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;__ …
&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;__ metafiles/
&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;     &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;__ main.aux
&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;     &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;__ main.bcf
&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;     &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;__ main.blg
&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;     &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;__ main.glo
&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;     &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;__ main.ist
&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;     &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;__ main.log
&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;     &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;__ main.toc
&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;     &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;__ …
&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;__ figures/
     &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;__ figure1.pdf
     &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;__ …&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1 id=&#34;mediante-un-script&#34;&gt;Mediante un script&lt;/h1&gt;

&lt;p&gt;Este script lo encontré en el blog de &lt;a href=&#34;http://texblog.org&#34; target=&#34;_blank&#34; title=&#34;TexBlog&#34;&gt;Tom&lt;/a&gt;, en su artículo &lt;a href=&#34;http://texblog.org/2015/08/20/hiding-latex-metafiles-from-project-directory/&#34; target=&#34;_blank&#34; title=&#34;Hiding LaTeX metafiles from project directory&#34;&gt;Hiding LaTeX metafiles from project directory&lt;/a&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#!/bin/bash
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# Create directory if it doesn&amp;#39;t exist
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt; ! -d &lt;span class=&#34;s2&#34;&gt;&amp;#34;metafiles&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;then&lt;/span&gt;
  mkdir metafiles
&lt;span class=&#34;k&#34;&gt;fi&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# Run pdflatex and biber with metafiles as in-/output directories
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;pdflatex -output-directory&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;metafiles main
biber --input-directory&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;metafiles --output-directory&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;metafiles main
pdflatex -output-directory&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;metafiles main
pdflatex -output-directory&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;metafiles main
makeglossaries -d metafiles main
pdflatex -output-directory&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;metafiles main

&lt;span class=&#34;c1&#34;&gt;# Create a softlink to the output PDF
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;ln -s metafiles/main.pdf&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1 id=&#34;usando-latexmk&#34;&gt;Usando latexmk&lt;/h1&gt;

&lt;p&gt;Para aportar algo al artículo de &lt;em&gt;Tom&lt;/em&gt;, miré la documentación de LatexMK, &lt;a href=&#34;https://elbauldelprogramador.com/compilar-automaticamente-ficheros-en-latex-mientras-los-modificamos/&#34; title=&#34;Compilar Automáticamente Ficheros en LaTeX Mientras Los Modificamos&#34;&gt;comando que ya hemos visto en este blog&lt;/a&gt;, y tiene la opción &lt;code&gt;-output-directory&lt;/code&gt; que permite especificar donde se guardaran todos los metaficheros, su uso es simple:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;latexmk -shell-escape -pdf -pvc -output-directory&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;metafiles main.tex&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Esto tendrá un efecto parecido al script de &lt;em&gt;Tom&lt;/em&gt;, sin embargo el pdf también queda generado dentro de esta carpeta, podemos solucionarlo con un &lt;em&gt;soft link&lt;/em&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;ln -s metafiles/main.pdf&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Espero que os haya sido de utilidad, yo ya lo uso de forma habitual.&lt;/p&gt;</description>
        </item>
        
        <item>
            <title>Compilar Automáticamente Ficheros en LaTeX Mientras Los Modificamos</title>
            <link>https://elbauldelprogramador.com/compilar-automaticamente-ficheros-en-latex-mientras-los-modificamos/</link>
            <pubDate>Thu, 25 Jun 2015 16:50:48 +0000</pubDate>
            
            <guid>https://elbauldelprogramador.com/compilar-automaticamente-ficheros-en-latex-mientras-los-modificamos/</guid>
            <description>&lt;p&gt;Para los que estéis acostumbrados a escribir vuestros documentos en LaTeX, sin ningún editor específico, sabréis que llega a ser un poco tedioso compilar cada vez que queremos ver el resultado. Hace poco, descubrí un comando, &lt;code&gt;latexmk&lt;/code&gt;, que nos facilitará bastante la vida.&lt;/p&gt;

&lt;p&gt;Si estás interesado en aprender a usar LaTeX echa un vistazo al &lt;a href=&#34;https://elbauldelprogramador.com/mini-curso-de-latex-introduccion/&#34; title=&#34;Mini curso de Latex - introducción&#34;&gt;mini curso que tenemos&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;!--ad--&gt;&lt;/p&gt;

&lt;h1 id=&#34;cómo-usar-latexmk&#34;&gt;Cómo usar latexmk&lt;/h1&gt;

&lt;p&gt;El comando &lt;code&gt;latexmk&lt;/code&gt; tiene muchas opciones, pero  en mi caso particular, no he necesitado más que estas (La opción &lt;code&gt;-shell-escape&lt;/code&gt; la uso porque normalmente utilizo el paquete &lt;a href=&#34;https://elbauldelprogramador.com/resaltar-sintaxis-del-codigo-fuente-en-latex-con-minted/&#34; title=&#34;Resaltar sintaxis del código fuente en LaTeX con minted&#34;&gt;minted&lt;/a&gt; para colorear la sintáxis del código):&lt;/p&gt;

&lt;h2 id=&#34;para-pdflatex&#34;&gt;Para pdflatex&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ latexmk -shell-escape -pdf -pvc&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;para-xelatex&#34;&gt;Para xelatex&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ latexmk -shell-escape -xelatex -pdf -pvc&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;El comando asume que en el directorio donde se ejecuta solo exite un fichero &lt;code&gt;.tex&lt;/code&gt;, de no ser así, deberemos pasarle el nombre del fichero que debe observar para detectar cambios.&lt;/p&gt;

&lt;p&gt;Una vez en ejecución, veremos en la consola algo así:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;o&#34;&gt;===&lt;/span&gt; Watching &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; updated files. Use ctrl/C to stop ...&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;A partir de ahora, cada vez que se modifique el fichero, se compilará y podremos ver el resultado.&lt;/p&gt;

&lt;h1 id=&#34;creando-alias-para-los-comandos&#34;&gt;Creando alias para los comandos&lt;/h1&gt;

&lt;p&gt;Ya que el comando es un poco largo, es recomendable crearse un alias para poder ejecutar &lt;code&gt;latexmk&lt;/code&gt; escribiendo únicamente una palabra:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;nb&#34;&gt;alias&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;mlatexmk&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;latexmk -shell-escape -pdf -pvc ; latexmk -C&amp;#39;&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;alias&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;mlatexmkx&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;latexmk -shell-escape -xelatex -pdf -pvc ; latexmk -C&amp;#39;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;latexmk -C&lt;/code&gt; eliminará todos los ficheros intermedios. Ahora, para ejecutar basta con escribir:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ mlatexmk &lt;span class=&#34;c1&#34;&gt;# Para compilar con pdflatex
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;$ mlatexmkx # Para compilar con xelatex&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
        </item>
        
        <item>
            <title>Cómo Crear Imagenes Con Un Marco Circular Al Estilo G&#43; en LaTeX</title>
            <link>https://elbauldelprogramador.com/como-crear-imagenes-con-un-marco-circular-al-estilo-g-en-latex/</link>
            <pubDate>Wed, 27 May 2015 10:28:05 +0000</pubDate>
            
            <guid>https://elbauldelprogramador.com/como-crear-imagenes-con-un-marco-circular-al-estilo-g-en-latex/</guid>
            <description>&lt;p&gt;En éste artículo vamos a ver algo curioso que aprendí hace poco. Con el paquete &lt;code&gt;tikz&lt;/code&gt; de LaTeX.&lt;/p&gt;

&lt;p&gt;Los que uséis G+ sabréis que las fotos de perfil aparecen encuadradas en un círculo, en lugar de un cuadrado. Rellenando mi Currículum se me ocurrió que podría insertar mi foto con ese mismo estilo.&lt;/p&gt;

&lt;p&gt;Por supuesto, podría haber creado la imagen directamente con forma circular, pero ya que estoy usando una plantilla LaTeX para el Curriculum, me propuse buscar la manera de implementarlo.&lt;/p&gt;

&lt;p&gt;&lt;!--ad--&gt;&lt;/p&gt;

&lt;p&gt;Resulta que es bastante sencillo, el siguiente código conseguirá el efecto deseado:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-latex&#34; data-lang=&#34;latex&#34;&gt;\documentclass[border=5mm]{article}
\usepackage[skins]{tcolorbox}

\begin{document}

  \resizebox{256pt}{256pt}{
    \begin{tikzpicture}
      \node[circle,draw,inner sep=1cm,fill overzoom image=./pictures/image.jpg] (A) {};
    \end{tikzpicture}
  }

\end{document}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Donde:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;image=./pictures/image.jpg&lt;/code&gt; es la ruta a la imagen.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;\resizebox{256pt}{256pt}&lt;/code&gt; es el tamaño que queremos.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sep=1cm&lt;/code&gt; El borde de la imagen.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Tras compilar el código, el resultado es el siguiente:&lt;/p&gt;

&lt;figure&gt;
    &lt;img sizes=&#34;(min-width: 558px) 558px, 100vw&#34; on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/Cómo-Crear-Imagenes-Con-Un-Marco-Circular-Al-Estilo-G+-en-LaTeX.jpg&#34; title=&#34;Cómo Crear Imagenes Con Un Marco Circular Al Estilo G+ en LaTeX&#34; alt=&#34;Cómo Crear Imagenes Con Un Marco Circular Al Estilo G+ en LaTeX&#34; width=&#34;558px&#34; height=&#34;559px&#34; /&gt;
&lt;/figure&gt;

&lt;h1 id=&#34;referencias&#34;&gt;Referencias&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://tex.stackexchange.com/questions/193555/crop-jpeg-into-circular-tikz-node&#34; title=&#34;Crop jpeg into circular tikz node&#34;&gt;Crop jpeg into circular tikz node&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
        </item>
        
    </channel>
</rss>
