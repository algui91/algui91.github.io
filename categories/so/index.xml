<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>So on El Baúl del programador</title>
        <link>https://elbauldelprogramador.com/categories/so/</link>
        <description>Recent content in So on El Baúl del programador</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>es-ES</language>
        <lastBuildDate>Fri, 01 Jan 2016 00:00:00 +0000</lastBuildDate>
        <image>
            <url>https://elbauldelprogramador.com/img/bio-photo-rss.png</url>
            <link>https://elbauldelprogramador.com/categories/so/</link>
            <title>So on El Baúl del programador</title>
            <width>144</width>
            <height>144</height>
        </image>
        <atom:link href="https://elbauldelprogramador.com/categories/so/" rel="self" type="application/rss+xml" />
        
        <item>
            <title>Encontrar archivos abiertos en Linux</title>
            <link>https://elbauldelprogramador.com/encontrar-archivos-abiertos-en-linux/</link>
            <pubDate>Fri, 01 Jan 2016 00:00:00 +0000</pubDate>
            
            <guid>https://elbauldelprogramador.com/encontrar-archivos-abiertos-en-linux/</guid>
            <description>&lt;p&gt;¿Cómo podemos saber cuantos archivos tenemos abiertos o hasta cuantos podemos permitir que están abiertos en Linux?&lt;/p&gt;

&lt;p&gt;Por defecto el kernel de Linux establece un límite (para propósitos de seguridad) de hasta cuantos descriptores de archivos abiertos están permitidos en los sitemas linux servidor o escritorio.&lt;/p&gt;

&lt;p&gt;El archivo &lt;a target=&#34;_blank&#34; href=&#34;http://www.cyberciti.biz/tips/linux-procfs-file-descriptors.html&#34;&gt;/proc/sys/fs/file-nr&lt;/a&gt; es un archivo de solo lectura que proporciona el número de archivos actuales abiertos.&lt;/p&gt;

&lt;p&gt;&lt;!--ad--&gt;&lt;/p&gt;

&lt;h1 id=&#34;encontrar-cuantos-archivos-hay-abiertos&#34;&gt;Encontrar cuantos archivos hay abiertos&lt;/h1&gt;

&lt;p&gt;Para ver el estado actual, introducimos:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;cat /proc/sys/fs/file-nr
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Ó:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;/sbin/sysctl fs.file-nr
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Como salida podemos obtener (en mi caso):&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;5344&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt; 205074
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Este resultado contiene 3 números que significan:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;em&gt;5344&lt;/em&gt;&lt;/strong&gt;: El número de archivos asignados a manipular.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;em&gt;0&lt;/em&gt;&lt;/strong&gt;: El número de manejadores libres.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;em&gt;205074&lt;/em&gt;&lt;/strong&gt;: El número máximo de manejadores de archivos.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;El kernel de Linux asigna los identificadores de archivos de forma dinámica, pero no los libera de nuevo. Si el número de archivos asignados se encuentra cercano al máximo, se debe considerar aumentar el &lt;a target=&#34;_blank&#34; href=&#34;http://www.cyberciti.biz/faq/linux-increase-the-maximum-number-of-open-files/&#34;&gt;número máximo de archivos abiertos permitidos&lt;/a&gt; editando el archivo &lt;a target=&#34;_blank&#34; href=&#34;http://www.cyberciti.biz/faq/making-changes-to-proc-filesystem-permanently/&#34;&gt;/etc/sysctl.conf&lt;/a&gt;&lt;/p&gt;</description>
        </item>
        
        <item>
            <title>Entendiendo los runlevel en Debian</title>
            <link>https://elbauldelprogramador.com/entendiendo-los-runlevel-en-debian-y-ubuntu/</link>
            <pubDate>Fri, 01 Jan 2016 00:00:00 +0000</pubDate>
            
            <guid>https://elbauldelprogramador.com/entendiendo-los-runlevel-en-debian-y-ubuntu/</guid>
            <description>&lt;p&gt;Visto de forma simple, los runlevel  determinan qué programas se ejecutan al inicio del sistema.&lt;/p&gt;

&lt;p&gt;Existen 7 runlevel, numerados del 0 al 6 , aunque es posible crear más. Cada runlevel tiene los siguientes roles:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;0    » Apagado del sistema&lt;/li&gt;
&lt;li&gt;1    » Modo monousuario&lt;/li&gt;
&lt;li&gt;2    » Modo multiusuario (Por defecto)&lt;/li&gt;
&lt;li&gt;3-5  » Igual que runlevel 2&lt;/li&gt;
&lt;li&gt;6    » Reinicio del sistema&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Pasemos a describir cada runlevel:&lt;/p&gt;

&lt;p&gt;&lt;!--ad--&gt;&lt;/p&gt;

&lt;p&gt;El runlevel 0 es la condición de apagado del sistema. La mayoría de ordenadores actuales se apagarán al llegar a este nivel.&lt;/p&gt;

&lt;p&gt;El 1 es conocido como de monousuario o usuario único. Suele llamarsele modo de rescate (&lt;em&gt;rescue mode ó trouble-shooting&lt;/em&gt;). En este nivel no se ejecuta ningún servicio o demonio. Normalmente es posible iniciar el sistema en modo rescate desde el &lt;a href=&#34;https://elbauldelprogramador.com/grub-customizer-20-personaliza-tu-grub2/&#34; title=&#34;Grub Customizer 2.0, personaliza tu GRUB2&#34;&gt;GRUB&lt;/a&gt;, o añadiendo la palabra &lt;strong&gt;single&lt;/strong&gt; al final de la línea de comandos del kernel.&lt;/p&gt;

&lt;p&gt;Del runlevel 2 al 5 son modos multiusuario, y el modo usado por defecto.&lt;/p&gt;

&lt;p&gt;Si el 0 era la condición de apagado, el 6 es la señal de reinicio del sistema. Es exactamente igual que el runlevel 0 salvo que reinicia al terminar la secuencia en lugar de apagar.&lt;/p&gt;

&lt;h1 id=&#34;dónde-residen-los-run-level&#34;&gt;¿Dónde residen los Run Level?&lt;/h1&gt;

&lt;p&gt;Como todo en un sitema Linux, están definidos mediante ficheros, y se encuentran bajo el directorio &lt;code&gt;/etc&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;/etc/rc0.d      Run level 0
/etc/rc1.d       Run level 1
/etc/rc2.d       Run level 2
/etc/rc3.d       Run level 3
/etc/rc4.d       Run level 4
/etc/rc5.d       Run level 5
/etc/rc6.d       Run level 6
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Echemos un vistazo al contenido del runlevel 2:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;$ ls /etc/rc2.d/
README      S15nfs-common      S17sudo     S19anacron  S19dbus   S19speech-dispatcher  S20network-manager  S21pulseaudio  S22libvirt-guests  S23rmnologin
S01motd     S17binfmt-support  S18apache2  S19atd      S19exim4  S20avahi-daemon       S21gdm3             S21saned       S23minissdpd
S14rpcbind  S17rsyslog         S19acpid    S19cron     S19rsync  S20bluetooth          S21libvirt-bin      S22bootlogs    S23rc.local
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Cada fichero es un enlace simbólico a su respectivo &lt;a href=&#34;https://elbauldelprogramador.com/&#34;&gt;script&lt;/a&gt; residente en &lt;code&gt;/etc/init.d&lt;/code&gt;. Estos scripts controlan la detención o inicio de un servicio.&lt;/p&gt;

&lt;p&gt;El nombre de los enlaces de estos directorios puede ser poco intuitivos al principio, pero veamos su significado, la sintaxis es:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;K &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; S&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; + nn + &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;string&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Es decir, la primera letra del nombre puede ser una &lt;strong&gt;K&lt;/strong&gt; o una &lt;strong&gt;S&lt;/strong&gt;, seguidas de un número de dos dígitos, del 01 al 99 y por último una cadena de texto. La K significa que el servicio será detenido al entrar al runlevel (Kill), la S para iniciarlo (Start). El número indica la prioridad del servicio dentro del runlevel, por ejemplo, &lt;strong&gt;S02apache&lt;/strong&gt; y &lt;strong&gt;S01php&lt;/strong&gt; iniciará primero php y luego apache. Si dos servicios tienen el mismo orden de prioridad numérico, se procede en orden alfabético.&lt;/p&gt;

&lt;h1 id=&#34;cómo-determinar-en-qué-runlevel-se-encuentra-el-sistema&#34;&gt;Cómo determinar en qué runlevel se encuentra el sistema&lt;/h1&gt;

&lt;p&gt;El comando &lt;strong&gt;runlevel&lt;/strong&gt; mostará el último runlevel que fue ejecutado, y el actual:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;$ runlevel
N 2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;La &lt;strong&gt;N&lt;/strong&gt; significa None, informando de que no ha habido ningún cambio de runlevel desde que se inició el sistema. &lt;strong&gt;2&lt;/strong&gt; es el runlevel actual.&lt;/p&gt;

&lt;p&gt;Para moverse de un runlevel a otro basta con ejectar el comando &lt;strong&gt;telinit&lt;/strong&gt; seguido del número del runlevel deseado. Aunque pueda parecer correcto, no se recomienda apagar o reiniciar el sistema cambiando a los runlevel 0 o 6.&lt;/p&gt;

&lt;h1 id=&#34;cómo-agregar-un-servicio-a-un-runlevel&#34;&gt;Cómo agregar un servicio a un runlevel&lt;/h1&gt;

&lt;p&gt;Si deseamos agregar un servicio a un runlevel deberemos usar el comando &lt;strong&gt;update-rc.d&lt;/strong&gt;. Por ejemplo, si quieres que &lt;strong&gt;nginx&lt;/strong&gt; o &lt;strong&gt;Apache&lt;/strong&gt; se ejecuten en cada inicio del sistema, basta con agregarlos a los runlevel 2-5, correspondientes al modo multiusuario:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# update-rc.d nginx start 90 2 3 4 5 . stop 01 0 1 6 .&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;El 90 es el número de prioridad para el inicio (&lt;strong&gt;S90nginx&lt;/strong&gt;) aplicado a los runlevles 2-5, el 01 para la prioridad de detención (&lt;strong&gt;K01nginx&lt;/strong&gt;) en los runlevel 0 1 y 6. Lo más sencillo es aplicar los valores por defecto con&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# update-rc.d nginx defaults&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;A continuación varios ejemplos extraidos del manual de &lt;strong&gt;update-rc.d:&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;EXAMPLES
       Insert links using the defaults:
          update-rc.d foobar defaults
       The equivalent dependency header would have start and stop
       dependencies on $remote_fs and $syslog, and start in
       runlevels 2-5 and stop in runlevels 0, &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt; and 6.
       Equivalent &lt;span class=&#34;nb&#34;&gt;command&lt;/span&gt; using explicit argument sets:
          update-rc.d foobar start &lt;span class=&#34;m&#34;&gt;20&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;2&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;3&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;4&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;5&lt;/span&gt; . stop &lt;span class=&#34;m&#34;&gt;20&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;6&lt;/span&gt; .
       More typical &lt;span class=&#34;nb&#34;&gt;command&lt;/span&gt; using explicit argument sets:
          update-rc.d foobar start &lt;span class=&#34;m&#34;&gt;30&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;2&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;3&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;4&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;5&lt;/span&gt; . stop &lt;span class=&#34;m&#34;&gt;70&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;6&lt;/span&gt; .
       Insert links at default runlevels when B requires A
          update-rc.d script_for_A defaults &lt;span class=&#34;m&#34;&gt;80&lt;/span&gt; 20
          update-rc.d script_for_B defaults &lt;span class=&#34;m&#34;&gt;90&lt;/span&gt; 10
       Insert a link to a service that &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;presumably&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; will not be needed by any other daemon
          update-rc.d top_level_app defaults &lt;span class=&#34;m&#34;&gt;98&lt;/span&gt; 02
       Insert links &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; a script that requires services that start/stop at sequence number 20
          update-rc.d script_depends_on_svc20 defaults &lt;span class=&#34;m&#34;&gt;21&lt;/span&gt; 19
       Remove all links &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; a script &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;assuming foobar has been deleted already&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;:
          update-rc.d foobar remove
       Example of disabling a service:
          update-rc.d -f foobar remove
          update-rc.d foobar stop &lt;span class=&#34;m&#34;&gt;20&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;2&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;3&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;4&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;5&lt;/span&gt; .
       Example of a &lt;span class=&#34;nb&#34;&gt;command&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; installing a system initialization-and-shutdown script:
          update-rc.d foobar start &lt;span class=&#34;m&#34;&gt;45&lt;/span&gt; S . stop &lt;span class=&#34;m&#34;&gt;31&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;6&lt;/span&gt; .
       Example of a &lt;span class=&#34;nb&#34;&gt;command&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; disabling a system initialization-and-shutdown script:
          update-rc.d -f foobar remove
          update-rc.d foobar stop &lt;span class=&#34;m&#34;&gt;45&lt;/span&gt; S .
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h1 id=&#34;referencias&#34;&gt;Referencias&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;em&gt;An introduction to run-levels&lt;/em&gt; »» &lt;a href=&#34;http://www.debian-administration.org/articles/212&#34; target=&#34;_blank&#34;&gt;Visitar sitio&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
        </item>
        
        <item>
            <title>Introducción a los Procesos</title>
            <link>https://elbauldelprogramador.com/introduccion-los-procesos/</link>
            <pubDate>Fri, 01 Jan 2016 00:00:00 +0000</pubDate>
            
            <guid>https://elbauldelprogramador.com/introduccion-los-procesos/</guid>
            <description>&lt;h1 id=&#34;1-concepto&#34;&gt;1 . Concepto&lt;/h1&gt;

&lt;p&gt;El proceso se puede definir como un programa en ejecución y, de una forma más precisa, como la unidad de procesamiento gestionada por el sistema operativo. Todos los programas cuya ejecución solicitan los usuarios lo hacen en forma de procesos, de ahí la importancia de conocerlos en detalle.&lt;/p&gt;

&lt;p&gt;&lt;!--ad--&gt;&lt;/p&gt;

&lt;h1 id=&#34;1-2-composición-y-estructura&#34;&gt;1.2 . Composición y estructura&lt;/h1&gt;

&lt;p&gt;El sistema operativo mantiene una tabla de procesos, dentro de la que se alamacena un &lt;strong&gt;bloque de control de proceso (BCP)&lt;/strong&gt; por cada proceso. Por razones de eficiencia, la tabla de procesos se contruye normalmente como una estructura estática que tiene un determinado número de BCP, todos ellos del mismo tamaño.&lt;/p&gt;

&lt;p&gt;El BCP contiene la información básica del proceso:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Información de indentificación:&lt;/strong&gt; Esta información indentifica al usuario y al proceso. Como ejemplo, se incluyen los siguientes datos:

&lt;ul&gt;
&lt;li&gt;Identificador del proceso.&lt;/li&gt;
&lt;li&gt;Identificador del proceso padre en caso de existir relaciones padre-hijo como es el caso de UNIX.&lt;/li&gt;
&lt;li&gt;Información sobre el usuario (identificador del usuario, identificador del grupo).&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Estado del procesador:&lt;/strong&gt; Contiene los valores iniciales del estado del procesador o su valor en el instante en que fue interrumpido el proceso.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Información de control del proceso:&lt;/strong&gt; En esta sección se incluye diversa información que permite gestionar el proceso. Destacaremos los siguientes datos:

&lt;ul&gt;
&lt;li&gt;Información de planificación y estado:&lt;/li&gt;
&lt;li&gt;Estado del proceso.&lt;/li&gt;
&lt;li&gt;Evento por el que espera el proceso cuando está bloqueado.&lt;/li&gt;
&lt;li&gt;Prioridad del proceso.&lt;/li&gt;
&lt;li&gt;Información de planificación.&lt;/li&gt;
&lt;li&gt;Descripción de los segmentos de memoria asignados al proceso.&lt;/li&gt;
&lt;li&gt;Recursos asignados, tales como:&lt;/li&gt;
&lt;li&gt;Archivos abiertos (tablas de descriptores o manejadores de archivo).&lt;/li&gt;
&lt;li&gt;Puertos de comunicación asignados&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Punteros&lt;/strong&gt; para estructurar los procesos en colas o anillos: Por ejemplo, los procesos que están en estado de listo pueden estar organizados en una cola, de forma que se facilite la labor del planificador.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Comunicación entre procesos:&lt;/strong&gt; El BCP puede contener espacio para almacenar las señales y para algún mensaje enviado al proceso.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;1-3-estados-y-transiciones&#34;&gt;1.3 . Estados y transiciones&lt;/h1&gt;

&lt;p&gt;Un proceso puede encontrarse en tres estados diferentes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;En ejecución:&lt;/strong&gt; En este estado se encuentra el proceso que está siendo ejecutado por el procesador. El estado del procesador residirá en los registros del procesador.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Bloqueado:&lt;/strong&gt; Un proceso bloqueado está esperando a que ocurra un evento y no puede seguir ejecutandose hasta que termine el eventol. Una situación típica de proceso bloqueado se produce cuando el proceso solicita una operación E/S (Entrada / Salida). Hasta que no termina esta operación, el proceso queda bloqueado. En este estado el proceso reside en BCP.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Listo:&lt;/strong&gt; Un proceso está listo para ejecutar cuando puede entrar en fase de procesamiento. Dado que puede haber varios procesos en este estado, una de las tareas del sistema operativo será seleccionar aquel que debe pasar a ejecución. El módulo del SO que toma esta decisión se denomina &lt;strong&gt;planificador.&lt;/strong&gt; En este estado el proceso reside en BCP.&lt;/li&gt;
&lt;/ul&gt;

&lt;figure&gt;
    &lt;img sizes=&#34;(min-width: 445px) 445px, 100vw&#34; on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; alt=&#34;Estado Procesos&#34; title=&#34;Estado de los procesos&#34;  height=&#34;267&#34; width=&#34;445&#34; src=&#34;https://4.bp.blogspot.com/-BOayf2Lle4g/TVg7VxeOZII/AAAAAAAAAW0/O6u9ZEGonWg/s800/estados.png&#34;&gt;&lt;/img&gt;
&lt;/figure&gt;

&lt;p&gt;La &lt;strong&gt;transición&lt;/strong&gt; entre cada uno de los tres estados puede hacerse de la siguiente manera:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Transición 1.&lt;/strong&gt; Ocurre cuando el programa que está en ejecución necesita algún elemento, señal, datos etc, para poder continuar ejecutandose.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Transición 2.&lt;/strong&gt; Cuando un programa o proceso ha utilizado el tiempo asignado por la CPU (procesador) para su ejecución y tiene que dejar paso al siguiente proceso.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Transición 3.&lt;/strong&gt; Cuando el proceso que está listo pasa al estado de ejecución; es decir, cuando al proceso le llega una nueva disposición del tiempo de la CPU para poder ejecutarse.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Transición 4.&lt;/strong&gt; Cuando el proceso pasa de estar bloqueado a estar listo, es decir, cuando el proceso recibe una orden o señal que estaba esperando para pasar al estado de listo y posteriormente, tras la transición 3, pasar a ejecución.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;características&#34;&gt;Características&lt;/h1&gt;

&lt;p&gt;Las características principales de los procesos son:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Una característica fundamental de los procesos concurrentes es la competencia que se establece entre ellos cuando han de compartir recursos.&lt;/li&gt;
&lt;li&gt;Cooperación, cuando dos o más procesos se están llevando a cabo de manera que uno depende del otro es necesario que exista una cooperación entre ambos.&lt;/li&gt;
&lt;li&gt;Se pueden formar familias de procesos según sean o no interdependientes.&lt;/li&gt;
&lt;li&gt;Una operación que sufren los procesos usualmente es el &lt;strong&gt;cambio de contexto&lt;/strong&gt;, que consiste en retirar el control de la CPU del proceso actual, y asignarla a otro proceso.&lt;/li&gt;
&lt;li&gt;Los sistemas operativos deben proporcionar alguna forma de crear y destruir los procesos. Cada proceso tiene un padre y cero o más hijos. Así, existe una jerarquía de procesos que se puede representar en forma de árbol.&lt;/li&gt;
&lt;/ul&gt;</description>
        </item>
        
        <item>
            <title>Por qué nuestro PC necesita un firewall activado</title>
            <link>https://elbauldelprogramador.com/por-que-nuestro-pc-necesita-un-firewall/</link>
            <pubDate>Fri, 01 Jan 2016 00:00:00 +0000</pubDate>
            
            <guid>https://elbauldelprogramador.com/por-que-nuestro-pc-necesita-un-firewall/</guid>
            <description>&lt;p&gt;Hace poco os hablé de &lt;a href=&#34;https://elbauldelprogramador.com/por-que-gnulinux-no-es-solo-para-geeks&#34;&gt;por qué Linux no era solo para geeks&lt;/a&gt;, sacando el tema de la seguridad, en este post se habla sobre la seguridad en la red&lt;/p&gt;

&lt;p&gt;¿Por qué es necesario convencer a todo el mundo que es necesario activar un cortafuegos (Firewall) en los ordenadores que tienen acceso a internet?, ya sean de escritorio o servidores. Se podría pensar que la tarea de un firewall es obvia para cualquier usuario que posea un ordenador. Sin embargo, circulan comentarios acerca de este tema que no lo hacen del todo cierto.&lt;/p&gt;

&lt;p&gt;Podemos tomar como ejemplo el &lt;a target=&#34;_blank&#34; href=&#34;http://chakra-project.org/bbs/viewtopic.php?id=5185&#34;&gt;foro Chakra&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;También estoy en contra del uso del firewall (¿cuanta gente navega con un módem usb en linux, o desactiva el firewall del router?)&lt;/em&gt;&lt;/strong&gt;&lt;em&gt;, ¿Qué tipo de web porno o qué tipo de script hay que visitar/ejecutar para infectarte de malware en Linux? y puesto que tal vez 3 de cada mil personas por lo general descargan y ejecutan un script sin leerlo, ¿debo tener mi ordenador llenas de este software? En serio: ¿cuantas veces ejecutaste amarok o VLC y encontraste un exploit que hizo colgarse al pc?&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;O &lt;a target=&#34;_blank&#34; href=&#34;http://www.linuxbsdos.com/2010/07/20/pclinuxos-2010-review/comment-page-2/#comments&#34;&gt;este&lt;/a&gt; otro de los fans de PCLinuxOS:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Casi todas las distros incluyen un firewall, pero está desactivado por defecto. No creo en la teoría de &amp;#8220;una única configuración del firewall arregla todo&amp;#8221;. Mis necesidades son diferentes a las vuestras. Incluyan el firewall, coloquen un icono en un lugar fácil de encontrar y dejen que nosotros hagamos el resto.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&amp;#8230;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Al principio el firewall venía habilitado, pero la mayoría de los usuarios se quejaban por ello y los desarrolladores lo desabilitaron. PErsonalmente cada usuario deberia elegir si quiere activarlo o no.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&amp;#8230;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Prefieren el icono del firewall en el escritorio para que puedan configurarlo ellos mismos basandose en sus necesidades personales.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Lo que revelan estos comentarios es que muchos en nuestra comunidad no entienden las bases de la seguridad de red. Espero que este corto artículo pueda dejar un poco más claro este tema.&lt;/p&gt;

&lt;p&gt;&lt;!--ad--&gt;&lt;/p&gt;

&lt;p&gt;Lo fundamental en esta discusión es comprender el papel general que desempeña un firewall en un ordenador o sistema de ordenadores. En términos simples, un firewall protege un ordenador de ataques de red. Y hay firewalls basados en host y en red. Un firewall basado en host es aquel que se ejecuta y protege a un solo dispositivo. Ese sería el que se ejecuta en un ordenador personal, ya sea sobre un sistema Linux, BSD o cualquier otro sistema operativo.&lt;/p&gt;

&lt;p&gt;Por otro lado, un firewall basado en red es aquel ejecutandose en un dispositivo al borde o en el perímetro de una red. Este dispositivo puede ser un router, un switch o un dispositivo VPN. Tu router por cable, DSL o fibra óptica está en esta categoría. El error que mucha gente comete es pensar que si tienen un firewall un uno de estos dispositvos, no necesitan otro en el ordenador personal situado detrás del router. Un mal pensamiento.&lt;/p&gt;

&lt;p&gt;En una red de ordenadores, uno de ellos permite el acceso desde el exterior, la mejor practica de seguridad requiere que cada nodo de la red tenga por sí mismo seguridad, uno que trabaja en conjunto con el firewall perimetral (y también con otras medidas de seguridad). En la jerga profesional a esta practica se la conoce como &lt;strong&gt;seguridad en profundidad (Security in-depth)&lt;/strong&gt;. Se trata de un enfoque de seguridad por capas y este enfoque no es exclusivo del mundo de la informática. Se puede observar donde quiera que se mire. Por ejemplo, supón que vives en un complejo amurallado, ¿Dejarias las puertas y las ventanas de tu casa abiertas simplemente poque tienes una cerca alrededor?, por supuesto que no. O ¿dejarías tu coche abierto simplemente porque está en un parking? Probablemente tampoco. Las razones son obvias.&lt;/p&gt;

&lt;p&gt;El mismo razonamiento y principio se debería aplicar a las redes locales. A parte del firewall perimetral, de otro ejecutandose en el dispositivo en el borde de la red (El router p.e), también deberías tener un firewall basado en host ejecutandose en tu ordenador de escritorio, servidor, netbook o notebook. Este enfoque por capas garantiza que si hay una brecha en tu defensa perimetral, si álguien &lt;em&gt;salta&lt;/em&gt; la &lt;em&gt;cerca&lt;/em&gt;, tu ordenador no estará &lt;em&gt;abierto&lt;/em&gt; para los intrusos.&lt;/p&gt;

&lt;p&gt;Por lo tanto, solo porque tu equipo esté detrás de router por cable, DSL o fibra óptica con un firewall activado no implica que podamos desabilitar el firewall basado en host (En nuestro pc). &lt;strong&gt;Security in-depth.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Los mejores firewalls son capaces de realizar inspecciones de estado completas (&lt;strong&gt;stateful inspection&lt;/strong&gt;), también llamadas &lt;strong&gt;Stateful packet Filtering&lt;/strong&gt;, la cuales dictan que todas las conexiones salientes están permitidas mientras todas las conexiones entrantes que no están relacionadas con una conexión saliente esté bloqueada.&lt;/p&gt;

&lt;p&gt;Algunas de las mejores distros linux, como Fedora, tienen un firewall habilitado fuera del nucleo. Así es como debe ser. El kernel linux tiene un firewall incorporado (Vale también par alos BSD), y hay varias interfaces gráficas para manejarlo. Lo menos que podemos esperar de los desarrolladores de las distros es que ser permita activarlo fuera del nucleo.&lt;/p&gt;

&lt;p&gt;Tracucción de : &lt;a target=&#34;_blank&#34; href=&#34;http://www.linuxbsdos.com/2011/11/21/why-your-computer-needs-a-firewall-enabled/&#34;&gt;linuxbsdos.com&lt;/a&gt;&lt;/p&gt;</description>
        </item>
        
    </channel>
</rss>
