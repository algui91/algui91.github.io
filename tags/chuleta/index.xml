<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Chuleta on El Baúl del programador</title>
        <link>https://elbauldelprogramador.com/tags/chuleta/index.xml</link>
        <description>Recent content in Chuleta on El Baúl del programador</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>es-ES</language>
        <image>
            <url>https://elbauldelprogramador.com/img/bio-photo-rss.png</url>
            <link>https://elbauldelprogramador.com/tags/chuleta/index.xml</link>
            <title>Chuleta on El Baúl del programador</title>
            <width>144</width>
            <height>144</height>
        </image>
        <atom:link href="https://elbauldelprogramador.com/tags/chuleta/index.xml" rel="self" type="application/rss+xml" />
        
        <item>
            <title>Chuleta De Comandos / Atajos De Teclado / Paquetes más útiles para Emacs</title>
            <link>https://elbauldelprogramador.com/chuleta-atajos-teclado-emacs/</link>
            <pubDate>Tue, 30 Aug 2016 14:10:30 +0000</pubDate>
            
            <guid>https://elbauldelprogramador.com/chuleta-atajos-teclado-emacs/</guid>
            <description>&lt;p&gt;No es la primera vez que se publica en el blog una &lt;a href=&#34;https://elbauldelprogramador.com/tags/chuleta&#34; title=&#34;Artículos sobre chuletas&#34;&gt;chuleta&lt;/a&gt; de algo:&lt;/p&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://elbauldelprogramador.com/dig-chuleta-basica-de-comandos/&#34; title=&#34;Chuleta básica de comandos Dig&#34;&gt;Chuleta de comandos para dig&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://elbauldelprogramador.com/mini-tutorial-y-chuleta-de-comandos-git/&#34; title=&#34;Chuleta de comandos para Git&#34;&gt;Git: Chuleta de comandos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://elbauldelprogramador.com/chuleta-de-comandos-para-gpg/&#34; title=&#34;Chuleta de comandos para GPG&#34;&gt;Chuleta de comandos GPG&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://elbauldelprogramador.com/chuleta-markdown-para-wordpress/&#34; title=&#34;Chuleta de comandos de Markdown&#34;&gt;Chuleta de comandos MarkDown&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;La de hoy va sobre &lt;em&gt;Emacs&lt;/em&gt;. La idea es que esta chuleta la creemos entre todos. Que cada uno aporte su granito de arena para crear la &lt;strong&gt;chuleta de atajos de teclado/comandos/paquetes para emacs definitiva&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;A lo largo del poco tiempo que llevo usando &lt;a href=&#34;https://elbauldelprogramador.com/tags/emacs&#34; title=&#34;Artículos sobre emacs&#34;&gt;emacs&lt;/a&gt;, ya he ido descubriendo los atajos que me resultan más útiles para mi día a día, empecemos:&lt;/p&gt;

&lt;h1 id=&#34;paquetes-útiles&#34;&gt;Paquetes útiles&lt;/h1&gt;

&lt;h2 id=&#34;yasnippet&#34;&gt;Yasnippet&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://www.emacswiki.org/emacs/Yasnippet&#34; title=&#34;Página oficial de YaSnippet&#34;&gt;YaSnippet&lt;/a&gt; es un sistema de plantillas para &lt;strong&gt;emacs&lt;/strong&gt;, es uno de los paquetes que recomiendo instalar, ya que te facilita mucho la vida. Por defecto ya trae configurados muchos &lt;em&gt;snippets&lt;/em&gt; para todos los lenguajes, pero podemos configurar más a nuestro gusto. Por ejemplo:&lt;/p&gt;

&lt;p&gt;&lt;!--ad--&gt;&lt;/p&gt;

&lt;p&gt;Una de las plantillas que tengo para escribir en el blog es:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# -*- mode: snippet -*-&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# name: Modified&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# key: mod&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# # modified: 2016-$1-$2T$3:$4$0&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# --&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;lastmod&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;`(format-time-string &amp;quot;&lt;/span&gt;%Y-%m-%dT%H:%M:%S+01:00&lt;span class=&#34;s2&#34;&gt;&amp;quot;)`&amp;quot;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$0&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;En los comentarios se especifica el nombre del &lt;em&gt;snippet&lt;/em&gt;, la palabra que lo lanzará (&lt;em&gt;mod&lt;/em&gt;) en este caso. Así, al escribir &lt;code&gt;mod&lt;/code&gt; y pulsar el tabulador se insertará en el editor:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;lastmod&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;2017-03-08T16:58:45+01:00&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Otro ejemplo:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# -*- mode: snippet -*-&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# name: CodeBlock&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# key: code&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# --&lt;/span&gt;
&lt;span class=&#34;se&#34;&gt;\`\`\`&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$1&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;$2&lt;/span&gt;
&lt;span class=&#34;se&#34;&gt;\`\`\`&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Este otro &lt;em&gt;snippet&lt;/em&gt; lo uso para insertar código en &lt;em&gt;Markdown&lt;/em&gt;, al escribir &lt;code&gt;code&lt;/code&gt; y pulsar el tabulador, me inserta en el texto las tres tildes ``` con el cursor situado en &lt;em&gt;$1&lt;/em&gt; para que escriba el lenguaje en el que resaltará la sintáxis, y al volver a pulsar el tabulador el cursor se posiciona dentro del bloque de código para que comience a escribir.&lt;/p&gt;

&lt;h1 id=&#34;miscelánica-taréas-habituales&#34;&gt;Miscelánica / Taréas habituales&lt;/h1&gt;

&lt;h2 id=&#34;buscar-y-reemplazar-en-varios-ficheros&#34;&gt;Buscar y reemplazar en varios ficheros&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Problema:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Queremos buscar por una &lt;a href=&#34;https://elbauldelprogramador.com/tags/regex&#34; title=&#34;Artículos sobre expresiones regulares&#34;&gt;expresión regular&lt;/a&gt; o un texto simple en varios ficheros a la vez, o un directorio completo, y reemplazar el texto encontrado por otro.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Solución:&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Ejecutar &lt;code&gt;M-x find-name-dired&lt;/code&gt;: e introducir el directorio en el que están los ficheros.&lt;/li&gt;
&lt;li&gt;Pulsar &lt;code&gt;t&lt;/code&gt; para “marcar” todos los ficheros del directorio.&lt;/li&gt;
&lt;li&gt;Pulsar &lt;code&gt;Q&lt;/code&gt; para ejecutar el comando &lt;code&gt;query-replace&lt;/code&gt; para todos los ficheros marcados.&lt;/li&gt;
&lt;li&gt;Una vez escrita la expresión regular, se nos pide confirmación para cada fichero, podemos pulsar &lt;code&gt;espacio&lt;/code&gt; para reemplazar la expresión en el fichero, &lt;code&gt;n&lt;/code&gt; para descartarla, o &lt;code&gt;A&lt;/code&gt; para reemplazar la expresión en todos los ficheros.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Fuente&lt;/strong&gt;: &lt;a href=&#34;http://stackoverflow.com/a/271136/1612432&#34; title=&#34;Using Emacs to recursively find and replace in text files not already open&#34;&gt;Using Emacs to recursively find and replace in text files not already open&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;selección-rectangular&#34;&gt;Selección rectangular&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Problema:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;A veces queremos seleccionar una región de texto y realizar una acción sobre ella, por ejemplo eliminar espacios en blanco, añadir algún texto delante de cada frase etc.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Solución:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Supongamos que tenemos el siguiente texto:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;línea 1
línea 2
línea 3
línea 4
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Y queremos transformarla a:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;- línea 1
- línea 2
- línea 3
- línea 4
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Para ello seleccionamos la región, y pulsamos &lt;code&gt;C-x r t&lt;/code&gt;, nos preguntará qué texto queremos introducir, le damos a enter y listo. Otras combinaciones para operar en selecciones rectangulares:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;C-x r k&lt;/code&gt;: &lt;em&gt;Kill&lt;/em&gt; el texto de la región seleccionada.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;C-x r d&lt;/code&gt;: &lt;em&gt;Borra&lt;/em&gt; el texto de la región seleccionada.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;C-x r y&lt;/code&gt;: Pega (&lt;em&gt;Yank&lt;/em&gt;) la última región borrada (Con &lt;em&gt;kill&lt;/em&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;C-x r o&lt;/code&gt;: Inserta espacios en blanco para rellenar el espacio de la región seleccionada.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;M-x clear-rectangle&lt;/code&gt;: Reemplaza la selección con espacios.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;M-x delete-white-spaces-rectangle&lt;/code&gt;: Elimina los espacios en blanco a la izquierda.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;C-x r t string RET&lt;/code&gt;: Reemplaza el contenido del rectángulo con &lt;em&gt;string&lt;/em&gt; en cada línea. (El ejemplo visto)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;M-x string-insert-rectangle RET string RET&lt;/code&gt;: Inserta &lt;em&gt;string&lt;/em&gt; en cada línea del rectángulo.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Fuente&lt;/strong&gt;: &lt;a href=&#34;http://www.delorie.com/gnu/docs/emacs/emacs_68.html&#34; title=&#34;GNU Emacs Manual&#34;&gt;GNU Emacs Manual&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;reemplazar-un-carácter-con-un-salto-de-línea&#34;&gt;Reemplazar un carácter con un salto de línea&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Problema:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Supongamos que tenemos un texto mal formateado, y queremos reemplazar un caracter en concreto por un salto de línea. Esto suele pasar por ejemplo al leer ficheros con codificaciones distintas. En los que el salto de línea se interpreta de otro modo. A modo de ejemplo, supongamos que vamos a reemplazar el caracter &lt;code&gt;^N&lt;/code&gt; por un salto de línea. Tenemos este texto:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;Lorem ipsum dolor sit amet^N, consectetur adipiscing elit.^N Fusce vestibulum.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Solución:&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Pulsar &lt;code&gt;M-x replace-string&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Introducimos el texto que queremos reemplazar, en este caso &lt;code&gt;^N&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Insertamos el salto de línea, para ello, pulsar:

&lt;ol&gt;
&lt;li&gt;&lt;code&gt;C-q&lt;/code&gt;: Para decirle a emacs que vamos a insertar un caracter en crudo (&lt;em&gt;raw&lt;/em&gt;).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;C-j&lt;/code&gt;: Esta combinación se corresponde con el salto de línea&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;li&gt;Pulsamos &lt;code&gt;Enter&lt;/code&gt; y deberíamos tener el siguiente texto:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;Lorem ipsum dolor sit amet
, consectetur adipiscing elit.
 Fusce vestibulum.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Fuente:&lt;/strong&gt; &lt;a href=&#34;http://stackoverflow.com/a/613029/1612432&#34; title=&#34;How to replace a character with a newline in Emacs?&#34;&gt;How to replace a character with a newline in Emacs?&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;eliminiar-los-espacios-en-blanco-sobrantes-al-final-de-una-línea&#34;&gt;Eliminiar los espacios en blanco sobrantes al final de una línea&lt;/h2&gt;

&lt;p&gt;Basta ejecutar &lt;code&gt;M-x delete-trailing-whitespace&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&#34;guardar-comandos-que-usamos-usualmente&#34;&gt;Guardar comandos que usamos usualmente&lt;/h2&gt;

&lt;p&gt;Este tema se trató en más profundidad en el artículo &lt;a href=&#34;https://elbauldelprogramador.com/como-crear-comandos-personalizados-en-emacs&#34; title=&#34;Cómo crear comandos personalizados en Emacs&#34;&gt;&lt;em&gt;Cómo crear comandos personalizados en Emacs&lt;/em&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;administar-las-copias-de-seguridad-de-emacs&#34;&gt;Administar las copias de seguridad de emacs&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Problema:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Emacs&lt;/em&gt; por defecto guarda una copia de seguridad del fichero en un fichero del mismo nombre pero acabado en &lt;code&gt;~&lt;/code&gt;, aunque es bastánte útil, a veces molesta tener ficheros desperdigados a lo largo de las carpetas acabando en &lt;code&gt;~&lt;/code&gt;. Es posible almacenarlos todos en una carpeta. Veamos.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Solución:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;En el fichero de configuración (&lt;code&gt;~/.emacs/init.el&lt;/code&gt;) añadimos&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-elisp&#34; data-lang=&#34;elisp&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;;; Set a directory for backup files&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;setq&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;backup-directory-alist&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;.&amp;quot;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;quot;~/.saves&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)))&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;setq&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;delete-old-versions&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;t&lt;/span&gt;
    &lt;span class=&#34;nv&#34;&gt;kept-new-versions&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;6&lt;/span&gt;
    &lt;span class=&#34;nv&#34;&gt;kept-old-versions&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;
    &lt;span class=&#34;nv&#34;&gt;version-control&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;t&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Donde podemos sustituir &lt;code&gt;~/.saves&lt;/code&gt; por el directorio deseado.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Fuente:&lt;/strong&gt; &lt;a href=&#34;http://stackoverflow.com/a/151946/1612432&#34; title=&#34;How do I control how Emacs makes backup files?&#34;&gt;How do I control how Emacs makes backup files?&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;ejecutar-una-acción-para-todos-los-buffers-abiertos&#34;&gt;Ejecutar una acción para todos los buffers abiertos&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Problema:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Algunos comandos que hemos visto aquí, como buscar y reemplazar texto en varios ficheros a la vez, realizan la acción pero no guardan los cambios en el fichero. Para guardarlos tenemos que seleccionarlos uno a uno en el &lt;em&gt;buffer&lt;/em&gt; y ejecutar la acción de guardar. Para hacernos la vida más fácil, podemos usar &lt;code&gt;ibuffer&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Solución:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Para sustituir el modo &lt;em&gt;buffer&lt;/em&gt;, por &lt;em&gt;ibuffer&lt;/em&gt; debemos añadir a nuestra configuración:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-elisp&#34; data-lang=&#34;elisp&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;;; make ibuffer the default&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;global-set-key&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;quot;\C-x\C-b&amp;quot;&lt;/span&gt; &lt;span class=&#34;ss&#34;&gt;&amp;#39;ibuffer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;A partir de ahora, cada vez que visitemos la pestaña del &lt;em&gt;buffer&lt;/em&gt;, se abrirá &lt;em&gt;ibuffer&lt;/em&gt;. Para seleccionar todos los ficheros abiertos y guardarlos:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Pulsar &lt;code&gt;t&lt;/code&gt;, para seleccionar todos los ficheros.&lt;/li&gt;
&lt;li&gt;Pulsar &lt;code&gt;S&lt;/code&gt;, para guardar los ficheros seleccionados&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Fuente:&lt;/strong&gt; &lt;a href=&#34;http://stackoverflow.com/a/14293998/1612432&#34; title=&#34;Execute a particular command on multiple emacs buffers&#34;&gt;Execute a particular command on multiple emacs buffers&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;alinear-verticalmente-código-en-base-al-signo&#34;&gt;Alinear verticalmente código en base al signo =&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;M-x align-regex =&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;convertir-texto-a-mayúscula-minúscula&#34;&gt;Convertir texto a mayúscula/minúscula&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;C-x C-u&lt;/code&gt;: Convertir la región seleccionada a mayúsculas.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;C-x C-l&lt;/code&gt;: Convertir la región seleccionada a minúsculas.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;M-l&lt;/code&gt;: Convertir la siguiente palabra a minúscula.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;M-u&lt;/code&gt;: Convertir la siguiente palabra a mayúscula.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;M-c&lt;/code&gt;: Convertir a mayúscula la primera letra de la palabra &amp;ndash; Capitalizar &amp;ndash;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;reemplazar-tabulador-por-espacios-y-viceversa&#34;&gt;Reemplazar tabulador por espacios y viceversa&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;M-x tabify&lt;/code&gt;: Sustituye en la región seleccionada espacios por tabuladores.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;M-x untabify&lt;/code&gt;: Proceso contrario, reemplaza en la región selecionada tabuladores por espacios.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Fuente: &lt;a href=&#34;https://mdk.fr/blog/emacs-replace-tabs-with-spaces.html&#34; title=&#34;Emacs: replace tabs with spaces&#34;&gt;mdk.fr&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&#34;prelude&#34;&gt;Prelude&lt;/h1&gt;

&lt;p&gt;Tal y como dice la descripción de su repositorio en &lt;a href=&#34;https://elbauldelprogramador.com/tags/github/&#34; title=&#34;Github&#34;&gt;Github&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Prelude&lt;/em&gt; is an enhanced Emacs 24 distribution that should make your experience with Emacs both more pleasant and more powerful.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;es decir:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Prelude&lt;/em&gt; es una distribución mejorada de Emacs 24 que debería hacer tu experiencia con emacs más agradable y potente.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Aunque la descripción menciona la versión 24, personalmente yo estoy usando la versión 25 en &lt;a href=&#34;https://elbauldelprogramador.com/tags/gentoo&#34; title=&#34;Gentoo&#34;&gt;Gentoo&lt;/a&gt; y funciona perfectamente.&lt;/p&gt;

&lt;p&gt;La instalación de &lt;em&gt;Prelude&lt;/em&gt; es muy sencilla, toda la documentación necesaria se encuentra en su &lt;a href=&#34;https://github.com/bbatsov/prelude&#34; target=&#34;_blank&#34; title=&#34;repositorio de Github&#34;&gt;repositorio de Github&lt;/a&gt;.&lt;/p&gt;

&lt;h1 id=&#34;tu-turno&#34;&gt;Tu Turno&lt;/h1&gt;

&lt;p&gt;El propósito de este artículo es que crezca con las contribuciones de todos nosotros, para ello he subido el código de este artículo a github. Para aportar vuestro granito de arena, mandad &lt;a href=&#34;https://github.com/elbaulp/algui91-hugo/edit/master/content/post/chuleta-atajos-teclado-emacs.markdown&#34; target=&#34;_blank&#34; title=&#34;Pull Request&#34;&gt;Pull Request&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Esperamos vuestras colaboraciones!&lt;/p&gt;</description>
        </item>
        
        <item>
            <title>Chuleta de Markdown para wordpress</title>
            <link>https://elbauldelprogramador.com/chuleta-markdown-para-wordpress/</link>
            <pubDate>Fri, 01 Jan 2016 00:00:00 +0000</pubDate>
            
            <guid>https://elbauldelprogramador.com/chuleta-markdown-para-wordpress/</guid>
            <description>&lt;p&gt;En su última actualización, el plugin &lt;a href=&#34;http://jetpack.me/support/markdown/&#34; title=&#34;Artículo de Jetpack sobre el Markdown&#34;&gt;JetPack&lt;/a&gt; introdujo la notación Markdown para formatear artículos y comentarios. La siguiente chuleta pretende servir de referencia tanto a los lectores como a mi, aprovechando así la ocasión para practicar y memorizar el formato.&lt;/p&gt;

&lt;p&gt;&lt;!--ad--&gt;&lt;/p&gt;

&lt;h1 id=&#34;guía-de-markdown-para-wordpress&#34;&gt;Guía de Markdown para wordpress&lt;/h1&gt;

&lt;h2 id=&#34;negrita-o-cursiva&#34;&gt;&lt;strong&gt;Negrita&lt;/strong&gt; o &lt;em&gt;cursiva&lt;/em&gt; :&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;negrita&lt;/strong&gt;, &lt;strong&gt;negrita&lt;/strong&gt;, &lt;em&gt;cursiva&lt;/em&gt;,&lt;em&gt;cursiva&lt;/em&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;__negrita__, **negrita**, *cursiva*,_cursiva_
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;enlaces-en-línea-2&#34;&gt;Enlaces en &lt;a href=&#34;https://elbauldelprogramador.com/&#34; title=&#34;Texto alternativo&#34;&gt;línea&lt;/a&gt;:&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;Un [enlace](/ &amp;quot;Texto alternativo&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;enlaces-referenciados-1&#34;&gt;Enlaces &lt;a href=&#34;http://jetpack.me/support/markdown/&#34; title=&#34;Artículo de Jetpack sobre el Markdown&#34;&gt;referenciados&lt;/a&gt;:&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;[referenciados][1], en cualquier parte del texto debe haber [1]: http://enlace. &amp;quot;titulo&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;imágenes-en-línea-alt-3&#34;&gt;Imágenes en línea: &lt;img src=&#34;https://elbauldelprogramador.com/img/2013/12/favicon.ico&#34; alt=&#34;Alt&#34; title=&#34;Título&#34; /&gt;:&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;![Alt](/img/2013/12/favicon.ico &amp;quot;Título&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;imágenes-referenciadas-alt-3&#34;&gt;Imágenes referenciadas: &lt;img src=&#34;https://elbauldelprogramador.com/img/2013/12/favicon.ico&#34; alt=&#34;Alt&#34; title=&#34;Título&#34; /&gt;&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;![Alt][2] Al igual que en los enlaces referenciados, en algún lugar del texto debe aparecer [2]: Ruta/a/la/imagen &amp;quot;Titulo&amp;quot;.
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;imágenes-enlazadas-texto-alternativo-4-5&#34;&gt;Imágenes enlazadas: &lt;a href=&#34;https://elbauldelprogramador.com/&#34; title=&#34;Imágenes enlazadas&#34;&gt;&lt;img src=&#34;https://elbauldelprogramador.com/img/2013/12/favicon.ico&#34; alt=&#34;Texto Alternativo&#34; /&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;[![Texto Alternativo](/img/2013/12/favicon.ico)](/ &amp;quot;Imágenes enlazadas&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;notas-al-pie-sup-id-fnref-2416-1-a-href-fn-2416-1-rel-footnote-1-a-sup&#34;&gt;Notas al pie&lt;sup id=&#34;fnref-2416-1&#34;&gt;&lt;a href=&#34;#fn-2416-1&#34; rel=&#34;footnote&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;:&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;[^1] y donde esté la nota al pie: [^1]: Notal al pie.
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;listas-sin-numerar&#34;&gt;Listas sin numerar:&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Elemento 1&lt;/li&gt;
&lt;li&gt;Elemento 2&lt;/li&gt;
&lt;li&gt;Elemento 3&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Elemento 4&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;* Elemento 1
* Elemento 2
- Elemento 3
- Elemento 4
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;listas-numeradas&#34;&gt;Listas numeradas:&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;Elemento 1&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Elemento 2&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;1. Elemento 1
2. Elemento 2
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;citas&#34;&gt;Citas&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Texto citado&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Cita anidada&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code&gt;&amp;gt; Texto citado
&amp;gt;&amp;gt; Cita anidada
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;preformato&#34;&gt;Preformato&lt;/h2&gt;

&lt;p&gt;Si se empieza cada línea con dos o más espacios el texto no se formateará.&lt;/p&gt;

&lt;h2 id=&#34;código-en-línea&#34;&gt;Código en línea&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;cout &amp;lt;&amp;lt; &amp;quot;Hola&amp;quot; &amp;lt;&amp;lt; endl;&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;`cout &amp;lt;&amp;lt; &amp;quot;Hola&amp;quot; &amp;lt;&amp;lt; endl;`
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;bloques-de-código&#34;&gt;Bloques de código&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;cout &amp;lt;&amp;lt; &amp;quot;Hola&amp;quot; &amp;lt;&amp;lt; endl;


```
cout &amp;lt;&amp;lt; &amp;quot;Hola&amp;quot; &amp;lt;&amp;lt; endl;
```
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;ó&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;~~~
cout &amp;lt;&amp;lt; &amp;quot;Hola&amp;quot; &amp;lt;&amp;lt; endl;
~~~
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;cabeceras&#34;&gt;Cabeceras&lt;/h2&gt;

&lt;h1 id=&#34;header-1&#34;&gt;Header 1&lt;/h1&gt;

&lt;h2 id=&#34;header-2&#34;&gt;Header 2&lt;/h2&gt;

&lt;h3 id=&#34;header-3&#34;&gt;Header 3&lt;/h3&gt;

&lt;h4 id=&#34;header-4&#34;&gt;Header 4&lt;/h4&gt;

&lt;h5 id=&#34;header-5&#34;&gt;Header 5&lt;/h5&gt;

&lt;h6 id=&#34;header-6&#34;&gt;Header 6&lt;/h6&gt;

&lt;pre&gt;&lt;code&gt;# Header 1
## Header 2
### Header 3
#### Header 4
##### Header 5
###### Header 6
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;abreviaturas&#34;&gt;Abreviaturas&lt;/h2&gt;

&lt;p&gt;El &lt;em&gt;markdown&lt;/em&gt; convierte texto a HTML.&lt;/p&gt;

&lt;h1 id=&#34;referencias&#34;&gt;Referencias&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;em&gt;Artículo de Jetpack sobre el Markdown&lt;/em&gt; »» &lt;a href=&#34;http://jetpack.me/support/markdown/&#34; target=&#34;_blank&#34;&gt;jetpack.me&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
        </item>
        
        <item>
            <title>Chuleta de comandos para GPG</title>
            <link>https://elbauldelprogramador.com/chuleta-de-comandos-para-gpg/</link>
            <pubDate>Fri, 01 Jan 2016 00:00:00 +0000</pubDate>
            
            <guid>https://elbauldelprogramador.com/chuleta-de-comandos-para-gpg/</guid>
            <description>&lt;figure&gt;
    &lt;img on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/2014/04/Chuleta-de-comandos-GPG.png&#34; title=&#34;Chuleta de comandos para GPG&#34; alt=&#34;Chuleta de comandos para GPG&#34; width=&#34;400px&#34; height=&#34;175px&#34;&gt;&lt;/img&gt;
&lt;/figure&gt;

&lt;p&gt;Si encontraste esta página, por suerte es lo que estabas buscando, una pequeña chuleta de comandos para &lt;a href=&#34;https://elbauldelprogramador.com/como-cifrar-correos-con-gpg-con-mailvelope/&#34; title=&#34;Cómo cifrar correos con GPG usando Mailvelope&#34;&gt;GPG&lt;/a&gt;. Si encuentras algún error, no dudes en comentarlo.&lt;/p&gt;

&lt;p&gt;He usado el “&lt;strong&gt;Nombre de Usuario&lt;/strong&gt;” como el nombre asociado a la clave. Perdón si no es muy imaginativo. Creo que GPG es bastante amplio en sus asignaciones de usuario, por ejemplo el nombre para mi clave privada es &lt;em&gt;Charles Lockhart&lt;/em&gt;, pero puedo referenciarlo simplemente poniendo Lockhart.&lt;/p&gt;

&lt;p&gt;Empecemos:&lt;/p&gt;

&lt;p&gt;&lt;!--ad--&gt;&lt;/p&gt;

&lt;h1 id=&#34;crear-una-clave&#34;&gt;Crear una clave&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;gpg --gen-key
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Generalmente puedes seleccionar las que vienen por defecto.&lt;/p&gt;

&lt;h1 id=&#34;exportar-una-clave-pública-dentro-del-archivo-public-key&#34;&gt;Exportar una clave pública dentro del archivo &lt;em&gt;public.key&lt;/em&gt;&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;gpg --export -a &lt;span class=&#34;s2&#34;&gt;&amp;quot;Nombre de Usuario&amp;quot;&lt;/span&gt; &amp;gt; public.key
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Esto creará un archivo llamado &lt;em&gt;public.key&lt;/em&gt; con la representación ascii de la clave pública para Nombre de Usuario. Esto es una variación de:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;gpg --export
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;el cual por sí mismo básicamente va a imprimir un montón de porquerías en tu pantalla. Recomiendo no hacerlo.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;gpg --export -a “Nombre de Usuario&lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;imprime la clave pública para el ‘Nombre de Usuario’ en la línea de comandos, lo cual es medio útil para exportar una clave privada:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;gpg --export-secret-key -a &lt;span class=&#34;s2&#34;&gt;&amp;quot;Nombre de Usuario&amp;quot;&lt;/span&gt; &amp;gt; private.key
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Esto creará un archivo llamado &lt;em&gt;private.key&lt;/em&gt; con la representación ascii de la clave privada para ‘Nombre de Usuario’.&lt;/p&gt;

&lt;p&gt;Es muy parecido a exportar una clave pública, pero tienes que pisar algunas protecciones que vienen por default. Hay una nota (*) al pie explicando porqué desearías hacer esto.&lt;/p&gt;

&lt;h1 id=&#34;importar-una-clave-pública&#34;&gt;Importar una clave pública&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;gpg --import public.key
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Si encontraste esta página, por suerte es lo que estabas buscando
Esto agrega la clave pública en el archivo “*public.key*” a tu anillo de claves públicas.&lt;/p&gt;

&lt;h1 id=&#34;importar-una-clave-privada&#34;&gt;Importar una clave privada&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;gpg --allow-secret-key-import --import private.key
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Esto agrega una clave privada en el archivo “*private.key&lt;em&gt;” a tu anillo de claves privadas. Hay una nota (&lt;/em&gt;) al pie explicando porqué desearías hacer esto.&lt;/p&gt;

&lt;h1 id=&#34;eliminar-una-clave-pública-de-tu-anillo-de-claves-públicas&#34;&gt;Eliminar una clave pública (de tu anillo de claves públicas):&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;gpg --delete-key &lt;span class=&#34;s2&#34;&gt;&amp;quot;Nombre de Usuario&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Esto elimina la clave pública de tu anillo de claves públicas.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;¡ATENCIÓN! Si hay una clave privada en tu anillo de claves privadas asociada con esta clave pública, ¡tendrás un error! Debes primero eliminar tu clave privada para este par de claves de tu anillo de claves privadas.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&#34;eliminar-una-clave-secreta-una-clave-de-tu-anillo-de-claves-secreta&#34;&gt;Eliminar una clave secreta (una clave de tu anillo de claves secreta)&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;gpg --delete-secret-key &lt;span class=&#34;s2&#34;&gt;&amp;quot;Nombre de Usuario&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Esto elimina la clave secreta de tu anillo de claves secretas.&lt;/p&gt;

&lt;h1 id=&#34;listar-las-claves-de-tu-anillo-de-claves-públicas&#34;&gt;Listar las claves de tu anillo de claves públicas&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;gpg --list-keys
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h1 id=&#34;listar-las-claves-de-tu-anillo-de-claves-secretas&#34;&gt;Listar las claves de tu anillo de claves secretas&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;gpg --list-secret-keys
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h1 id=&#34;generar-una-lista-corta-de-números-que-puedes-usar-a-través-de-un-método-alternativo-para-verificar-la-clave-pública&#34;&gt;Generar una lista corta de números que puedes usar a través de un método alternativo para verificar la clave pública&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;gpg --fingerprint &amp;gt; fingerprint
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Esto crea el archivo fingerprint con la información de la firma digital.&lt;/p&gt;

&lt;h1 id=&#34;encriptar-datos&#34;&gt;Encriptar datos&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;gpg -e -u &lt;span class=&#34;s2&#34;&gt;&amp;quot;Nombre de Usuario del Emisor&amp;quot;&lt;/span&gt; -r &lt;span class=&#34;s2&#34;&gt;&amp;quot;Nombre de Usuario del Destinatario&amp;quot;&lt;/span&gt; somefile
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Aquí hay algunas opciones útiles, como por ejemplo -u para especificar la clave secreta que será utilizada, y -r para especificar la clave pública del destinatario.
Como por ejemplo:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;gpg -e -u &lt;span class=&#34;s2&#34;&gt;&amp;quot;Manuel Ginobili&amp;quot;&lt;/span&gt; -r “Un amigo&lt;span class=&#34;s2&#34;&gt;&amp;quot; mydata.tar&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Esto debería crear un archivo llamado “*mydata.tar.gpg*” que contiene la información encriptada. Pienso que se debe especificar el nombre de usuario del emisor para que el destinatario pueda verificar que el contenido proviene de esa persona (¿Utilizando su firma digital?)&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;NOTA: &lt;em&gt;mydata.tar&lt;/em&gt; no se elimina, terminas teniendo dos archivos, por lo tanto si quieres tener sólo el archivo encriptado, deberás eliminar &lt;em&gt;mydata.tar&lt;/em&gt; tú mismo.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Un interesante comentario al margen, encripté el patch preventivo del kernel, un archivo de 55,247 bytes, y terminé con un archivo encriptado de 15,276 bytes.&lt;/p&gt;

&lt;h1 id=&#34;desencriptar-datos&#34;&gt;Desencriptar datos&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;gpg -d mydata.tar.gpg
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Si tienes múltiples claves secretas, el comando elegirá la correcta, o mostrará un error si la correcta no existe. Se te pedirá que ingreses tu passphrase. Luego de ello existirá el archivo “*mydata.tar*”, y el “original” encriptado, &lt;em&gt;mydata.tar.gpg&lt;/em&gt;.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;NOTA: cuando originalmente escribí este borrador, era como funcionaba en mi sistema, sin embargo parece que ahora “&lt;code&gt;gpg -d mydata.tar.gpg&lt;/code&gt;” vuelca el contenido del archivo a la salida standard. La forma alternativa (que funciona en mi sistema, de todos modos) sería utilizar&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;gpg --o archivodesalida -d archivoencriptado.gpg
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;o utilizar &lt;em&gt;mydata.tar.gpg&lt;/em&gt; como por ejemplo,&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;gpg -o mydata.tar -d mydata.tar.gpg
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Otra alternativa es ejecutar algo como&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;gpg -d mydata.tar.gpg &amp;gt; mydata.tar
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;y simplemente enviar la salida dentro de un archivo. Pareciera funcionar de la misma manera.&lt;/p&gt;

&lt;p&gt;Ok, entonces si eres un paranoico y quieres encriptar alguno de tus propios archivos, para que nadie pueda entrar en tu computadora y obtenerlos, simplemente encríptalos usandote a tí mismo como el contenedor.&lt;/p&gt;

&lt;p&gt;No he utilizado estos comandos:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;gpg --edit-key
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;gpg --gen-revoke
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;--gen-revoke&lt;/code&gt; crea un certificado de revocación, el cual es distribuido a los usuarios y los servidores de claves te dicen que tu clave ya no es más válida. Mira: &lt;a href=&#34;http://www.gnupg.org/gph/en/manual/r721.html&#34; target=&#34;_blank&#34;&gt;&lt;a href=&#34;http://www.gnupg.org/gph/en/manual/r721.html&#34;&gt;http://www.gnupg.org/gph/en/manual/r721.html&lt;/a&gt;&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--edit-key&lt;/code&gt; te permite hacer una colección de operaciones con las claves. Mira: &lt;a href=&#34;http://www.gnupg.org/gph/en/manual/r899.html&#34; target=&#34;_blank&#34;&gt;&lt;a href=&#34;http://www.gnupg.org/gph/en/manual/r899.html&#34;&gt;http://www.gnupg.org/gph/en/manual/r899.html&lt;/a&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;compartir-claves-secretas&#34;&gt;Compartir Claves Secretas&lt;/h1&gt;

&lt;blockquote&gt;
&lt;p&gt;NOTA: los siguientes casos de uso indican porqué los comandos &lt;code&gt;secret-key import/export&lt;/code&gt; existen, o al menos un par de ideas de qué puedes hacer con ellos. SIN EMBARGO, hay un poco de logística necesaria para compartir la clave secreta. ¿Cómo la pasamos de una computadora a otra? Creo que encriptarla y enviarla por e-mail probablemente estaría bien, pero yo no la enviaría desencriptada con e-mail, esto sería PELIGROSO.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ol&gt;
&lt;li&gt;Caso de Uso 1: Arriba están mencionados los comandos para exportar e importar las claves secretas, y quiero explicar una razón por la cual probablemente quieras hacer esto. Básicamente si quieres un par de claves para todas tus computadoras (asumiento que tienes múltiples computadoras), entonces esto te permitirá exportar ese par de claves de la computadora original e importarla en las otras computadoras.&lt;/li&gt;
&lt;li&gt;Caso de Uso 2: Arriba están mencionados los comandos para exportar e importar las claves secretas, y quiero explicar una razón por la cual probablemente quieras hacer esto. Básicamente, si perteneces a un grupo, y quisieras crear un par de clave simple para ese grupo, una persona debería crear el par de claves, luego exportar las claves pública y privada, darselas a los otros miembros del grupo y ellos deberían importar ese par. Luego un miembro del grupo o alguien afuera podría utilizar la clave pública del grupo, encriptando el mensaje y/o los datos, y enviándolo a los miembros del grupo, y todos ellos deberían poder tener acceso al mensaje y/o los datos. Basicamente, podrías crear un sistema simplificado donde sólo una clave pública es requerida para enviar cosas encriptadas a múltiples destinatarios.&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&#34;referencias&#34;&gt;Referencias&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;em&gt;Quick&amp;rsquo;n easy gpg cheatsheet&lt;/em&gt; »» &lt;a href=&#34;http://irtfweb.ifa.hawaii.edu/~lockhart/gpg/gpg-cs.html&#34; target=&#34;_blank&#34;&gt;Visitar sitio&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://elbauldelprogramador.com/tags/gpg&#34;&gt;Más artículos sobre GPG&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
        </item>
        
        <item>
            <title>Dig - Chuleta básica de comandos</title>
            <link>https://elbauldelprogramador.com/dig-chuleta-basica-de-comandos/</link>
            <pubDate>Fri, 01 Jan 2016 00:00:00 +0000</pubDate>
            
            <guid>https://elbauldelprogramador.com/dig-chuleta-basica-de-comandos/</guid>
            <description>&lt;p&gt;&lt;strong&gt;Dig (Domain Information Groper)&lt;/strong&gt; es un comando de gran utilidad para realizar consultas a registros DNS. Se usa mucho &amp;#8212; entre otras cosas &amp;#8212; para el diagnóstico de &lt;a href=&#34;https://elbauldelprogramador.com/como-configurar-un-servidor-dns/&#34; title=&#34;Cómo configurar un servidor DNS – Parte 1 (Introducción)&#34;&gt;Servidores DNS&lt;/a&gt;. Desde que administro yo mismo el servidor del blog lo he usado bastante, y hoy voy a dar unas nociones básicas de cómo usarlo.&lt;/p&gt;

&lt;p&gt;&lt;!--ad--&gt;&lt;/p&gt;

&lt;h1 id=&#34;actualización&#34;&gt;[Actualización]&lt;/h1&gt;

&lt;p&gt;En un comentario hecho en la página de &lt;a href=&#34;https://plus.google.com/b/108003822606696308728/108003822606696308728/posts/idbcxhy5vzG&#34; target=&#34;_blank&#34;&gt;Google+ del blog&lt;/a&gt; un usuario indicó que es posible obtener una salida simplificada de todos los comandos de abajo con la opción &lt;em&gt;+short&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;El ejemplo más básico es:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;dig ejemplo.com
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h1 id=&#34;obtener-distintos-tipos-de-registros-dns&#34;&gt;Obtener distintos tipos de registros DNS&lt;/h1&gt;

&lt;p&gt;La sintaxis es:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;dig @servidor-dns ejemplo.com tipo-de-registro
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Ejemplo de uso:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;dig @208.67.222.222 google.com A

&lt;span class=&#34;p&#34;&gt;;;&lt;/span&gt; QUESTION SECTION:
&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;google.com.          IN  A

&lt;span class=&#34;p&#34;&gt;;;&lt;/span&gt; ANSWER SECTION:
google.com.      &lt;span class=&#34;m&#34;&gt;300&lt;/span&gt; IN  A   173.194.34.231
google.com.       &lt;span class=&#34;m&#34;&gt;300&lt;/span&gt; IN  A   173.194.34.226
google.com.       &lt;span class=&#34;m&#34;&gt;300&lt;/span&gt; IN  A   173.194.34.230
google.com.       &lt;span class=&#34;m&#34;&gt;300&lt;/span&gt; IN  A   173.194.34.228
google.com.       &lt;span class=&#34;m&#34;&gt;300&lt;/span&gt; IN  A   173.194.34.238
google.com.       &lt;span class=&#34;m&#34;&gt;300&lt;/span&gt; IN  A   173.194.34.229
google.com.       &lt;span class=&#34;m&#34;&gt;300&lt;/span&gt; IN  A   173.194.34.227
google.com.       &lt;span class=&#34;m&#34;&gt;300&lt;/span&gt; IN  A   173.194.34.225
google.com.       &lt;span class=&#34;m&#34;&gt;300&lt;/span&gt; IN  A   173.194.34.232
google.com.       &lt;span class=&#34;m&#34;&gt;300&lt;/span&gt; IN  A   173.194.34.224
google.com.       &lt;span class=&#34;m&#34;&gt;300&lt;/span&gt; IN  A   173.194.34.233
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h1 id=&#34;obtener-los-servidores-de-nombres&#34;&gt;Obtener los servidores de nombres&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;dig @208.67.222.222 google.com NS

&lt;span class=&#34;p&#34;&gt;;;&lt;/span&gt; QUESTION SECTION:
&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;google.com.            IN  NS

&lt;span class=&#34;p&#34;&gt;;;&lt;/span&gt; ANSWER SECTION:
google.com.     &lt;span class=&#34;m&#34;&gt;172749&lt;/span&gt;  IN  NS  ns2.google.com.
google.com.      &lt;span class=&#34;m&#34;&gt;172749&lt;/span&gt;  IN  NS  ns1.google.com.
google.com.      &lt;span class=&#34;m&#34;&gt;172749&lt;/span&gt;  IN  NS  ns3.google.com.
google.com.      &lt;span class=&#34;m&#34;&gt;172749&lt;/span&gt;  IN  NS  ns4.google.com.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h1 id=&#34;obtener-registros-mx-de-correo&#34;&gt;Obtener registros MX (De correo)&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;dig @208.67.222.222 google.com MX

&lt;span class=&#34;p&#34;&gt;;;&lt;/span&gt; QUESTION SECTION:
&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;google.com.            IN  MX

&lt;span class=&#34;p&#34;&gt;;;&lt;/span&gt; ANSWER SECTION:
google.com.     &lt;span class=&#34;m&#34;&gt;469&lt;/span&gt; IN  MX  &lt;span class=&#34;m&#34;&gt;20&lt;/span&gt; alt1.aspmx.l.google.com.
google.com.      &lt;span class=&#34;m&#34;&gt;469&lt;/span&gt; IN  MX  &lt;span class=&#34;m&#34;&gt;10&lt;/span&gt; aspmx.l.google.com.
google.com.       &lt;span class=&#34;m&#34;&gt;469&lt;/span&gt; IN  MX  &lt;span class=&#34;m&#34;&gt;40&lt;/span&gt; alt3.aspmx.l.google.com.
google.com.      &lt;span class=&#34;m&#34;&gt;469&lt;/span&gt; IN  MX  &lt;span class=&#34;m&#34;&gt;50&lt;/span&gt; alt4.aspmx.l.google.com.
google.com.      &lt;span class=&#34;m&#34;&gt;469&lt;/span&gt; IN  MX  &lt;span class=&#34;m&#34;&gt;30&lt;/span&gt; alt2.aspmx.l.google.com.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h1 id=&#34;obtener-registros-txt&#34;&gt;Obtener registros TXT&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;dig @208.67.222.222 google.com TXT

&lt;span class=&#34;p&#34;&gt;;;&lt;/span&gt; QUESTION SECTION:
&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;google.com.          IN  TXT

&lt;span class=&#34;p&#34;&gt;;;&lt;/span&gt; ANSWER SECTION:
google.com.        &lt;span class=&#34;m&#34;&gt;3600&lt;/span&gt;    IN  TXT &lt;span class=&#34;s2&#34;&gt;&amp;quot;v=spf1 include:_spf.google.com ip4:216.73.93.70/31 ip4:216.73.93.72/31 ~all&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h1 id=&#34;obtener-todos-los-tipos-de-registros-en-una-misma-consulta&#34;&gt;Obtener todos los tipos de registros en una misma consulta&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;dig any google.com

&lt;span class=&#34;p&#34;&gt;;;&lt;/span&gt; QUESTION SECTION:
&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;google.com.           IN  ANY

&lt;span class=&#34;p&#34;&gt;;;&lt;/span&gt; ANSWER SECTION:
google.com.        &lt;span class=&#34;m&#34;&gt;407&lt;/span&gt; IN  MX  &lt;span class=&#34;m&#34;&gt;40&lt;/span&gt; alt3.aspmx.l.google.com.
google.com.      &lt;span class=&#34;m&#34;&gt;407&lt;/span&gt; IN  MX  &lt;span class=&#34;m&#34;&gt;30&lt;/span&gt; alt2.aspmx.l.google.com.
google.com.      &lt;span class=&#34;m&#34;&gt;407&lt;/span&gt; IN  MX  &lt;span class=&#34;m&#34;&gt;20&lt;/span&gt; alt1.aspmx.l.google.com.
google.com.      &lt;span class=&#34;m&#34;&gt;407&lt;/span&gt; IN  MX  &lt;span class=&#34;m&#34;&gt;10&lt;/span&gt; aspmx.l.google.com.
google.com.       &lt;span class=&#34;m&#34;&gt;407&lt;/span&gt; IN  MX  &lt;span class=&#34;m&#34;&gt;50&lt;/span&gt; alt4.aspmx.l.google.com.
google.com.      &lt;span class=&#34;m&#34;&gt;172781&lt;/span&gt;  IN  NS  ns2.google.com.
google.com.      &lt;span class=&#34;m&#34;&gt;172781&lt;/span&gt;  IN  NS  ns1.google.com.
google.com.      &lt;span class=&#34;m&#34;&gt;172781&lt;/span&gt;  IN  NS  ns3.google.com.
google.com.      &lt;span class=&#34;m&#34;&gt;172781&lt;/span&gt;  IN  NS  ns4.google.com.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h1 id=&#34;realizar-una-consulta-inversa&#34;&gt;Realizar una consulta inversa&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;dig -x 173.194.34.233

&lt;span class=&#34;p&#34;&gt;;;&lt;/span&gt; QUESTION SECTION:
&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;233.34.194.173.in-addr.arpa.  IN  PTR

&lt;span class=&#34;p&#34;&gt;;;&lt;/span&gt; ANSWER SECTION:
233.34.194.173.in-addr.arpa. &lt;span class=&#34;m&#34;&gt;83265&lt;/span&gt; IN  PTR mad01s09-in-f9.1e100.net.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Puedes encontrar una descripción un poco más extensa sobre el funcionamiento de la consulta inversa en la &lt;a href=&#34;https://elbauldelprogramador.com/como-configurar-un-servidor-dns3/&#34;&gt;tercera&lt;/a&gt; parte del artículo &lt;em&gt;Cómo configurar un servidor DNS&lt;/em&gt;&lt;/p&gt;

&lt;h1 id=&#34;referencias&#34;&gt;Referencias&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;em&gt;dig – Linux DNS Lookup utility cheat sheet&lt;/em&gt; »» &lt;a href=&#34;http://linuxaria.com/pills/dig-linux-dns-lookup-utility-cheat-sheet&#34; target=&#34;_blank&#34;&gt;linuxaria&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
        </item>
        
        <item>
            <title>Git: Mini Tutorial y chuleta de comandos</title>
            <link>https://elbauldelprogramador.com/mini-tutorial-y-chuleta-de-comandos-git/</link>
            <pubDate>Sun, 13 Dec 2015 18:10:12 +0000</pubDate>
            
            <guid>https://elbauldelprogramador.com/mini-tutorial-y-chuleta-de-comandos-git/</guid>
            <description>&lt;figure&gt;
&lt;img on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/2013/03/git-logo.png&#34; alt=&#34;Tutorial git y comandos git&#34; title=&#34;Git: Mini Tutorial y chuleta de comandos git&#34; alt=&#34;Git: Mini Tutorial y chuleta de comandos&#34; width=&#34;910px&#34; height=&#34;380px&#34;&gt;&lt;/img&gt;
&lt;/figure&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;NOTA:&lt;/strong&gt; Puede que te interese descargar este &lt;a href=&#34;http://bashyc-blogspot.tradepub.com/c/pubRD.mpl?sr=oc&amp;_t=oc:&amp;qf=w_java24&amp;ch=ocsoc&#34; id=&#34;revresponse-git-link&#34; title=&#34;Manual de git&#34; target=&#34;_blank&#34;&gt;manual para git&lt;/a&gt;. &lt;em&gt;Si rellenas el formulario correctamente nos darán $1.5 de comisión, una buena forma de mostrar tu apoyo al blog ;-)&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Una de mis tareas pendientes era aprender GIT decentemente. Así que empecé a leer &lt;a href=&#34;http://git-scm.com/book&#34; target=&#34;_blank&#34;&gt;Pro Git&lt;/a&gt;, libro que recomiendo a todo desarrollador, disponible en &lt;a href=&#34;https://github.s3.amazonaws.com/media/progit.en.pdf&#34; target=&#34;_blank&#34;&gt;PDF&lt;/a&gt;, &lt;a href=&#34;https://github.s3.amazonaws.com/media/progit.epub&#34; target=&#34;_blank&#34;&gt;EPUB&lt;/a&gt;, &lt;a href=&#34;https://github.s3.amazonaws.com/media/pro-git.en.mobi&#34; target=&#34;_blank&#34;&gt;MOBI&lt;/a&gt; y &lt;a href=&#34;http://www.amazon.es/gp/product/1430218339/ref=as_li_ss_tl?ie=UTF8&amp;camp=3626&amp;creative=24822&amp;creativeASIN=1430218339&amp;linkCode=as2&amp;tag=elbaudelpro-21&#34; target=&#34;_blank&#34;&gt;versión en papel&lt;/a&gt;. En la página del libro puedes encontrar versiones en distintos idiomas. Conforme he ido leyendolo, he anotado los comandos. Como resultado he creado esta especie de chuleta de comandos git que comparto hoy con vosotros. Espero que os resulte útil.&lt;/p&gt;

&lt;p&gt;&lt;!--ad--&gt;&lt;/p&gt;

&lt;h1 id=&#34;chuleta-de-comandos-git&#34;&gt;Chuleta de comandos git&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;git help &amp;lt;command&amp;gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;git clone &amp;lt;uri&amp;gt; namedir&lt;/strong&gt; # clona usando como nombre de directorio namedir.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;git add &amp;lt;dir&amp;gt;&lt;/strong&gt; # añade recursivamente todos los archivos del dir.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;git diff &amp;#45;&amp;#45;staged&lt;/strong&gt;  # compares staged changes with last commit&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;git commit &amp;#45;v&lt;/strong&gt; # muestra el diff en el editor&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;git commit &amp;#45;a &amp;#45;m &amp;#8221;&lt;/strong&gt;  # automatically stage tracked files. No hace falta git add&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;git rm &amp;#45;&amp;#45;cached &amp;lt;file or regexp&amp;gt;&lt;/strong&gt;   # Git no realiza un seguimiento del archivo, pero los deja en el directorio de trabajo. Útil cuando se olvida añadir archivos al .gitignore y ya hemos agregado dichos archivos al repositorio.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;git rm &amp;lt;file&amp;gt;&lt;/strong&gt;   # borrarlos con git siempre.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;git rm &amp;#45;f &amp;lt;file&amp;gt;&lt;/strong&gt;   #  si ya está modificado y en el index.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;git mv &amp;lt;file&amp;gt; &amp;lt;renamed_file&amp;gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;gitk&lt;/strong&gt;  #  tcl/tk. Herramienta gráfica para git&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;git commit &amp;#45;&amp;#45;amend&lt;/strong&gt;  # Modificar el mensaje del último commit&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;git reset HEAD &amp;lt;file&amp;gt;&lt;/strong&gt;   #  to unstage&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;git checkout &amp;#45;&amp;#45; &amp;lt;file&amp;gt;&lt;/strong&gt;   #  Descartar cambios en el directorio de trabajo.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;añadir-archivos&#34;&gt;AÑADIR ARCHIVOS&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;git add &amp;#45;i&lt;/strong&gt;  # interactive staggin&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;git add &amp;#45;p&lt;/strong&gt;  # crea patch&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;stash&#34;&gt;STASH&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;git stash&lt;/strong&gt;  # guarda el estado en una pila y limpia el directorio para poder cambiar de rama&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;git stash list&lt;/strong&gt;  # muestra la pila&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;git stash apply&lt;/strong&gt;  #  vuelve al estado original del dir. Stash{n} especifica uno concreto Y &amp;#45;&amp;#45;index reaplica los cambios stagged&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;git stash pop&lt;/strong&gt;  #  elimina el primero en la pila. O drop&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;logs&#34;&gt;LOGS&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;git log &amp;#45;p &amp;#45;2&lt;/strong&gt;  #  Muestra 2 últimos commits con diff&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;git log &amp;#45;&amp;#45;stat&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;git log &amp;#45;&amp;#45;pretty &amp;lt;short&amp;#124;full&amp;#124;fuller&amp;gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;git log &amp;#45;&amp;#45;pretty=format:&amp;#8221;%h &amp;#45; %an, %ar : %s&amp;#8221;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;git log &amp;#45;&amp;#45;pretty=format;&amp;#8221;%h %s&amp;#8221; &amp;#45;&amp;#45;graph&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;git log &amp;#45;&amp;#45;since=2.weeks&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;git log &amp;lt;branch&amp;gt; &amp;#45;&amp;#45;not master&lt;/strong&gt;  # Muestra commit de &amp;lt;branch&amp;gt; sin incluir los de master&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;git log &amp;#45;&amp;#45;abbrev&amp;#45;commit &amp;#45;&amp;#45;pretty=oneline&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;git diff master&amp;#8230;contrib&lt;/strong&gt;  # Muestra solo el trabajo que la rama contrib actual ha introducido desde su antecesor común con master&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;git log &amp;lt;branch1&amp;gt;..&amp;lt;branch2&amp;gt;&lt;/strong&gt;   # Commits de branch2 que no están en branch1&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;git log origin/master..master&lt;/strong&gt;  # Muestra qué commits se van a enviar al servidor&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;git log origin/master..&lt;/strong&gt;  # Igual que el anterior. Se asume master o HEAD&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;git log refA refB &amp;#45;&amp;#45;not refC&lt;/strong&gt;  #  commits en refA y refB que no están en refC&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;git log master&amp;#8230;experiment&lt;/strong&gt;  # commits de master o experiment, pero sin ser comunes. Con &amp;#45;&amp;#45;left&amp;#45;right indica a qué rama pertenece cada uno&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;remotes-repos-en-internet&#34;&gt;REMOTES # repos en internet&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;git remote &amp;#45;v&lt;/strong&gt;  #  lista los repos remotos&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;git remote add [shortname] [url]&lt;/strong&gt;  #  crea nuevo remote, es posible descargar el contenido de ese repo con git fetch [shortname]. Master branch en [shortcode]/master&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;git fetch &amp;lt;remote&amp;gt;&lt;/strong&gt;   #  descarga trabajo nuevo a máquina local, no sobreescribe nada tuyo. ( git pull sí hace merge automaticamente si se esta realizando un seguimiento de esa branch)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;git push [remote&amp;#45;name] [branch&amp;#45;name]&lt;/strong&gt;  #  sii nadie ha hecho push antes&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;git remote show [remote&amp;#45;name]&lt;/strong&gt;  #  inspecciona remote.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;git remote rename &amp;lt;old&amp;#45;name&amp;gt; &amp;lt;new&amp;#45;name&amp;gt;&lt;/strong&gt;   #  también renombra branches: quedaría &amp;lt;new&amp;#45;name&amp;gt;/master&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;git remote rm &amp;lt;remote&amp;#45;name&amp;gt;&lt;/strong&gt;   #  p.e si el contribuidor ya no contribuye más&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;añadir-varios-repositorios-remotos&#34;&gt;Añadir varios repositorios remotos&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;git remote add bitbucket &amp;lt;url repositorio&amp;gt;&lt;/strong&gt;  #  Añadir un nuevo repositorio remoto con el nombre deseado. Por ejemplo si ya tenemos uno en github y queremos añadir otro para bitbucket&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;git push -u bitbucket -all&lt;/strong&gt;  #  Subir el proyecto a bitbucket. A partir de ahora se puede seleccionar a qué repo publicar con*&lt;strong&gt;git push nombre_repo_remoto&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;tagging-marcan-puntos-importantes-en-la-histtoria-del-repo-releases&#34;&gt;TAGGING # marcan puntos importantes en la histtoria del repo ( releases )&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;git tag&lt;/strong&gt;  #  muestra las etiquetas actuales&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;git tag &amp;#45;l &amp;#8216;v1.4.2.*&amp;#8217;&lt;/strong&gt;   #  acepta regex&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Dos tipos de tag:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Lightweight&lt;/strong&gt; : puntero a commit ( branch que no cambia )&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Annotated&lt;/strong&gt; : se almacenan como objetos en la db, con checksum, nombre del creador, email, fecha, mensaje, posibilidad de firmarla con &lt;a href=&#34;https://elbauldelprogramador.com/como-cifrar-correos-con-gpg-con-mailvelope/&#34; title=&#34;Cómo cifrar correos con GPG usando Mailvelope&#34;&gt;GPG&lt;/a&gt;. ( recomendada )&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;git tag &amp;#45;a &amp;lt;tagname&amp;gt; &amp;#45;m &amp;#8216;mensaje&amp;#8217;&lt;/strong&gt;   #  annotated tag&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;git show &amp;lt;tag&amp;#45;name&amp;gt;&lt;/strong&gt;   #  muestra información asociada.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;git tag &amp;#45;s &amp;lt;tag&amp;#45;name&amp;gt; &amp;#45;m &amp;#8216;message&amp;#8217;&lt;/strong&gt;   #  la firma con gpg&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;git tag &amp;lt;tag&amp;#45;name&amp;gt;&lt;/strong&gt;   #  lightweight tag&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;git tag &amp;#45;v &amp;lt;tag&amp;#45;name&amp;gt;&lt;/strong&gt;   #  verifica tags firmadas&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;git tag &amp;#45;a &amp;lt;tag&amp;#45;name&amp;gt; [commit&amp;#45;chksum]&lt;/strong&gt;  #  crea tag para commit con dicho chksum&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Por defecto no se transfieren los tags, para subirlos al servidor:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;git push origin [tag&amp;#45;name]&lt;/strong&gt;  #  una sola&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;git push origin &amp;#45;&amp;#45;tags&lt;/strong&gt;  #  Enviar todas&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Para usar GPG y firmar tags, hay que subir la clave pública al repositorio:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;gpg &amp;#45;&amp;#45;list&amp;#45;keys&lt;/strong&gt;  # Coges la id pública&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;gpg &amp;#45;a &amp;#45;&amp;#45;export &amp;lt;id&amp;gt; &amp;#124; git hash&amp;#45;object &amp;#45;w &amp;#45;&amp;#45;stdin&lt;/strong&gt;  # Copia el SHA&amp;#45;1 devuelto&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;git tag &amp;#45;a maintainer&amp;#45;gpg&amp;#45;pub &amp;lt;SHA&amp;#45;1&amp;gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;git push &amp;#45;&amp;#45;tags&lt;/strong&gt;  # Comparte la clave con todos los usuarios&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;git show maintainer&amp;#45;gpg&amp;#45;pub &amp;#124; gpg &amp;#45;&amp;#45;import&lt;/strong&gt;  # Cada usuario importa la clave así&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;git show &amp;lt;tag&amp;gt;&lt;/strong&gt;   # Devuelve más información sobre la etiqueta&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;git tag -d nombre_tag&lt;/strong&gt;  #  eliminar la etiqueta&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;git push origin :refs/tags/nombre_tag&lt;/strong&gt;  #  Eliminar la etiqueta del repositorio remoto.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;branch&#34;&gt;BRANCH&lt;/h2&gt;

&lt;p&gt;Las ramas simplememte son punteros a distintos snapshots&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;git branch &amp;lt;nombre&amp;#45;rama&amp;gt;&lt;/strong&gt;   # crea rama. Puntero al commit actual&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;git checkout &amp;lt;nombre&amp;#45;rama&amp;gt;&lt;/strong&gt;   # cambiar a la rama especificada.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;git checkout &amp;#45;b &amp;lt;nombre&amp;#45;rama&amp;gt;&lt;/strong&gt;   # crea y cambia de rama&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;git merge &amp;lt;rama&amp;gt;&lt;/strong&gt;   #  Mezcla la rama actual con &amp;lt;rama&amp;gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;git branch &amp;#45;d &amp;lt;rama&amp;gt;&lt;/strong&gt;   # elimina la rama&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;git push origin &amp;#45;&amp;#45;delete &amp;lt;branchName&amp;gt;&lt;/strong&gt;   #  Elimina una rama del servidor&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;git mergetool&lt;/strong&gt;  # Herramienta gráfica para resolver conflictos&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;git branch&lt;/strong&gt;  #  lista ramas&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;git branch &amp;#45;v&lt;/strong&gt;  #  lista ramas mostrando último commit&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;git branch &amp;#45;&amp;#45;merged&lt;/strong&gt;  # lista ramas que han sido mezcladas con la actual. Si no tienen un *, pueden borrarse, ya que significa que se han incorporado los cambios en la rama actual.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;git branch &amp;#45;&amp;#45;no&amp;#45;merged&lt;/strong&gt;  # lista ramas que no han sido incorporadas a la actual.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;remote-branches&#34;&gt;REMOTE BRANCHES&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;git fetch origin&lt;/strong&gt;  #  Descarga el contenido del servidor&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;git push &amp;lt;remote&amp;gt; &amp;lt;branch&amp;gt;&lt;/strong&gt;   # Las ramas no se suben por defecto, has de subirlas explícitamente&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;git push &amp;lt;remote&amp;gt; &amp;lt;branch&amp;gt;:&amp;lt;nuevoNombre&amp;gt;&lt;/strong&gt;   # Igual que la de arriba, pero en el servidor se llama a la rama con nuevoNombre en lugar de branch&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Cuando se hace un git fetch que trae consigo nuevas ramas remotas, no se disponen de ellas localmente, solo se dispone de un puntero a la rama remota que no es editable. Para poder trabajar sobre esa rama, es necesario crearla Por ejemplo:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;git fetch origin&lt;/strong&gt;  #  Tras ejecutarlo, notamos que se ha creado una rama nueva (rama_nueva)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;git checkout &amp;#45;b rama_nueva origin/rama_nueva&lt;/strong&gt;  #  Crea una rama local a partir de la remota&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;git merge origin/nueva_rama&lt;/strong&gt;  #  Equivalente a la de arriba, pero sin establecer el tracking a la rama&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;git push [remotename] :[branch]&lt;/strong&gt;  #  elimina una rama remota&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;git push [remotename] [localbranch]:[remotebranch]&lt;/strong&gt;  # La rama en el servidor tiene distinto nombre a la local&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;tracking-branches&#34;&gt;TRACKING BRANCHES&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;git checkout &amp;#45;&amp;#45;track origin/rama&lt;/strong&gt;  # Equivalente a &amp;#45;b rama_nueva origin/rama_nueva&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;git chekout &amp;#45;b &amp;lt;nuevo_nombre&amp;gt; origin/&amp;lt;rama&amp;gt;&lt;/strong&gt;   #  Establece un nombre distinto para la rama local&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;rebase&#34;&gt;REBASE&lt;/h2&gt;

&lt;p&gt;Rebase y merge se diferencian en que merge mezcla dos puntos finales de dos snapshots y rebase aplica cada uno de los cambios a la rama en la que se hace el rebase. No lo uses en repos publicos con mas colaboradores, porque todos los demas tendrán que hacer re&amp;#45;merges&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;git checkout &amp;lt;una rama&amp;gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;git rebase master&lt;/strong&gt;  #  aplica todos los cambios de &amp;lt;una rama&amp;gt; a master&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;git merge master&lt;/strong&gt;  # hay que hacer un merge de tipo fast forward&lt;/li&gt;
&lt;li&gt;Tenemos 3 ramas, master, client y server, en server y client tenemos varios commit y queremos mezclar client en master pero dejar server intacta:

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;git rebase &amp;#45;&amp;#45;onto master server client&lt;/strong&gt;  #  adivina los patches del antecesor común de las ramas server y client y aplica los cambios a master.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;git checkout master&lt;/strong&gt;*&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;git merge client&lt;/strong&gt;  #  fast&amp;#45;forward. Client y master en el mismo snapshot&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Si se quiere aplicar también los cambios de server, basta con:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;git rebase master server&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;git checkout master&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;git merge server&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;git rebase [basebranch] [topicbranch]&lt;/strong&gt;  #  sintaxis de rebase&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;git rebase &amp;#45;i&lt;/strong&gt;  #  Rebase interactivo&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;servidor&#34;&gt;SERVIDOR&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;git instawew&lt;/strong&gt;  #  Muestra una interfaz web con los commits&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;generar-un-número-de-compilación-build-number&#34;&gt;GENERAR UN NÚMERO DE COMPILACIÓN (BUILD NUMBER)&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;git describe master&lt;/strong&gt;  # Solo funciona para tags creadas con &amp;#45;s ó &amp;#45;a&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;preparar-una-release&#34;&gt;PREPARAR UNA RELEASE&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;git archive master &amp;ndash;prefix=&amp;ldquo;project/&amp;rdquo; &amp;#124; gzip &amp;gt; `git describe master`.tar.gz&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;git archive master &amp;ndash;prefix=&amp;ldquo;project/&amp;rdquo; &amp;ndash;format=zip &amp;#124; `git describe master`.zip&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;test/ export&amp;#45;ignore  # Al crear el tarball no incluye el directorio test/&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;generar-un-changelog&#34;&gt;GENERAR UN CHANGELOG&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;git shortlog &amp;#45;&amp;#45;no&amp;#45;merges master &amp;#45;&amp;#45;not &amp;lt;tag&amp;gt;&lt;/strong&gt;   # Recopila todos los commits desde &amp;lt;tag&amp;gt; y los agrupa por autor&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;recomendaciones&#34;&gt;RECOMENDACIONES&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Siempre hay que hacer pull antes de push en caso de que alguien haya subido cambios al servidor. Ejemplo:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;User1 clona el repo y hace cambios, realiza un commit&lt;/li&gt;
&lt;li&gt;User2 clona el repo, hace cambios, hace commit y sube los cambios con push&lt;/li&gt;
&lt;li&gt;User1 intenta hacer push, pero será rechazado con: &amp;lt;u&amp;gt;! [rejected] master &amp;#45;&amp;gt; master (non&amp;#45;fast forward)&amp;lt;/u&amp;gt;. No puede subir los cambios hasta que no mezcle el trabajo que ha subido User2. Así que debe hacer lo siguiente:&lt;/li&gt;
&lt;li&gt;git fetch origin&lt;/li&gt;
&lt;li&gt;git merge origin/master&lt;/li&gt;
&lt;li&gt;git push origin master&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Mientras User1 hacía estas operaciones, User2 ha creado una rama &amp;lt;u&amp;gt;issue54&amp;lt;/u&amp;gt; y realizado 3 commits, sin haber descargado los cambios de User1. Para sincronizar el trabajo, User2 debe hacer:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;git fetch origin&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;git log &amp;#45;&amp;#45;no&amp;#45;merges origin/master ^issue54&lt;/strong&gt;  # Observa qué cambios ha hecho User1&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;git checkout master&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;git merge issue54 &amp;amp;&amp;amp; git merge origin/master&lt;/strong&gt;*&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;git push origin master&lt;/strong&gt;*&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;git diff &amp;#45;&amp;#45;check&lt;/strong&gt;  # Antes de hacer commit, ejecutar esto para ver si hemos añadido demasiados espacios que puedan causar problemas a los demás.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Commits pequeños que se centren en resolver un problema, no commits con grandes cambios.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;git add &amp;#45;&amp;#45;patch&lt;/strong&gt;  # En caso de hacer varios cambios en el mismo archivo&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;El mensaje del commit debe tener la estructura siguiente: Una linea de no más de 50 caracteres, seguida de otra línea en blanco seguida de una descripción completa del commit.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;pasos-a-seguir-para-contribuir-a-proyecyos-ajenos-mediante-fork&#34;&gt;PASOS A SEGUIR PARA CONTRIBUIR A PROYECYOS AJENOS, MEDIANTE FORK&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;git clone &amp;lt;url&amp;gt;&lt;/li&gt;
&lt;li&gt;git checkout &amp;#45;b featureA&lt;/li&gt;
&lt;li&gt;git commit&lt;/li&gt;
&lt;li&gt;git remote add myFork &amp;lt;url&amp;gt;&lt;/li&gt;
&lt;li&gt;git push myFork featureA&lt;/li&gt;
&lt;li&gt;git request&amp;#45;pull origin/master myFork  # enviar la salida por mail al propietario del proyecto, o hacer click en pull request.&lt;/li&gt;
&lt;li&gt;Buena practica tener siempre una rama master que apunte a origin/master, para estar siempre actualizado con los ultimos cambios en el proyecto original.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Separar cada trabajo realizado en topic branch, que trackeen a origin/master&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;git checkout &amp;#45;b featureB origin/master&lt;/li&gt;
&lt;li&gt;(Hacer cambios)&lt;/li&gt;
&lt;li&gt;git commit&lt;/li&gt;
&lt;li&gt;git push myFork featureB&lt;/li&gt;
&lt;li&gt;(Contactar con el propietario del proyecto)&lt;/li&gt;
&lt;li&gt;git fetch origin&lt;/li&gt;
&lt;li&gt;Otro ejemplo, el propietario del proyecto quiere aceptar un pull tuyo, pero quiere que hagas algunos cambios, aprovechas la oportunidad y mueves tu trabajo para basarlo en el contenido actual de la rama origin/master, aplastas los cambios en &lt;strong&gt;featureB&lt;/strong&gt;, resuelves conflictos, y haces push:

&lt;ul&gt;
&lt;li&gt;git checkout &amp;#45;b featureBv2 origin/master&lt;/li&gt;
&lt;li&gt;git merge &amp;#45;&amp;#45;no&amp;#45;commit &amp;#45;&amp;#45;squash featureB&lt;/li&gt;
&lt;li&gt;(cambiar la implementacion)&lt;/li&gt;
&lt;li&gt;git commit&lt;/li&gt;
&lt;li&gt;git push myFork featureBv2&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&amp;#45;&amp;#45;squash coge todo el trabajo de la rama mezclada y la aplasta en un no&amp;#45;merge commit encima de la rama en la que estas. &amp;#45;&amp;#45;no&amp;#45;commit no registra el commit automaticamente. Así puedes realizar todos los cambios necesarios y luego hacer el commit&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;reflog&#34;&gt;REFLOG&lt;/h2&gt;

&lt;p&gt;En segundo plano, git crea un log de a donde han estado referenciando HEAD y el resto de ramas en los últimos meses.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;git reflog&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;git show HEAD@{n}&lt;/strong&gt;  # Muestra información sobre el reflog número n&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;git log &amp;#45;g master&lt;/strong&gt;  # Muestra el log formateado como la salida de reflog&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;git show master@{yesterday}&lt;/strong&gt;  # Muestra los commits de ayer.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;utilidades&#34;&gt;UTILIDADES&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;git show &amp;lt;short&amp;#45;SHA&amp;#45;1&amp;gt;&lt;/strong&gt;   # Es posible ver un commit pasando la versión abreviada del SHA&amp;#45;1&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;git rev&amp;#45;parse &amp;lt;branch&amp;gt;&lt;/strong&gt;   # A qué SHA&amp;#45;1 apunta una rama&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;git show HEAD^&lt;/strong&gt;  #  Muestra commit padre&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;git show HEAD^2&lt;/strong&gt;  # Muestra segundo padre&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;git show HEAD~2&lt;/strong&gt;  #  El primer padre del primer padre&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;git filter&amp;#45;branch &amp;#45;&amp;#45;tree&amp;#45;filter &amp;#8216;rm &amp;#45;f &amp;lt;file&amp;gt;&amp;#8217; HEAD&lt;/strong&gt;  # elimina el archivo de todos los commits&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;depuración&#34;&gt;DEPURACIÓN&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;File anotation&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;git blame &amp;#45;L 12,22 &amp;lt;archivo&amp;gt;&lt;/strong&gt;   #  muestra cuando y por quién se modificaron de la linea 12 a la 22&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;git blame &amp;#45;C &amp;#45;L 141,153 &amp;lt;file&amp;gt;&lt;/strong&gt;   #  cuando renombras un archivo o lo refactorizas en varios, muestra de donde vino originalmente.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Búsqueda Binaria: Cuando hay un bug que no puedes localizar, usas bisect para dererminar en qué commit empezó a producirse el bug.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;git bisect start&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;git bisect bad&lt;/strong&gt;  #  marcas el commit actual como roto&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;git bisect good [commit bueno]&lt;/strong&gt;  #  último commit conocido que funcionaba&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Ahora irá preguntando hasta que encuentres el commit culpable. Si esta bien indicas git bisect good. De lo contrario git bisect bad. Al terminar hay que resetear.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;git bisect reset&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;submodulos&#34;&gt;SUBMODULOS&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;git submodule add &amp;lt;url&amp;gt;&lt;/strong&gt;   #  crea un directorio que contiene el comtenido de otro proyecto.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Clonar un repo con submodulos&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;git clone url&lt;/li&gt;
&lt;li&gt;git submodule init&lt;/li&gt;
&lt;li&gt;git submodule update&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;configuration&#34;&gt;CONFIGURATION&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;git config &amp;#45;&amp;#45;global &amp;lt;opcion&amp;gt; &amp;lt;valor&amp;gt;&lt;/strong&gt;   # global para usuario, system todos y sin nada, especifico para el repo.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;git config {key}&lt;/strong&gt;  #  muestra el valor de key&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;git config &amp;#45;&amp;#45;global core.editor &amp;lt;editor&amp;gt;&lt;/strong&gt;   # cambia el editor por defecto&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;git config &amp;#45;&amp;#45;global commit.template $HOME/.gitmessage.txt&lt;/strong&gt;  # plantilla para commits&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;git config &amp;#45;&amp;#45;global core.pager &amp;#8216;more|less&amp;#8217;&lt;/strong&gt;   # paginador por defecto, puedes usar cualquiera&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;git config &amp;#45;&amp;#45;global user.signingkey &amp;lt;gpg&amp;#45;key&amp;#45;id&amp;gt;&lt;/strong&gt;   #  clave gpg para firmar tags&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;git config &amp;#45;&amp;#45;global core.excludesfile &amp;lt;file&amp;gt;&lt;/strong&gt;   # como gitignore&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;git config &amp;#45;&amp;#45;global help.autocorrect 1&lt;/strong&gt;  #  autocorrige cuando se escribe un comando incorrecto. Solo en git &amp;gt;= 1.6.1&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;git config &amp;#45;&amp;#45;global color.ui true&lt;/strong&gt;  #  colorea la salida de git. Valores: true|false|always&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;git config &amp;#45;&amp;#45;global core.autocrlf input&lt;/strong&gt;  # para que usuarios linux no tengan problemas con los retornos de carro de windows&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;git config &amp;#45;&amp;#45;global core.autocrlf true&lt;/strong&gt;  # para usuarios de windows&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;git config &amp;#45;&amp;#45;global core.whitespace trailing&amp;#45;space, space&amp;#45;before&amp;#45;tab, indent&amp;#45;with&amp;#45;non&amp;#45;tab, cr&amp;#45;at&amp;#45;eol&lt;/strong&gt;  #  respectivamente: busca espacios al final de línea, busca espacios al inicio de tabulación, busca líneas con 8 o más espacios en lugar de tabulaciones, acepta retornos de carro&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;git apply &amp;#45;&amp;#45;whitespace=warn &amp;lt;patch&amp;gt;&lt;/strong&gt;   #  advierte de errores de espacios antes de aplicar el patch. Con &amp;#45;&amp;#45;whitespace=fix intenta arreglarlos&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;git-attributes&#34;&gt;GIT ATTRIBUTES&lt;/h2&gt;

&lt;p&gt;Archivo en .gitattributes en el directorio de trabajo o en .git/info/attributes para no committearlo&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Identificando archivos binarios&lt;/strong&gt;
Muchos archivos son para uso local y no aportan información al repositorio. Para decirle a git qué archivos son binarios hacer añadir al archivo atributes:
&lt;strong&gt;&amp;lt;nombre archivo o regexp&amp;gt; &amp;#45;crlf &amp;#45;diff&lt;/strong&gt;  #  git no intentará corregir problemas de crlf ni mostrará los cambios con diff. En versiones &amp;gt;= 1.6 se pueden sustituir estos dos valores por la macro binary&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Diffing binary files&lt;/strong&gt;
En ocasiones es útil mostrar diffs de archivos binarios, como una archivo de word:
*&lt;strong&gt;.doc diff=word&lt;/strong&gt;
#tras esto hay que definir el filtro word para que git convierta archivos word a texto:
&lt;strong&gt;git config diff.word.textconv strings&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Es posible hacer lo mismo para imágenes jpeg, es necesario instalar &lt;strong&gt;exiftool&lt;/strong&gt; para extraer los metadatos y luego hacer:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;$ &lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; ‘*.jpeg &lt;span class=&#34;nv&#34;&gt;diff&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;exif’ » .gitattributes
$ git config diff.exif.textconv exiftool
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Procesar archivos antes de hacer commit y antes de hacer checkout&lt;/strong&gt;: Es posible crear tus propios filtros para hacer sustitución. Estos filtros se llaman &lt;strong&gt;smudge&lt;/strong&gt; y &lt;strong&gt;clean&lt;/strong&gt;. Los puedes configurar para distintos directorios y luego escribir un script que procesará cada archivo antes de que sea &lt;a href=&#34;https://elbauldelprogramador.com/como-usar-los-filtros-smudge-y-clean-en-git/&#34; title=&#34;Como Usar Los Filtros Smudge Y Clean en Git&#34;&gt;checkeado (smudge) y commiteado (clean)&lt;/a&gt;. Para ello,escribe en el .gitattributes: (En caso que quieras procesar código C)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;*.c filter=indent&lt;/strong&gt; Luego:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;git config &amp;#45;&amp;#45;global filter.indent.clean indent&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;git config &amp;#45;&amp;#45;global filter.indent.smudge cat&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Otro ejemplo interesante es la expansión de la palabra clave&lt;strong&gt;$Date$&lt;/strong&gt;. Para ello hay que escribir un script en ruby que recibe un archivo, encuentra la fecha de su último commit e inserta dicha fecha en el archivo:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34; data-lang=&#34;ruby&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;ch&#34;&gt;#! /usr/bin/env ruby&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;data&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;STDIN&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;read&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;last_date&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;sb&#34;&gt;`git log --pretty=format:&amp;quot;%ad&amp;quot; -1`&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;puts&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;gsub&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;$Date$&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;$Date: &amp;#39;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;last_date&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;to_s&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;$&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Puedes nombrar este script como &lt;strong&gt;expand_date&lt;/strong&gt;. Crea un filtro en git, llamado dater y dile que use el script anterior:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;git config filter.dater.smudge expand_date&lt;/strong&gt;
&lt;strong&gt;git config filter.dater.clean &amp;#8216;perl &amp;#45;pe &amp;#8220;s/\\$Date[^\\$]*\\$/\\$Date\\$/&amp;#8221;&amp;#8216;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Para usar el filtro, simplemente escribe la palabra clave en los archivos que desees:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;# $Date$&amp;#39;&lt;/span&gt; &amp;gt; date_test.txt
&lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;date.txt filter=dater&amp;#39;&lt;/span&gt; » .gitattributes

git add date_test.txt .gitattributes
git commit -m &lt;span class=&#34;s2&#34;&gt;&amp;quot;Testing date expansion in Git&amp;quot;&lt;/span&gt;
rm date_test.txt
git checkout date_test.txt
cat date_test.txt
&lt;span class=&#34;nv&#34;&gt;$Da&lt;/span&gt;te: Tue Apr &lt;span class=&#34;m&#34;&gt;21&lt;/span&gt; 07:26:52 &lt;span class=&#34;m&#34;&gt;2009&lt;/span&gt; -0700$
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&#34;git-hooks&#34;&gt;GIT HOOKS&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://elbauldelprogramador.com/sincronizacin-de-proyectos-en-git-con-hooks-ganchos/ &amp;quot;Sincronización de proyectos en git con hooks (ganchos&#34;&gt;Hay dos tipos&lt;/a&gt;&amp;rdquo;), de lado cliente y servidor, se guardan en el directorio .git/hooks. Para activarlos basta con que sean ejecutables.&lt;/p&gt;

&lt;h2 id=&#34;conceptos&#34;&gt;CONCEPTOS&lt;/h2&gt;

&lt;p&gt;Fast forward: cuando se hace un merge y el commit de la rama a mezclar esta justo un commit adelantado, simplemente se hace apuntar la rama en la que se iba a mezclar al commit del merge.&lt;/p&gt;

&lt;h2 id=&#34;gitignore&#34;&gt;GITIGNORE:&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;*.a &lt;span class=&#34;c1&#34;&gt;# no .a files&lt;/span&gt;
*!lib.a &lt;span class=&#34;c1&#34;&gt;# but do track lib.a, even though you’re ignoring .a files above&lt;/span&gt;
/TODO &lt;span class=&#34;c1&#34;&gt;# only ignore the root TODO file, not subdir/TODO*&lt;/span&gt;
build/ &lt;span class=&#34;c1&#34;&gt;# ignore all files in the build/ directory*&lt;/span&gt;
doc/*.txt &lt;span class=&#34;c1&#34;&gt;# ignore doc/notes.txt, but not doc/server/arch.txt&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
        </item>
        
    </channel>
</rss>
