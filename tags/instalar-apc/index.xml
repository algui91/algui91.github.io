<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Instalar Apc on El Baúl del programador</title>
        <link>https://elbauldelprogramador.com/tags/instalar-apc/</link>
        <description>Recent content in Instalar Apc on El Baúl del programador</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>es-ES</language>
        <lastBuildDate>Fri, 01 Jan 2016 00:00:00 +0000</lastBuildDate>
        <image>
            <url>https://elbauldelprogramador.com/img/bio-photo-rss.png</url>
            <link>https://elbauldelprogramador.com/tags/instalar-apc/</link>
            <title>Instalar Apc on El Baúl del programador</title>
            <width>144</width>
            <height>144</height>
        </image>
        <atom:link href="https://elbauldelprogramador.com/tags/instalar-apc/" rel="self" type="application/rss+xml" />
        
        <item>
            <title>Instalación y optimización de un servidor web con Nginx (III)</title>
            <link>https://elbauldelprogramador.com/instalacion-optimizacion-servidor-web-nginx-iii/</link>
            <pubDate>Fri, 01 Jan 2016 00:00:00 +0000</pubDate>
            
            <guid>https://elbauldelprogramador.com/instalacion-optimizacion-servidor-web-nginx-iii/</guid>
            <description>&lt;h1 id=&#34;tabla-de-contenidos&#34;&gt;Tabla de contenidos&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://elbauldelprogramador.com/instalacion-optimizacion-servidor-web-nginx-i&#34; title=&#34;Instalación y optimización de un servidor web con Nginx (I)&#34;&gt;Instalación y optimización de un servidor web con Nginx (I)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://elbauldelprogramador.com/instalacion-optimizacion-servidor-web-nginx-ii&#34; title=&#34;Instalación y optimización de un servidor web con Nginx (II)&#34;&gt;Instalación y optimización de un servidor web con Nginx (II)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Instalación y optimización de un servidor web con Nginx (III)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;En éste último artículo se verá cómo realizar optimizaciones al servidor web nginx, PHP y se cubrirá la instalación del sistema de caches APC y el módulo Page Speed de Google.&lt;/p&gt;

&lt;p&gt;&lt;!--ad--&gt;&lt;/p&gt;

&lt;h2 id=&#34;optimizando&#34;&gt;Optimizando&lt;/h2&gt;

&lt;h3 id=&#34;pools-en-php&#34;&gt;Pools en PHP&lt;/h3&gt;

&lt;p&gt;La configuración por defecto de PHP no suele ser la óptima, dependiendo de nuestras necesidades y hardware deberemos ajustar algunos parámetros. En esta sección nos centraremos en el número de procesos y recursos que se dedicarán a una aplicación web. Estos parámetros se encuentran en el directorio &lt;em&gt;/etc/php/fpm/pools.d&lt;/em&gt;, se debe tener una archivo por cada aplicación, en nuestro caso será &lt;em&gt;www.conf&lt;/em&gt;.
Los parámetros a ajustar son:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;pm&lt;/strong&gt;: Decide cómo el controlador de procesos administra los procesos hijos, es recomendable establecerlo a dinámico.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;pm.max_children&lt;/strong&gt;: Cuando pm es estático, el número de hijos a crear, cuando es dinámico, el máximo número de hijos que se podrán tener.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;pm.start_servers&lt;/strong&gt;: Número de hijos a crear al inicio.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;pm.min_spare_servers&lt;/strong&gt;: El número mínimo de procesos libres (Sin hacer nada).&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;pm.max_spare_servers&lt;/strong&gt;: Número máximo de procesos libres.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;pm.max_requests&lt;/strong&gt;: El número de peticiones que cada hijo aceptará antes de reiniciarse, útil para evitar pérdidas de memoria.&lt;/p&gt;

&lt;p&gt;Hay varias aproximaciones para determinar el valor adecuado de estos parámetros, en esta guía se verán 3, y todas con &lt;em&gt;pm = dynamic&lt;/em&gt;.&lt;/p&gt;

&lt;h4 id=&#34;primer-método&#34;&gt;Primer método&lt;/h4&gt;

&lt;p&gt;El primero (&lt;a href=&#34;http://nls.io/optimize-nginx-and-php-fpm-max_children/&#34; title=&#34;Optimize nginx and PHP-FPM (max_children)&#34; target=&#34;_blank&#34;&gt;Guillaume Moigneu&lt;/a&gt;) consiste en calcular &lt;em&gt;pm.max_children&lt;/em&gt; basándonos en la fórmula:&lt;/p&gt;

&lt;p&gt;\[pm.max\_children = (RAM_{total} - RAM_{resto Proc})/ RAM_{mediaPHP}\]&lt;/p&gt;

&lt;p&gt;Donde \(RAM_{restoProc}\) es la memoria usada por los otros procesos y \(RAM_{mediaPHP}\) es la media de memoria usada por los procesos de PHP. La memoria consumida por el resto de procesos se puede calcular mediante este comando:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;&#34;&gt;ps -ylA --sort:rss &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;&#34;&gt; grep -v php5-fpm &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;&#34;&gt; awk &lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#39;!/RSS/ { s+=$8 } END { printf &amp;#34;%s\n&amp;#34;, &amp;#34;Memoria total usada por otros procesos&amp;#34;; printf &amp;#34;%dM\n&amp;#34;, s/1024 }&amp;#39;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Y la consumida por PHP:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;&#34;&gt;ps -ylC php5-fpm --sort:rss  &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;&#34;&gt; awk &lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#39;!/RSS/ { s+=$8 } END { printf &amp;#34;%s\n&amp;#34;, &amp;#34;Memoria consumida por PHP: &amp;#34;; printf &amp;#34;%dM\n&amp;#34;, s/1024 }&amp;#39;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Al número anterior lo dividimos por los procesos de PHP y obtenemos la media. Una vez calculado el valor de &lt;em&gt;max_children&lt;/em&gt;, &lt;em&gt;min_spare_servers&lt;/em&gt; y &lt;em&gt;max_spare_servers&lt;/em&gt; se suelen calcular evaluando el rendimiento y &lt;em&gt;start_servers&lt;/em&gt;, suele ser:&lt;/p&gt;

&lt;p&gt;\[start\_servers = \frac{min\_spare\_servers + (max\_spare\_servers - min\_spare\_servers)}{2}\]&lt;/p&gt;

&lt;h4 id=&#34;segundo-método&#34;&gt;Segundo método&lt;/h4&gt;

&lt;p&gt;El segundo método (&lt;a href=&#34;http://myshell.co.uk/index.php/adjusting-child-processes-for-php-fpm-nginx/&#34; title=&#34;Adjusting child processes for PHP-FPM (Nginx)&#34; target=&#34;_blank&#34;&gt;myshell.co.uk&lt;/a&gt;) es calcularlo en base a:&lt;/p&gt;

&lt;p&gt;\[pm.max\_children = RAM_{total} / RAM_{maxPHP}\]&lt;/p&gt;

&lt;p&gt;Donde \(RAM_{maxPHP}\) es el process PHP que ocupe más memoria. El resto de parámetros se calculan en base a éste.&lt;/p&gt;

&lt;h4 id=&#34;tercer-método&#34;&gt;Tercer método&lt;/h4&gt;

&lt;p&gt;Por último, otro método (&lt;a href=&#34;https://github.com/perusio/php-fpm-example-config&#34; title=&#34;Example configuration of php-fpm&#34; target=&#34;_blank&#34;&gt;Perusio&lt;/a&gt;) es realizando la operación siguiente:&lt;/p&gt;

&lt;p&gt;\[pm.max\_children = 1.2 \cdot RAM_{total}/RAM_{mediaPHP}\]&lt;/p&gt;

&lt;h3 id=&#34;optimizando-nginx&#34;&gt;Optimizando Nginx&lt;/h3&gt;

&lt;p&gt;FastCGI es un protocolo que hace de interfaz entre programas y servidores web. En esta sección veremos cómo configurar nginx para cachear páginas y aumentar su rendimiento.&lt;/p&gt;

&lt;p&gt;Para aprovechar todos los núcleos de un procesador, nginx necesita ajustar el parámetro &lt;em&gt;worker_processes&lt;/em&gt; acorde al número de procesadores. Para determinar el número de procesadores podemos ejecutar el siguiente comando:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;&#34;&gt;cat /proc/cpuinfo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;&#34;&gt; grep processor &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;&#34;&gt; wc -l&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;En la directiva &lt;em&gt;worker_connections&lt;/em&gt; dentro del bloque &lt;em&gt;events&lt;/em&gt; escribiremos un 1024. Con esto nginx tendrá un proceso por núcleo y cada proceso podrá procesar hasta 1024 conexiones.&lt;/p&gt;

&lt;p&gt;Estableceremos ahora los parámetros que permitirán cachear los resultados para servirlos más rápido al cliente, para ello haremos uso de las directivas &lt;em&gt;fastcgi_cache&lt;/em&gt;. En el bloque &lt;em&gt;http&lt;/em&gt; necesitaremos:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;&#34;&gt;fastcgi_cache_path /var/cache/nginx &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;levels&lt;/span&gt;&lt;span class=&#34;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;&#34;&gt;:2 &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;keys_zone&lt;/span&gt;&lt;span class=&#34;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;&#34;&gt;microcache:500m &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;max_size&lt;/span&gt;&lt;span class=&#34;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;&#34;&gt;1000m &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;inactive&lt;/span&gt;&lt;span class=&#34;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;&#34;&gt;60m&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;&#34;&gt;fastcgi_cache_key &lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;$scheme$request_method$host$request_uri&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;&#34;&gt;fastcgi_cache_use_stale updating error timeout invalid_header http_500&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Lo cual establece el directorio donde se guardarán los objetos cacheados, los niveles de cache, un nombre y el espacio reservado (500Mb), así como un tope máximo (1Gb). La segunda directiva establece bajo qué nombre se almacenará la clave para la cache. Por último la tercera servirá contenido antiguo en la caché cuando haya errores en el servidor web, cuando se esté actualizando la caché, cuando haya errores del tipo 5xx o cuando la cabecera de la petición sea inválida.&lt;/p&gt;

&lt;p&gt;El siguiente paso es decidir qué objetos se almacenarán en caché y cuales no. Para ello, dentro de un bloque &lt;em&gt;server&lt;/em&gt; escribiremos:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;n&#34;&gt;set&lt;/span&gt;&lt;span class=&#34;&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;$no_cache&lt;/span&gt;&lt;span class=&#34;&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;$request_method&lt;/span&gt;&lt;span class=&#34;&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;&#34;&gt; POST&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;set&lt;/span&gt;&lt;span class=&#34;&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;$no_cache&lt;/span&gt;&lt;span class=&#34;&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;$query_string&lt;/span&gt;&lt;span class=&#34;&#34;&gt; !&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;set&lt;/span&gt;&lt;span class=&#34;&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;$no_cache&lt;/span&gt;&lt;span class=&#34;&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;&#34;&gt;    location ~ &lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\.&lt;/span&gt;&lt;span class=&#34;&#34;&gt;php$ &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# ....
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;&lt;span class=&#34;&#34;&gt;      fastcgi_cache_bypass &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;$no_cache&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;&#34;&gt;      fastcgi_no_cache &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;$no_cache&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;&#34;&gt;      fastcgi_cache microcache&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;&#34;&gt;      fastcgi_cache_valid 60m&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;En esta porción de código hemos declarado una variable que determinará qué peticiones se cachean y cuales no. No cachearemos ninguna petición POST ni nada que tenga consultas en la URL (?arg&amp;#8230;&amp;arg1;&amp;#8230;). Con ayuda de esta variable podremos decidir en el bloque &lt;em&gt;location&lt;/em&gt; si cacheamos la petición (directivas bypass y no_cache), aquí hacemos referencia al nombre que dimos anteriormente al espacio de caché y fijamos un periodo de validez.&lt;/p&gt;

&lt;h3 id=&#34;page-speed&#34;&gt;Page Speed&lt;/h3&gt;

&lt;p&gt;En esta sección veremos cómo compilar y configurar el módulo desarrollado por Google que optimizará al máximo todos los recursos de nuestra web, minimizando considerablemente el tiempo de respuesta y aplicando algunos cambios a los archivos para que cumplan con los estándares de rendimiento que Google usa para puntuar las páginas web.&lt;/p&gt;

&lt;p&gt;Algunas de las características que ofrece son comprimir los archivos CSS y JavaScript de forma que ocupen lo menos posible. Unificar (cuando sea posible) la mayor cantidad de archivos CSS y JS en uno solo para reducir el número de peticiones al servidor. Optimizar las imágenes para reducir su tamaño. Cargar de forma asíncrona los programas JS. Mover los elementos bloqueantes que impiden que la página se renderize correctamente a lugares donde no sean perjudiciales para el renderizado. Éstas son solo algunas de las funcionalidades principales.&lt;/p&gt;

&lt;h4 id=&#34;preparando-el-entorno&#34;&gt;Preparando el entorno&lt;/h4&gt;

&lt;p&gt;Antes de poder compilar, será necesario instalar algunas dependencias:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;&#34;&gt;apt-get install build-essential zlib1g-dev libpcre3 libpcre3-dev&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Una vez hecho, estamos en condiciones para descargar y compilar:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;n&#34;&gt;cd&lt;/span&gt;&lt;span class=&#34;&#34;&gt; ~
&lt;/span&gt;&lt;span class=&#34;&#34;&gt;wget https://github.com/pagespeed/ngx_pagespeed/archive/v1.7.30.1-beta.zip
&lt;/span&gt;&lt;span class=&#34;&#34;&gt;unzip v1.7.30.1-beta.zip &lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# or unzip v1.7.30.1-beta
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cd&lt;/span&gt;&lt;span class=&#34;&#34;&gt; ngx_pagespeed-1.7.30.1-beta/
&lt;/span&gt;&lt;span class=&#34;&#34;&gt;wget https://dl.google.com/dl/page-speed/psol/1.7.30.1.tar.gz
&lt;/span&gt;&lt;span class=&#34;&#34;&gt;tar -xzvf &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;&#34;&gt;.7.30.1.tar.gz&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Hecho esto, será necesario recompilar nginx con este módulo, como comentamos al inicio de esta guía, para ello simplemente ejecutamos:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;&#34;&gt;nginx -V &lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# Para ver con qué módulos está compilado el ejecutable actual
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;&lt;span class=&#34;&#34;&gt;configure arguments: --with-http_gzip_static_module --sbin-path&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;&#34;&gt;/usr/local/sbin --with-http_ssl_module --without-mail_pop3_module --without-mail_imap_module --without-mail_smtp_module --with-http_stub_status_module --with-http_realip_module
&lt;/span&gt;&lt;span class=&#34;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cd&lt;/span&gt;&lt;span class=&#34;&#34;&gt; ~/nginx-1.4.4/ &lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# compilaremos nginx con el nuevo módulo (--ad-module)
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;&lt;span class=&#34;&#34;&gt;./configure --with-http_gzip_static_module --sbin-path&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;&#34;&gt;/usr/local/sbin --with-http_ssl_module --without-mail_pop3_module --without-mail_imap_module --without-mail_smtp_module --with-http_stub_status_module --with-http_realip_module --add-module&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;$HOME&lt;/span&gt;&lt;span class=&#34;&#34;&gt;/ngx_pagespeed-1.7.30.1-beta
&lt;/span&gt;&lt;span class=&#34;&#34;&gt;make -j &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# compilamos
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;&lt;span class=&#34;&#34;&gt;service nginx destroy &lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# detenemos la instancia actual de nginx
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;&lt;span class=&#34;&#34;&gt;make install # instalamos la nueva versión con pagespeed&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;h4 id=&#34;configurando-pagespeed&#34;&gt;Configurando PageSpeed&lt;/h4&gt;

&lt;p&gt;Solo resta configurar nginx para activar &lt;em&gt;pagespeed&lt;/em&gt; con los filtros deseados. La documentación se puede encontrar en &lt;a href=&#34;https://developers.google.com/speed/pagespeed/module/config_filters&#34; title=&#34;Configuring PageSpeed Filters&#34; target=&#34;_blank&#34;&gt;Configuring PageSpeed Filters&lt;/a&gt;. Por defecto los filtros habilitados son:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;&#34;&gt;add_head
&lt;/span&gt;&lt;span class=&#34;&#34;&gt;combine_css
&lt;/span&gt;&lt;span class=&#34;&#34;&gt;combine_javascript
&lt;/span&gt;&lt;span class=&#34;&#34;&gt;convert_meta_tags
&lt;/span&gt;&lt;span class=&#34;&#34;&gt;extend_cache
&lt;/span&gt;&lt;span class=&#34;&#34;&gt;fallback_rewrite_css_urls
&lt;/span&gt;&lt;span class=&#34;&#34;&gt;flatten_css_imports
&lt;/span&gt;&lt;span class=&#34;&#34;&gt;inline_css
&lt;/span&gt;&lt;span class=&#34;&#34;&gt;inline_import_to_link
&lt;/span&gt;&lt;span class=&#34;&#34;&gt;inline_javascript
&lt;/span&gt;&lt;span class=&#34;&#34;&gt;rewrite_css
&lt;/span&gt;&lt;span class=&#34;&#34;&gt;rewrite_images
&lt;/span&gt;&lt;span class=&#34;&#34;&gt;rewrite_javascript
&lt;/span&gt;&lt;span class=&#34;&#34;&gt;rewrite_style_attributes_with_url&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Veamos cómo habilitar pagespeed en nginx, para ello crearemos un fichero y un directorio en &lt;em&gt;/usr/local/nginx/conf/global/pagespeed.conf&lt;/em&gt; conteniendo:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;&#34;&gt;pagespeed on&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# Needs to exist and be writable by nginx.
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;&lt;span class=&#34;&#34;&gt;pagespeed FileCachePath /var/ngx_pagespeed_cache&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# Ensure requests for pagespeed optimized resources go to the pagespeed handler
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# and no extraneous headers get set.
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;&lt;span class=&#34;&#34;&gt;location ~ &lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;\.pagespeed\.([a-z]\.)?[a-z]{2}\.[^.]{10}\.[^.]+&amp;#34;&lt;/span&gt;&lt;span class=&#34;&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;&#34;&gt;      add_header &lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;&#34;&gt;location ~ &lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;^/ngx_pagespeed_static/&amp;#34;&lt;/span&gt;&lt;span class=&#34;&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;&#34;&gt;location ~ &lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;^/ngx_pagespeed_beacon&lt;/span&gt;&lt;span class=&#34;&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# This page shows statistics about the ngx_pagespeed module.
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;&lt;span class=&#34;&#34;&gt;location /ngx_pagespeed_statistics &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;&#34;&gt;    allow &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;127&lt;/span&gt;&lt;span class=&#34;&#34;&gt;.0.0.1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;&#34;&gt;    allow TuIP&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;&#34;&gt;    deny all&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# Recent log messages. Like statistics, these are generally not to be shown
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# to the public, so this has access controls as well.
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;&lt;span class=&#34;&#34;&gt;pagespeed MessageBufferSize &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;100000&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;&#34;&gt;location /ngx_pagespeed_message &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;&#34;&gt;    allow &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;127&lt;/span&gt;&lt;span class=&#34;&#34;&gt;.0.0.1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;#    allow TuIP;
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;&lt;span class=&#34;&#34;&gt;    deny all&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# This page lets you view a graphical console displaying statistics about
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# the ngx_pagespeed module.  As with statistics and messages, you may
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# want access control.
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;&lt;span class=&#34;&#34;&gt;pagespeed Statistics on&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;&#34;&gt;pagespeed StatisticsLogging on&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;&#34;&gt;pagespeed LogDir /var/log/pagespeed&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;&#34;&gt;pagespeed StatisticsLoggingIntervalMs &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;60000&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;&#34;&gt;pagespeed StatisticsLoggingMaxFileSizeKb &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1024&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;&#34;&gt;location /pagespeed_console &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;&#34;&gt;    allow &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;127&lt;/span&gt;&lt;span class=&#34;&#34;&gt;.0.0.1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;#    allow TuIP;
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;&lt;span class=&#34;&#34;&gt;    deny all&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# Honoring no-transform Cache-Control Headers
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;&lt;span class=&#34;&#34;&gt;pagespeed DisableRewriteOnNoTransform off&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;&#34;&gt;pagespeed RewriteLevel CoreFilters&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# Specifying the value for the PageSpeed header
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;&lt;span class=&#34;&#34;&gt;pagespeed XHeaderValue &lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Gracias a ngx_pagespeed&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Esto debería ser suficiente para la mayoría de webs, es posible habilitar más filtros usando la directiva &lt;em&gt;pagespeed EnableFilters&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Por último hay que añadir la configuración a nginx, dentro del bloque &lt;em&gt;server&lt;/em&gt; que deseemos incluimos la línea &lt;em&gt;include global/pagespeed.conf;&lt;/em&gt; y recargamos la configuración de nginx:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;&#34;&gt;service nginx reload&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Podemos comprobar que todo funciona correctamente ojeando las cabeceras de la respuesta del servidor como se muestra en la figura:&lt;/p&gt;

&lt;figure&gt;
    &lt;a href=&#34;https://elbauldelprogramador.com/img/2014/02/pagespeed.png&#34;&gt;&lt;img sizes=&#34;(min-width: 255px) 255px, 100vw&#34; on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/2014/02/pagespeed.png&#34; title=&#34;Configuración pagespeed nginx&#34; alt=&#34;Configuración pagespeed nginx&#34; width=&#34;255px&#34; height=&#34;135px&#34; /&gt;&lt;/a&gt;
&lt;/figure&gt;

&lt;p&gt;Como vemos, la cabecera de pagespeed está presente, luego está habilitado.&lt;/p&gt;

&lt;h2 id=&#34;apc&#34;&gt;APC&lt;/h2&gt;

&lt;p&gt;APC viene de Alternative PHP Cache y es un opcode libre y gratuito para PHP. Su objetivo es proporcionar un marco robusto, libre y abierto para optimizar código intermedio de PHP mediante su almacenamiento en caché.&lt;/p&gt;

&lt;h3 id=&#34;instalando-y-configurando-apc&#34;&gt;Instalando y configurando APC&lt;/h3&gt;

&lt;p&gt;Para instalarlo basta con ejecutar:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;&#34;&gt;apt-get install php-apc&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;El archivo de configuración reside en &lt;em&gt;/etc/php5/fpm/conf.d/apc.ini&lt;/em&gt;, un ejemplo de configuración es el siguiente:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;&#34;&gt;apc.enabled&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;&#34;&gt;apc.shm_segments&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;&#34;&gt;apc.shm_size&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;&#34;&gt;128M
&lt;/span&gt;&lt;span class=&#34;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;&#34;&gt;Relative to the number of cached files &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;&#34;&gt;you may need to watch your stats &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;&#34;&gt; a day or two to find out a good number&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;&#34;&gt;apc.num_files_hint&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;768&lt;/span&gt;&lt;span class=&#34;&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;&#34;&gt;Relative to the size of your site
&lt;/span&gt;&lt;span class=&#34;&#34;&gt;apc.user_entries_hint&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;4096&lt;/span&gt;&lt;span class=&#34;&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;&#34;&gt;The number of seconds a cache entry is allowed to idle in a slot before APC dumps the cache
&lt;/span&gt;&lt;span class=&#34;&#34;&gt;apc.ttl&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;7200&lt;/span&gt;&lt;span class=&#34;&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;&#34;&gt;apc.user_ttl&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;7200&lt;/span&gt;&lt;span class=&#34;&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;&#34;&gt;apc.gc_ttl&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;3600&lt;/span&gt;&lt;span class=&#34;&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;&#34;&gt;Setting this to &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;&#34;&gt; will give you the best performance, as APC will
&lt;/span&gt;&lt;span class=&#34;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;&#34;&gt;not have to check the IO &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;&#34;&gt; changes. However, you must clear
&lt;/span&gt;&lt;span class=&#34;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;&#34;&gt;the APC cache to recompile already cached files. If you are still
&lt;/span&gt;&lt;span class=&#34;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;&#34;&gt;developing, updating your site daily in WP-ADMIN, and running W3TC
&lt;/span&gt;&lt;span class=&#34;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;set&lt;/span&gt;&lt;span class=&#34;&#34;&gt; this to &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;&#34;&gt;apc.stat&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;;&lt;/span&gt;&lt;span class=&#34;&#34;&gt;This MUST be &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;&#34;&gt;, WP can have errors otherwise!
&lt;/span&gt;&lt;span class=&#34;&#34;&gt;apc.include_once_override&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;&#34;&gt;Only &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;set&lt;/span&gt;&lt;span class=&#34;&#34;&gt; to &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;while&lt;/span&gt;&lt;span class=&#34;&#34;&gt; debugging
&lt;/span&gt;&lt;span class=&#34;&#34;&gt;apc.enable_cli&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;&#34;&gt;Allow &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;&#34;&gt; seconds after a file is created before it is cached to prevent users from seeing half-written/weird pages
&lt;/span&gt;&lt;span class=&#34;&#34;&gt;apc.file_update_protection&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;&#34;&gt;Leave at 2M or lower. WordPress doest have any file sizes close to 2M
&lt;/span&gt;&lt;span class=&#34;&#34;&gt;apc.max_file_size&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;&#34;&gt;1M
&lt;/span&gt;&lt;span class=&#34;&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;&#34;&gt;apc.cache_by_default&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;&#34;&gt;apc.use_request_time&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;&#34;&gt;apc.slam_defense&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;&#34;&gt;apc.mmap_file_mask&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;&#34;&gt;/tmp/apc.XXXXXX
&lt;/span&gt;&lt;span class=&#34;&#34;&gt;apc.stat_ctime&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;&#34;&gt;apc.canonicalize&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;&#34;&gt;apc.write_lock&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;&#34;&gt;apc.report_autofilter&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;&#34;&gt;apc.rfc1867&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;&#34;&gt;apc.rfc1867_prefix &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;&#34;&gt;upload_
&lt;/span&gt;&lt;span class=&#34;&#34;&gt;apc.rfc1867_name&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;&#34;&gt;APC_UPLOAD_PROGRESS
&lt;/span&gt;&lt;span class=&#34;&#34;&gt;apc.rfc1867_freq&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;&#34;&gt;apc.rfc1867_ttl&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;3600&lt;/span&gt;&lt;span class=&#34;&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;&#34;&gt;apc.lazy_classes&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;&#34;&gt;apc.lazy_functions&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;&#34;&gt;apc.localcache &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;1&amp;#34;&lt;/span&gt;&lt;span class=&#34;&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;&#34;&gt;The size of the &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;local&lt;/span&gt;&lt;span class=&#34;&#34;&gt; process shadow-cache, should be &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;set&lt;/span&gt;&lt;span class=&#34;&#34;&gt; to a sufficiently large value, approximately half of apc.num_files_hint.
&lt;/span&gt;&lt;span class=&#34;&#34;&gt;apc.localcache.size &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;384&amp;#34;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;&lt;a href=&#34;https://elbauldelprogramador.com/solucionar-fallo-de-segmentacion-en-php-cuando-se-usa-apc/&#34; title=&#34;Solucionar fallo de segmentación en PHP cuando se usa APC&#34;&gt;APC&lt;/a&gt; proporciona una mejora considerable en cuanto al rendimiento, ya que no es necesario volver a interpretar el código PHP cada vez que el servidor recibe una petición, el código quedará compilado en cache listo para ser servido. Uno de los parámetros más importantes es &lt;em&gt;apc.shm_size=&lt;/em&gt;, el cual establece el tamaño reservado para la caché.&lt;/p&gt;

&lt;h2 id=&#34;consideraciones-sobre-seguridad&#34;&gt;Consideraciones sobre seguridad&lt;/h2&gt;

&lt;p&gt;Algunos valores por defecto de la configuración de nginx no son adecuados en términos de seguridad, basándonos en las recomendaciones de &lt;a href=&#34;http://www.cyberciti.biz/tips/linux-unix-bsd-nginx-webserver-security.html&#34; title=&#34;Top 20 Nginx WebServer Best Security Practices&#34; target=&#34;_blank&#34;&gt;NIX Craft&lt;/a&gt; podemos ajustar éstos parámetros según nuestras necesidades para obtener una mayor seguridad frente a ataques. Todos estos parámetros irán en el bloque &lt;em&gt;http&lt;/em&gt; de nginx.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;c&#34;&gt;## Start: Size Limits &amp;amp; Buffer Overflows ##
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;&lt;span class=&#34;&#34;&gt;      client_body_buffer_size  8K&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;&#34;&gt;      client_header_buffer_size 1k&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;&#34;&gt;      client_max_body_size 1m&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;&#34;&gt;      large_client_header_buffers &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;&#34;&gt; 1k&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;c&#34;&gt;## END: Size Limits &amp;amp; Buffer Overflows ##
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;&lt;span class=&#34;&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;c&#34;&gt;## Start: Timeouts ##
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;&lt;span class=&#34;&#34;&gt;      client_body_timeout   &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;&#34;&gt;      client_header_timeout &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;&#34;&gt;      keepalive_timeout     &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;&#34;&gt;      send_timeout          &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;c&#34;&gt;## End: Timeouts ##
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;&lt;span class=&#34;&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;c&#34;&gt;### Directive describes the zone, in which the session states are stored i.e. store in slimits. ###
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;&lt;span class=&#34;&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;c&#34;&gt;### 1m can handle 32000 sessions with 32 bytes/session, set to 5m x 32000 session ###
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;&lt;span class=&#34;&#34;&gt;      limit_conn_zone &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;$binary_remote_addr&lt;/span&gt;&lt;span class=&#34;&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;zone&lt;/span&gt;&lt;span class=&#34;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;&#34;&gt;addr:5m&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;c&#34;&gt;### Control maximum number of simultaneous connections for one session i.e. ###
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;&lt;span class=&#34;&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;c&#34;&gt;### restricts the amount of connections from a single ip address ###
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;&lt;span class=&#34;&#34;&gt;      limit_conn addr &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Una breve explicación del propósito de cada directiva:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;client_body_buffer_size&lt;/strong&gt;: El tamaño máximo del buffer de petición del cliente.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;client_header_buffer_size&lt;/strong&gt;: Normalmente el tamaño de las cabeceras de la mayoría de peticiones son inferiores a 1k, si hay problemas deberemos subir el valor.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;client_max_body_size&lt;/strong&gt;: Si vamos a aceptar que se suban archivos a nuestra web, este valor debería ser dado en Megas, de lo contrario podremos establecer un valor bajo, como 1k.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;large_client_header_buffers&lt;/strong&gt;: Número máximo y tamaño de los buffers para peticiones que tengan cabeceras de mayor tamaño enviadas por el cliente. Útil para combatir bad bots y ataques DoS.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;client_body_timeout&lt;/strong&gt;: Establece el tiempo de espera para leer el cuerpo de la petición del cliente. Si tras pasar el tiempo el cliente no envía nada, nginx devolverá un error 408 (Request timeout).&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;client_header_timeout&lt;/strong&gt;: Similar al anterior pero para la cabecera.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;keepalive_timeout&lt;/strong&gt;: El primer parámetro asigna el tiempo de espera para mantener la conexión activa con el cliente, el servidor cerrará la conxión tras pasar éste tiempo. El segundo parámetro establece el valor de la cabecera &lt;em&gt;Keep-Alive:timeout=time&lt;/em&gt; en la respuesta del servidor, esta cabecera puede hacer que algunos navegadore cierren la conexión para que no sea el servidor el que tenga que hacerlo.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;send_timeout&lt;/strong&gt;: Asigna el tiempo de espera al cliente.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;limit_conn_zone&lt;/strong&gt;: Controla el número de conexiones simultaneas de un mismo cliente.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Con esto concluyen los tres artículos sobre instalación y optimización de un servidor web con nginx, espero que haya resultado útil.&lt;/p&gt;

&lt;h1 id=&#34;tabla-de-contenidos-1&#34;&gt;Tabla de contenidos&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://elbauldelprogramador.com/instalacion-optimizacion-servidor-web-nginx-i&#34; title=&#34;Instalación y optimización de un servidor web con Nginx (I)&#34;&gt;Instalación y optimización de un servidor web con Nginx (I)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://elbauldelprogramador.com/instalacion-optimizacion-servidor-web-nginx-ii&#34; title=&#34;Instalación y optimización de un servidor web con Nginx (II)&#34;&gt;Instalación y optimización de un servidor web con Nginx (II)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Instalación y optimización de un servidor web con Nginx (III)&lt;/li&gt;
&lt;/ul&gt;</description>
        </item>
        
    </channel>
</rss>
