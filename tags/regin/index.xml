<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Regin on El Baúl del programador</title>
        <link>https://elbauldelprogramador.com/tags/regin/index.xml</link>
        <description>Recent content in Regin on El Baúl del programador</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>es-ES</language>
        <image>
            <url>https://elbauldelprogramador.com/img/bio-photo-rss.png</url>
            <link>https://elbauldelprogramador.com/tags/regin/index.xml</link>
            <title>Regin on El Baúl del programador</title>
            <width>144</width>
            <height>144</height>
        </image>
        <atom:link href="https://elbauldelprogramador.com/tags/regin/index.xml" rel="self" type="application/rss+xml" />
        
        <item>
            <title>Regin - Arquitectura del Malware de primer nivel que permite una vigilancia sigilosa</title>
            <link>https://elbauldelprogramador.com/regin-arquitectura-malware-de-primer-nivel-vigilancia-sigilosa/</link>
            <pubDate>Fri, 01 Jan 2016 00:00:00 +0000</pubDate>
            
            <guid>https://elbauldelprogramador.com/regin-arquitectura-malware-de-primer-nivel-vigilancia-sigilosa/</guid>
            <description>&lt;p&gt;En éstos días se ha escuchado hablar mucho sobre &lt;strong&gt;Regin&lt;/strong&gt;, un malware de una calidad superior, como pocos vistos hasta ahora. En éste artículo se pretende profundizar en el funcionamiento de éste malware, el cual es una obra de excelente calidad. Me basaré principalmente en lo comentado por Steve en el episodio #483 del podcast &lt;a href=&#34;https://elbauldelprogramador.com/security-now/&#34; title=&#34;Más artículos de Security Now!&#34;&gt;Security Now!&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;!--ad--&gt;&lt;/p&gt;

&lt;p&gt;“&lt;strong&gt;Regin&lt;/strong&gt;” viene de &lt;em&gt;“Registry”&lt;/em&gt; - &lt;em&gt;Install&lt;/em&gt;, descubierto por Symantec en 2008. A continuación se cita el análisis que hicieron sobre éste malware:&lt;/p&gt;

&lt;p&gt;*En el mundo de las amenazas de malware, sólo unos pocos ejemplos pueden considerarse inigualables y sin igual. &lt;strong&gt;Regin&lt;/strong&gt; es ese tipo de malware.*&lt;/p&gt;

&lt;p&gt;*&lt;strong&gt;Regin&lt;/strong&gt; es un software extremadamente complejo que puede personalizarse con un amplio rango de capacidades que pueden desplegarse dependiendo del objetivo a atacar. Está construido sobre un framework diseñado para mantener operaciones de recolección de datos a largo plazo quedando al margen de todos los radares ( Entiéndanse, antivirus). Lleva a cabo medidas extraordinarias para ocultarse a sí mismo y sus actividades en la máquina afectada. Su sigilo combina técnicas de las más avanzadas que se han visto en uso.*&lt;/p&gt;

&lt;p&gt;*El principal propósito de &lt;strong&gt;Regin&lt;/strong&gt; es la recopilación de información y se ha visto implicado en operaciones de colección de datos contra organizaciones gubernamentales, empresas, organizaciones docentes y particulares. La complejidad y nivel de sofisticación de &lt;strong&gt;Regin&lt;/strong&gt; hacen pensar que el desarrollo de ésta amenaza ha llevado meses, e incluso años.*&lt;/p&gt;

&lt;p&gt;*&lt;strong&gt;Regin&lt;/strong&gt; es una amenaza multi etapa y modular, lo que significa que tiene un número de compoenentes, cada uno dependiente de otros, para realizar las operaciones de ataque. Éste enfoque modular proporciona la flexibilidad necesaria a los ataques, ya que es posible cargar características personalizadas hechas a medida para cada objetivo individual cuando sea necesario. Algunos “&lt;a href=&#34;https://elbauldelprogramador.com/quic-analisis-practico-del-protocolo-de-google/&#34; title=&#34;Análisis del protocolo QUIC de Google&#34;&gt;payloads&lt;/a&gt;” personalizados son muy avanzados y muestran una gran experiencia en sectores especializados. El diseño modular dificulta el análisis de la amenaza, ya que todos los componentes deben estar disponibles para poder entender completamente cómo funciona el malware.*&lt;/p&gt;

&lt;h2 id=&#34;período-activo-y-versiones-de-regin&#34;&gt;Período activo y versiones de Regin&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Regin&lt;/strong&gt; estuvo activo durante 2008 y 2011, donde se detuvo, desinstalándose de todos los sistemas infectados. En 2013 se volvió a detectar una nueva versión, bastante mejorada de éste malware.&lt;/p&gt;

&lt;p&gt;La versión activa entre 2008 y 2011 fue la 1.0. En 2013, o posíblemente antes, se lanzó la versión 2.0. Todas las versiones 2.0 se han encontrado compiladas para 64-bit.&lt;/p&gt;

&lt;h2 id=&#34;principales-objetivos&#34;&gt;Principales objetivos&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Regin&lt;/strong&gt; se ha detectado en las principales compañias de telefonía, los módulos del malware desplegados en dichas instalaciones están diseñados para obtener acceso a las llamadas que son redirigidas por la infraestructura telefónica.&lt;/p&gt;

&lt;h2 id=&#34;arquitectura-de-regin&#34;&gt;Arquitectura de Regin&lt;/h2&gt;

&lt;p&gt;Se compone de las 6 etapas resumidas en la siguiente tabla:&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;center&#34;&gt;Etapas&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;Componentes&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;Etapa 0&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;“Dropper”. Instala Regin en el objetivo&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;Etapa 1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;Carga Drivers&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;Etapa 2&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;Carga Drivers&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;Etapa 3&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;Carga compresión, cifrado, networking, y los componentes necesarios para gestionar un sistema de archivos cifrado (EVFS)&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;Etapa 4&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;Utiliza el EFVS y carga drivers adicionales para su kernel, incluyendo payloads&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;Etapa 5&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;Payloads principales y ficheros de datos&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Las etapas más interesantes son las que almacenan los ejecutables y ficheros de datos en las etapas 4 y 5. La etapa inicial 1 es la única que contiene código visible. El resto de etapas se almacenan como bloques de datos &lt;a href=&#34;https://elbauldelprogramador.com/como-cifrar-archivos-con-openssl/&#34; title=&#34;Cómo cifrar archivos con openssl&#34;&gt;cifrados&lt;/a&gt;, ya sea en forma de ficheros o dentro de algún área de almacenamiento de ficheros no tradicional, como el registro, atributos extendidos, o sectores al final del disco duro.&lt;/p&gt;

&lt;p&gt;A continuación se muetra un gráfico que describe el proceso de infección:&lt;/p&gt;

&lt;figure&gt;
&lt;a href=&#34;https://elbauldelprogramador.com/img/2014/12/Arquitectura-de-Regin.png&#34;&gt;&lt;img on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/2014/12/Arquitectura-de-Regin.png&#34; title=&#34;{{ page.title }}&#34; alt=&#34;{{ page.title }}&#34; width=&#34;591px&#34; height=&#34;630px&#34; /&gt;&lt;/a&gt;
&lt;/figure&gt;

&lt;h3 id=&#34;etapa-0&#34;&gt;Etapa 0&lt;/h3&gt;

&lt;p&gt;Una vez que el &lt;em&gt;dropper&lt;/em&gt; se ejecuta en el objetivo, se instalará y ejecuta la etapa 1. Es probable que ésta etapa se encargue de configurar varios atributos y claves en el registro que mantengan codificadas versiones de las etapas 2, 3, y posiblemente etapas de la 4 en adelante.&lt;/p&gt;

&lt;h3 id=&#34;etapa-1&#34;&gt;Etapa 1&lt;/h3&gt;

&lt;p&gt;Es el punto inicial para cargar la amenaza. Se conocen dos ficheroes de esta etapa:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;usbclass.sys (versión 1.0)&lt;/li&gt;
&lt;li&gt;adpu160.sys (version 2.0)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Son drivers del kernel que cargan y ejecutan la etapa 2. Es posible que se registren como un servicio del sistema que se ejecute al iniciar el ordenador.&lt;/p&gt;

&lt;p&gt;La etapa 1 simplemente lee y ejecuta la etapa 2 desde un conjunto de atributos extendidos de NTFS, si no se encuentran dichos atributos extendidos, la etapa 2 se ejecuta desde un conjunto de claves del registro.&lt;/p&gt;

&lt;h3 id=&#34;etapa-2&#34;&gt;Etapa 2&lt;/h3&gt;

&lt;p&gt;Es un driver del kernel que extrae, instala y ejecuta la etapa 3. Ésta etapa no está almacenada en un sistema de ficheros tradicional, sino que se encuentra cifrada en un atributo extendido o en el registro.&lt;/p&gt;

&lt;p&gt;Puede encontrarse cifrada en :&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Atributos extendidos&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;em&gt;%Windir%&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;%Windir%\fonts&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;%Windir%\cursors&lt;/em&gt; (possibly only in version 2.0)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Sub claves del registro&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;em&gt;HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Class&amp;#123;4F20E605-9452-4787-B793-
D0204917CA58}&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\RestoreList\VideoBase&lt;/em&gt; (possibly only in version
2.0)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Ésta etapa puede ocultar instancias en ejecución de la etapa 1. Una vez hecho, no hay partes visibles del malware. De forma similar a etapas previas, la etapa 2 localiza y carga una versión cifrada de la etapa 3 desde atributos extendidos de NTFS o el registro.&lt;/p&gt;

&lt;p&gt;La etapa 2 también puede monitorizar el estado de la amenaza. Ésta etapa crea el fichero &lt;em&gt;msrdc64.dat&lt;/em&gt;, el cual parece tener siempre un tamaño de 512B. Sólo se usan los dos primeros bytes, el resto están a cero. El segundo byte indica cuantas instancias se permite ejecutar de forma exclusiva, su valor es 2. Lo cual significa que no más de una instancia debería ejecutarse al mismo tiempo. El primero, cuantas instancias se intentaron ejecutar. Por tanto, hay tres combinaciones.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;00 02&lt;/code&gt; (No se está ejecutando)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;01 02&lt;/code&gt; (Ejecutándo)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;02 02&lt;/code&gt; (Se estaba ejecutando y se ha iniciado una segunda instancia)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;etapa-3&#34;&gt;Etapa 3&lt;/h3&gt;

&lt;p&gt;Es una DDL de modo kernel, cifrada dentro de un atributo extendido o en el registro.&lt;/p&gt;

&lt;p&gt;Se puede encontrar en:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Atributos extendidos&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;em&gt;%Windir%\system32&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;%Windir%\system32\drivers&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Sub claves del registro&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;em&gt;HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Class&amp;#123;4F20E605-9452-4787-B793-
D0204917CA5A}&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;El fichero es de 6 a 7 veces mayor que el driver de la etapa 2. Además de cargar la etapa 4, ofrece un &lt;a href=&#34;https://elbauldelprogramador.com/los-10-mejores-frameworks-gratis-de-aplicaciones-web/&#34; title=&#34;Los 11 Mejores Frameworks gratuitos para Aplicaciones Web&#34;&gt;framework&lt;/a&gt; para etapas de mayor nivel.&lt;/p&gt;

&lt;p&gt;A partir de esta etapa, todas estan basadas en un framework modular de módulos de código. Éstos módulos ofrecen funciones mediante una interfaz privada y personalizada. Cada fichero en la etapa 3 y superior pude exportar funcionalidad a otras partes de Regin.&lt;/p&gt;

&lt;p&gt;Las primitivas disponibles para la etapa 3 son:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;El orquestador, que parsea ficheros personalizados encontrados en los datos adjuntos a los ficheros ejecutables de las etapas 3 en adelante. Éstos ficheros contienen una lista de las funcionalidades de Regin a ser ejecutadas.&lt;/li&gt;
&lt;li&gt;Rutinas de compresión y descompresión.&lt;/li&gt;
&lt;li&gt;Rutinas de cifrado y descifrado.&lt;/li&gt;
&lt;li&gt;Rutinas para obtener localizaciones de almacenamiento de componentes de mayor nivel (Etapa 4).&lt;/li&gt;
&lt;li&gt;Rutinas para gestionar el sistema de ficheros virtual cifrado usado por la etapa 4.&lt;/li&gt;
&lt;li&gt;Primitivas de red.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;etapa-4&#34;&gt;Etapa 4&lt;/h3&gt;

&lt;p&gt;Los ficheros para la etapa 4, cargados por la etapa 3, consisten en un modo usuario del orquestador y múltiples módulos payload del kernel. Se almacenan en dos contenedores EVFS como ficheros:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;%System%\config\SystemAudit.Evt&lt;/strong&gt;: Contiene los drivers del kernel para la etapa 4&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;%System%\config\SecurityAudit.Evt&lt;/strong&gt;: Versión usuario de la etapa 3. Los ficheros se inyectan en &lt;code&gt;services.exe&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;etapa-5&#34;&gt;Etapa 5&lt;/h3&gt;

&lt;p&gt;Consiste en la la funcionalidad principal de Regin para los payloads. Los ficheros para ésta etapa son los inyectados en &lt;code&gt;services.exe&lt;/code&gt; por la etapa 4. También almacenados en el EVFS.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;%System%\config\SystemLog.evt&lt;/strong&gt;: Contiene DLLs que constituyen el payload de Regin.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;%System%\config\SecurityLog.evt&lt;/strong&gt;: Ficheros de datos, usados por los componentes de las etapas 4 y 5 para almacenar varios elementos de datos.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;%System%\config\ApplicationLog.evt&lt;/strong&gt;: Otro contenedor para logs de la etapa 5, referenciados por ficheros de datos de la misma etapa.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;%Windir%\ime\imesc5\dicts\pintlgbp.imd&lt;/strong&gt; (versión 2.0)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;%Windir%\ime\imesc5\dicts\pintlgbs.imd&lt;/strong&gt; (versión 2.0)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;El payload de Regin implica las DDLs contenidas en el contenedor EVFS &lt;code&gt;SystemLog.evt&lt;/code&gt;.
La funcionalidad del payload es distinta en función del ordenador objetivo del ataque. Para cada entorno específico, se preparan payloads personalizados. Algunos ejemplos de funcionalidades detectadas hasta ahora son:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Esnifar tráfico de red de bajo nivel.&lt;/li&gt;
&lt;li&gt;Robar datos mediante varios canales (TCP, UDP, ICMP, HTTP).&lt;/li&gt;
&lt;li&gt;Obtener información del ordenador.&lt;/li&gt;
&lt;li&gt;Robar contraseñas.&lt;/li&gt;
&lt;li&gt;Obtener información de procesos y memoria.&lt;/li&gt;
&lt;li&gt;Escanear el sistema de ficheros.&lt;/li&gt;
&lt;li&gt;Capacidades forenses de bajo nivel (Por ejemplo, recuperar ficheros borrados).&lt;/li&gt;
&lt;li&gt;Manipulación del entorno gráfico (Control remoto del ratón, capturar la pantalla etc).&lt;/li&gt;
&lt;li&gt;Detectar servidores web IIS y robar los logs.&lt;/li&gt;
&lt;li&gt;Esnifar tráfico de red GSM BSC.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Para más información, podéis echar un vistazo a los siguientes enlaces, entre ellos el análisis original de Symantec, y el vídeo del podcast de &lt;strong&gt;Security Now!&lt;/strong&gt;.&lt;/p&gt;

&lt;h4 id=&#34;referencias&#34;&gt;Referencias&lt;/h4&gt;

&lt;p&gt;&lt;em&gt;Regin: Top-tier espionage tool enables stealthy surveillance, y créditos de las imágenes&lt;/em&gt; »» &lt;a href=&#34;http://www.symantec.com/connect/blogs/regin-top-tier-espionage-tool-enables-stealthy-surveillance&#34; target=&#34;_blank&#34;&gt;symantec.com&lt;/a&gt;
&lt;em&gt;Análisis de Symantec sobre Regin&lt;/em&gt; »» &lt;a href=&#34;http://www.symantec.com/content/en/us/enterprise/media/security_response/whitepapers/regin-analysis.pdf&#34; target=&#34;_blank&#34;&gt;Fichero PDF&lt;/a&gt;
&lt;span class=&#34;embed-youtube&#34; &gt;&lt;/span&gt;&lt;/p&gt;</description>
        </item>
        
    </channel>
</rss>
