<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Spacer Linearlayout on El Baúl del programador</title>
        <link>https://elbauldelprogramador.com/tags/spacer-linearlayout/</link>
        <description>Recent content in Spacer Linearlayout on El Baúl del programador</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>es-ES</language>
        <lastBuildDate>Fri, 01 Jan 2016 00:00:00 +0000</lastBuildDate>
        <image>
            <url>https://elbauldelprogramador.com/img/bio-photo-rss.png</url>
            <link>https://elbauldelprogramador.com/tags/spacer-linearlayout/</link>
            <title>Spacer Linearlayout on El Baúl del programador</title>
            <width>144</width>
            <height>144</height>
        </image>
        <atom:link href="https://elbauldelprogramador.com/tags/spacer-linearlayout/" rel="self" type="application/rss+xml" />
        
        <item>
            <title>Grid Spacing en Android</title>
            <link>https://elbauldelprogramador.com/grid-spacing-en-android/</link>
            <pubDate>Fri, 01 Jan 2016 00:00:00 +0000</pubDate>
            
            <guid>https://elbauldelprogramador.com/grid-spacing-en-android/</guid>
            <description>&lt;p&gt;&lt;em&gt;Éste artículo es una traducción del blog de &lt;a href=&#34;http://cyrilmottier.com/&#34; title=&#34;Blog de Cyril&#34;&gt;Cyril Mottier&lt;/a&gt;, al cual le agradezco que me diera permiso para escribirlo. Quizás te interese leer (&lt;a href=&#34;https://elbauldelprogramador.com/pon-dieta-tus-apks/&#34; title=&#34;Pon a Dieta Tus APKs&#34;&gt;Pon a dieta tus APKs&lt;/a&gt;), otra traducción de su blog.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;La mayoría de interfaces de usuario (en móviles o web) se basan en el concepto de &lt;a href=&#34;https://elbauldelprogramador.com/crear-un-gridview-con-adaptador-personalizado-en-android/&#34; title=&#34;Crear un GridView con Adaptador personalizado en Android&#34;&gt;rejillas&lt;/a&gt; (&lt;strong&gt;Grids&lt;/strong&gt; a partir de ahora). Los &lt;strong&gt;Grids&lt;/strong&gt; consisten básicamente en separar la interfaz de usuario en una serie de cuadrados alineados que pueden ser fusionados para crear bloques. Usando el principio Grid en el desarrollo de la UI (Interfaz de usuario) ayuda a alinear elementos, trae consistencia, genera un código limpio, asegura que el usuario pueda analizar fácilmente el contenido de la interfaz etc. En resumen, los &lt;strong&gt;Grids&lt;/strong&gt; son una herramienta de diseño extremadamante potentes.&lt;/p&gt;

&lt;h1 id=&#34;el-principio-grid&#34;&gt;El principio Grid&lt;/h1&gt;

&lt;p&gt;Usar el principio Grid, requiere generalmente que el desarrollador añada algún margen/paddin/espacio extra entre elementos. En efecto, añadir espacio entre elementos ayuda a mantener una separación clara entre bloques mientras se conserva un gran nivel del legibilidad en la interfaz. Todos los desarrolladores &lt;a href=&#34;https://elbauldelprogramador.com/curso-programacion-android/&#34; title=&#34;Curso de programación en Android&#34;&gt;Android&lt;/a&gt; están familiarizados con éstos conceptos, y en la mayoría de los casos se solucionan usando características del &lt;a href=&#34;https://elbauldelprogramador.com/los-10-mejores-frameworks-gratis-de-aplicaciones-web/&#34; title=&#34;Los 11 mejores frameworks gratuitos para aplicaciones Web&#34;&gt;framework&lt;/a&gt; como &lt;em&gt;padding&lt;/em&gt; y/o &lt;em&gt;margin&lt;/em&gt; en las &lt;em&gt;Views&lt;/em&gt;. Para aislar claramente la lógica del programa de la interfaz, generalmente ésto se hace en los &lt;a href=&#34;https://elbauldelprogramador.com/programacion-android-interfaz-grafica_23/&#34; title=&#34;Programación Android: Layouts&#34;&gt;ficheros XML que definen la interfaz&lt;/a&gt;. Si bien éste método funciona cuando la interfaz es estática, puede se complicado para interfaces dinámicas en las cuales hay elementos que se muestran o desaparecen según sea necesario. Éste artículo pretende dar algunos consejos para manejar correctamente interfaces dinámicas basadas en &lt;strong&gt;Grids&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;!--ad--&gt;&lt;/p&gt;

&lt;h1 id=&#34;ejemplo&#34;&gt;Ejemplo&lt;/h1&gt;

&lt;p&gt;Creemos un &lt;em&gt;layout&lt;/em&gt; simple a modo de ejemplo. Consiste en una barra horizontal de tres &lt;a href=&#34;https://elbauldelprogramador.com/programacion-android-interfaz-grafica_25/&#34; title=&#34;Programación Android: Componentes Gráficos&#34;&gt;Buttons&lt;/a&gt; que aparecen debajo de una &lt;code&gt;View&lt;/code&gt; estática (El logo de la aplicación, por ejemplo). El resultado es el siguiente:&lt;/p&gt;

&lt;h2 id=&#34;layout-activity-main-xml&#34;&gt;layout/activity_main.xml&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;lt;LinearLayout&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;xmlns:android=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;http://schemas.android.com/apk/res/android&amp;quot;&lt;/span&gt;
  &lt;span class=&#34;na&#34;&gt;android:layout_width=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;match_parent&amp;quot;&lt;/span&gt;
  &lt;span class=&#34;na&#34;&gt;android:layout_height=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;wrap_content&amp;quot;&lt;/span&gt;
  &lt;span class=&#34;na&#34;&gt;android:orientation=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;vertical&amp;quot;&lt;/span&gt;
  &lt;span class=&#34;na&#34;&gt;android:padding=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;@dimen/spacing_medium&amp;quot;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;

  &lt;span class=&#34;nt&#34;&gt;&amp;lt;TextView&lt;/span&gt;
    &lt;span class=&#34;na&#34;&gt;android:layout_width=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;match_parent&amp;quot;&lt;/span&gt;
    &lt;span class=&#34;na&#34;&gt;android:layout_height=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;128dp&amp;quot;&lt;/span&gt;
    &lt;span class=&#34;na&#34;&gt;android:background=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;@color/light_gray&amp;quot;&lt;/span&gt;
    &lt;span class=&#34;na&#34;&gt;android:gravity=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;center&amp;quot;&lt;/span&gt;
    &lt;span class=&#34;na&#34;&gt;android:text=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;@string/application_logo&amp;quot;&lt;/span&gt;
    &lt;span class=&#34;na&#34;&gt;android:textAppearance=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;@android:style/TextAppearance.Material.Display1&amp;quot;&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;/&amp;gt;&lt;/span&gt;

  &lt;span class=&#34;nt&#34;&gt;&amp;lt;LinearLayout&lt;/span&gt;
    &lt;span class=&#34;na&#34;&gt;android:id=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;@+id/buttons_container&amp;quot;&lt;/span&gt;
    &lt;span class=&#34;na&#34;&gt;android:layout_width=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;match_parent&amp;quot;&lt;/span&gt;
    &lt;span class=&#34;na&#34;&gt;android:layout_height=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;wrap_content&amp;quot;&lt;/span&gt;
    &lt;span class=&#34;na&#34;&gt;android:orientation=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;horizontal&amp;quot;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;

    &lt;span class=&#34;nt&#34;&gt;&amp;lt;Button&lt;/span&gt;
      &lt;span class=&#34;na&#34;&gt;android:id=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;@+id/btn_first&amp;quot;&lt;/span&gt;
      &lt;span class=&#34;na&#34;&gt;android:layout_width=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;0dp&amp;quot;&lt;/span&gt;
      &lt;span class=&#34;na&#34;&gt;android:layout_height=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;wrap_content&amp;quot;&lt;/span&gt;
      &lt;span class=&#34;na&#34;&gt;android:layout_weight=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;1&amp;quot;&lt;/span&gt;
      &lt;span class=&#34;na&#34;&gt;android:background=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;@drawable/purple&amp;quot;&lt;/span&gt;
      &lt;span class=&#34;na&#34;&gt;android:text=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;@string/button_1&amp;quot;&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;/&amp;gt;&lt;/span&gt;

    &lt;span class=&#34;nt&#34;&gt;&amp;lt;Button&lt;/span&gt;
      &lt;span class=&#34;na&#34;&gt;android:id=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;@+id/btn_second&amp;quot;&lt;/span&gt;
      &lt;span class=&#34;na&#34;&gt;android:layout_width=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;0dp&amp;quot;&lt;/span&gt;
      &lt;span class=&#34;na&#34;&gt;android:layout_height=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;wrap_content&amp;quot;&lt;/span&gt;
      &lt;span class=&#34;na&#34;&gt;android:layout_weight=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;1&amp;quot;&lt;/span&gt;
      &lt;span class=&#34;na&#34;&gt;android:background=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;@drawable/indigo&amp;quot;&lt;/span&gt;
      &lt;span class=&#34;na&#34;&gt;android:text=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;@string/button_2&amp;quot;&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;/&amp;gt;&lt;/span&gt;

    &lt;span class=&#34;nt&#34;&gt;&amp;lt;Button&lt;/span&gt;
      &lt;span class=&#34;na&#34;&gt;android:id=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;@+id/btn_third&amp;quot;&lt;/span&gt;
      &lt;span class=&#34;na&#34;&gt;android:layout_width=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;0dp&amp;quot;&lt;/span&gt;
      &lt;span class=&#34;na&#34;&gt;android:layout_height=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;wrap_content&amp;quot;&lt;/span&gt;
      &lt;span class=&#34;na&#34;&gt;android:layout_weight=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;1&amp;quot;&lt;/span&gt;
      &lt;span class=&#34;na&#34;&gt;android:background=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;@drawable/teal&amp;quot;&lt;/span&gt;
      &lt;span class=&#34;na&#34;&gt;android:text=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;@string/button_3&amp;quot;&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;/&amp;gt;&lt;/span&gt;

  &lt;span class=&#34;nt&#34;&gt;&amp;lt;/LinearLayout&amp;gt;&lt;/span&gt;

&lt;span class=&#34;nt&#34;&gt;&amp;lt;/LinearLayout&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;figure&gt;
    &lt;a href=&#34;https://elbauldelprogramador.com/img/2014/12/Grid-Spacing-en-Android-take_1.png&#34;&gt;&lt;img sizes=&#34;(min-width: 1080px) 1080px, 100vw&#34; on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/2014/12/Grid-Spacing-en-Android-take_1.png&#34; title=&#34;Grid Spacing en Android&#34; alt=&#34;Grid Spacing en Android&#34; width=&#34;1080px&#34; height=&#34;624px&#34; /&gt;&lt;/a&gt;
&lt;/figure&gt;

&lt;p&gt;La interfaz mostrada en la imagen de arriba depende claramente en la idea de un Grid. Sin embargo, carece de espacio entre elementos que permitan al usuario distinguir claramente la entidades independientes de la interfaz. Corrijamos éste problema añadiendo &lt;code&gt;android:layout_marginTop=&amp;quot;@dimen/spacing_medium&amp;quot;&lt;/code&gt; al &lt;code&gt;LinearLayout&lt;/code&gt; identificado por &lt;code&gt;@id/buttons_container&lt;/code&gt; y &lt;code&gt;android:layout_marginRight=&amp;quot;@dimen/spacing_medium&amp;quot;&lt;/code&gt; a los botones &lt;code&gt;@id/btn_first&lt;/code&gt; y &lt;code&gt;@id/btn_second&lt;/code&gt;:&lt;/p&gt;

&lt;figure&gt;
    &lt;a href=&#34;https://elbauldelprogramador.com/img/2014/12/Grid-Spacing-en-Android-take_2_1.png&#34;&gt;&lt;img sizes=&#34;(min-width: 1080px) 1080px, 100vw&#34; on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/2014/12/Grid-Spacing-en-Android-take_2_1.png&#34; title=&#34;Grid Spacing en Android&#34; alt=&#34;Grid Spacing en Android&#34; width=&#34;1080px&#34; height=&#34;672px&#34; /&gt;&lt;/a&gt;
    &lt;span class=&#34;image-credit&#34;&gt;Crédito de la imagen: &lt;/span&gt;
&lt;/figure&gt;

&lt;h1 id=&#34;el-problema-de-la-interfaz-dinámica&#34;&gt;El problema de la interfaz dinámica&lt;/h1&gt;

&lt;p&gt;La interfaz de arriba tiene un aspecto bastante bueno: Buena apariencia, es legible, etc. Desafortunadamente, las cosas se ponen un poco mal cuando se ocultan dinámicamente algunas &lt;code&gt;Views&lt;/code&gt; en el &lt;em&gt;layout&lt;/em&gt;. De hecho, imaginemos que la función que se activaría con un click en el botón &lt;code&gt;@id/btn_third&lt;/code&gt; requiere de alguna característica no disponible en el dispositivo (&lt;strong&gt;Google Play Services&lt;/strong&gt; por ejemplo). La mejor forma de no desordenar la interfaz es ocultar el tercer botón con &lt;code&gt;View.GONE&lt;/code&gt;:&lt;/p&gt;

&lt;figure&gt;
    &lt;a href=&#34;https://elbauldelprogramador.com/img/2014/12/Grid-Spacing-en-Android-take_2_2.png&#34;&gt;&lt;img sizes=&#34;(min-width: 1080px) 1080px, 100vw&#34; on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/2014/12/Grid-Spacing-en-Android-take_2_2.png&#34; title=&#34;Grid Spacing en Android&#34; alt=&#34;Grid Spacing en Android&#34; width=&#34;1080px&#34; height=&#34;672px&#34; /&gt;&lt;/a&gt;
&lt;/figure&gt;

&lt;p&gt;Como es de esperar, el botón &lt;code&gt;@id/btn_third&lt;/code&gt; desaparece, pero el borde derecho de &lt;code&gt;@id/btn_second&lt;/code&gt; no está alineado con el borde derecho del icono de la aplicación. La razón principal de éste problema se debe a que la técnica usando el margen funciona bien siempre que se mantenga la asunción hecha al principio: cada &lt;code&gt;View&lt;/code&gt; con un margen derecho/superior tiene una &lt;code&gt;View&lt;/code&gt; vecina a su derecha/arriba. Ocultar algunas &lt;code&gt;Views&lt;/code&gt; en la barra va en contra de esta restricción.&lt;/p&gt;

&lt;h1 id=&#34;usar-un-separador-para-resolver-el-problema&#34;&gt;Usar un separador para resolver el problema&lt;/h1&gt;

&lt;p&gt;Un truco obvio para resolver éste problema podría ser cambiar manualmente el margen de los elementos en &lt;em&gt;Java&lt;/em&gt;. Lo cual es una pésima solución. Otra alternativa sería usar un &lt;em&gt;Layout&lt;/em&gt; que gestione automáticamente los espacios entre elementos. &lt;code&gt;GridLayout&lt;/code&gt; es uno de ellos. Por desgracia, éste &lt;em&gt;Layout&lt;/em&gt; es engorroso de usar y no permite especificar un margen concreto entre elementos (Solo está disponible el margen por defecto).&lt;/p&gt;

&lt;p&gt;En realidad, &lt;code&gt;LinearLayout&lt;/code&gt; gestiona la idea del espacio entre elementos. Ésta característica es algo desconocida ya que está bastante escondida en el framework pero funciona como si de magia se tratara. El truco consiste en usar un &lt;a href=&#34;https://elbauldelprogramador.com/optimizando-la-interfaz-android-compound-drawables/&#34; title=&#34;Optimizando la interfaz Android – Compound Drawables&#34;&gt;Drawable&lt;/a&gt; con anchura/altura intrínsicos como separador de elementos del &lt;code&gt;LinearLayout&lt;/code&gt;:&lt;/p&gt;

&lt;h2 id=&#34;drawable-spacer-medium-xml&#34;&gt;drawable/spacer_medium.xml&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;utf-8&amp;quot;?&amp;gt;&lt;/span&gt;
&lt;span class=&#34;nt&#34;&gt;&amp;lt;shape&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;xmlns:android=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;http://schemas.android.com/apk/res/android&amp;quot;&lt;/span&gt;
  &lt;span class=&#34;na&#34;&gt;android:shape=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;rectangle&amp;quot;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;

  &lt;span class=&#34;nt&#34;&gt;&amp;lt;size&lt;/span&gt;
    &lt;span class=&#34;na&#34;&gt;android:width=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;@dimen/spacing_medium&amp;quot;&lt;/span&gt;
    &lt;span class=&#34;na&#34;&gt;android:height=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;@dimen/spacing_medium&amp;quot;&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;/&amp;gt;&lt;/span&gt;

    &lt;span class=&#34;nt&#34;&gt;&amp;lt;solid&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;android:color=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;@android:color/transparent&amp;quot;&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;/&amp;gt;&lt;/span&gt;

  &lt;span class=&#34;nt&#34;&gt;&amp;lt;/shape&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Ahora se puede usar el &lt;code&gt;Drawable&lt;/code&gt; creado como un separador entre elementos estableciéndolo como el separador del &lt;code&gt;LinearLayout&lt;/code&gt;:&lt;/p&gt;

&lt;h2 id=&#34;layout-activity-main-xml-1&#34;&gt;layout/activity_main.xml&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;lt;LinearLayout&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;xmlns:android=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;http://schemas.android.com/apk/res/android&amp;quot;&lt;/span&gt;
  &lt;span class=&#34;na&#34;&gt;android:layout_width=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;match_parent&amp;quot;&lt;/span&gt;
  &lt;span class=&#34;na&#34;&gt;android:layout_height=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;wrap_content&amp;quot;&lt;/span&gt;
  &lt;span class=&#34;na&#34;&gt;android:divider=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;@drawable/spacer_medium&amp;quot;&lt;/span&gt;
  &lt;span class=&#34;na&#34;&gt;android:orientation=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;vertical&amp;quot;&lt;/span&gt;
  &lt;span class=&#34;na&#34;&gt;android:padding=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;@dimen/spacing_medium&amp;quot;&lt;/span&gt;
  &lt;span class=&#34;na&#34;&gt;android:showDividers=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;middle&amp;quot;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;

  &lt;span class=&#34;c&#34;&gt;&amp;lt;!-- TextView --&amp;gt;&lt;/span&gt;

  &lt;span class=&#34;nt&#34;&gt;&amp;lt;LinearLayout&lt;/span&gt;
    &lt;span class=&#34;na&#34;&gt;android:id=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;@+id/buttons_container&amp;quot;&lt;/span&gt;
    &lt;span class=&#34;na&#34;&gt;android:layout_width=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;match_parent&amp;quot;&lt;/span&gt;
    &lt;span class=&#34;na&#34;&gt;android:layout_height=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;wrap_content&amp;quot;&lt;/span&gt;
    &lt;span class=&#34;na&#34;&gt;android:divider=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;@drawable/spacer_medium&amp;quot;&lt;/span&gt;
    &lt;span class=&#34;na&#34;&gt;android:orientation=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;horizontal&amp;quot;&lt;/span&gt;
    &lt;span class=&#34;na&#34;&gt;android:showDividers=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;middle&amp;quot;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;

    &lt;span class=&#34;c&#34;&gt;&amp;lt;!-- Buttons --&amp;gt;&lt;/span&gt;

  &lt;span class=&#34;nt&#34;&gt;&amp;lt;/LinearLayout&amp;gt;&lt;/span&gt;

&lt;span class=&#34;nt&#34;&gt;&amp;lt;/LinearLayout&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;figure&gt;
    &lt;a href=&#34;https://elbauldelprogramador.com/img/2014/12/Grid-Spacing-en-Android-take_3.png&#34;&gt;&lt;img sizes=&#34;(min-width: 1080px) 1080px, 100vw&#34; on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/2014/12/Grid-Spacing-en-Android-take_3.png&#34; title=&#34;Grid Spacing en Android&#34; alt=&#34;Grid Spacing en Android&#34; width=&#34;1080px&#34; height=&#34;672px&#34; /&gt;&lt;/a&gt;
&lt;/figure&gt;

&lt;h1 id=&#34;conclusión&#34;&gt;Conclusión&lt;/h1&gt;

&lt;p&gt;El framework de Android contiene unas cuantas características que pueden usarse y modificar para cumplir con una tarea diferente a la esperada. La idea de un &lt;code&gt;Drawable&lt;/code&gt; forma parte de dichos trucos habitualmente. Asegúrate de conocer plenamente el concepto de &lt;code&gt;Drawable&lt;/code&gt;, ya que puede ayudarte a simplificar el código en más de una ocasión.&lt;/p&gt;

&lt;h1 id=&#34;referencias&#34;&gt;Referencias&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;em&gt;Grid Spacing on Android&lt;/em&gt; »» &lt;a href=&#34;http://cyrilmottier.com/2014/11/17/grid-spacing-on-android/&#34; target=&#34;_blank&#34;&gt;cyrilmottier.com&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
        </item>
        
    </channel>
</rss>
