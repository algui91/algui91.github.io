<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Algoritmos Trigger on El Baúl del programador</title>
        <link>https://elbauldelprogramador.com/tags/algoritmos-trigger/index.xml</link>
        <description>Recent content in Algoritmos Trigger on El Baúl del programador</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>es-ES</language>
        <image>
            <url>https://elbauldelprogramador.com/img/bio-photo-rss.png</url>
            <link>https://elbauldelprogramador.com/tags/algoritmos-trigger/index.xml</link>
            <title>Algoritmos Trigger on El Baúl del programador</title>
            <width>144</width>
            <height>144</height>
        </image>
        <atom:link href="https://elbauldelprogramador.com/tags/algoritmos-trigger/index.xml" rel="self" type="application/rss+xml" />
        
        <item>
            <title>PL/SQL. Disparadores o Triggers</title>
            <link>https://elbauldelprogramador.com/plsql-disparadores-o-triggers/</link>
            <pubDate>Fri, 01 Jan 2016 00:00:00 +0000</pubDate>
            
            <guid>https://elbauldelprogramador.com/plsql-disparadores-o-triggers/</guid>
            <description>&lt;h2 id=&#34;introducción&#34;&gt;Introducción&lt;/h2&gt;

&lt;p&gt;Los disparadores (o triggers) son &lt;a href=&#34;https://elbauldelprogramador.com/bloques-plsql/&#34;&gt;bloques de código PL/SQL&lt;/a&gt; asociados a una tabla y que se ejecutan automáticamente como reacción a una &lt;a href=&#34;https://elbauldelprogramador.com/lenguaje-manipulacion-de-datos-dml/&#34;&gt;operación DML&lt;/a&gt; específica (&lt;code&gt;INSERT&lt;/code&gt;, &lt;code&gt;UPDATE&lt;/code&gt; o &lt;code&gt;DELETE&lt;/code&gt;) sobre dicha tabla.&lt;/p&gt;

&lt;p&gt;&lt;!--ad--&gt;&lt;/p&gt;

&lt;p&gt;En definitiva, los disparadores son eventos a nivel de tabla que se ejecutan automáticamente cuando se realizan ciertas operaciones sobre la tabla.&lt;/p&gt;

&lt;p&gt;Para crear un disparador utilizaremos la siguiente instrucción:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;CREATE&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;OR&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;REPLACE&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;TRIGGER&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;nombre_disp&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;BEFORE&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;AFTER&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;DELETE&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;INSERT&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;UPDATE&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;OF&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;columnas&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;OR&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;DELETE&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;INSERT&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;UPDATE&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;OF&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;columnas&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]...]&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;ON&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;tabla&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;FOR&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;EACH&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;ROW&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;WHEN&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;condicion&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;disparo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]]&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;DECLARE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
  &lt;span class=&#34;c1&#34;&gt;-- Declaración de variables locales&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;BEGIN&lt;/span&gt;
  &lt;span class=&#34;c1&#34;&gt;-- Instrucciones de ejecución&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;EXCEPTION&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
  &lt;span class=&#34;c1&#34;&gt;-- Instrucciones de excepción&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;END&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;El uso de OR &lt;code&gt;REPLACE&lt;/code&gt; permite sobrescribir un trigger existente. Si se omite, y el trigger existe, se producirá, un error.&lt;/p&gt;

&lt;p&gt;En principio, dentro del cuerpo de programa del trigger podemos hacer uso de cualquier orden de consulta o manipulación de la BD, y llamadas a funciones o procedimientos siempre que:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;No se utilicen &lt;a href=&#34;https://elbauldelprogramador.com/lenguaje-definicion-de-datosddl-create/&#34;&gt;comandos DDL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;No se acceda a las tablas que están siendo modificadas con &lt;a href=&#34;https://elbauldelprogramador.com/lenguaje-manipulacion-de-datos-dml/&#34;&gt;&lt;code&gt;DELETE&lt;/code&gt;, &lt;code&gt;INSERT&lt;/code&gt; o &lt;code&gt;UPDATE&lt;/code&gt;&lt;/a&gt; en la misma sesión&lt;/li&gt;
&lt;li&gt;No se violen las &lt;a href=&#34;https://elbauldelprogramador.com/diseno-de-bases-de-datos-i-conceptos/&#34;&gt;reglas de integridad&lt;/a&gt;, es decir no se pueden modificar llaves primarias, ni actualizar llaves externas&lt;/li&gt;
&lt;li&gt;No se utilicen sentencias de control de &lt;a href=&#34;https://elbauldelprogramador.com/introduccion-plsql-transacciones/&#34;&gt;transacciones&lt;/a&gt; (Commit, Rollback o Savepoint)&lt;/li&gt;
&lt;li&gt;No se llamen a &lt;a href=&#34;https://elbauldelprogramador.com/plsql-procedimientos-y-funciones/&#34;&gt;procedimientos&lt;/a&gt; que trasgredan la restricción anterior&lt;/li&gt;
&lt;li&gt;No se llame a procedimientos que utilicen sentencias de control de transacciones&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;predicados-condicionales&#34;&gt;Predicados condicionales&lt;/h2&gt;

&lt;p&gt;Cuando se crea un trigger para más de una operación DML, se puede utilizar un predicado condicional en las sentencias que componen el trigger que indique que tipo de operación o sentencia ha disparado el trigger. Estos predicados condicionales son los siguientes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Inserting&lt;/strong&gt;: Retorna &lt;strong&gt;true&lt;/strong&gt; cuando el trigger ha sido disparado por un &lt;strong&gt;&lt;code&gt;INSERT&lt;/code&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Deleting&lt;/strong&gt;: Retorna &lt;strong&gt;true&lt;/strong&gt; cuando el trigger ha sido disparado por un &lt;strong&gt;&lt;code&gt;DELETE&lt;/code&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Updating&lt;/strong&gt;: Retorna &lt;strong&gt;true&lt;/strong&gt; cuando el trigger ha sido disparado por un &lt;strong&gt;&lt;code&gt;UPDATE&lt;/code&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Updating (columna)&lt;/strong&gt;: Retorna &lt;strong&gt;true&lt;/strong&gt; cuando el trigger ha sido disparado por un &lt;strong&gt;&lt;code&gt;UPDATE&lt;/code&gt;&lt;/strong&gt; y la columna ha sido modificada.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;CREATE&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;TRIGGER&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;audit_trigger&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;BEFORE&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;INSERT&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;OR&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;DELETE&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;OR&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;UPDATE&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;ON&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;classified_table&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;FOR&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;EACH&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;ROW&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;BEGIN&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;IF&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;INSERTING&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;THEN&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;INSERT&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;INTO&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;audit_table&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;VALUES&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;USER&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;||&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39; is inserting&amp;#39;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;||&lt;/span&gt;
    &lt;span class=&#34;s1&#34;&gt;&amp;#39; new key: &amp;#39;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;||&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;new&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;key&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;ELSIF&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;DELETING&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;THEN&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;INSERT&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;INTO&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;audit_table&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;VALUES&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;USER&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;||&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39; is deleting&amp;#39;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;||&lt;/span&gt;
    &lt;span class=&#34;s1&#34;&gt;&amp;#39; old key: &amp;#39;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;||&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;old&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;key&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;ELSIF&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;UPDATING&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;FORMULA&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;THEN&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;INSERT&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;INTO&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;audit_table&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;VALUES&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;USER&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;||&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39; is updating&amp;#39;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;||&lt;/span&gt;
    &lt;span class=&#34;s1&#34;&gt;&amp;#39; old formula: &amp;#39;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;||&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;old&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;formula&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;||&lt;/span&gt;
    &lt;span class=&#34;s1&#34;&gt;&amp;#39; new formula: &amp;#39;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;||&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;new&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;formula&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;ELSIF&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;UPDATING&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;THEN&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;INSERT&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;INTO&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;audit_table&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;VALUES&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;USER&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;||&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39; is updating&amp;#39;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;||&lt;/span&gt;
    &lt;span class=&#34;s1&#34;&gt;&amp;#39; old key: &amp;#39;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;||&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;old&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;key&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;||&lt;/span&gt;
    &lt;span class=&#34;s1&#34;&gt;&amp;#39; new key: &amp;#39;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;||&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;new&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;key&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;END&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;IF&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;END&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&#34;tipos-de-triggers&#34;&gt;Tipos de triggers&lt;/h2&gt;

&lt;p&gt;Los triggers pueden definirse para las operaciones &lt;code&gt;INSERT&lt;/code&gt;, &lt;code&gt;DELETE&lt;/code&gt; o Update, y pueden dispararse antes o después de la operación. Finalmente, el nivel de los disparadores puede ser la fila o registro o la orden.&lt;/p&gt;

&lt;p&gt;El modificador &lt;code&gt;BEFORE&lt;/code&gt; o &lt;code&gt;AFTER&lt;/code&gt; indica que el trigger se ejecutará antes o después de ejecutarse la sentencia SQL definida por &lt;code&gt;DELETE&lt;/code&gt;, &lt;code&gt;INSERT&lt;/code&gt; o &lt;code&gt;UPDATE&lt;/code&gt;. Si incluimos el modificador OF el trigger solo se ejecutará cuando la sentencia SQL afecte a los campos incluidos en la lista.&lt;/p&gt;

&lt;p&gt;El alcance de los disparadores puede ser la fila o de orden. El modificador &lt;code&gt;FOR EACH ROW&lt;/code&gt; indica que el trigger se disparará cada vez que se realizan operaciones sobre cada fila de la tabla. Si se acompaña del modificador &lt;code&gt;WHEN&lt;/code&gt;, se establece una restricción; el trigger solo actuará, sobre las filas que satisfagan la restricción.&lt;/p&gt;

&lt;p&gt;Tipos de disparadores.&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Categoria&lt;/th&gt;
&lt;th&gt;Valores&lt;/th&gt;
&lt;th&gt;Comentarios&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Orden&lt;/td&gt;
&lt;td&gt;&lt;code&gt;INSERT, DELETE, UPDATE&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Define que tipo de operación &lt;a href=&#34;https://elbauldelprogramador.com/lenguaje-manipulacion-de-datos-dml/&#34; title=&#34;Lenguaje de Manipulación de Datos&#34;&gt;DML&lt;/a&gt; provoca laactivación del trigger&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Temporalización&lt;/td&gt;
&lt;td&gt;&lt;code&gt;BEFORE o AFTER&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Define si el disparador se activa antes o después deque se ejecute la operación DML&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Nivel&lt;/td&gt;
&lt;td&gt;Fila u Orden&lt;/td&gt;
&lt;td&gt;Los disparadores con nivel de fila se activan unavez por cada fila afectada por la orden que provocóel disparo. Los Triggers con nivel de orden seactivan sólo una vez, antes o después de la orden.Los disparadores con nivel de fila se identificanpor la cláusula &lt;code&gt;FOR EACH ROW&lt;/code&gt; en la definicióndel disparador.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&#34;orden-de-ejecución-de-los-triggers&#34;&gt;Orden de ejecución de los triggers&lt;/h2&gt;

&lt;p&gt;Una misma tabla puede tener varios triggers asociados. En tal caso es necesario conocer el orden en el que se van a ejecutar.&lt;/p&gt;

&lt;p&gt;Los disparadores se activan al ejecutarse la sentencia SQL.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Si existe, se ejecuta el disparador de tipo &lt;code&gt;BEFORE&lt;/code&gt; (disparador previo) con nivel de orden.&lt;/li&gt;
&lt;li&gt;Para cada fila a la que afecte la orden:&lt;/li&gt;
&lt;li&gt;Se ejecuta si existe, el disparador de tipo &lt;code&gt;BEFORE&lt;/code&gt; con nivel de fila.&lt;/li&gt;
&lt;li&gt;Se ejecuta la propia orden.&lt;/li&gt;
&lt;li&gt;Se ejecuta si existe, el disparador de tipo &lt;code&gt;AFTER&lt;/code&gt; (disparador posterior) con nivel de fila.&lt;/li&gt;
&lt;li&gt;Se ejecuta, si existe, el disparador de tipo &lt;code&gt;AFTER&lt;/code&gt; con nivel de orden.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;restricciones-de-los-triggers&#34;&gt;Restricciones de los Triggers.&lt;/h2&gt;

&lt;p&gt;El cuerpo de un disparador es un &lt;a href=&#34;https://elbauldelprogramador.com/bloques-plsql/&#34;&gt;bloque PL/SQL&lt;/a&gt;. Cualquier orden que sea legal en un bloque PL/SQL , es legal en el cuerpo de un disparador, con las siguientes restricciones:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Un disparador no puede emitir ninguna orden de &lt;a href=&#34;https://elbauldelprogramador.com/introduccion-plsql-transacciones/&#34;&gt;control de transacciones&lt;/a&gt; ( &lt;code&gt;COMMIT&lt;/code&gt;, &lt;code&gt;ROLLBACK&lt;/code&gt; o &lt;code&gt;SAVEPOINT&lt;/code&gt;). El disparador se activa como parte de la ejecución de la orden que provocó el disparo, y forma parte de la misma transacción qu dicha orden. Cuando la orden que provoca la orden es confirmada o cancelada, se confirma o se cancela también el trabajo realizado por el disparador.&lt;/li&gt;
&lt;li&gt;Por las mismas razones, ningún &lt;a href=&#34;https://elbauldelprogramador.com/plsql-procedimientos-y-funciones/&#34;&gt;procedure o función&lt;/a&gt; llamado por el disparador puede emitir órdenes de control de transacciones.&lt;/li&gt;
&lt;li&gt;El disparador no puede declarar &lt;a href=&#34;https://elbauldelprogramador.com/plsql-declaracion-de-variables/&#34;&gt;variables&lt;/a&gt; de tipo &lt;code&gt;LONG&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;utilización-de-old-y-new-en-los-disparadores-con-nivel-de-fila&#34;&gt;Utilización de :old y :new en los disparadores con nivel de fila.&lt;/h2&gt;

&lt;p&gt;Un disparador con nivel de fila se ejecuta una vez por cada fila procesada por la orden que provoca el disparo. Dentro del disparador, puede accederse a la fila que está siendo actualmente
procesada utilizando, para ello, dos pseudo-registros, &lt;strong&gt;&lt;code&gt;:old&lt;/code&gt;&lt;/strong&gt; y &lt;strong&gt;&lt;code&gt;:new&lt;/code&gt;&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;En principio tanto &lt;code&gt;:old&lt;/code&gt; como &lt;code&gt;:new&lt;/code&gt; son del tipo &lt;strong&gt;&lt;code&gt;tabla_disparo%ROWTYPE;&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Orden de Disparo&lt;/th&gt;
&lt;th&gt;&lt;code&gt;:old&lt;/code&gt;&lt;/th&gt;
&lt;th&gt;&lt;code&gt;:new&lt;/code&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;INSERT&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;No definido; todos los campos tomanel valor &lt;code&gt;NULL&lt;/code&gt;.&lt;/td&gt;
&lt;td&gt;Valores que serán insertados cuandose complete la orden&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;code&gt;UPDATE&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Valores originales de la fila, antes dela actualización.&lt;/td&gt;
&lt;td&gt;Nuevos valores que serán escritoscuando se complete la orden.&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;code&gt;DELETE&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Valores originales, antes del borradode la fila.&lt;/td&gt;
&lt;td&gt;No definido; todos los campos tomanel valor NULL.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Ejemplo:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;CREATE&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;TRIGGER&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;scott&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;emp_permit_changes&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;BEFORE&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;DELETE&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;OR&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;INSERT&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;OR&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;UPDATE&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;ON&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;scott&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;emp&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;DECLARE&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;dummy&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;INTEGER&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;BEGIN&lt;/span&gt;
  &lt;span class=&#34;cm&#34;&gt;/* If today is a Saturday or Sunday, then return an error.&lt;/span&gt;
&lt;span class=&#34;cm&#34;&gt;  IF (TO_CHAR(SYSDATE, &amp;#39;DY&amp;#39;) = &amp;#39;SAT&amp;#39; OR TO_CHAR(SYSDATE, &amp;#39;DY&amp;#39;) = &amp;#39;SUN&amp;#39;) THEN&lt;/span&gt;
&lt;span class=&#34;cm&#34;&gt;    raise_application_error( -20501,&amp;#39;May not change employee table during the weekend&amp;#39;);&lt;/span&gt;
&lt;span class=&#34;cm&#34;&gt;  END IF;&lt;/span&gt;

&lt;span class=&#34;cm&#34;&gt;  /* Compare today&amp;#39;s date with the dates of all&lt;/span&gt;
&lt;span class=&#34;cm&#34;&gt;  company holidays. If today is a company holiday,&lt;/span&gt;
&lt;span class=&#34;cm&#34;&gt;  then return an error.*/&lt;/span&gt;

&lt;span class=&#34;cm&#34;&gt;  SELECT COUNT(*) INTO dummy FROM company_holidays&lt;/span&gt;
&lt;span class=&#34;cm&#34;&gt;  WHERE day = TRUNC(SYSDATE);&lt;/span&gt;
&lt;span class=&#34;cm&#34;&gt;  IF dummy &amp;gt; 0 THEN&lt;/span&gt;
&lt;span class=&#34;cm&#34;&gt;    raise_application_error( -20501,&amp;#39;May not change employee table during a holiday&amp;#39;);&lt;/span&gt;
&lt;span class=&#34;cm&#34;&gt;  END IF;&lt;/span&gt;

&lt;span class=&#34;cm&#34;&gt;  /*If the current time is before 8:00AM or after&lt;/span&gt;
&lt;span class=&#34;cm&#34;&gt;  6:00PM, then return an error. */&lt;/span&gt;

&lt;span class=&#34;cm&#34;&gt;  IF (TO_CHAR(SYSDATE, &amp;#39;HH24&amp;#39;) &amp;lt; 8 OR TO_CHAR(SYSDATE, &amp;#39;HH24&amp;#39;) &amp;gt;= 18) THEN&lt;/span&gt;
&lt;span class=&#34;cm&#34;&gt;    raise_application_error( -20502, &amp;#39;May only change employee table during working hours&amp;#39;);&lt;/span&gt;
&lt;span class=&#34;cm&#34;&gt;  END IF;&lt;/span&gt;
&lt;span class=&#34;cm&#34;&gt;END;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&#34;la-cláusula-when&#34;&gt;La cláusula WHEN&lt;/h2&gt;

&lt;p&gt;La cláusula &lt;code&gt;WHEN&lt;/code&gt; sólo es válida para disparadores con nivel de fila. Si está presente, el cuerpo del disparador sólo se ejecutará para las filas que cumplan la condición especificada en la cláusula.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;CREATE&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;TRIGGER&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;tr1&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;BEFORE&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;INSERT&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;OR&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;UPDATE&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;OF&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;salario&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;ON&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;scott&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;emp&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;FOR&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;EACH&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;ROW&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;WHEN&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;new&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;job&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;PRESIDENT&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;BEGIN&lt;/span&gt;
  &lt;span class=&#34;cm&#34;&gt;/* Cuerpo del disparador */&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;END&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Esto último es equivalente a:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;CREATE&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;TRIGGER&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;tr1&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;BEFORE&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;INSERT&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;OR&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;UPDATE&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;OF&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;salario&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;ON&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;scott&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;emp&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;FOR&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;EACH&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;ROW&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;BEGIN&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;IF&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;new&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;job&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;PRESIDENT&amp;#39;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;THEN&lt;/span&gt;
    &lt;span class=&#34;cm&#34;&gt;/* Cuerpo del disparador */&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;END&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;IF&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;END&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Para hacer que un trigger ejecute un &lt;code&gt;ROLLBACK&lt;/code&gt; de la transacción que tiene activa y teniendo en cuenta que en las sentencias que componen el cuerpo de un trigger no puede haber este tipo de sentencias (rollback, commit,&amp;#8230;) hay que ejecutar &lt;strong&gt;“error / excepcion”&lt;/strong&gt; mediante la sentencia &lt;code&gt;raise_application_error&lt;/code&gt; cuya sintaxis es:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;RAISE_APPLICATION_ERROR&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;num_error&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;’&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mensaje&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;’&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;El &lt;code&gt;num_error&lt;/code&gt; es un número entero cualquiera, aunque se aconseja que tenga 5 dígitos.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;raise_application_error&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;20000&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;’&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;No&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;se&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;puede&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;modificar&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;el&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;cliente&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;’&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&#34;tabla-mutando&#34;&gt;Tabla Mutando&lt;/h2&gt;

&lt;p&gt;Cuando se realiza un trigger sobre una tabla, dicha tabla se dice que está en &lt;strong&gt;“proceso de mutación”&lt;/strong&gt;, es decir, que se están realizando cambios sobre ella y que por tanto &lt;strong&gt;dentro del trigger no se debe hacer ningún tipo de acceso a dicha tabla con operaciones DML (&lt;code&gt;SELECT&lt;/code&gt;, &lt;code&gt;INSERT&lt;/code&gt;, &lt;code&gt;DELETE&lt;/code&gt; o &lt;code&gt;UPDATE&lt;/code&gt;).&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Si queremos conocer los valores del registro de la tabla sobre la que se ha disparado el trigger, este último debe estar declarado de forma &lt;code&gt;FOR EACH ROW&lt;/code&gt; y acceder a sus valores mediante las pseudocolumnas :NEW y :OLD.&lt;/p&gt;

&lt;h2 id=&#34;siguiente-tema-pl-sql-registros-y-tablas-8&#34;&gt;Siguiente tema: &lt;a href=&#34;https://elbauldelprogramador.com/plsql-registros-y-tablas/&#34;&gt;PL/SQL - Registros y Tablas&lt;/a&gt;&lt;/h2&gt;</description>
        </item>
        
    </channel>
</rss>
