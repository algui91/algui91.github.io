<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Criptografía on El Baúl del programador</title>
        <link>https://elbauldelprogramador.com/tags/criptograf%C3%ADa/</link>
        <description>Recent content in Criptografía on El Baúl del programador</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>es-ES</language>
        <lastBuildDate>Fri, 01 Jan 2016 00:00:00 +0000</lastBuildDate>
        <image>
            <url>https://elbauldelprogramador.com/img/bio-photo-rss.png</url>
            <link>https://elbauldelprogramador.com/tags/criptograf%C3%ADa/</link>
            <title>Criptografía on El Baúl del programador</title>
            <width>144</width>
            <height>144</height>
        </image>
        <atom:link href="https://elbauldelprogramador.com/tags/criptograf%C3%ADa/" rel="self" type="application/rss+xml" />
        
        <item>
            <title>Lo último en criptografía: Fully Homomorphic Encryption</title>
            <link>https://elbauldelprogramador.com/lo-ultimo-en-criptografia-fully-homomorphic-encryption/</link>
            <pubDate>Fri, 01 Jan 2016 00:00:00 +0000</pubDate>
            
            <guid>https://elbauldelprogramador.com/lo-ultimo-en-criptografia-fully-homomorphic-encryption/</guid>
            <description>&lt;p&gt;&lt;a href=&#34;https://elbauldelprogramador.com/img/2012/11/Apps-preferences-desktop-cryptography-icon1.png&#34;&gt;&lt;img on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; title=&#34;Homomorphic Encryption&#34; src=&#34;https://elbauldelprogramador.com/img/2012/11/Apps-preferences-desktop-cryptography-icon1.png&#34; alt=&#34;&#34; width=&#34;256px&#34; height=&#34;256px&#34; /&gt;&lt;/a&gt;
Me he aficionado a escuchar un programa de radio llamado &lt;strong&gt;Security Now!&lt;/strong&gt;, cuya web puedes consultar en las referencias. Como el nombre del programa indica, hablan sobre seguridad en sistemas informáticos principalmente. El episodio de esta semana iba enfocado a qué se está desarrollando a día de hoy en el mundo de la criptografía.&lt;/p&gt;

&lt;p&gt;Pues bien, una de esas cosas en las que los criptógrafos están trabajando a dia de hoy se llama &lt;strong&gt;Homomorphic Encryption&lt;/strong&gt; (Cifrado Homomórfico) ó &lt;strong&gt;Fully Homomorphic Encryption&lt;/strong&gt; (Cifrado totalmente homomórfico).&lt;/p&gt;

&lt;h3 id=&#34;qué-es-el-cifrado-homomórfico-ó-homomorphic-encryption&#34;&gt;¿Qué es el cifrado homomórfico ó &lt;strong&gt;Homomorphic Encryption&lt;/strong&gt;?&lt;/h3&gt;

&lt;p&gt;Los chicos de &lt;a href=&#34;http://es.wikipedia.org/wiki/RSA&#34; target=&#34;_blank&#34;&gt;RSA&lt;/a&gt; plantearon la hipótesis de este sistema de cifrado en el año 78. Postularon la posibilidad del cifrado homomórfico o ****Homomorphic Encryption. ****Pero se quedó como una pregunta abierta.&lt;/p&gt;

&lt;p&gt;Y hace solo tres años un estudiante de posgrado sorprendió al mundo al demostrar que este sistema es posible. Lo que este estudiante hizo fue demostrar matemáticamente que es posible realizar operaciones de cálculo estándares &amp;#8212; como sumar, multiplicar etc &amp;#8212; a datos cifrados sin la necesidad de descifrarlos previamente.&lt;/p&gt;

&lt;p&gt;Por ejemplo, es posible cifrar datos, enviarlos a la &lt;em&gt;nube&lt;/em&gt; y operar sobre estos datos **sin descifrarlos ** . La *nube *no tiene la menor idea del contenido de los datos sobre los que está operando, no vé ningún resultado intermedio. La totalidad de los datos permanecen cifrados durante todo el tiempo. De manera que obtienes el resultado encriptado, y solamente tú puedes desencriptarlo. En eso consiste el cifrado homomórfico o** **Homomorphic Encryption, ** **y funciona.
&lt;!--ad--&gt;&lt;/p&gt;

&lt;h3 id=&#34;analizando-los-sistemas-de-cifrado-actuales&#34;&gt;Analizando los sistemas de cifrado actuales&lt;/h3&gt;

&lt;p&gt;De acuerdo al glosario de definiciones de los laboratorios RSA, definen &lt;strong&gt;probabilistic encryption&lt;/strong&gt; (Cifrado probabilístico) al algoritmo que produce resultados cifrados distinos cada vez que se usa, aunque sea con los mismos datos. Esta definición rompe con el esquema del **deterministic encryption &lt;strong&gt;(Cifrado determinista) el cual produce siempre la misma salida para un mismo dato de entrada, es decir, dado un valor de entrada a encriptar, el resultado de cifrar dicho dato será siempre el mismo, con lo cual existe una forma de invertir el proceso. Más técnicamente, el cifrado probabilístico (&lt;/strong&gt;probabilistic encryption**) se define así:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;El cifrado probabilístico &amp;#8212; **probabilistic encryption **es un diseño de cifrado en el cual un mensaje es encriptado en uno de muchos posibles **ciphertext **, y no en uno solo como ocurre en el cifrado determinístico **(deterministic encryption) **. Siendo así muy poco probable obtener información parcial sobre el &lt;strong&gt;ciphertext.&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;En enfoques anteriores de cifrado, a pesar de que no siempre se sabía cuando era posible obtener dicha información parcial, no se demostró que no era posible hacerlo.&lt;/p&gt;

&lt;p&gt;Lo que esta definición quiere decir es que nunca se ha demostrado que la clave pública estandar RSA sea segura. Se basa en la presunta dificultad de factorizar numeros primos enormes. Pero nadie ha sido capaz de demostrar que sea dificil factorizarlos. Simplemente sabemos que es complicado.&lt;/p&gt;

&lt;p&gt;Sin embargo saber algo, y demostrarlo, son dos mundos aparte en términos de la tecnología de criptografía académica.&lt;/p&gt;

&lt;p&gt;Así que poco después de que los primeros desarrolladores de RSA inventaran este cifrado asimétrico basado en factorización, se dieron cuenta de que su enfoque tenía una propiedad, llamada **homomorfismo (homomorphism) **. Y escribieron sobre esto pocos meses después de desarrollar RSA.&lt;/p&gt;

&lt;p&gt;La palabra &lt;strong&gt;homomorfismo&lt;/strong&gt; viene de &lt;strong&gt;Homo&lt;/strong&gt; y &lt;strong&gt;mórfica&lt;/strong&gt;, que significa *de la misma forma. *Es decir, la posibilidad de aplicar distintos procesos un mismo dato y obtener el mismo resultado. Un ejemplo simple es la multiplicación, si &lt;strong&gt;a*b=c&lt;/strong&gt; también sabemos que &lt;strong&gt;log(a) + log(b) = log&amp;copy;&lt;/strong&gt;, por tanto, estas operaciones son homomórficas.&lt;/p&gt;

&lt;p&gt;Bien, pues esta idea del homomorfismo ha sido lo que el estudiante mencionado al principio del artículo demostró en su tesis doctoral en 2009, su nombre es Craig Gentry y sorprendió al mundo de la criptografía al presentar un sistema criptográfico homomórfico totalmente funcional. Craig Gentry demostró en sus tesis que es absolutamente posible realizar operaciones de suma y multiplicación sobre información cifrada, sin necesidad de descifrarla en ninguna fase del proceso. Como consecuencia, nadie puede obtener información de los datos sobre los que se está operando. Cuando el resultado de la operación se devuelve a la persona propietaria de esos datos, solo dicha persona puede descifrarlos con su clave. Y el resultado de los datos descifrados es el mismo que se habría obtenido al realizar estas operaciones a datos no cifrados.&lt;/p&gt;

&lt;p&gt;Las aplicaciones que tiene este sistema son enormes, por ejemplo las corporaciones podrían dejar en la nube sus datos de manera segura y además realizar operaciones a éstos, y obtener un resultado. De hecho, se han desarrollado &lt;strong&gt;motores de búsqueda&lt;/strong&gt; en los cuales el buscador no conoce la consulta que realiza el usuario ni el resultado de la misma, simplemente devuelve el resultado y luego es el usuario quien descifra el resultado para obtener la respuesta a la consulta realizada con total privacidad.&lt;/p&gt;

&lt;p&gt;Continuando con la tarea de entender cómo funciona el &lt;strong&gt;cifrado probabilístico&lt;/strong&gt; o &lt;strong&gt;probabilistic encryption&lt;/strong&gt; vamos a profundizar un poco en el tema.&lt;/p&gt;

&lt;h3 id=&#34;cifrado-probabilístico&#34;&gt;Cifrado probabilístico&lt;/h3&gt;

&lt;p&gt;Imaginemos un sistema de cifrado sencillo, de una dimensión, una buena analogía sería una cuerda con nudos a lo largo de la misma. Éstos nodos, o nudos, representan valores claramente conocidos a consecuencia de su posición. El hecho de cifrar es elegir un nodo de esta cuerda y añadirle ruido deliberadamente, desplazando así la posición del nodo una cantida pseudoaleatoria con respecto a la original.&lt;/p&gt;

&lt;p&gt;La función que tiene una clave (&lt;strong&gt;key&lt;/strong&gt;) en los sistemas cifrados es determinar dónde están estos nodos que no distribuidos de manera uniforme. Se requiere de un cálculo muy complejo para averiguar dónde se situan, de modo que solo alguien con la clave puede saberlo. Y sobre estos datos con ruido podemos operar y obtener un resultado, como sumar . Se pueden elegir dos números, añadirles ruido, sumarlos y obtener un resultado. Por lo tanto también se está sumando el ruido de cada uno de los números. El resultado será una función que tendrá como entrada los dos sumandos y el ruido correspondiente a cada uno de ellos.&lt;/p&gt;

&lt;p&gt;No habrá problema siempre y cuando no haya demasiado ruido, la suma será correcta. El ruido es la razón por la cual quién hace las operaciones no puede sacar nada en claro del resultado, todo lo que sabe es ha recibido una pareja de valores y los está sumando, y no conocerá el resultado porque está calculado relativamente a los nodos. Y ese desplazamiento relativo solo lo conoce la persona con la &lt;strong&gt;clave.&lt;/strong&gt; Para resumir, el proceso que realiza las operaciones sabe qué tipo de operaciones está realizando, pero no tiene ni idea de los datos subyacentes.&lt;/p&gt;

&lt;p&gt;Todo este proceso que acabo de explicar es una mínima parte de como funciona el cifrado probabilístico, ya que solo se ha aplicado a una dimensión (Una sola cuerda con nodos.). En realidad se hace con un concepto algebráico llamado *&lt;a href=&#34;http://es.wikipedia.org/wiki/Ret%C3%ADculo_%28matem%C3%A1ticas%29&#34; target=&#34;_blank&#34;&gt;lattice (Retículo)&lt;/a&gt;**, *y son espacios n-dimensionales interconectados con dimensiones del rango de 512, 2048 o mayores. Seguramente puedas visualizar un cubo de 3 dimensiones, y aunque no seas capaz de visualizar una figura de 512 dimensiones, se puede representar matemáticamente.&lt;/p&gt;

&lt;p&gt;Los sistemas homomórficos trabajan en estos retículos hiper-dimensionales añadiendo ruido a los nodos para deplazarlos con respecto a su posición original. Como se ha mencionado en los párrafos anteriores, el problema está en que el ruido se va acumulando, en operaciones de suma se duplica cuando hay dos sumandos, y en la multiplicación se eleva al cuadrado cuando se multiplican dos números. Con lo que el ruido se va de las manos muy rápidamente, como consecuencia se está limitado a un número determinado de operecaciones antes de que el ruido interfiera demasiado en los datos reales.&lt;/p&gt;

&lt;p&gt;Un sistema &lt;strong&gt;Fully Homomorphic Encryption&lt;/strong&gt; (Cifrado totalmente homomórfico) no tiene esta limitación, por definición es posible realizar cualquier tipo de operación, por muy compleja que sea. Craig consiguió evitar que el ruido quedara fuera de control porque, tras realiazar un número determinado de operaciones, los datos se vuelven a cifrar (Sin descifrarlos previamente, es decir, el cifrado homomórfico realiza su propio cifrado) elimiando el ruido de modo que nunca sobrepase el sistema.
Craig implementó este sistema en IBM. Tiene cuatro tipos de escalas del sistema. Uno **pequeño al que llama 2⁹ de 512 dimensiones, otro de 2¹¹, uno mediano de 2¹³ y el mayor de todos de 2¹⁵.&lt;/p&gt;

&lt;p&gt;Aunque aún estamos muy lejos de ver esto implementado en las tecnologías actuales, porque actualmente no están preparadas para soportarlo. La razón es sencilla, el sistema **homomórfico ** a secas, no el Totalmente cifrado (Fully Homomorfic) requiere para el sistema más pequeño, el de 512 dimensiones, un ancho de palabra de 200.000 bits, lo cual es enorme. La clave pública usada en el **sistema totalmente homomórfico **tiene un tama��o de 17MB y necesita 2.4 segundos para generarse usando la máquina estandar más potente. El sistema mayor, el de 2¹⁵, de 32768 dimensiones requiere dos horas para generar la clave y ocupa 2.3GB.&lt;/p&gt;

&lt;p&gt;En resumen, es una forma completamente distinta de cifrar y tratar datos para la cual los computadores estándares actuales de 64-bits de ancho de palabra no están capacitados.&lt;/p&gt;

&lt;p&gt;Este sistema tiene un gran futuro y estamos tan solo al comienzo, como siempre pasa en criptografía, el sistema avanzará rápido y mejorará. Se encontrarán atajos, nuevas formas de hacer las mismas cosas. La idea de ruido en un retículo es solo una de las posibilidades de un esquema de cifrado no-determinista que han sido propuestas, hay otras. Como usar máximos comunes divisores entre otras.&lt;/p&gt;

&lt;p&gt;Queda así abierto un nuevo campo en la investigación criptográfica. De aquí a 20, 30 años habrá aplicaciones que funcionarán de un modo totalmente distinto al que estamos acostumbrados, y la gente se preguntará ¿No se ha hecho el cifrado siempre de esta manera?, y no será así, recordaremos lo que solíamos usar y nos daremos cuenta que era estúpido en comparación.&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p class=&#34;alert&#34;&gt;
&lt;strong&gt;NOTA:&lt;/strong&gt;Este artículo ha sido escrito a partir del episodio 376 de Security Now!, no me atribuyo ninguna autoría, simplemente he escuchado el episodio y he plasmado lo que he aprendido. A continuación proporciono los enlaces correspondientes al episodio
&lt;/p&gt;

&lt;h3 id=&#34;referencias&#34;&gt;Referencias&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;Transcipciones a texto y audio del episodio&lt;/em&gt; »» &lt;a href=&#34;http://www.grc.com/securitynow.htm&#34; target=&#34;_blank&#34;&gt;grc.com&lt;/a&gt;
&lt;em&gt;Episode 376: Fully Homomorphic Encryption&lt;/em&gt; »» &lt;a href=&#34;http://twit.tv/show/security-now/376&#34; target=&#34;_blank&#34;&gt;twit.tv&lt;/a&gt;&lt;/p&gt;</description>
        </item>
        
        <item>
            <title>Nueva guía: History of cryptography</title>
            <link>https://elbauldelprogramador.com/history-of-cryptography/</link>
            <pubDate>Fri, 01 Jan 2016 00:00:00 +0000</pubDate>
            
            <guid>https://elbauldelprogramador.com/history-of-cryptography/</guid>
            <description>

&lt;p&gt;&lt;a href=&#34;http://elbauldelprogramador.tradepub.com/free/w_thaw18/prgm.cgi&#34;&gt;&lt;img sizes=&#34;(min-width: 178px) 178px, 100vw&#34; on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/2014/04/History-of-Cryptograpy.jpg&#34; alt=&#34;History of Cryptography&#34; width=&#34;178px&#34; height=&#34;229px&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;An easy to understand history of cryptography.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Descripción de History of Cryptography&lt;/strong&gt;: This white paper presents a brief history of cryptography and how encryption-related technologies have evolved and will continue to evolve as well as the measures Internet users should consider when implementing modern encryptions.&lt;/p&gt;

&lt;p&gt;Cryptography is an ancient science, but, with the rise of the information age, computers have brought it to a whole new level. Online privacy and security both depend on encryption, and maintaining a strong standard is more important than ever.&lt;/p&gt;

&lt;p&gt;Cryptography is one of the oldest fields of technical study we can find records of, going back at least 4 000 years. Ciphering has always been considered vital for diplomatic and military secrecy.&lt;/p&gt;

&lt;h1 id=&#34;descargar&#34;&gt;Descargar&lt;/h1&gt;

&lt;div class=&#34;button-post&#34;&gt;
    &lt;a href=&#34;http://elbauldelprogramador.tradepub.com/free/w_thaw18&#34; target=&#34;_blank&#34; class=&#34;wi-button style-3&#34;&gt;Descárgala&lt;i class=&#34;icon-download icon-2x&#34;&gt;&lt;/i&gt;&lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Visita la página &lt;a href=&#34;https://elbauldelprogramador.com/manuales-gratuitos/&#34;&gt;Manuales gratuitos&lt;/a&gt; o consulta el &lt;a href=&#34;http://elbauldelprogramador.tradepub.com/category/information-technology/1207/&#34; title=&#34;Catálogo completo de Guías gratuítas &#34;&gt;catálogo completo&lt;/a&gt;.&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
</description>
        </item>
        
        <item>
            <title>Nuevos Cursos disponibles en Udacity, la universidad online gratuita</title>
            <link>https://elbauldelprogramador.com/nuevos-cursos-disponibles-en-udacity-la-universidad-online-gratuita/</link>
            <pubDate>Fri, 01 Jan 2016 00:00:00 +0000</pubDate>
            
            <guid>https://elbauldelprogramador.com/nuevos-cursos-disponibles-en-udacity-la-universidad-online-gratuita/</guid>
            <description>&lt;figure&gt;
    &lt;img on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; title=&#34;Banner Udacity&#34; src=&#34;https://4.bp.blogspot.com/-4_orLVxvsaA/Ty6o0VKqt3I/AAAAAAAACDs/3Xxk1Zqo5Ug/s1600/Screenshot.png&#34; alt=&#34;&#34;&gt;&lt;/img&gt;
&lt;/figure&gt;

&lt;p&gt;Hace aproximadamente 7 semanas que escribí una entrada hablando sobre Udacity y su primer curso, Construir un &lt;a href=&#34;https://elbauldelprogramador.com/aprende-construir-un-motor-de-busqueda/&#34; title=&#34;Aprende a construir un motor de búsqueda y un coche autónomo con Udacity&#34;&gt;motor de búsqueda&lt;/a&gt;. Pues bien, acaba de terminar, yo estaba inscrito y la verdad es que me ha gustado bastante, ya que he aprendido un montón de cosas interesantes, aparte de aprender a mejorar la eficiencia del código y refrescar mi conocimiento sobre &lt;a href=&#34;https://elbauldelprogramador.com/python/&#34;&gt;python&lt;/a&gt;, el cual tenía un poco abandonado.&lt;/p&gt;

&lt;p&gt;Por desgracia no he podido obtener el certificado del curso ya que a partir de la unidad 6 por falta de tiempo fui dejando de seguir el curso. Sin embargo sí que terminé de ver todo el contenido aunque no hiciera el examen final.&lt;/p&gt;

&lt;p&gt;Para todo aquel que esté interesado el curso (Lo cual recomiendo totalmente,) se va a volver a repetir, y hoy día 16 comienzan otros cuatro cursos igual de interesantes en los que me he inscrito, a continuación os dejo información sobre ellos:&lt;/p&gt;

&lt;p&gt;&lt;!--ad--&gt;&lt;/p&gt;

&lt;h2 id=&#34;the-design-of-computer-programs&#34;&gt;The Design of Computer Programs&lt;/h2&gt;

&lt;p&gt;Impartido por Peter Norvig, Director de investigación en Google&lt;/p&gt;

&lt;p&gt;&lt;span class=&#34;embed-youtube&#34; &gt;&lt;/span&gt;
El contenido del curso es el siguiente:&lt;/p&gt;

&lt;div &gt;
&lt;hr /&gt;
&lt;p &gt;
    The key to progressing from a novice programmer to an expert is mindful&lt;br /&gt; practice. In this class you will practice going from a problem description&lt;br /&gt; to a solution, using a series of assignments. With each problem you will&lt;br /&gt; learn new concepts, patterns, and methods that will expand your ability and&lt;br /&gt; help move you along the path from novice towards expertise.
  &lt;/p&gt;
&lt;p class=&#34;syllabus-week&#34; &gt;
    WEEK 1:
  &lt;/p&gt;
&lt;p class=&#34;syllabus-desc&#34; &gt;
&lt;strong&gt;Winning Poker Hands&lt;/strong&gt;
&lt;/p&gt;
&lt;p &gt;
    Steps of the design process; Developing for clarity and generality;&lt;br /&gt; Arguments for program correctness; Experimentation and simulation.;&lt;br /&gt; Design tradeoffs; Simplicity and Clarity. Decomposition and composability.
  &lt;/p&gt;
&lt;p class=&#34;syllabus-week&#34; &gt;
    WEEK 2:
  &lt;/p&gt;
&lt;p class=&#34;syllabus-desc&#34; &gt;
&lt;strong&gt;Back of the Envelope&lt;/strong&gt;
&lt;/p&gt;
&lt;p &gt;
    Back of envelope calculations; When to use brute force and when to be&lt;br /&gt; clever; The Zebra puzzle; Generator expressions; Permutations and&lt;br /&gt; combinations. Cryptarithmetic; Recursive and wishful thinking.
  &lt;/p&gt;
&lt;p class=&#34;syllabus-week&#34; &gt;
    WEEK 3:
  &lt;/p&gt;
&lt;p class=&#34;syllabus-desc&#34; &gt;
&lt;strong&gt;Regular Expressions, other languages and interpreters&lt;/strong&gt;
&lt;/p&gt;
&lt;p &gt;
    Defining the language of regular expressions; Interpreting the language;&lt;br /&gt; Defining the set of strings matched by a regular expression;&lt;br /&gt; Other languages.
  &lt;/p&gt;
&lt;p class=&#34;syllabus-week&#34; &gt;
    WEEK 4:
  &lt;/p&gt;
&lt;p class=&#34;syllabus-desc&#34; &gt;
&lt;strong&gt;Dealing with complexity through search&lt;/strong&gt;
&lt;/p&gt;
&lt;p &gt;
    Search: finding your way with a flashlight or boat; pouring water.&lt;br /&gt; Analyzing the efficiency of an algorithm; Recurrence relations; Matching&lt;br /&gt; data types with algorithms; Majority algorithm; Longest palindrome&lt;br /&gt; substring algorithm.
  &lt;/p&gt;
&lt;p class=&#34;syllabus-week&#34; &gt;
    WEEK 5:
  &lt;/p&gt;
&lt;p class=&#34;syllabus-desc&#34; &gt;
&lt;strong&gt;Dealing with uncertainty through probability&lt;/strong&gt;
&lt;/p&gt;
&lt;p &gt;
    Probability: the game of Pig; Maximizing expected utility to optimize strategy.
  &lt;/p&gt;
&lt;p class=&#34;syllabus-week&#34; &gt;
    WEEK 6:
  &lt;/p&gt;
&lt;p class=&#34;syllabus-desc&#34; &gt;
&lt;strong&gt;Word Games&lt;/strong&gt;
&lt;/p&gt;
&lt;p &gt;
    Managing complexity; Large sets of words; Appropriate data structures; Word games.
  &lt;/p&gt;
&lt;p class=&#34;syllabus-week&#34; &gt;
    WEEK 7:
  &lt;/p&gt;
&lt;p class=&#34;syllabus-desc&#34; &gt;
&lt;strong&gt;Conclusion&lt;/strong&gt;
&lt;/p&gt;
&lt;p &gt;
    Final exam/project
  &lt;/p&gt;
&lt;/div&gt;

&lt;h2 id=&#34;web-application-engineering&#34;&gt;Web Application Engineering&lt;/h2&gt;

&lt;p&gt;Impartido por Steve Huffman, creador de Reddit y HipMuk&lt;/p&gt;

&lt;p&gt;&lt;span class=&#34;embed-youtube&#34; &gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Contenido:&lt;/p&gt;

&lt;div id=&#34;tab-syllabus&#34; class=&#34;ui-tabs-panel ui-widget-content ui-corner-bottom&#34;&gt;
&lt;hr /&gt;
&lt;p &gt;
&lt;strong&gt; Description&lt;/strong&gt;: Web applications have the power to provide useful services to millions of&lt;br /&gt; people worldwide. In this class, you will learn how to build your own blog application&lt;br /&gt; starting from the basics of how the web works and how to set up a web application and&lt;br /&gt; process user input, to how to use databases, manage user accounts, interact with other&lt;br /&gt; web services, and make your application scale to support large numbers of users.
  &lt;/p&gt;
&lt;p class=&#34;syllabus-week&#34; &gt;
    WEEK 1:
  &lt;/p&gt;
&lt;p class=&#34;syllabus-desc&#34; &gt;
&lt;strong&gt;How the Web Works&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
    Introduction to HTTP and Web Applications
  &lt;/p&gt;
&lt;p class=&#34;syllabus-week&#34; &gt;
    WEEK 2:
  &lt;/p&gt;
&lt;p class=&#34;syllabus-desc&#34; &gt;
&lt;strong&gt;How to Have Users&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
    Getting and processing user input
  &lt;/p&gt;
&lt;p class=&#34;syllabus-week&#34; &gt;
    WEEK 3:
  &lt;/p&gt;
&lt;p class=&#34;syllabus-desc&#34; &gt;
&lt;strong&gt;How to Manage State&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
    Databases and persistent data
  &lt;/p&gt;
&lt;p class=&#34;syllabus-week&#34; &gt;
    WEEK 4:
  &lt;/p&gt;
&lt;p class=&#34;syllabus-desc&#34; &gt;
&lt;strong&gt;Whom to Trust&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
    User authentication and access control
  &lt;/p&gt;
&lt;p class=&#34;syllabus-week&#34; &gt;
    WEEK 5:
  &lt;/p&gt;
&lt;p class=&#34;syllabus-desc&#34; &gt;
&lt;strong&gt;How to Connect&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
    Web applications as services, using APIs
  &lt;/p&gt;
&lt;p class=&#34;syllabus-week&#34; &gt;
    WEEK 6:
  &lt;/p&gt;
&lt;p class=&#34;syllabus-desc&#34; &gt;
&lt;strong&gt;How to Serve Millions&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
    Scaling, caching, optimizations
  &lt;/p&gt;
&lt;p class=&#34;syllabus-week&#34; &gt;
    WEEK 7:
  &lt;/p&gt;
&lt;p class=&#34;syllabus-desc&#34; &gt;
&lt;strong&gt;Changing the World&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
    Building a successful web application, project
  &lt;/p&gt;
&lt;/div&gt;

&lt;h2 id=&#34;programming-languages&#34;&gt;Programming Languages&lt;/h2&gt;

&lt;p&gt;Impartido por Wetley Weimer, profesos en la Univerdidad de Virginia&lt;/p&gt;

&lt;p&gt;&lt;span class=&#34;embed-youtube&#34; &gt;&lt;/span&gt;
&lt;div id=&#34;tab-syllabus&#34; class=&#34;ui-tabs-panel ui-widget-content ui-corner-bottom&#34;&gt;
&lt;hr /&gt;
&lt;p &gt;
&lt;strong&gt;Description&lt;/strong&gt;: This class will give you an introduction to fundamentals&lt;br /&gt; of programming languages. In seven weeks, you will build your own simple web browser&lt;br /&gt; complete with the ability to parse and understand HTML and JavaScript. You will learn&lt;br /&gt; key concepts such as how to specify and process valid strings, sentences and program&lt;br /&gt; structures. Then, you will design and build an interpreter - a program that simulates&lt;br /&gt; other programs.
  &lt;/p&gt;
&lt;p class=&#34;syllabus-week&#34; &gt;
    WEEK 1:
  &lt;/p&gt;
&lt;p class=&#34;syllabus-desc&#34; &gt;
&lt;strong&gt;String Patterns&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
    Finding and specifying classes of strings using regular expressions
  &lt;/p&gt;
&lt;p class=&#34;syllabus-week&#34; &gt;
    WEEK 2:
  &lt;/p&gt;
&lt;p class=&#34;syllabus-desc&#34; &gt;
&lt;strong&gt;Lexical Analysis&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
    Breaking strings down into important words
  &lt;/p&gt;
&lt;p class=&#34;syllabus-week&#34; &gt;
    WEEK 3:
  &lt;/p&gt;
&lt;p class=&#34;syllabus-desc&#34; &gt;
&lt;strong&gt;Grammars&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
    Specifying and deconstructing valid sentences
  &lt;/p&gt;
&lt;p class=&#34;syllabus-week&#34; &gt;
    WEEK 4:
  &lt;/p&gt;
&lt;p class=&#34;syllabus-desc&#34; &gt;
&lt;strong&gt;Parsing&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
    Turning sentences into trees
  &lt;/p&gt;
&lt;p class=&#34;syllabus-week&#34; &gt;
    WEEK 5:
  &lt;/p&gt;
&lt;p class=&#34;syllabus-desc&#34; &gt;
&lt;strong&gt;Interpreting&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
    Simulating programs
  &lt;/p&gt;
&lt;p class=&#34;syllabus-week&#34; &gt;
    WEEK 6:
  &lt;/p&gt;
&lt;p class=&#34;syllabus-desc&#34; &gt;
&lt;strong&gt;Building a Web Browser&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
    Interpreting HTML and JavaScript
  &lt;/p&gt;
&lt;p class=&#34;syllabus-week&#34; &gt;
    WEEK 7:
  &lt;/p&gt;
&lt;p class=&#34;syllabus-desc&#34; &gt;
&lt;strong&gt;Wrap-up&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
    Exam testing your knowledge
  &lt;/p&gt;
&lt;/div&gt;&lt;/p&gt;

&lt;h2 id=&#34;applied-cryptography&#34;&gt;Applied Cryptography&lt;/h2&gt;

&lt;p&gt;Impartido por David Evans, Profesor en la Universidad de Virginia y tutor del anterior curso de construir el motor de búsqueda.&lt;/p&gt;

&lt;p&gt;&lt;span class=&#34;embed-youtube&#34; &gt;&lt;/span&gt;
&lt;div id=&#34;tab-syllabus&#34; class=&#34;ui-tabs-panel ui-widget-content ui-corner-bottom&#34;&gt;
&lt;hr /&gt;
&lt;p &gt;
&lt;strong&gt;Description&lt;/strong&gt;: Cryptography is about “secret writing”. In this class, we&lt;br /&gt; will introduce the mathematical foundations of cryptography and build programs to&lt;br /&gt; perform encryption. We will see how to use cryptography to solve important problem&lt;br /&gt; such as how to authenticate users, secure websites, and do computation without&lt;br /&gt; exposing up your data. We will also look at the things that can go wrong when&lt;br /&gt; cryptography is misused or implemented badly.
  &lt;/p&gt;
&lt;p class=&#34;syllabus-week&#34; &gt;
    WEEK 1:
  &lt;/p&gt;
&lt;p class=&#34;syllabus-desc&#34; &gt;
&lt;strong&gt;Symmetric Encryption&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
    Sending messages when two people share a secret
  &lt;/p&gt;
&lt;p class=&#34;syllabus-week&#34; &gt;
    WEEK 2:
  &lt;/p&gt;
&lt;p class=&#34;syllabus-desc&#34; &gt;
&lt;strong&gt;Authentication&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
    Using symmetric encryption to manage passwords securely
  &lt;/p&gt;
&lt;p class=&#34;syllabus-week&#34; &gt;
    WEEK 3:
  &lt;/p&gt;
&lt;p class=&#34;syllabus-desc&#34; &gt;
&lt;strong&gt;Asymmetric Encryption&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
    Public-key cryptosystems
  &lt;/p&gt;
&lt;p class=&#34;syllabus-week&#34; &gt;
    WEEK 4:
  &lt;/p&gt;
&lt;p class=&#34;syllabus-desc&#34; &gt;
&lt;strong&gt;Public-key Protocols&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
    Secure commerce, certificates
  &lt;/p&gt;
&lt;p class=&#34;syllabus-week&#34; &gt;
    WEEK 5:
  &lt;/p&gt;
&lt;p class=&#34;syllabus-desc&#34; &gt;
&lt;strong&gt;Digital Cash&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
    How to make money from numbers alone
  &lt;/p&gt;
&lt;p class=&#34;syllabus-week&#34; &gt;
    WEEK 6:
  &lt;/p&gt;
&lt;p class=&#34;syllabus-desc&#34; &gt;
&lt;strong&gt;Secure Computation&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
    Computing without exposing data
  &lt;/p&gt;
&lt;p class=&#34;syllabus-week&#34; &gt;
    WEEK 7:
  &lt;/p&gt;
&lt;p class=&#34;syllabus-desc&#34; &gt;
&lt;strong&gt;Wrap-up&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
    Problems cryptography can and cannot solve
  &lt;/p&gt;
&lt;/div&gt;&lt;/p&gt;</description>
        </item>
        
        <item>
            <title>Cómo Cifar Un USB Con Veracrypt</title>
            <link>https://elbauldelprogramador.com/cmo-cifar-un-usb-con-veracrypt/</link>
            <pubDate>Mon, 30 Nov 2015 18:15:43 +0000</pubDate>
            
            <guid>https://elbauldelprogramador.com/cmo-cifar-un-usb-con-veracrypt/</guid>
            <description>&lt;figure&gt;
        &lt;a href=&#34;https://elbauldelprogramador.com/img/Veracryptlogo.png&#34;&gt;
          &lt;img
            on=&#34;tap:lightbox1&#34;
            role=&#34;button&#34;
            tabindex=&#34;0&#34;
            layout=&#34;responsive&#34;
            src=&#34;https://elbauldelprogramador.com/img/Veracryptlogo.png&#34;
            alt=&#34;Cómo Cifar Un USB Con Veracrypt&#34;
            title=&#34;Cómo Cifar Un USB Con Veracrypt&#34;
            sizes=&#34;(min-width: 249px) 249px, 100vw&#34;
            width=&#34;249px&#34;
            height=&#34;197px&#34;&gt;
          &lt;/img&gt;
        &lt;/a&gt;
&lt;/figure&gt;

&lt;p&gt;Los USBs suelen llevarse siempre a mano, en los bolsillos, mochila etc, y en ocasiones pueden contener información sensible que no debería poder leer cualquiera. Por ello es buena idea llevarlo encriptado, ya sea por si se pierde o nos lo roban. Hoy veremos cómo podemos cifrar/encriptar nuestro usb con &lt;em&gt;Veracrypt&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;!--ad--&gt;&lt;/p&gt;

&lt;h1 id=&#34;descargar-e-instalar-veracrypt&#34;&gt;Descargar e instalar Veracrypt&lt;/h1&gt;

&lt;p&gt;El primer paso es dirigirnos a la &lt;a href=&#34;https://veracrypt.codeplex.com/wikipage?title=Downloads&#34; target=&#34;_blank&#34; title=&#34;Veracr&#34;&gt;web oficial&lt;/a&gt; y descargarnos el programa para nuestro sistema operativo (Linux/Mac/Windows). Una vez instalado, lo ejecutamos y veremos la siguiente pantalla:&lt;/p&gt;

&lt;h2 id=&#34;crear-el-usb-cifrado&#34;&gt;Crear el usb cifrado&lt;/h2&gt;

&lt;figure&gt;
&lt;a href=&#34;https://elbauldelprogramador.com/img/2.png&#34;&gt;&lt;img on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/2.png&#34; title=&#34;Crear un usb cifrado con veracrypt&#34; alt=&#34;Crear un usb cifrado con veracrypt&#34; width=&#34;804px&#34; height=&#34;506px&#34; /&gt;&lt;/a&gt;
&lt;/figure&gt;

&lt;p&gt;A continuación se mostrarán una serie de pantallas, seguimos los pasos que aparecen en ellas:&lt;/p&gt;

&lt;h2 id=&#34;seleccionar-el-tipo-de-volumen&#34;&gt;Seleccionar el tipo de volumen&lt;/h2&gt;

&lt;figure&gt;
&lt;a href=&#34;https://elbauldelprogramador.com/img/3.png&#34;&gt;&lt;img on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/3.png&#34; title=&#34;Volumen estándar Veracrypt&#34; alt=&#34;Volumen estándar Veracrypt&#34; width=&#34;806px&#34; height=&#34;505px&#34; /&gt;&lt;/a&gt;
&lt;/figure&gt;

&lt;h2 id=&#34;seleccionar-el-dispositivo&#34;&gt;Seleccionar el dispositivo&lt;/h2&gt;

&lt;figure&gt;
&lt;a href=&#34;https://elbauldelprogramador.com/img/4.png&#34;&gt;&lt;img on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/4.png&#34; title=&#34;Selección del volumen a cifrar Veracrypt&#34; alt=&#34;Selección del volumen a cifrar Veracrypt&#34; width=&#34;805px&#34; height=&#34;505px&#34; /&gt;&lt;/a&gt;
&lt;/figure&gt;

&lt;h2 id=&#34;tipos-de-cifrados&#34;&gt;Tipos de cifrados&lt;/h2&gt;

&lt;p&gt;En el tipo de cifrado, podemos ejecutar un &lt;em&gt;benchmark&lt;/em&gt; para ver el rendimiento de cada uno, el más rápido es AES, pero si preferimos podemos elegir otros que fortifiquen la seguridad del dispositivo. A continuación se muestra el resultado de las pruebas:&lt;/p&gt;

&lt;figure&gt;
&lt;a href=&#34;https://elbauldelprogramador.com/img/bench.png&#34;&gt;&lt;img on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/bench.png&#34; title=&#34;Benchmark Veracrypt&#34; alt=&#34;Benchmark Veracrypt&#34; width=&#34;632px&#34; height=&#34;403px&#34; /&gt;&lt;/a&gt;
&lt;/figure&gt;
&lt;figure&gt;
&lt;a href=&#34;https://elbauldelprogramador.com/img/5.png&#34;&gt;&lt;img on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/5.png&#34; title=&#34;Tipo de cifrado Veracrypt&#34; alt=&#34;Tipo de cifrado Veracrypt&#34; width=&#34;803px&#34; height=&#34;504px&#34; /&gt;&lt;/a&gt;
&lt;/figure&gt;

&lt;h2 id=&#34;establecer-contraseña&#34;&gt;Establecer contraseña&lt;/h2&gt;

&lt;p&gt;A la hora de escoger la contraseña, es importante que sea fuerte y de más de 20 caractéres. Si es menor de este número, se recomienda establecer un PIM (&lt;em&gt;Personal Iterations Multiplier&lt;/em&gt;)&lt;/p&gt;

&lt;figure&gt;
&lt;a href=&#34;https://elbauldelprogramador.com/img/8.png&#34;&gt;&lt;img on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/8.png&#34; title=&#34;Escoger contraseña  Veracrypt&#34; alt=&#34;Escoger contraseña Veracrypt&#34; width=&#34;806px&#34; height=&#34;504px&#34; /&gt;&lt;/a&gt;
&lt;/figure&gt;

&lt;h2 id=&#34;seleccionar-el-sistema-de-ficheros&#34;&gt;Seleccionar el sistema de ficheros&lt;/h2&gt;

&lt;p&gt;Ahora seleccionamos el tipo de sistema de ficheros que queremos. Se recomienda hacer un formateo completo en lugar de rápido. En mi caso marqué rápido porque ya lo había formateado previamente.&lt;/p&gt;

&lt;figure&gt;
&lt;a href=&#34;https://elbauldelprogramador.com/img/9.png&#34;&gt;&lt;img on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/9.png&#34; title=&#34;Pantalla principal Veracrypt&#34; alt=&#34;Pantalla principal Veracrypt&#34; width=&#34;806px&#34; height=&#34;505px&#34; /&gt;&lt;/a&gt;
&lt;/figure&gt;

&lt;h2 id=&#34;soporte-multiplataforma&#34;&gt;Soporte multiplataforma&lt;/h2&gt;

&lt;p&gt;Por último, si queremos usar el USB en otros sistemas, deberemos marcar la casilla adecuada.&lt;/p&gt;

&lt;figure&gt;
&lt;a href=&#34;https://elbauldelprogramador.com/img/10.png&#34;&gt;&lt;img on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/10.png&#34; title=&#34;Pantalla principal Veracrypt&#34; alt=&#34;Pantalla principal Veracrypt&#34; width=&#34;804px&#34; height=&#34;505px&#34; /&gt;&lt;/a&gt;
&lt;/figure&gt;

&lt;p&gt;Ya solo queda pulsar el botón de formatear en la siguiente pantalla y esperar, puede tardar un poco y parecer que se ha quedado colgado, paciencia.&lt;/p&gt;

&lt;h2 id=&#34;montar-el-usb&#34;&gt;Montar el USB&lt;/h2&gt;

&lt;p&gt;Una vez formateado, en la pantalla princpial de &lt;em&gt;Veracrypt&lt;/em&gt;, seleccionamos un &lt;em&gt;slot&lt;/em&gt; en el que montar el dispositivo, introducimos nuestra contraseña y listo.&lt;/p&gt;

&lt;h1 id=&#34;cifrar-el-usb-usando-la-terminal&#34;&gt;Cifrar el usb usando la terminal&lt;/h1&gt;

&lt;p&gt;Para los que se sientan más cómodos usando la terminal, es posible instalar &lt;em&gt;Veracrypt&lt;/em&gt; sin interfaz gráfica y ejecutar el comando:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;veracrypt -t -c /dev/dispositivo
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Y seguir los pasos indicados, similares a los vistos arriba&lt;/p&gt;

&lt;figure&gt;
        &lt;a href=&#34;https://elbauldelprogramador.com/img/cmdveracrypt.png&#34;&gt;
          &lt;img
            on=&#34;tap:lightbox1&#34;
            role=&#34;button&#34;
            tabindex=&#34;0&#34;
            layout=&#34;responsive&#34;
            src=&#34;https://elbauldelprogramador.com/img/cmdveracrypt.png&#34;
            alt=&#34;Veracrypt en línea de comandos&#34;
            title=&#34;Veracrypt en línea de comandos&#34;
            sizes=&#34;(min-width: 666px) 666px, 100vw&#34;
            width=&#34;666px&#34;
            height=&#34;1077px&#34;&gt;
          &lt;/img&gt;
        &lt;/a&gt;
&lt;/figure&gt;

&lt;h1 id=&#34;montar-y-desmontar-el-dispositivo-mediante-la-línea-de-comandos&#34;&gt;Montar y desmontar el dispositivo mediante la línea de comandos&lt;/h1&gt;

&lt;p&gt;Para montar, basta ejecutar el comando&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;veracrypt /dev/dispositivo /ruta/a/montar
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;y para desmontar&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;veracrypt -d /dev/dispositivo
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Listo, ya tenemos nuestro USB cifrado!&lt;/p&gt;</description>
        </item>
        
    </channel>
</rss>
