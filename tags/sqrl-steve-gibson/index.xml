<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Sqrl Steve Gibson on El Baúl del programador</title>
        <link>https://elbauldelprogramador.com/tags/sqrl-steve-gibson/index.xml</link>
        <description>Recent content in Sqrl Steve Gibson on El Baúl del programador</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>es-ES</language>
        <image>
            <url>https://elbauldelprogramador.com/img/bio-photo-rss.png</url>
            <link>https://elbauldelprogramador.com/tags/sqrl-steve-gibson/index.xml</link>
            <title>Sqrl Steve Gibson on El Baúl del programador</title>
            <width>144</width>
            <height>144</height>
        </image>
        <atom:link href="https://elbauldelprogramador.com/tags/sqrl-steve-gibson/index.xml" rel="self" type="application/rss+xml" />
        
        <item>
            <title>SQRL y la idea de eliminar el uso de usuario y contraseña en internet</title>
            <link>https://elbauldelprogramador.com/sqrl-y-la-idea-de-eliminar-el-uso-de-usuario-y-contrasena-en-internet/</link>
            <pubDate>Fri, 01 Jan 2016 00:00:00 +0000</pubDate>
            
            <guid>https://elbauldelprogramador.com/sqrl-y-la-idea-de-eliminar-el-uso-de-usuario-y-contrasena-en-internet/</guid>
            <description>&lt;p&gt;&lt;strong&gt;Nota:&lt;/strong&gt; Puedes echar un ojo al artículo más actualizado &lt;a href=&#34;https://elbauldelprogramador.com/sqrl-secure-quick-reliable-login-a-fondo/&#34;&gt;SQRL -Secure Quick Reliable Login a Fondo&lt;/a&gt;
{: .notice}&lt;/p&gt;

&lt;p&gt;Los lectores habituales sabrán que suelo escuchar el programa de radio &lt;em&gt;&lt;a href=&#34;https://elbauldelprogramador.com/security-now/&#34; title=&#34;Artículos sobre Security now!&#34;&gt;Security Now!&lt;/a&gt;&lt;/em&gt;, la semana pasada, &lt;strong&gt;Steve Gibson&lt;/strong&gt;, uno de los mayores expertos en seguridad anunció que se le había ocurrido una manera de eliminar la necesidad de usar usuario y contraseña para identificarse en los sitios web, eliminando así los problemas que esto conlleva. Steve ha llamado a su invención &lt;strong&gt;SQRL&lt;/strong&gt; (&lt;em&gt;Secure &lt;a href=&#34;https://elbauldelprogramador.com/estructura-y-seguridad-de-los-qr-codes/&#34; title=&#34;Estructura y seguridad de los QR Codes&#34;&gt;QR&lt;/a&gt; Login&lt;/em&gt;) y ha tenido bastante éxito en la comunidad, tanto que hasta el &lt;a href=&#34;http://www.w3.org/&#34; title=&#34;W3 org&#34;&gt;W3&lt;/a&gt; se ha puesto en contacto con él mostrando interés en este nuevo método de autentificación.&lt;/p&gt;

&lt;p&gt;&lt;!--ad--&gt;
&lt;img on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/2013/10/sqrl-login-sample.png&#34; alt=&#34;SQRL y la idea de elminar el uso de usuario y contraseña en internet&#34; width=&#34;400px&#34; height=&#34;199px&#34; /&gt;&lt;/p&gt;

&lt;p&gt;El sistema &lt;strong&gt;SQRL&lt;/strong&gt; es bastante simple, cuando se desea identificarse en un sitio web mediante &lt;strong&gt;SQRL&lt;/strong&gt;, aparecerá un código, entonces:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;El usuario ejecuta en su teléfono móvil la aplicación &lt;strong&gt;SQRL&lt;/strong&gt;, y escanea el código mostrado. (O un usuario navegando desde su móvil toca el código. O un usuario de PC hace click en el código.)&lt;/li&gt;
&lt;li&gt;Para verificar, la aplicación &lt;strong&gt;SQRL&lt;/strong&gt; muestra el nombre del dominio contenido en el código &lt;strong&gt;SQRL&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Tras verificar el dominio, el usuario permite a la aplicación &lt;strong&gt;SQRL&lt;/strong&gt; que autentifique su identidad.&lt;/li&gt;
&lt;li&gt;Dejando la información de login en blanco (No es necesario rellenar los campos usuario y contraseña) se hace click en &lt;em&gt;login&lt;/em&gt;&amp;#8230; y estaremos en nuestra cuenta.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Este método, a pesar de ser bastante simple, es de lejos mucho más seguro que cualquier otra solución de logueo. Intentaré explicar un poco por encima el proceso traduciéndolo de la página de Steve (1), donde hay muchos más detalles.&lt;/p&gt;

&lt;h2 id=&#34;qué-ocurre-detrás-de-la-escena&#34;&gt;¿Qué ocurre detrás de la escena?&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;Gracias a &lt;a href=&#34;https://elbauldelprogramador.com/&#34; title=&#34;Artículos de Luzcila&#34;&gt;Luzcila&lt;/a&gt; por traducir esta sección&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;(Lo escrito a continuación pretende dar al lector una noción general del proceso de autentificación mediante &lt;strong&gt;SQRL&lt;/strong&gt;, para detalles más técnicos se puede visitar el enlace de las referencias (1), si hay algún interesado en traducir esta información al castellano, puede contactar conmigo mediante el &lt;a href=&#34;https://elbauldelprogramador.com/&#34; title=&#34;Contacto&#34;&gt;formulario de contacto&lt;/a&gt; y encantado añadiré el contenido mencionando a su autor).&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;El código QR presentado cerca de los campos de login contiene la URL del servicio de autenticación para el sitio. La URL incluye un número aleatorio largo generado de forma segura por lo que cada presentación de la página de login muestra un código QR diferente. (En el mundo de la criptografía este número aleatorio se conoce como “nonce”)&lt;/li&gt;
&lt;li&gt;La aplicación de autenticación SQRL de los smartphones encripta el nombre de dominio del sitio indexado por la clave maestra del usuario para producir un par de clave pública específica del sitio (&lt;em&gt;site-specific public key pair&lt;/em&gt;)&lt;/li&gt;
&lt;li&gt;La aplicación firma criptográficamente la URL completa contenida en el código QR usando la clave privada específica del sitio. Dado que la URL incluye un número largo aleatorio (el nonce), la firma es única para este sitio y código QR.&lt;/li&gt;
&lt;li&gt;La aplicación emite una consulta HTTPS POST a la URL del código QR, la cual es del servicio de autenticación del sitio. El POST provee la clave pública específica del sitio y la firma criptográfica que se corresponde de la URL del código QR.&lt;/li&gt;
&lt;li&gt;El sitio web de autenticación recibe y reconoce la consulta POST devolviéndole una respuesta standard HTTP “200 OK” sin otro contenido. La aplicación SQRL acepta la solicitud exitosa del código QR del usuario identificado.&lt;/li&gt;
&lt;li&gt;El sitio de autenticación tiene la URL que contiene el nonce que devolvió la página de login del smartphone del usuario. Tiene también una firma criptográfica de esa URL, y la clave pública específica del sitio del usuario. Usa la clave pública para verificar que la firma es válida para la URL. Esto confirma que el usuario que produjo la firma usó la clave privada que corresponde a la clave pública. Tras de verificar la firma, el sitio de autentificación reconoce al usuario (ahora-autenticado) por la clave pública específica de sitio.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/2013/10/sign-algo.png&#34; alt=&#34;SQRL y la idea de elminar el uso de usuario y contraseña en internet&#34; width=&#34;580px&#34; height=&#34;194px&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Resumiendo: &amp;#8220;El login del sitio web presenta un código QR que contiene la URL de su servicio de autenticación, más un nonce. El smartphone del usuario firma la login URL usando una clave privada derivada de su secreto maestro y el nombre de dominio de la URL. El smartphone envía la clave pública que se corresponde para identificar el usuario, y la firma para autenticarlo.&amp;#8221;&lt;/p&gt;

&lt;p&gt;A continuación dejo los dos podcast en los que Steve Gibson ha dado cantidad de detalles de cómo funciona el sistema &lt;strong&gt;SQRL&lt;/strong&gt;, y en las referencias todos los detalles técnicos. Vuelvo a comentar que toda colaboración para traducir dicha página es bienvenida.&lt;/p&gt;

&lt;p&gt;&lt;span class=&#34;embed-youtube&#34; &gt;&lt;/span&gt;
&lt;span class=&#34;embed-youtube&#34; &gt;&lt;/span&gt;&lt;/p&gt;

&lt;h4 id=&#34;referencias&#34;&gt;Referencias&lt;/h4&gt;

&lt;p&gt;&lt;em&gt;(1) SQRL en la página de su creador, Steve&lt;/em&gt; »» &lt;a href=&#34;https://www.grc.com/sqrl/sqrl.htm&#34; target=&#34;_blank&#34;&gt;grc.com&lt;/a&gt;&lt;/p&gt;</description>
        </item>
        
        <item>
            <title>SQRL -Secure Quick Reliable Login a Fondo</title>
            <link>https://elbauldelprogramador.com/sqrl-secure-quick-reliable-login-a-fondo/</link>
            <pubDate>Thu, 10 Sep 2015 09:08:37 +0000</pubDate>
            
            <guid>https://elbauldelprogramador.com/sqrl-secure-quick-reliable-login-a-fondo/</guid>
            <description>&lt;figure&gt;
&lt;img on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/SQRL-Secure-Quick-Reliable-Login-a-Fondo.png&#34; title=&#34;{{ .Title }}&#34; alt=&#34;{{ .Title }}&#34; width=&#34;450px&#34; height=&#34;450px&#34; /&gt;
&lt;/figure&gt;

&lt;p&gt;Hace unos años, hablé aquí sobre la idea de Steve Gibson, &lt;strong&gt;SQRL&lt;/strong&gt;, sistema con el que pretende eliminar &lt;a href=&#34;https://elbauldelprogramador.com/sqrl-y-la-idea-de-eliminar-el-uso-de-usuario-y-contrasena-en-internet/&#34;&gt;el uso de usuarios y contraseñas en internet&lt;/a&gt;. Unos dos años más tarde, con el proyecto bastante maduro, en &lt;a href=&#34;https://elbauldelprogramador.com/security-now/&#34; title=&#34;Todos los artículos traducidos&#34;&gt;Security Now!&lt;/a&gt; Steve ha vuelto a dar detalles del funcionamiento de &lt;strong&gt;SQRL&lt;/strong&gt;, y la verdad es que pinta pero que muy bien. En éste artículo he usado como fuente el episodio &lt;a href=&#34;https://twit.tv/shows/security-now/episodes/424&#34;&gt;#424&lt;/a&gt; del podcast.&lt;/p&gt;

&lt;p&gt;&lt;!--ad--&gt;&lt;/p&gt;

&lt;h2 id=&#34;resumen&#34;&gt;Resumen&lt;/h2&gt;

&lt;p&gt;Antes de empezar con los detalles, a continuación se muestra un resumen del sistema de autentificación:&lt;/p&gt;

&lt;h3 id=&#34;el-concepto-principal&#34;&gt;El concepto principal&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Una &lt;strong&gt;HMAC&lt;/strong&gt; cuya clave es un número grande generado aleatóriamente.

&lt;ul&gt;
&lt;li&gt;Un código de autentificación basado en Hashes.&lt;/li&gt;
&lt;li&gt;Similar a cuando se usa una clave en otros sistemas para &lt;a href=&#34;https://elbauldelprogramador.com/como-cifrar-archivos-con-openssl/&#34; title=&#34;Cómo cifrar archivos con openssl&#34;&gt;cifrar/descifrar&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Una forma de crear un “_keyed hash_” (Un hash, de alguna manera, que venga dado por una clave).&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Cada usuario obtiene su propia función hash.&lt;/li&gt;
&lt;li&gt;A cada &lt;a href=&#34;https://elbauldelprogramador.com/como-configurar-un-servidor-dns/&#34; title=&#34;Configurar un servidor DNS&#34;&gt;dominio&lt;/a&gt; de un sitio web se le aplica un hash para producir una clave privada personal.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;la-jerarquía-de-claves-de-sqrl&#34;&gt;La jerarquía de claves de SQRL&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Código de recuperación de 24 dígitos, como una carta para “Salir de la cárcel”.&lt;/li&gt;
&lt;li&gt;Es posible que nunca se necesite éste código.&lt;/li&gt;
&lt;li&gt;La &lt;a href=&#34;https://elbauldelprogramador.com/como-se-almacenan-tus-contrasenas-en-internet-y-cuando-la-longitud-de-la-misma-no-importa/ &amp;quot;Cómo se almacenan tus contraseñas en internet (y cuando la longitud de la misma no importa&#34;&gt;contraseña&lt;/a&gt;&amp;rdquo; ) del usuario&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;qué-ocurre-si-queremos-otra-identidad-para-el-mismo-sitio&#34;&gt;¿Qué ocurre si queremos otra identidad para el mismo sitio?&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Si mi mujer y yo queremos entrar a facebook con el mismo pc, se crean IDs alternativos para cada uno.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;qué-pasa-si-me-me-roban-mi-identidad-sqlr-o-si-creo-que-me-la-robaron&#34;&gt;¿Qué pasa si me me roban mi identidad SQLR?, ¿O si creo que me la robaron?&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Boqueo de identidad.&lt;/li&gt;
&lt;li&gt;Se puede bloquear/desbloquear una identidad fácilmente&lt;/li&gt;
&lt;li&gt;Regenerar las claves para una identidad.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;qué-pasa-si-quiero-dejar-de-usar-sqrl&#34;&gt;¿Qué pasa si quiero dejar de usar SQRL?&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Eliminar/reemplazar las identidades.&lt;/li&gt;
&lt;li&gt;Las identidades poseen un ciclo de vida completo que puede administrarse.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;y-si-un-sito-fraudulento-muestra-un-id-de-sqrl-de-otro-sitio-web&#34;&gt;¿Y si un sito fraudulento muestra un ID de &lt;strong&gt;SQRL&lt;/strong&gt; de otro sitio web?&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;El problema del spoofing, se hablará a lo largo del artículo.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h1 id=&#34;sqrl-revised&#34;&gt;&lt;strong&gt;SQRL&lt;/strong&gt; Revised&lt;/h1&gt;

&lt;p&gt;Antes de comenzar, expliquemos los dos conceptos más importantes en los que se basa SQRL. El primero es el aspecto &lt;a href=&#34;https://elbauldelprogramador.com/lo-ultimo-en-criptografia-fully-homomorphic-encryption/&#34; title=&#34;Lo último en criptografía: Fully Homomorphic Encryption&#34;&gt;criptográfico&lt;/a&gt;, es decir, cómo tener una &lt;a href=&#34;https://elbauldelprogramador.com/chuleta-de-comandos-para-gpg/&#34; title=&#34;Chuleta de comandos para GPG&#34;&gt;clave secreta&lt;/a&gt; para un cifrador, para uno como &lt;strong&gt;AES&lt;/strong&gt;, o &lt;strong&gt;Blowfish&lt;/strong&gt;. Es decir, a un cifrador se le pasa un texto plano, y devuelve un texto cifrado, usando la clave secreta. A eso se le llama un cifrador con llaves (&lt;em&gt;keyed cipher&lt;/em&gt;).
El segundo concepto son los &lt;em&gt;hash&lt;/em&gt;, como &lt;em&gt;SHA-256, SHA-1&lt;/em&gt; etc, de 256 bits y 160, respectivamente. A éstos algoritmos se les introduce algo, de cualquier longitud, y devuelven un mensaje de longitud fija, dependiendo del algoritmo, 256 bits, 160 etc. No importa cómo de largo sea el mensaje a resumir.&lt;/p&gt;

&lt;p&gt;Resulta que también se pueden tener funciones &lt;em&gt;hash&lt;/em&gt; con claves (&lt;em&gt;keyed hash&lt;/em&gt;), actuando de forma similar a los cifradores. A éstas funciones &lt;em&gt;hash&lt;/em&gt; se las llama &lt;em&gt;HMAC&lt;/em&gt; (&lt;em&gt;Hash Messgage Authentication Code&lt;/em&gt;).&lt;/p&gt;

&lt;p&gt;La diferencia pues, es que una función &lt;em&gt;hash&lt;/em&gt; es simplemente una función, &lt;em&gt;SHA-256&lt;/em&gt; es el mismo &lt;em&gt;SHA-256&lt;/em&gt; para todo el mundo, ésta funcionalidad es útil para algunos casos, por ejemplo para comprobar que un fichero descargado no ha sido modificado por nadie. El que sube el fichero, publica el resultado de aplicarle la función &lt;em&gt;hash&lt;/em&gt;, y cuando tú lo descargas, vuelves a pasárselo, si el resultado es el mismo, el fichero no ha sido alterado.&lt;/p&gt;

&lt;p&gt;Si embargo, un &lt;em&gt;Keyed hash&lt;/em&gt; es distinto, la salida de la función viene determinada por la clave secreta. Por tanto, se tendrán tantas funciones &lt;em&gt;hash&lt;/em&gt; como posibles claves se puedan generar a partir de la longitud de la clave. Si la longitud de la clave es 256 bits, se pueden generar $$2^{256}$$ distintas claves, y por tanto $$2^{256}$$ distitas funciones &lt;em&gt;hash&lt;/em&gt;. &lt;strong&gt;SQRL&lt;/strong&gt; usa un &lt;em&gt;keyed hash&lt;/em&gt;.&lt;/p&gt;

&lt;h2 id=&#34;cómo-usa-sqrl-la-hmac&#34;&gt;Cómo usa &lt;strong&gt;SQRL&lt;/strong&gt; la HMAC&lt;/h2&gt;

&lt;p&gt;Veamos un ejemplo. Cuando vas a un sitio web, el dominio del sitio, por ejemplo amazon.com, o Twit.tv, el que sea. A ese dominio se le aplica un &lt;em&gt;hash&lt;/em&gt; usando &lt;em&gt;HMAC&lt;/em&gt;, lo que devuelve un resumen de una longitud fija, pero usando como clave tu identidad de SQRL. Ésta identidad, se creará al momento de instalar SQRL, y cada usuario tendrá su propia función &lt;em&gt;hash&lt;/em&gt;, completamente distinta de los demás. El resultado de la función &lt;em&gt;hash&lt;/em&gt; para el sitio visitado, por ejemplo amazon, será la clave privada para esa web.&lt;/p&gt;

&lt;p&gt;SQRL genera una clave privada única para cada sitio web distinto que visitas, si dos usuarios de &lt;strong&gt;SQRL&lt;/strong&gt; visitan el mismo sitio web, la función &lt;em&gt;hash&lt;/em&gt; personal de cada uno dará un resultado distinto, ya que se está usando &lt;em&gt;HMAC&lt;/em&gt;. Por tanto, usando una identidad maestra junto con la función &lt;em&gt;HMAC&lt;/em&gt;, &lt;strong&gt;SQRL&lt;/strong&gt; crea una galaxia de claves privadas de tal modo que cada usuario tenga una clave distinta cuando visitan sitios distintos. Como dijimos antes, con $$2^{256}$$ hay claves de sobra. Tantas que no hay que preocuprarse por posibles colisiones.&lt;/p&gt;

&lt;p&gt;Resumiendo lo visto hasta ahora, &lt;em&gt;SQRL&lt;/em&gt; consiste en un usuario con una identidad maestra, para el cual el sistema crea automáticamente una clave privada para cada sitio que visita. Eso sí, cuando se visita la misma web, se obtiene la misma clave privada.&lt;/p&gt;

&lt;h3 id=&#34;uso-de-la-clave-privada&#34;&gt;Uso de la clave privada&lt;/h3&gt;

&lt;p&gt;¿Qué se hace con la clave privada?, es una clave privada de basada en una curva elíptica, en concreto la de Dan Bernstein, por ser determinista, es decir, permite especificar la clave privada.&lt;/p&gt;

&lt;p&gt;Ésto significa que la clave no se elige aleatoriamente, porque tendría que almacenarse, memorizarla. Y de ser así, se tendrían que guardar para cada uno de los sitios visitados, bastante molesto. De este modo, pueden crearse sobre la marcha usando la identidad maestra y el nombre de dominio.&lt;/p&gt;

&lt;p&gt;El siguiente paso es usar una función de la curva elíptica que obtiene la clave pública a partir de la privada, pero no funciona al contrario. A partir de la pública es imposible obtener la privada. Además, la clave pública será la identidad del usuario para esa web, y el servidor de la web la almacenará para identificarte.&lt;/p&gt;

&lt;p&gt;Por último, cuando el usuario se identifica en un sitio web, la web dice “_vale, dices que este eres tú, demuéstralo._” Para ello la web envía un trozo de datos aleatorio (único para cada usuario), el usuario los firma con su clave privada y lo devuelve a la web. De éste modo, sin exponer la clave privada, acabas de demostrar que la posees. Ésto es &lt;em&gt;SQRL&lt;/em&gt; en esencia, proporcionar la clave pública a una web para identificarte. Cuando quieras volver a identificarte en ella, en lugar de usar el típico e inseguro usuario/contraseña, usando SQRL, la web envía un trozo de datos aleatorios, el usiario entonces le devolverá los datos firmados con la clave privada y la clave pública. Al haber usado la web anteriormente, ya conocía tu clave pública, verifica la firma y corrobora que tú eres quien dices ser y listo, identificado.&lt;/p&gt;

&lt;h2 id=&#34;y-si-alguien-se-hace-pasar-por-mi&#34;&gt;¿Y si alguien se hace pasar por mi?&lt;/h2&gt;

&lt;p&gt;Una identidad &lt;strong&gt;SQRL&lt;/strong&gt; es un sistema de dos personas (Tú y todas las webs del mundo), el usuario es pseudoanónimo para todas las webs. Ya que cada sitio web ve al usuario como un token aleatorio (La clave pública). De éste modo el usuario no puede ser rastreado, es decir, no hay forma de asociar tu identidad entre sitios webs. Además, la cláve pública que proporcionas al sitio web solo es útil para dicho sitio, para ninguno más, a diferencia del usuario/contraseña. En esencia, con &lt;strong&gt;SQRL&lt;/strong&gt; no estás dándole a la web un secreto que guardar (La contraseña), no necesitan mantener segura la base de datos. Cualquiera podría descargarla y le sería inútil, a cualquiera salvo al sitio web.&lt;/p&gt;

&lt;h2 id=&#34;cómo-recuperar-tu-identidad&#34;&gt;Cómo recuperar tu identidad&lt;/h2&gt;

&lt;p&gt;¿Cómo permitimos a los usuarios que sean responsables de su propia identidad, pero al mismo tiempo darles la opción de recuperarla si la perdieran, o se la robaran?&lt;/p&gt;

&lt;p&gt;Lo primero a tener en cuenta es que &lt;strong&gt;SQRL&lt;/strong&gt; no usa tu identidad más secreta para funcionar, esa es la que guardaremos como último recurso. Lo primero que &lt;strong&gt;SQRL&lt;/strong&gt; hace es generar un “código de rescate”. Un número de 24 dígitos decimales. Este código es el que debe guardarse como el mayor de los secretos. Es tan secreto que no se guarda en ningún cliente SQRL. Cuando se configura &lt;strong&gt;SQRL&lt;/strong&gt; por primera vez, lo imprime por pantalla, y debes anotarlo, o imprimirlo como dígito o como &lt;a href=&#34;https://elbauldelprogramador.com/estructura-y-seguridad-de-los-qr-codes/&#34; title=&#34;Estructura y seguridad de los QR codes&#34;&gt;código QR&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Esta es la carta “Salir de la cárcel” de la que hablábamos al principio. Te sacará de cualquier problema. Y por ser tan poderoso, no se almacena. El único requisito es anotarlo o imprimirlo, y ponerlo en un lugar seguro. El código no puede regenerarse, ya que es completamente aleatorio. Es tu identidad maestra.&lt;/p&gt;

&lt;p&gt;Una vez anotado o imprimido, &lt;strong&gt;SQRL&lt;/strong&gt; comienza el proceso de hash, aplicando múltiples hash, haciendo operaciones XOR. Tras aplicar iterativamente funciones hash al código, se obtiene lo que será la clave para la función hash del usuario, recuerda, una &lt;em&gt;keyed hash&lt;/em&gt; (&lt;em&gt;HMAC&lt;/em&gt;). Ahora, la clave de la función hash se cifra con una contraseña usando la función &lt;a href=&#34;https://en.wikipedia.org/wiki/Scrypt&#34;&gt;Scrypt&lt;/a&gt;, la cual hace totalmente inviable averiguar  la contraseña.&lt;/p&gt;

&lt;h2 id=&#34;y-si-me-roban-mi-identidad&#34;&gt;¿Y si me roban mi identidad?&lt;/h2&gt;

&lt;p&gt;Para ello se creó el &lt;em&gt;Identity Lock&lt;/em&gt; (Bloqueador de identidad). Un protocolo consistente en una serie de ecuaciones. Conforme se les va proporcionando la clave pública a las webs, se les proporciona también información sobre el &lt;em&gt;identity lock&lt;/em&gt;. Esta información se genera aleatoriamente por el cliente, y el protocolo permite al cliente generar dicha información para asegurar tu identidad, pero no probrarla. Por tanto, esto difiere de la capacidad anterior de &lt;strong&gt;SQRL&lt;/strong&gt; para probar tu identidad firmando puñado de datos que envía la web.&lt;/p&gt;

&lt;p&gt;El objetivo del &lt;em&gt;identity lock&lt;/em&gt; es hacer deliberadamente que los clientes no sean capaces de probar algo en el futuro que ya aseguraron probar antes. Así, si el cliente queda fuera del control del usuario. No podría usarse para cambiar tu identidad en ninguna web en la que ya la hubieses establecido. De este modo, un ladrón en posesión de tu identidad, de tu código, contraseña&amp;hellip; todo, no podrían eliminar tu identidad.&lt;/p&gt;

&lt;p&gt;La segunda cosa que proporciona el código de recuperación (La carta para salir de la cárcel), al insertarlo en el cliente SQRL, permite cambiar tu identidad y re-habilitar la autenticación de haber sido deshabilitada, ya que es posible deshabilitar la autentificación para las webs, pero solo es posible rehabilitarlas con el código de recuperación.&lt;/p&gt;

&lt;h2 id=&#34;deshabilitar-la-autentificación&#34;&gt;Deshabilitar la autentificación&lt;/h2&gt;

&lt;p&gt;La posibilidad de deshabilitar la autentificación es útil cuando por ejemplo, pierdes tu móvil, te lo confiscan etc. En esos casos, tu identidad queda expuesta, en ese caso, con cualquier otro cliente SQRL, puedes cargar tu identidad y deshabilitar la autentificación para tu identidad. Ningún intrudo podrá cambiar tu identidad, tú puedes deshabilitarla, pero para re activarla necesitarás el código de recuperación. Si alguna vez pasa algo así, al reactivarla con el código, es posible regenerar la identidad (&lt;em&gt;rekeyed&lt;/em&gt;).&lt;/p&gt;

&lt;h2 id=&#34;conclusión&#34;&gt;Conclusión&lt;/h2&gt;

&lt;p&gt;Esto en esencia es SQRL, bastante prometedor. A continuación dejo el episodio del podcast y la documentación de SQRL.&lt;/p&gt;

&lt;h3 id=&#34;fuentes&#34;&gt;Fuentes&lt;/h3&gt;

&lt;p&gt;Documentación oficial SQRL | &lt;a href=&#34;https://www.grc.com/sqrl/sqrl.htm&#34;&gt;gcr.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;amp-youtube
    data-videoid=&#34;hsotcaizGjM&#34;
    layout=&#34;responsive&#34;
    width=&#34;480&#34; height=&#34;270&#34;&gt;&lt;/amp-youtube&gt;&lt;/p&gt;</description>
        </item>
        
    </channel>
</rss>
